
#
#    C O D S E N
#

default:
  image: node:latest

setup:
  stage: .pre
  script:
    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'

    ##
    ## Write the private key
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa

    ##
    ## Set its permissions
    ##
    - chmod 700 ~/.ssh/id_rsa

    ##
    ## Run ssh-agent inside the build environment
    ##
    - eval "$(ssh-agent -s)"

    ##
    ## Add the SSH key
    ##
    - ssh-add ~/.ssh/id_rsa

    ##
    ## Scan the keys of gitlab.com
    ##
    - ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    ##
    ## Start the helper to store credentials
    ##
    # - git config --global credential.helper store

    ##
    ## Set up git remote
    ##
    - git remote set-url origin git@gitlab.com:codsen/codsen.git

    ##
    ## And git credentials
    ##
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$YOUR_NAME_SURNAME"
    - echo "git user:"
    - git config user.name

    ##
    ## Set up npm credentials
    ##
    - npm set unsafe-perm true -g
    - npm set //registry.npmjs.org/:_authToken $NPM_TOKEN -g
    - npm set username $NPM_USERNAME -g
    - npm set email $NPM_EMAIL -g
    - echo "npm user:"
    - npm whoami

    ##
    ## Fail early and loudly
    ##
    - set -euo pipefail

    ##
    ## Checkout the repo
    ##
    - git status
    - git checkout master

building_and_testing:
  stage: deploy
  script:
    - echo '█████████████████████████████ 1/9 - bootstrap and test █████████████████████████████'
    - git status
    - npm run fresh

    - echo '█████████████████████████████ 2/9 - readme █████████████████████████████'
    - git status
    - npm run readme:generate

    - echo '█████████████████████████████ 3/9 - the first git add █████████████████████████████'
    - git status
    - git add packages
    - git add stats
    - git add README.md
    - "git add package-lock.json || echo 'no package-lock.json'"
    - "git diff-index --quiet HEAD || git commit -m '[skip ci] chore: automated build tasks' --no-verify"
    - npm run pub:vers

    - echo '█████████████████████████████ 4/9 - the last git add █████████████████████████████'
    - git status
    - git add packages
    - git add README.md

    - echo '█████████████████████████████ 5/9 - the last commit █████████████████████████████'
    - git status
    - "git commit -m '[skip ci] chore: automated build tasks' --no-verify"
    - git status

    - echo '█████████████████████████████ 6/9 - deploy █████████████████████████████'
    - git status
    - ls -a
