{"_quickTake.js":{"title":"Quick Take","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; deleteObj &#x7D; from \"ast-delete-object\";\n\n// if all keys in source object match target object's keys, the\n// source object gets deleted:\nassert.deepEqual(\n  deleteObj(\n    [\n      \"elem1\",\n      &#x7B;\n        findme1: \"zzz\",\n        findme2: \"yyy\",\n        somethingelse: \"qqq\",\n      &#x7D;,\n      \"elem2\",\n    ],\n    &#x7B;\n      findme1: \"zzz\",\n      findme2: \"yyy\",\n    &#x7D;\n  ),\n  [\"elem1\", \"elem2\"]\n);"},"opts-hungryForWhitespace.js":{"title":"`opts.hungryForWhitespace`","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; deleteObj &#x7D; from \"ast-delete-object\";\n\nassert.deepEqual(\n  deleteObj(\n    [\n      &#x7B; a: \"\\n\" &#x7D;, // that's empty\n      &#x7B;\n        key3: \"val3\",\n        key4: \"val4\",\n      &#x7D;,\n      &#x7B; b: \"   \" &#x7D;, // that's empty\n      &#x7B; c: \"\" &#x7D;, // that's empty\n    ],\n    &#x7B;&#x7D;, // empty thing to match again - we match \"empty\" vs \"empty\"\n    &#x7B; matchKeysStrictly: false, hungryForWhitespace: true &#x7D;\n  ),\n  [\n    &#x7B;\n      key3: \"val3\",\n      key4: \"val4\",\n    &#x7D;,\n  ]\n);\n\n// but\nassert.deepEqual(\n  deleteObj(\n    [\n      &#x7B; a: \"\\n\" &#x7D;, // that's empty\n      &#x7B;\n        key3: \"val3\",\n        key4: \"val4\",\n      &#x7D;,\n      &#x7B; b: \"   \" &#x7D;, // that's empty\n      &#x7B; c: \"\" &#x7D;, // that's empty\n    ],\n    &#x7B;&#x7D;, // empty thing to match again - we match \"empty\" vs \"empty\"\n    &#x7B; matchKeysStrictly: false, hungryForWhitespace: false &#x7D;\n  ),\n  [\n    &#x7B; a: \"\\n\" &#x7D;,\n    &#x7B;\n      key3: \"val3\",\n      key4: \"val4\",\n    &#x7D;,\n    &#x7B; b: \"   \" &#x7D;,\n    &#x7B; c: \"\" &#x7D;,\n  ]\n);\n// nothing happened because empty things were matched strictly, \"===\""},"opts-matchKeysStrictly.js":{"title":"`opts.matchKeysStrictly`","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; deleteObj &#x7D; from \"ast-delete-object\";\n\nconst source = [\n  \"elem1\",\n  &#x7B;\n    findme1: \"zzz\",\n    findme2: \"yyy\",\n    somethingelse: \"qqq\", // <--- this key will block deletion\n  &#x7D;,\n  \"elem2\",\n];\n\n// nothing happens - matching was strict\nassert.deepEqual(\n  deleteObj(\n    source,\n    &#x7B;\n      findme1: \"zzz\",\n      findme2: \"yyy\",\n    &#x7D;,\n    &#x7B;\n      matchKeysStrictly: true, // <--- strict matching\n    &#x7D;\n  ),\n  source\n);\n\n// but\nassert.deepEqual(\n  deleteObj(\n    source,\n    &#x7B;\n      findme1: \"zzz\",\n      findme2: \"yyy\",\n    &#x7D;,\n    &#x7B;\n      matchKeysStrictly: false,\n    &#x7D;\n  ),\n  [\"elem1\", \"elem2\"]\n);"}}