/**
 * json-variables
 * Preprocessor for JSON to allow keys referencing keys
 * Version: 8.0.42
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/json-variables
 */

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).jsonVariables=e()}(this,(function(){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function r(t,e){return t(e={exports:{}},e.exports),e.exports}var n=r((function(t,r){var n=200,i="__lodash_hash_undefined__",o=9007199254740991,a="[object Arguments]",s="[object Boolean]",l="[object Date]",u="[object Function]",c="[object GeneratorFunction]",f="[object Map]",h="[object Number]",g="[object Object]",p="[object RegExp]",d="[object Set]",y="[object String]",m="[object Symbol]",b="[object ArrayBuffer]",w="[object DataView]",v="[object Float32Array]",_="[object Float64Array]",T="[object Int8Array]",O="[object Int16Array]",W="[object Int32Array]",j="[object Uint8Array]",I="[object Uint8ClampedArray]",$="[object Uint16Array]",A="[object Uint32Array]",E=/\w*$/,S=/^\[object .+?Constructor\]$/,R=/^(?:0|[1-9]\d*)$/,H={};H[a]=H["[object Array]"]=H[b]=H[w]=H[s]=H[l]=H[v]=H[_]=H[T]=H[O]=H[W]=H[f]=H[h]=H[g]=H[p]=H[d]=H[y]=H[m]=H[j]=H[I]=H[$]=H[A]=!0,H["[object Error]"]=H[u]=H["[object WeakMap]"]=!1;var D="object"==typeof e&&e&&e.Object===Object&&e,x="object"==typeof self&&self&&self.Object===Object&&self,N=D||x||Function("return this")(),C=r&&!r.nodeType&&r,B=C&&t&&!t.nodeType&&t,M=B&&B.exports===C;function k(t,e){return t.set(e[0],e[1]),t}function F(t,e){return t.add(e),t}function J(t,e,r,n){var i=-1,o=t?t.length:0;for(n&&o&&(r=t[++i]);++i<o;)r=e(r,t[i],i,t);return r}function P(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}function q(t){var e=-1,r=Array(t.size);return t.forEach((function(t,n){r[++e]=[n,t]})),r}function V(t,e){return function(r){return t(e(r))}}function Z(t){var e=-1,r=Array(t.size);return t.forEach((function(t){r[++e]=t})),r}var L,G=Array.prototype,U=Function.prototype,z=Object.prototype,K=N["__core-js_shared__"],Q=(L=/[^.]+$/.exec(K&&K.keys&&K.keys.IE_PROTO||""))?"Symbol(src)_1."+L:"",X=U.toString,Y=z.hasOwnProperty,tt=z.toString,et=RegExp("^"+X.call(Y).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),rt=M?N.Buffer:void 0,nt=N.Symbol,it=N.Uint8Array,ot=V(Object.getPrototypeOf,Object),at=Object.create,st=z.propertyIsEnumerable,lt=G.splice,ut=Object.getOwnPropertySymbols,ct=rt?rt.isBuffer:void 0,ft=V(Object.keys,Object),ht=Bt(N,"DataView"),gt=Bt(N,"Map"),pt=Bt(N,"Promise"),dt=Bt(N,"Set"),yt=Bt(N,"WeakMap"),mt=Bt(Object,"create"),bt=Pt(ht),wt=Pt(gt),vt=Pt(pt),_t=Pt(dt),Tt=Pt(yt),Ot=nt?nt.prototype:void 0,Wt=Ot?Ot.valueOf:void 0;function jt(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function It(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function $t(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function At(t){this.__data__=new It(t)}function Et(t,e){var r=Vt(t)||function(t){return function(t){return function(t){return!!t&&"object"==typeof t}(t)&&Zt(t)}(t)&&Y.call(t,"callee")&&(!st.call(t,"callee")||tt.call(t)==a)}(t)?function(t,e){for(var r=-1,n=Array(t);++r<t;)n[r]=e(r);return n}(t.length,String):[],n=r.length,i=!!n;for(var o in t)!e&&!Y.call(t,o)||i&&("length"==o||Ft(o,n))||r.push(o);return r}function St(t,e,r){var n=t[e];Y.call(t,e)&&qt(n,r)&&(void 0!==r||e in t)||(t[e]=r)}function Rt(t,e){for(var r=t.length;r--;)if(qt(t[r][0],e))return r;return-1}function Ht(t,e,r,n,i,o,S){var R;if(n&&(R=o?n(t,i,o,S):n(t)),void 0!==R)return R;if(!Ut(t))return t;var D=Vt(t);if(D){if(R=function(t){var e=t.length,r=t.constructor(e);e&&"string"==typeof t[0]&&Y.call(t,"index")&&(r.index=t.index,r.input=t.input);return r}(t),!e)return function(t,e){var r=-1,n=t.length;e||(e=Array(n));for(;++r<n;)e[r]=t[r];return e}(t,R)}else{var x=kt(t),N=x==u||x==c;if(Lt(t))return function(t,e){if(e)return t.slice();var r=new t.constructor(t.length);return t.copy(r),r}(t,e);if(x==g||x==a||N&&!o){if(P(t))return o?t:{};if(R=function(t){return"function"!=typeof t.constructor||Jt(t)?{}:(e=ot(t),Ut(e)?at(e):{});var e}(N?{}:t),!e)return function(t,e){return Nt(t,Mt(t),e)}(t,function(t,e){return t&&Nt(e,zt(e),t)}(R,t))}else{if(!H[x])return o?t:{};R=function(t,e,r,n){var i=t.constructor;switch(e){case b:return xt(t);case s:case l:return new i(+t);case w:return function(t,e){var r=e?xt(t.buffer):t.buffer;return new t.constructor(r,t.byteOffset,t.byteLength)}(t,n);case v:case _:case T:case O:case W:case j:case I:case $:case A:return function(t,e){var r=e?xt(t.buffer):t.buffer;return new t.constructor(r,t.byteOffset,t.length)}(t,n);case f:return function(t,e,r){return J(e?r(q(t),!0):q(t),k,new t.constructor)}(t,n,r);case h:case y:return new i(t);case p:return(u=new(a=t).constructor(a.source,E.exec(a))).lastIndex=a.lastIndex,u;case d:return function(t,e,r){return J(e?r(Z(t),!0):Z(t),F,new t.constructor)}(t,n,r);case m:return o=t,Wt?Object(Wt.call(o)):{}}var o;var a,u}(t,x,Ht,e)}}S||(S=new At);var C=S.get(t);if(C)return C;if(S.set(t,R),!D)var B=r?function(t){return function(t,e,r){var n=e(t);return Vt(t)?n:function(t,e){for(var r=-1,n=e.length,i=t.length;++r<n;)t[i+r]=e[r];return t}(n,r(t))}(t,zt,Mt)}(t):zt(t);return function(t,e){for(var r=-1,n=t?t.length:0;++r<n&&!1!==e(t[r],r,t););}(B||t,(function(i,o){B&&(i=t[o=i]),St(R,o,Ht(i,e,r,n,o,t,S))})),R}function Dt(t){return!(!Ut(t)||(e=t,Q&&Q in e))&&(Gt(t)||P(t)?et:S).test(Pt(t));var e}function xt(t){var e=new t.constructor(t.byteLength);return new it(e).set(new it(t)),e}function Nt(t,e,r,n){r||(r={});for(var i=-1,o=e.length;++i<o;){var a=e[i],s=n?n(r[a],t[a],a,r,t):void 0;St(r,a,void 0===s?t[a]:s)}return r}function Ct(t,e){var r,n,i=t.__data__;return("string"==(n=typeof(r=e))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?i["string"==typeof e?"string":"hash"]:i.map}function Bt(t,e){var r=function(t,e){return null==t?void 0:t[e]}(t,e);return Dt(r)?r:void 0}jt.prototype.clear=function(){this.__data__=mt?mt(null):{}},jt.prototype.delete=function(t){return this.has(t)&&delete this.__data__[t]},jt.prototype.get=function(t){var e=this.__data__;if(mt){var r=e[t];return r===i?void 0:r}return Y.call(e,t)?e[t]:void 0},jt.prototype.has=function(t){var e=this.__data__;return mt?void 0!==e[t]:Y.call(e,t)},jt.prototype.set=function(t,e){return this.__data__[t]=mt&&void 0===e?i:e,this},It.prototype.clear=function(){this.__data__=[]},It.prototype.delete=function(t){var e=this.__data__,r=Rt(e,t);return!(r<0)&&(r==e.length-1?e.pop():lt.call(e,r,1),!0)},It.prototype.get=function(t){var e=this.__data__,r=Rt(e,t);return r<0?void 0:e[r][1]},It.prototype.has=function(t){return Rt(this.__data__,t)>-1},It.prototype.set=function(t,e){var r=this.__data__,n=Rt(r,t);return n<0?r.push([t,e]):r[n][1]=e,this},$t.prototype.clear=function(){this.__data__={hash:new jt,map:new(gt||It),string:new jt}},$t.prototype.delete=function(t){return Ct(this,t).delete(t)},$t.prototype.get=function(t){return Ct(this,t).get(t)},$t.prototype.has=function(t){return Ct(this,t).has(t)},$t.prototype.set=function(t,e){return Ct(this,t).set(t,e),this},At.prototype.clear=function(){this.__data__=new It},At.prototype.delete=function(t){return this.__data__.delete(t)},At.prototype.get=function(t){return this.__data__.get(t)},At.prototype.has=function(t){return this.__data__.has(t)},At.prototype.set=function(t,e){var r=this.__data__;if(r instanceof It){var i=r.__data__;if(!gt||i.length<n-1)return i.push([t,e]),this;r=this.__data__=new $t(i)}return r.set(t,e),this};var Mt=ut?V(ut,Object):function(){return[]},kt=function(t){return tt.call(t)};function Ft(t,e){return!!(e=null==e?o:e)&&("number"==typeof t||R.test(t))&&t>-1&&t%1==0&&t<e}function Jt(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||z)}function Pt(t){if(null!=t){try{return X.call(t)}catch(t){}try{return t+""}catch(t){}}return""}function qt(t,e){return t===e||t!=t&&e!=e}(ht&&kt(new ht(new ArrayBuffer(1)))!=w||gt&&kt(new gt)!=f||pt&&"[object Promise]"!=kt(pt.resolve())||dt&&kt(new dt)!=d||yt&&"[object WeakMap]"!=kt(new yt))&&(kt=function(t){var e=tt.call(t),r=e==g?t.constructor:void 0,n=r?Pt(r):void 0;if(n)switch(n){case bt:return w;case wt:return f;case vt:return"[object Promise]";case _t:return d;case Tt:return"[object WeakMap]"}return e});var Vt=Array.isArray;function Zt(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=o}(t.length)&&!Gt(t)}var Lt=ct||function(){return!1};function Gt(t){var e=Ut(t)?tt.call(t):"";return e==u||e==c}function Ut(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function zt(t){return Zt(t)?Et(t):function(t){if(!Jt(t))return ft(t);var e=[];for(var r in Object(t))Y.call(t,r)&&"constructor"!=r&&e.push(r);return e}(t)}t.exports=function(t){return Ht(t,!0,!0)}})),i="[object Object]";var o,a,s=Function.prototype,l=Object.prototype,u=s.toString,c=l.hasOwnProperty,f=u.call(Object),h=l.toString,g=(o=Object.getPrototypeOf,a=Object,function(t){return o(a(t))});var p=function(t){if(!function(t){return!!t&&"object"==typeof t}(t)||h.call(t)!=i||function(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}(t))return!1;var e=g(t);if(null===e)return!0;var r=c.call(e,"constructor")&&e.constructor;return"function"==typeof r&&r instanceof r&&u.call(r)==f};const d=Array.isArray;function y(t){return"string"==typeof t&&t.length>0&&"."===t[0]?t.slice(1):t}function m(t,e){return function t(e,r,i){const o=n(e);let a,s,l,u,c;if((i=Object.assign({depth:-1,path:""},i)).depth+=1,d(o))for(a=0,s=o.length;a<s;a++){const e=`${i.path}.${a}`;void 0!==o[a]?(i.parent=n(o),i.parentType="array",l=t(r(o[a],void 0,Object.assign({},i,{path:y(e)})),r,Object.assign({},i,{path:y(e)})),Number.isNaN(l)&&a<o.length?(o.splice(a,1),a-=1):o[a]=l):o.splice(a,1)}else if(p(o))for(a=0,s=(u=Object.keys(o)).length;a<s;a++){c=u[a];const e=`${i.path}.${c}`;0===i.depth&&null!=c&&(i.topmostKey=c),i.parent=n(o),i.parentType="object",l=t(r(c,o[c],Object.assign({},i,{path:y(e)})),r,Object.assign({},i,{path:y(e)})),Number.isNaN(l)?delete o[c]:o[c]=l}return o}(t,e,{})}const b=/[|\\{}()[\]^$+*?.-]/g;var w=t=>{if("string"!=typeof t)throw new TypeError("Expected a string");return t.replace(b,"\\$&")};const v=new Map;function _(t,e){e={caseSensitive:!1,...e};const r=t+JSON.stringify(e);if(v.has(r))return v.get(r);const n="!"===t[0];n&&(t=t.slice(1)),t=w(t).replace(/\\\*/g,".*");const i=new RegExp(`^${t}$`,e.caseSensitive?"":"i");return i.negated=n,v.set(r,i),i}var T=(t,e,r)=>{if(!Array.isArray(t)||!Array.isArray(e))throw new TypeError(`Expected two arrays, got ${typeof t} ${typeof e}`);if(0===e.length)return t;const n="!"===e[0][0];e=e.map(t=>_(t,r));const i=[];for(const r of t){let t=n;for(const n of e)n.test(r)&&(t=!n.negated);t&&i.push(r)}return i};T.isMatch=(t,e,r)=>{const n=_(e,r),i=n.test(t);return n.negated?!i:i};var O=r((function(t){t.exports=function(){var t=Object.prototype.toString;function e(t,e){return null!=t&&Object.prototype.hasOwnProperty.call(t,e)}function r(t){if(!t)return!0;if(i(t)&&0===t.length)return!0;if("string"!=typeof t){for(var r in t)if(e(t,r))return!1;return!0}return!1}function n(e){return t.call(e)}var i=Array.isArray||function(e){return"[object Array]"===t.call(e)};function o(t){var e=parseInt(t);return e.toString()===t?e:t}function a(t){t=t||{};var a=function(t){return Object.keys(a).reduce((function(e,r){return"create"===r?e:("function"==typeof a[r]&&(e[r]=a[r].bind(a,t)),e)}),{})};function s(r,n){return t.includeInheritedProps||"number"==typeof n&&Array.isArray(r)||e(r,n)}function l(t,e){if(s(t,e))return t[e]}function u(t,e,r,n){if("number"==typeof e&&(e=[e]),!e||0===e.length)return t;if("string"==typeof e)return u(t,e.split(".").map(o),r,n);var i=e[0],a=l(t,i);return 1===e.length?(void 0!==a&&n||(t[i]=r),a):(void 0===a&&("number"==typeof e[1]?t[i]=[]:t[i]={}),u(t[i],e.slice(1),r,n))}return a.has=function(r,n){if("number"==typeof n?n=[n]:"string"==typeof n&&(n=n.split(".")),!n||0===n.length)return!!r;for(var a=0;a<n.length;a++){var s=o(n[a]);if(!("number"==typeof s&&i(r)&&s<r.length||(t.includeInheritedProps?s in Object(r):e(r,s))))return!1;r=r[s]}return!0},a.ensureExists=function(t,e,r){return u(t,e,r,!0)},a.set=function(t,e,r,n){return u(t,e,r,n)},a.insert=function(t,e,r,n){var o=a.get(t,e);n=~~n,i(o)||(o=[],a.set(t,e,o)),o.splice(n,0,r)},a.empty=function(t,e){var o,l;if(!r(e)&&null!=t&&(o=a.get(t,e))){if("string"==typeof o)return a.set(t,e,"");if(function(t){return"boolean"==typeof t||"[object Boolean]"===n(t)}(o))return a.set(t,e,!1);if("number"==typeof o)return a.set(t,e,0);if(i(o))o.length=0;else{if(!function(t){return"object"==typeof t&&"[object Object]"===n(t)}(o))return a.set(t,e,null);for(l in o)s(o,l)&&delete o[l]}}},a.push=function(t,e){var r=a.get(t,e);i(r)||(r=[],a.set(t,e,r)),r.push.apply(r,Array.prototype.slice.call(arguments,2))},a.coalesce=function(t,e,r){for(var n,i=0,o=e.length;i<o;i++)if(void 0!==(n=a.get(t,e[i])))return n;return r},a.get=function(t,e,r){if("number"==typeof e&&(e=[e]),!e||0===e.length)return t;if(null==t)return r;if("string"==typeof e)return a.get(t,e.split("."),r);var n=o(e[0]),i=l(t,n);return void 0===i?r:1===e.length?i:a.get(t[n],e.slice(1),r)},a.del=function(t,e){if("number"==typeof e&&(e=[e]),null==t)return t;if(r(e))return t;if("string"==typeof e)return a.del(t,e.split("."));var n=o(e[0]);return s(t,n)?1!==e.length?a.del(t[n],e.slice(1)):(i(t)?t.splice(n,1):delete t[n],t):t},a}var s=a();return s.create=a,s.withInheritedProps=a({includeInheritedProps:!0}),s}()}));function W(t){return"string"==typeof t?t.length>0?[t]:[]:t}var j=function(t,e){if(e){if("object"!=typeof e)throw new TypeError(String(e)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in e){if("boolean"!=typeof e.includeZero)throw new TypeError(String(e.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(e.includeZero&&0===t)return!0}}return Number.isSafeInteger(t)&&t>=1},I=function(t,e){if("string"!=typeof t)return!1;if(e&&"includeZero"in e){if("boolean"!=typeof e.includeZero)throw new TypeError(String(e.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(e.includeZero)return/^(-?0|[1-9]\d*)(\.0+)?$/.test(t)}return/^[1-9]\d*(\.0+)?$/.test(t)},$="[object AsyncFunction]",A="[object Function]",E="[object GeneratorFunction]",S="[object Null]",R="[object Proxy]",H="[object Undefined]",D="object"==typeof e&&e&&e.Object===Object&&e,x="object"==typeof self&&self&&self.Object===Object&&self,N=D||x||Function("return this")(),C=Object.prototype,B=C.hasOwnProperty,M=C.toString,k=N.Symbol,F=k?k.toStringTag:void 0;function J(t){return null==t?void 0===t?H:S:F&&F in Object(t)?function(t){var e=B.call(t,F),r=t[F];try{t[F]=void 0;var n=!0}catch(t){}var i=M.call(t);n&&(e?t[F]=r:delete t[F]);return i}(t):function(t){return M.call(t)}(t)}var P=function(t){if(!function(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)}(t))return!1;var e=J(t);return e==A||e==E||e==$||e==R};function q(t){if("string"==typeof t)return 0!==t.length&&(t.charCodeAt(0)>=55296&&t.charCodeAt(0)<=56319);if(void 0===t)return!1;throw new TypeError(`string-character-is-astral-surrogate/isHighSurrogate(): the input is not string but ${typeof t}`)}function V(t){if("string"==typeof t)return 0!==t.length&&(t.charCodeAt(0)>=56320&&t.charCodeAt(0)<=57343);if(void 0===t)return!1;throw new TypeError(`string-character-is-astral-surrogate/isLowSurrogate(): the input is not string but ${typeof t}`)}const Z=Array.isArray;function L(t){return null!=t}function G(t){return"string"==typeof t}function U(t){return"string"==typeof t&&(t.charCodeAt(0)>=55296&&t.charCodeAt(0)<=57343)}function z(t,e,r,n,i){const o="function"==typeof r?r():r;if(e>=t.length&&i&&"EOL"===o)return o;if(!(e<=t.length)){if(n.relaxedApi)return!1;throw new Error(`string-match-left-right/marchForward(): [THROW_ID_102] second argument, fromIndexInclusive is ${e} beyond the input string length, ${t.length}.`)}{let a=i?1:r.length;for(let i=e,o=t.length;i<o;i++){let e=t[i];if(q(t[i])&&V(t[i+1])&&(e=t[i]+t[i+1]),V(t[i])&&q(t[i-1])&&(e=t[i-1]+t[i]),n.trimBeforeMatching&&""===t[i].trim())continue;if(!n.i&&n.trimCharsBeforeMatching.includes(e)||n.i&&n.trimCharsBeforeMatching.map(t=>t.toLowerCase()).includes(e.toLowerCase())){2===e.length&&(i+=1);continue}let o=r[r.length-a];if(q(o)&&L(r[r.length-a+1])&&V(r[r.length-a+1])&&(o=r[r.length-a]+r[r.length-a+1]),!(!n.i&&e===o||n.i&&e.toLowerCase()===o.toLowerCase()))return!1;if((a-=e.length)<1){let n=i-r.length+e.length;return n>=0&&V(t[n])&&L(t[n-1])&&q(t[n-1])&&(n-=1),n>=0?n:0}2===e.length&&q(t[i])&&(i+=1)}if(a>0)return!(!i||"EOL"!==o)}}function K(t,e,r,n,i){const o="function"==typeof r?r():r;if(e<0&&i&&"EOL"===o)return o;if(e>=t.length){if(n.relaxedApi)return!1;throw new Error(`string-match-left-right/marchBackward(): [THROW_ID_203] second argument, starting index, should not be beyond the last character of the input string! Currently the first argument's last character's index is ${t.length} but the second argument is beyond it:\n${JSON.stringify(e,null,4)}`)}let a=i?1:r.length;for(let o=e+1;o--;){if(n.trimBeforeMatching&&""===t[o].trim()){if(0===o&&i&&"EOL"===r)return!0;continue}let e=t[o];if(V(t[o])&&q(t[o-1])?e=t[o-1]+t[o]:q(t[o])&&V(t[o+1])&&(e=t[o]+t[o+1]),!n.i&&n.trimCharsBeforeMatching.includes(e)||n.i&&n.trimCharsBeforeMatching.map(t=>t.toLowerCase()).includes(e.toLowerCase())){if(2===e.length&&(o-=1),i&&"EOL"===r&&0===o)return!0;continue}let s=r[a-1];if(V(s)&&(s=`${r[a-2]}${r[a-1]}`,a-=1,o-=1),!(!n.i&&e===s||n.i&&e.toLowerCase()===s.toLowerCase()))return!1;if((a-=1)<1)return o>=0?o:0}return a>0?!(!i||"EOL"!==o):void 0}function Q(t,e,r,n,i){const o=Object.assign({},{i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],relaxedApi:!1},i);let a,s,l,u;if(o.trimCharsBeforeMatching=W(o.trimCharsBeforeMatching),o.trimCharsBeforeMatching=o.trimCharsBeforeMatching.map(t=>G(t)?t:String(t)),o.trimCharsBeforeMatching.some((t,e)=>t.length>1&&!U(t)&&(a=e,s=t,!0)))throw new Error(`string-match-left-right/${t}(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index ${a} is longer than 1 character, ${s.length} (equals to ${s}). Please split it into separate characters and put into array as separate elements.`);if(!G(e)){if(o.relaxedApi)return!1;throw new Error(`string-match-left-right/${t}(): [THROW_ID_01] the first argument should be a string. Currently it's of a type: ${typeof e}, equal to:\n${JSON.stringify(e,null,4)}`)}if(0===e.length){if(o.relaxedApi)return!1;throw new Error(`string-match-left-right/${t}(): [THROW_ID_02] the first argument should be a non-empty string. Currently it's empty!`)}if(!j(r,{includeZero:!0})){if(o.relaxedApi)return!1;throw new Error(`string-match-left-right/${t}(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`)}if(G(n))l=[n];else if(Z(n))l=n;else if(L(n)){if(!P(n))throw new Error(`string-match-left-right/${t}(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's ${typeof n}, equal to:\n${JSON.stringify(n,null,4)}`);(l=[]).push(n)}else l=n;if(L(i)&&!p(i))throw new Error(`string-match-left-right/${t}(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type "${typeof i}", and equal to:\n${JSON.stringify(i,null,4)}`);if(!L(l)||!Z(l)||Z(l)&&!l.length||Z(l)&&1===l.length&&G(l[0])&&0===l[0].trim().length){if("function"==typeof o.cb){let n,i=r;if("matchRight"===t&&q(e[r])&&V(e[r+1])&&(i+=1),"matchLeftIncl"!==t&&"matchRight"!==t||(i+=1),t.startsWith("matchLeft"))for(let t=i;t--;){if(V(e[t])&&q(e[t-1]))continue;let r=e[t];if(q(e[t])&&V(e[t+1])&&(r=e[t]+e[t+1]),(!o.trimBeforeMatching||o.trimBeforeMatching&&void 0!==r&&""!==r.trim())&&(0===o.trimCharsBeforeMatching.length||void 0!==r&&!o.trimCharsBeforeMatching.includes(r))){n=t;break}V(e[t-1])&&q(e[t-2])&&(t-=1)}else if(t.startsWith("matchRight"))for(let t=i;t<e.length;t++){let r=e[t];if(q(e[t])&&V(e[t+1])&&(r=e[t]+e[t+1]),(!o.trimBeforeMatching||o.trimBeforeMatching&&""!==r.trim())&&(0===o.trimCharsBeforeMatching.length||!o.trimCharsBeforeMatching.includes(r))){n=t;break}q(e[t])&&V(e[t+1])&&(t+=1)}if(void 0===n)return!1;let a=e[n];q(e[n])&&V(e[n+1])&&(a=e[n]+e[n+1]),V(e[n])&&q(e[n-1])&&(a=e[n-1]+e[n],n-=1);let s,l=n+1;return q(e[n])&&V(e[n+1])&&(l+=1),l&&l>0&&(s=e.slice(0,l)),t.startsWith("matchLeft")?o.cb(a,s,n):(n&&n>0&&(s=e.slice(n)),o.cb(a,s,n))}let n="";throw L(i)||(n=" More so, the whole options object, the fourth input argument, is missing!"),new Error(`string-match-left-right/${t}(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!${n}`)}if(t.startsWith("matchLeft")){for(let n=0,i=l.length;n<i;n++){u="function"==typeof l[n];const i=l[n];let a=r;"matchLeft"===t&&(U(e[n-1])&&U(e[n-2])?a-=2:a-=1);const s=K(e,a,i,o,u);if(s&&u&&"function"==typeof i&&"EOL"===i())return!(!i()||o.cb&&!o.cb(f,h,c))&&i();let c,f,h="";if(L(s)&&s>0&&(f=e[c=s-1],h=e.slice(0,s)),V(e[c])&&L(e[c-1])&&q(e[c-1])&&(f=e[(c-=1)-1]+e[c]),q(e[c])&&L(e[c+1])&&V(e[c+1])&&(f=e[c]+e[c+1],h=e.slice(0,c+2)),!1!==s&&(!o.cb||o.cb(f,h,c)))return i}return!1}for(let n=0,i=l.length;n<i;n++){u="function"==typeof l[n];const i=l[n];let a=r+("matchRight"===t?1:0);"matchRight"===t&&q(e[a-1])&&V(e[a])&&(a+=1);const s=z(e,a,i,o,u);if(s&&u&&"function"==typeof i&&"EOL"===i()){let t,e,r;return!(!i()||o.cb&&!o.cb(t,e,r))&&i()}let c,f,h;if(L(s)&&L(e[s+i.length-1])&&(f=e[c=s+i.length],q(e[c])&&V(e[c+1])&&(f=e[c]+e[c+1])),L(c)&&c>=0&&(h=e.slice(c)),!1!==s&&(!o.cb||o.cb(f,h,c)))return i}return!1}function X(t,e,r,n){return Q("matchLeftIncl",t,e,r,n)}function Y(t,e,r,n){return Q("matchRightIncl",t,e,r,n)}var tt=1/0,et=9007199254740991,rt=17976931348623157e292,nt=NaN,it="[object Arguments]",ot="[object Function]",at="[object GeneratorFunction]",st="[object String]",lt="[object Symbol]",ut=/^\s+|\s+$/g,ct=/^[-+]0x[0-9a-f]+$/i,ft=/^0b[01]+$/i,ht=/^0o[0-7]+$/i,gt=/^(?:0|[1-9]\d*)$/,pt=parseInt;function dt(t){return t!=t}function yt(t,e){return function(t,e){for(var r=-1,n=t?t.length:0,i=Array(n);++r<n;)i[r]=e(t[r],r,t);return i}(e,(function(e){return t[e]}))}var mt=Object.prototype,bt=mt.hasOwnProperty,wt=mt.toString,vt=mt.propertyIsEnumerable,_t=function(t,e){return function(r){return t(e(r))}}(Object.keys,Object),Tt=Math.max;function Ot(t,e){var r=It(t)||function(t){return function(t){return Et(t)&&$t(t)}(t)&&bt.call(t,"callee")&&(!vt.call(t,"callee")||wt.call(t)==it)}(t)?function(t,e){for(var r=-1,n=Array(t);++r<t;)n[r]=e(r);return n}(t.length,String):[],n=r.length,i=!!n;for(var o in t)!e&&!bt.call(t,o)||i&&("length"==o||jt(o,n))||r.push(o);return r}function Wt(t){if(r=(e=t)&&e.constructor,n="function"==typeof r&&r.prototype||mt,e!==n)return _t(t);var e,r,n,i=[];for(var o in Object(t))bt.call(t,o)&&"constructor"!=o&&i.push(o);return i}function jt(t,e){return!!(e=null==e?et:e)&&("number"==typeof t||gt.test(t))&&t>-1&&t%1==0&&t<e}var It=Array.isArray;function $t(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=et}(t.length)&&!function(t){var e=At(t)?wt.call(t):"";return e==ot||e==at}(t)}function At(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function Et(t){return!!t&&"object"==typeof t}var St=function(t,e,r,n){var i;t=$t(t)?t:(i=t)?yt(i,function(t){return $t(t)?Ot(t):Wt(t)}(i)):[],r=r&&!n?function(t){var e=function(t){if(!t)return 0===t?t:0;if((t=function(t){if("number"==typeof t)return t;if(function(t){return"symbol"==typeof t||Et(t)&&wt.call(t)==lt}(t))return nt;if(At(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=At(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(ut,"");var r=ft.test(t);return r||ht.test(t)?pt(t.slice(2),r?2:8):ct.test(t)?nt:+t}(t))===tt||t===-tt){return(t<0?-1:1)*rt}return t==t?t:0}(t),r=e%1;return e==e?r?e-r:e:0}(r):0;var o=t.length;return r<0&&(r=Tt(o+r,0)),function(t){return"string"==typeof t||!It(t)&&Et(t)&&wt.call(t)==st}(t)?r<=o&&t.indexOf(e,r)>-1:!!o&&function(t,e,r){if(e!=e)return function(t,e,r,n){for(var i=t.length,o=r+(n?1:-1);n?o--:++o<i;)if(e(t[o],o,t))return o;return-1}(t,dt,r);for(var n=r-1,i=t.length;++n<i;)if(t[n]===e)return n;return-1}(t,e,r)>-1};function Rt(t){return"string"==typeof t}const Ht=Array.isArray;function Dt(t){throw new Error(`string-find-heads-tails: [THROW_ID_01*] Missing ${t}th parameter!`)}function xt(t,e,r,n){if(null!=n){if(!p(n))throw new TypeError(`string-find-heads-tails: [THROW_ID_13] the fourth input argument, Optional Options Object, must be a plain object! Currently it's: ${typeof n}, equal to: ${n}`);I(n.fromIndex,{includeZero:!0})&&(n.fromIndex=Number(n.fromIndex))}const i={fromIndex:0,throwWhenSomethingWrongIsDetected:!0,allowWholeValueToBeOnlyHeadsOrTails:!0,source:"string-find-heads-tails",matchHeadsAndTailsStrictlyInPairsByTheirOrder:!1,relaxedAPI:!1};if((n=Object.assign({},i,n)).relaxedAPI||(void 0===t&&Dt(1),void 0===e&&Dt(2),void 0===r&&Dt(3)),!Rt(t)||0===t.length){if(n.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_02] the first input argument, input string, must be a non-zero-length string! Currently it's: ${typeof t}, equal to: ${t}`)}let o,a;if(!Rt(e)&&!Ht(e)){if(n.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_03] the second input argument, heads, must be either a string or an array of strings! Currently it's: ${typeof e}, equal to:\n${JSON.stringify(e,null,4)}`)}if(Rt(e)){if(0===e.length){if(n.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_04] the second input argument, heads, must be a non-empty string! Currently it's empty.")}e=W(e)}else if(Ht(e)){if(0===e.length){if(n.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_05] the second input argument, heads, must be a non-empty array and contain at least one string! Currently it's empty.")}if(e.every((t,e)=>(o=t,a=e,Rt(t)))){if(!e.every((t,e)=>(a=e,Rt(t)&&t.length>0&&""!==t.trim()))){if(!n.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_07] the second input argument, heads, should not contain empty strings! For example, there's one detected at index ${a} of heads array:\n${JSON.stringify(e,null,4)}.`);if(0===(e=e.filter(t=>Rt(t)&&t.length>0)).length)return[]}}else{if(!n.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_06] the second input argument, heads, contains non-string elements! For example, element at ${a}th index is ${typeof o}, equal to:\n${JSON.stringify(o,null,4)}. Whole heads array looks like:\n${JSON.stringify(e,null,4)}`);if(0===(e=e.filter(t=>Rt(t)&&t.length>0)).length)return[]}}if(!Rt(r)&&!Ht(r)){if(n.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_08] the third input argument, tails, must be either a string or an array of strings! Currently it's: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`)}if(Rt(r)){if(0===r.length){if(n.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_09] the third input argument, tails, must be a non-empty string! Currently it's empty.")}r=W(r)}else if(Ht(r)){if(0===r.length){if(n.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_10] the third input argument, tails, must be a non-empty array and contain at least one string! Currently it's empty.")}if(r.every((t,e)=>(o=t,a=e,Rt(t)))){if(!r.every((t,e)=>(a=e,Rt(t)&&t.length>0&&""!==t.trim()))){if(!n.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_12] the third input argument, tails, should not contain empty strings! For example, there's one detected at index ${a}. Whole tails array is equal to:\n${JSON.stringify(r,null,4)}`);if(0===(r=r.filter(t=>Rt(t)&&t.length>0)).length)return[]}}else{if(!n.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_11] the third input argument, tails, contains non-string elements! For example, element at ${a}th index is ${typeof o}, equal to:\n${JSON.stringify(o,null,4)}. Whole tails array is equal to:\n${JSON.stringify(r,null,4)}`);if(0===(r=r.filter(t=>Rt(t)&&t.length>0)).length)return[]}}const s=n.source===i.source;if(n.throwWhenSomethingWrongIsDetected&&!n.allowWholeValueToBeOnlyHeadsOrTails){if(St(W(e),t))throw new Error(`${n.source}${s?": [THROW_ID_16]":""} the whole input string can't be equal to ${Rt(e)?"":"one of "}heads (${t})!`);if(St(W(r),t))throw new Error(`${n.source}${s?": [THROW_ID_17]":""} the whole input string can't be equal to ${Rt(r)?"":"one of "}tails (${t})!`)}if(!j(n.fromIndex,{includeZero:!0})&&!I(n.fromIndex,{includeZero:!0}))throw new TypeError(`${n.source}${s?": [THROW_ID_18]":""} the fourth input argument must be a natural number! Currently it's: ${n.fromIndex}`);const l=e.concat(r).map(t=>t.charAt(0)).reduce((t,e)=>e.charCodeAt(0)>t[1]?[t[0],e.charCodeAt(0)]:e.charCodeAt(0)<t[0]?[e.charCodeAt(0),t[1]]:t,[e[0].charCodeAt(0),e[0].charCodeAt(0)]),u=[];let c,f=!1,h={},g=!1;for(let i=n.fromIndex,o=t.length;i<o;i++){const a=t[i].charCodeAt(0);if(a<=l[1]&&a>=l[0]){const a=Y(t,i,e);if(a&&n.matchHeadsAndTailsStrictlyInPairsByTheirOrder)for(let t=e.length;t--;)if(e[t]===a){c=t;break}if(a){if(!f){(h={}).headsStartAt=i,h.headsEndAt=i+a.length,f=!0,i+=a.length-1,g&&(g=!1);continue}if(n.throwWhenSomethingWrongIsDetected)throw new TypeError(`${n.source}${s?": [THROW_ID_19]":""} When processing "${t}", we found heads (${t.slice(i,i+a.length)}) starting at character with index number "${i}" and there was another set of heads before it! Generally speaking, there should be "heads-tails-heads-tails", not "heads-heads-tails"!\nWe're talking about the area of the code:\n\n\n--------------------------------------starts\n${t.slice(Math.max(i-200,0),i)}\n      [33m-------\x3e[39m ${`[31m${t.slice(i,i+a.length)}[39m`} [33m<-------[39m\n${t.slice(i+a.length,Math.min(o,i+200))}\n--------------------------------------ends\n\n\nTo turn off this error being thrown, set opts.throwWhenSomethingWrongIsDetected to Boolean false.`)}const l=Y(t,i,r);if(f&&l&&n.matchHeadsAndTailsStrictlyInPairsByTheirOrder&&void 0!==c&&void 0!==r[c]&&r[c]!==l){let i;for(let t=r.length;t--;)if(r[t]===l){i=t;break}throw new TypeError(`${n.source}${s?": [THROW_ID_20]":""} When processing "${t}", we had "opts.matchHeadsAndTailsStrictlyInPairsByTheirOrder" on. We found heads (${e[c]}) but the tails the followed it were not of the same index, ${c} (${r[c]}) but ${i} (${l}).`)}if(l){if(f){h.tailsStartAt=i,h.tailsEndAt=i+l.length,u.push(h),h={},f=!1,i+=l.length-1;continue}n.throwWhenSomethingWrongIsDetected&&(g=`${n.source}${s?": [THROW_ID_21]":""} When processing "${t}", we found tails (${t.slice(i,i+l.length)}) starting at character with index number "${i}" but there were no heads preceding it. That's very naughty!`)}}if(n.throwWhenSomethingWrongIsDetected&&i===o-1){if(0!==Object.keys(h).length)throw new TypeError(`${n.source}${s?": [THROW_ID_22]":""} When processing "${t}", we reached the end of the string and yet didn't find any tails (${JSON.stringify(r,null,4)}) to match the last detected heads (${t.slice(h.headsStartAt,h.headsEndAt)})!`);if(g)throw new Error(g)}}return u}const Nt=Array.isArray;function Ct(t){return null!=t}function Bt(t,e,r){if(!Ct(t))throw new Error("ast-get-values-by-key: [THROW_ID_01] the first argument is missing!");if(!Ct(e))throw new Error("ast-get-values-by-key: [THROW_ID_02] the second argument is missing!");if(Nt(e)){let t,r;if(e.length&&e.some((e,n)=>!function(t){return"string"==typeof t}(e)&&(t=n,r=e,!0)))throw new Error(`ast-get-values-by-key: [THROW_ID_03] the second argument is array of values and not all of them are strings! For example, at index ${t}, we have a value ${JSON.stringify(r,null,0)} which is not string but ${typeof r}!`)}else if("string"!=typeof e)throw new Error(`ast-get-values-by-key: [THROW_ID_04] the second argument must be string! Currently it's of a type "${typeof e}", equal to:\n${JSON.stringify(e,null,4)}`);let i;Ct(r)&&(i="string"==typeof r?[r]:n(r));const o=[],a=m(t,(t,r,n)=>{const a=void 0!==r?r:t;if(void 0!==r&&T.isMatch(t,e,{caseSensitive:!0}))if(void 0===i)o.push({val:r,path:n.path});else if(i.length>0)return i.shift();return a});return void 0===i?o:a}const Mt=" ";function kt(t,e=!0,r){if(!(r.trim().length||t.length&&"\n"!==r&&r!==Mt&&" "===(e?t[t.length-1]:t[0])||t.length&&"\n"===(e?t[t.length-1]:t[0])&&"\n"!==r&&r!==Mt))if(e){if(("\n"===r||r===Mt)&&t.length&&" "===t[t.length-1])for(;t.length&&" "===t[t.length-1];)t.pop();t.push(r===Mt||"\n"===r?r:" ")}else{if(("\n"===r||r===Mt)&&t.length&&" "===t[0])for(;t.length&&" "===t[0];)t.shift();t.unshift(r===Mt||"\n"===r?r:" ")}}function Ft(t,e){if("string"==typeof t&&t.length){let r,n,i=!1;if(t.includes("\r\n")&&(i=!0),r=e&&"number"==typeof e?e:1,""===t.trim()){const e=[];for(n=r,Array.from(t).forEach(t=>{("\n"!==t||n)&&("\n"===t&&n--,kt(e,!0,t))});e.length>1&&" "===e[e.length-1];)e.pop();return e.join("")}const o=[];if(n=r,""===t[0].trim())for(let e=0,r=t.length;e<r&&0===t[e].trim().length;e++)("\n"!==t[e]||n)&&("\n"===t[e]&&n--,kt(o,!0,t[e]));const a=[];if(n=r,""===t.slice(-1).trim())for(let e=t.length;e--&&0===t[e].trim().length;)("\n"!==t[e]||n)&&("\n"===t[e]&&n--,kt(a,!1,t[e]));return i?`${o.join("")}${t.trim()}${a.join("")}`.replace(/\n/g,"\r\n"):o.join("")+t.trim()+a.join("")}return t}const Jt=Array.isArray;function Pt(t,e){if(!Jt(t))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(0===t.length)return t;const r=Object.assign({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null},e);let n,i;if(r.strictlyTwoElementsInRangeArrays&&!t.every((t,e)=>2===t.length||(n=e,i=t.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${n}th range (${JSON.stringify(t[n],null,4)}) has not two but ${i} elements!`);if(!t.every((t,e)=>!(!j(t[0],{includeZero:!0})||!j(t[1],{includeZero:!0}))||(n=e,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${n}th range (${JSON.stringify(t[n],null,4)}) does not consist of only natural numbers!`);const o=t.length*t.length;let a=0;return Array.from(t).sort((t,e)=>(r.progressFn&&(a++,r.progressFn(Math.floor(100*a/o))),t[0]===e[0]?t[1]<e[1]?-1:t[1]>e[1]?1:0:t[0]<e[0]?-1:1))}function qt(t,e){function r(t){return"string"==typeof t}if(!Array.isArray(t))return t;const i={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let o;if(e){if(!p(e))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(e,null,4)} (type ${typeof e})`);if((o=Object.assign({},i,e)).progressFn&&p(o.progressFn)&&!Object.keys(o.progressFn).length)o.progressFn=null;else if(o.progressFn&&"function"!=typeof o.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof o.progressFn}", equal to ${JSON.stringify(o.progressFn,null,4)}`);if(o.mergeType&&1!==o.mergeType&&2!==o.mergeType)if(r(o.mergeType)&&"1"===o.mergeType.trim())o.mergeType=1;else{if(!r(o.mergeType)||"2"!==o.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof o.mergeType}", equal to ${JSON.stringify(o.mergeType,null,4)}`);o.mergeType=2}if("boolean"!=typeof o.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof o.joinRangesThatTouchEdges}", equal to ${JSON.stringify(o.joinRangesThatTouchEdges,null,4)}`)}else o=n(i);const a=n(t).filter(t=>void 0!==t[2]||t[0]!==t[1]);let s,l,u;const c=(s=o.progressFn?Pt(a,{progressFn:t=>{(u=Math.floor(t/5))!==l&&(l=u,o.progressFn(u))}}):Pt(a)).length-1;for(let t=c;t>0;t--)o.progressFn&&(u=Math.floor(78*(1-t/c))+21)!==l&&u>l&&(l=u,o.progressFn(u)),(s[t][0]<=s[t-1][0]||!o.joinRangesThatTouchEdges&&s[t][0]<s[t-1][1]||o.joinRangesThatTouchEdges&&s[t][0]<=s[t-1][1])&&(s[t-1][0]=Math.min(s[t][0],s[t-1][0]),s[t-1][1]=Math.max(s[t][1],s[t-1][1]),void 0!==s[t][2]&&(s[t-1][0]>=s[t][0]||s[t-1][1]<=s[t][1])&&null!==s[t-1][2]&&(null===s[t][2]&&null!==s[t-1][2]?s[t-1][2]=null:void 0!==s[t-1][2]?2===o.mergeType&&s[t-1][0]===s[t][0]?s[t-1][2]=s[t][2]:s[t-1][2]+=s[t][2]:s[t-1][2]=s[t][2]),s.splice(t,1),t=s.length);return s}function Vt(t){return null!=t}const Zt=Array.isArray,Lt=Number.isInteger;function Gt(t){return"string"==typeof t}function Ut(t){return I(t,{includeZero:!0})?parseInt(t,10):t}class zt{constructor(t){const e=Object.assign({},{limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1},t);if(e.mergeType&&1!==e.mergeType&&2!==e.mergeType)if(Gt(e.mergeType)&&"1"===e.mergeType.trim())e.mergeType=1;else{if(!Gt(e.mergeType)||"2"!==e.mergeType.trim())throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof e.mergeType}", equal to ${JSON.stringify(e.mergeType,null,4)}`);e.mergeType=2}this.opts=e}add(t,e,r,...n){if(n.length>0)throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_03] Please don't overload the add() method. From the 4th input argument onwards we see these redundant arguments: ${JSON.stringify(n,null,4)}`);if(!Vt(t)&&!Vt(e))return;if(Vt(t)&&!Vt(e)){if(Zt(t)){if(t.length){if(t.some(t=>Zt(t)))return void t.forEach(t=>{Zt(t)&&this.add(...t)});t.length>1&&Lt(Ut(t[0]))&&Lt(Ut(t[1]))&&this.add(...t)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(t,null,0)}) but second-one, "to" is not (${JSON.stringify(e,null,0)})`)}if(!Vt(t)&&Vt(e))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(e,null,0)}) but first-one, "from" is not (${JSON.stringify(t,null,0)})`);const i=I(t,{includeZero:!0})?parseInt(t,10):t,o=I(e,{includeZero:!0})?parseInt(e,10):e;if(Lt(r)&&(r=String(r)),!j(i,{includeZero:!0})||!j(o,{includeZero:!0}))throw j(i,{includeZero:!0})?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof o}" equal to: ${JSON.stringify(o,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof i}" equal to: ${JSON.stringify(i,null,4)}`);if(Vt(r)&&!Gt(r)&&!Lt(r))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`);if(Vt(this.slices)&&Zt(this.last())&&i===this.last()[1]){if(this.last()[1]=o,this.last()[2],null!==this.last()[2]&&Vt(r)){let t=!(Vt(this.last()[2])&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&1!==this.opts.mergeType?r:this.last()[2]+r;this.opts.limitToBeAddedWhitespace&&(t=Ft(t,this.opts.limitLinebreaksCount)),Gt(t)&&!t.length||(this.last()[2]=t)}}else{this.slices||(this.slices=[]);const t=void 0===r||Gt(r)&&!r.length?[i,o]:[i,o,this.opts.limitToBeAddedWhitespace?Ft(r,this.opts.limitLinebreaksCount):r];this.slices.push(t)}}push(t,e,r,...n){this.add(t,e,r,...n)}current(){return null!=this.slices?(this.slices=qt(this.slices,{mergeType:this.opts.mergeType}),this.opts.limitToBeAddedWhitespace?this.slices.map(t=>Vt(t[2])?[t[0],t[1],Ft(t[2],this.opts.limitLinebreaksCount)]:t):this.slices):null}wipe(){this.slices=void 0}replace(t){if(Zt(t)&&t.length){if(!Zt(t[0])||!Lt(t[0][0]))throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(t[0],null,4)} should be an array and its first element should be an integer, a string index.`);this.slices=n(t)}else this.slices=void 0}last(){return void 0!==this.slices&&Array.isArray(this.slices)?this.slices[this.slices.length-1]:null}}const Kt=Array.isArray;function Qt(t,e,r){let n=0,i=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if("string"!=typeof t)throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(null===e)return t;if(!Kt(e))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(r&&"function"!=typeof r)throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);Kt(e)&&(j(e[0],{includeZero:!0})||I(e[0],{includeZero:!0}))&&(j(e[1],{includeZero:!0})||I(e[1],{includeZero:!0}))&&(e=[e]);const o=e.length;let a=0;e.forEach((t,s)=>{if(r&&(n=Math.floor(a/o*10))!==i&&(i=n,r(n)),!Kt(t))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${s}th element not an array: ${JSON.stringify(t,null,4)}, which is ${typeof t}`);if(!j(t[0],{includeZero:!0})){if(!I(t[0],{includeZero:!0}))throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${s}th element, array [${t[0]},${t[1]}]. That array has first element not an integer, but ${typeof t[0]}, equal to: ${JSON.stringify(t[0],null,4)}. Computer doesn't like this.`);e[s][0]=Number.parseInt(e[s][0],10)}if(!j(t[1],{includeZero:!0})){if(!I(t[1],{includeZero:!0}))throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${s}th element, array [${t[0]},${t[1]}]. That array has second element not an integer, but ${typeof t[1]}, equal to: ${JSON.stringify(t[1],null,4)}. Computer doesn't like this.`);e[s][1]=Number.parseInt(e[s][1],10)}a++});const s=qt(e,{progressFn:t=>{r&&(n=10+Math.floor(t/10))!==i&&(i=n,r(n))}}),l=s.length;if(l>0){const e=t.slice(s[l-1][1]);t=s.reduce((e,o,a,s)=>{r&&(n=20+Math.floor(a/l*80))!==i&&(i=n,r(n));const u=0===a?0:s[a-1][1],c=s[a][0];return e+t.slice(u,c)+(function(t){return null!=t}(s[a][2])?s[a][2]:"")},""),t+=e}return t}function Xt(t,e){if("string"!=typeof t)throw new Error(`string-trim-spaces-only: [THROW_ID_01] input must be string! It was given as ${typeof t}, equal to:\n${JSON.stringify(t,null,4)}`);const r=Object.assign({},{classicTrim:!1,cr:!1,lf:!1,tab:!1,space:!0,nbsp:!1},e);function n(t){return r.classicTrim&&0===t.trim().length||!r.classicTrim&&(r.space&&" "===t||r.cr&&"\r"===t||r.lf&&"\n"===t||r.tab&&"\t"===t||r.nbsp&&" "===t)}let i,o;if(t.length>0){if(n(t[0]))for(let e=0,r=t.length;e<r;e++){if(!n(t[e])){i=e;break}if(e===t.length-1)return{res:"",ranges:[[0,t.length]]}}if(n(t[t.length-1]))for(let e=t.length;e--;)if(!n(t[e])){o=e+1;break}return i?o?{res:t.slice(i,o),ranges:[[0,i],[o,t.length]]}:{res:t.slice(i),ranges:[[0,i]]}:o?{res:t.slice(0,o),ranges:[[o,t.length]]}:{res:t,ranges:[]}}return{res:"",ranges:[]}}var Yt=Array.isArray,te=Object.prototype.hasOwnProperty;function ee(t){return"string"==typeof t}function re(t){return"boolean"==typeof t}function ne(t){return null===t}function ie(t){return ee(t)?t.trim():t}function oe(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(var e=0,r=t.length;e<r;e++)if("."===t[e])return t.slice(e+1);return t}function ae(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(var e=t.length;e--;)if("."===t[e])return t.slice(0,e);return t}function se(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(var e=t.length;e--;)if("."===t[e])return t.slice(e+1);return t}function le(t,e){return"string"==typeof t&&0!==t.trim().length&&!!(t.includes(e.heads)||t.includes(e.tails)||ee(e.headsNoWrap)&&e.headsNoWrap.length>0&&t.includes(e.headsNoWrap)||ee(e.tailsNoWrap)&&e.tailsNoWrap.length>0&&t.includes(e.tailsNoWrap))}function ue(t,e){var r,n,i,o,a,s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=arguments.length>5?arguments[5]:void 0;if(e.wrapHeadsWith||(e.wrapHeadsWith=""),e.wrapTailsWith||(e.wrapTailsWith=""),ee(t)&&!s&&e.wrapGlobalFlipSwitch&&!e.dontWrapVars.some((function(t){return T.isMatch(l,t)}))&&(!e.preventDoubleWrapping||e.preventDoubleWrapping&&ee(t)&&!t.includes(e.wrapHeadsWith)&&!t.includes(e.wrapTailsWith)))return e.wrapHeadsWith+t+e.wrapTailsWith;if(s){if(!ee(t))return t;var u=function(t,e={}){function r(t){return null!=t}const n=Object.prototype.hasOwnProperty;function i(t){return"string"==typeof t}if(void 0===t)throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_01] The input is missing!");if("string"!=typeof t)return t;if(r(e)&&!p(e))throw new Error(`string-remove-duplicate-heads-tails: [THROW_ID_03] The given options are not a plain object but ${typeof e}!`);if(r(e)&&n.call(e,"heads")){if(!W(e.heads).every(t=>i(t)))throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_04] The opts.heads contains elements which are not string-type!");i(e.heads)&&(e.heads=W(e.heads))}if(r(e)&&n.call(e,"tails")){if(!W(e.tails).every(t=>i(t)))throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_05] The opts.tails contains elements which are not string-type!");i(e.tails)&&(e.tails=W(e.tails))}const o=Xt(t).res;if(0===o.length)return t;t=o;const a=Object.assign({},{heads:["{{"],tails:["}}"]},e);a.heads=a.heads.map(t=>t.trim()),a.tails=a.tails.map(t=>t.trim());let s=!1,l=!1;const u=new zt({limitToBeAddedWhitespace:!0}),c=new zt({limitToBeAddedWhitespace:!0});let f=!0,h=!0,g="";function d(t,e){let r;return Y(t,0,e.heads,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0),relaxedApi:!0})&&Y(t,r,e.tails,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0),relaxedApi:!0})?t.slice(r):t}for(;t!==d(t,a);)t=Xt(d(t,a)).res;function y(t,e){let r;return X(t,t.length-1,e.tails,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0),relaxedApi:!0})&&X(t,r,e.heads,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0),relaxedApi:!0})?t.slice(0,r+1):t}for(;t!==y(t,a);)t=Xt(y(t,a)).res;if(!(a.heads.length&&Y(t,0,a.heads,{trimBeforeMatching:!0,relaxedApi:!0})&&a.tails.length&&X(t,t.length-1,a.tails,{trimBeforeMatching:!0,relaxedApi:!0})))return Xt(t).res;for(let e=0,n=t.length;e<n;e++)if(""===t[e].trim());else{let n;if(Y(t,e,a.heads,{trimBeforeMatching:!0,cb:(t,e,r)=>(n=r,!0),relaxedApi:!0})){let r;h=!0,f&&(f=!0),Y(t,n,a.tails,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0),relaxedApi:!0})&&u.push(e,r),c.current()&&s&&"tails"!==g&&u.push(c.current()),s?c.push(e,n):(c.current()&&(u.push(c.current()),c.wipe()),c.push(e,n)),g="heads",e=n-1;continue}if(Y(t,e,a.tails,{trimBeforeMatching:!0,cb:(e,i,o)=>(n=r(o)?o:t.length,!0),relaxedApi:!0})){h=!0,f?("heads"===g&&c.wipe(),f=!1):c.push(e,n),g="tails",e=n-1;continue}f&&(f=!0),h&&!s?(s=!0,h=!1):h&&!l?(l=!0,f=!0,h=!1,"heads"===g&&c.wipe()):h&&l&&c.wipe()}return c.current()&&u.push(c.current()),u.current()?Qt(t,u.current()).trim():t.trim()}(t,{heads:e.wrapHeadsWith,tails:e.wrapTailsWith});return ee(u)?(r=u,n=e.wrapHeadsWith,i=e.wrapTailsWith,"string"==typeof r&&r.length>0&&Y(r,0,n,{trimBeforeMatching:!0,cb:function(t,e,r){return o=r,!0}})&&X(r,r.length-1,i,{trimBeforeMatching:!0,cb:function(t,e,r){return a=r+1,!0}})?r.slice(o,a):r):u}return t}function ce(t,e,r,n){var i;if(-1!==r.indexOf(".")){var o=r,a=!0;if(n.lookForDataContainers&&"string"==typeof n.dataContainerIdentifierTails&&n.dataContainerIdentifierTails.length>0&&!o.endsWith(n.dataContainerIdentifierTails)){var s=O.get(t,o+n.dataContainerIdentifierTails);p(s)&&O.get(s,e)&&(i=O.get(s,e),a=!1)}for(;a&&-1!==o.indexOf(".");){if(se(o=ae(o))===e)throw new Error('json-variables/findValues(): [THROW_ID_20] While trying to resolve: "'.concat(e,'" at path "').concat(r,'", we encountered a closed loop. The parent key "').concat(se(o),'" is called the same as the variable "').concat(e,"\" we're looking for."));if(n.lookForDataContainers&&"string"==typeof n.dataContainerIdentifierTails&&n.dataContainerIdentifierTails.length>0&&!o.endsWith(n.dataContainerIdentifierTails)){var l=O.get(t,o+n.dataContainerIdentifierTails);p(l)&&O.get(l,e)&&(i=O.get(l,e),a=!1)}if(void 0===i){var u=O.get(t,o);p(u)&&O.get(u,e)&&(i=O.get(u,e),a=!1)}}}if(void 0===i){var c=O.get(t,e);void 0!==c&&(i=c)}if(void 0===i)if(-1===e.indexOf(".")){var f=Bt(t,e);if(f.length>0)for(var h=0,g=f.length;h<g;h++){if(ee(f[h].val)||re(f[h].val)||ne(f[h].val)){i=f[h].val;break}if("number"==typeof f[h].val){i=String(f[h].val);break}if(Yt(f[h].val)){i=f[h].val.join("");break}throw new Error('json-variables/findValues(): [THROW_ID_21] While trying to resolve: "'.concat(e,'" at path "').concat(r,'", we actually found the key named ').concat(e,", but it was not equal to a string but to:\n").concat(JSON.stringify(f[h],null,4),"\nWe can't resolve a string with that! It should be a string."))}}else{var d=Bt(t,function(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(var e=0,r=t.length;e<r;e++)if("."===t[e])return t.slice(0,e);return t}(e));if(d.length>0)for(var y=0,m=d.length;y<m;y++){var b=O.get(d[y].val,oe(e));b&&ee(b)&&(i=b)}}return i}return function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(0===arguments.length)throw new Error("json-variables/jsonVariables(): [THROW_ID_01] Alas! Inputs are missing!");if(!p(e))throw new TypeError("json-variables/jsonVariables(): [THROW_ID_02] Alas! The input must be a plain object! Currently it's: ".concat(Array.isArray(e)?"array":t(e)));if(!p(r))throw new TypeError("json-variables/jsonVariables(): [THROW_ID_03] Alas! An Optional Options Object must be a plain object! Currently it's: ".concat(Array.isArray(r)?"array":t(r)));var i,o,a,s=n(e),l=Object.assign({},{heads:"%%_",tails:"_%%",headsNoWrap:"%%-",tailsNoWrap:"-%%",lookForDataContainers:!0,dataContainerIdentifierTails:"_data",wrapHeadsWith:"",wrapTailsWith:"",dontWrapVars:[],preventDoubleWrapping:!0,wrapGlobalFlipSwitch:!0,noSingleMarkers:!1,resolveToBoolIfAnyValuesContainBool:!0,resolveToFalseIfAnyValuesContainBool:!0,throwWhenNonStringInsertedInString:!1},r);if(l.dontWrapVars?Yt(l.dontWrapVars)||(l.dontWrapVars=W(l.dontWrapVars)):l.dontWrapVars=[],l.dontWrapVars.length>0&&!l.dontWrapVars.every((function(t,e){return!!ee(t)||(i=t,o=e,!1)})))throw new Error('json-variables/jsonVariables(): [THROW_ID_05] Alas! All variable names set in opts.dontWrapVars should be of a string type. Computer detected a value "'.concat(i,'" at index ').concat(o,", which is not string but ").concat(Array.isArray(i)?"array":t(i),"!"));if(""===l.heads)throw new Error("json-variables/jsonVariables(): [THROW_ID_06] Alas! opts.heads are empty!");if(""===l.tails)throw new Error("json-variables/jsonVariables(): [THROW_ID_07] Alas! opts.tails are empty!");if(l.lookForDataContainers&&""===l.dataContainerIdentifierTails)throw new Error("json-variables/jsonVariables(): [THROW_ID_08] Alas! opts.dataContainerIdentifierTails is empty!");if(l.heads===l.tails)throw new Error("json-variables/jsonVariables(): [THROW_ID_09] Alas! opts.heads and opts.tails can't be equal!");if(l.heads===l.headsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_10] Alas! opts.heads and opts.headsNoWrap can't be equal!");if(l.tails===l.tailsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_11] Alas! opts.tails and opts.tailsNoWrap can't be equal!");if(""===l.headsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_12] Alas! opts.headsNoWrap is an empty string!");if(""===l.tailsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_13] Alas! opts.tailsNoWrap is an empty string!");if(l.headsNoWrap===l.tailsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_14] Alas! opts.headsNoWrap and opts.tailsNoWrap can't be equal!");return m(s,(function(t,e,r){if(null!=e&&le(t,l))throw new Error("json-variables/jsonVariables(): [THROW_ID_15] Alas! Object keys can't contain variables!\nPlease check the following key: ".concat(t));if(""===(a=void 0!==e?e:t))return a;if(0!==l.heads.length&&ie(a)===ie(l.heads)||0!==l.tails.length&&ie(a)===ie(l.tails)||0!==l.headsNoWrap.length&&ie(a)===ie(l.headsNoWrap)||0!==l.tailsNoWrap.length&&ie(a)===ie(l.tailsNoWrap)){if(!l.noSingleMarkers)return a;throw new Error("json-variables/jsonVariables(): [THROW_ID_16] Alas! While processing the input, we stumbled upon ".concat(ie(a)," which is equal to ").concat(ie(a)===ie(l.heads)?"heads":"").concat(ie(a)===ie(l.tails)?"tails":"").concat(ee(l.headsNoWrap)&&ie(a)===ie(l.headsNoWrap)?"headsNoWrap":"").concat(ee(l.tailsNoWrap)&&ie(a)===ie(l.tailsNoWrap)?"tailsNoWrap":"",'. If you wouldn\'t have set opts.noSingleMarkers to "true" this error would not happen and computer would have left the current element (').concat(ie(a),") alone"))}return ee(a)&&le(a,l)?function t(e,r,i,o){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(a.includes(i)){var s="";if(a.length>1){s=a.reduce((function(t,e,r){return t+(0===r?"":" →\n")+(e===i?"💥 ":"  ")+e})," Here's the path we travelled up until we hit the recursion:\n\n"),s+="".concat(" →\n","💥 ").concat(i)}throw new Error('json-variables/resolveString(): [THROW_ID_19] While trying to resolve: "'.concat(r,'" at path "').concat(i,'", we encountered a closed loop, the key is referencing itself."').concat(s))}var l={},u=n(a);u.push(i);var c,f=new zt;function h(n,a,s){for(var c=0,h=n.length;c<h;c++){var g=n[c],p=r.slice(g.headsEndAt,g.tailsStartAt);if(0===p.length)f.push(g.headsStartAt,g.tailsEndAt);else if(te.call(l,p)&&ee(l[p]))f.push(g.headsStartAt,g.tailsEndAt,l[p]);else{var d=ce(e,p.trim(),i,o);if(void 0===d)throw new Error("json-variables/processHeadsAndTails(): [THROW_ID_18] We couldn't find the value to resolve the variable ".concat(r.slice(g.headsEndAt,g.tailsStartAt),". We're at path: \"").concat(i,'".'));if(!s&&o.throwWhenNonStringInsertedInString&&!ee(d))throw new Error("json-variables/processHeadsAndTails(): [THROW_ID_23] While resolving the variable ".concat(r.slice(g.headsEndAt,g.tailsStartAt)," at path ").concat(i,", it resolved into a non-string value, ").concat(JSON.stringify(d,null,4),'. This is happening because options setting "throwWhenNonStringInsertedInString" is active (set to "true").'));if(re(d)){if(o.resolveToBoolIfAnyValuesContainBool)return f=void 0,!o.resolveToFalseIfAnyValuesContainBool&&d;d=""}else{if(ne(d)&&s)return f=void 0,d;d=Yt(d)?String(d.join("")):ne(d)?"":String(d)}var y=i.includes(".")?"".concat(ae(i),".").concat(p):p;if(le(d,o)){var m=ue(t(e,d,y,o,u),o,a,u,y,p.trim());ee(m)&&f.push(g.headsStartAt,g.tailsEndAt,m)}else{l[p]=d;var b=ue(d,o,a,u,y,p.trim());ee(b)&&f.push(g.headsStartAt,g.tailsEndAt,b)}}}}try{c=xt(r,o.heads,o.tails,{source:"",throwWhenSomethingWrongIsDetected:!1})}catch(t){throw new Error('json-variables/resolveString(): [THROW_ID_17] While trying to resolve string: "'.concat(r,'" at path ').concat(i,", something wrong with heads and tails was detected! Here's the internal error message:\n").concat(t))}var g=!1;1===c.length&&""===Qt(r,[c[0].headsStartAt,c[0].tailsEndAt]).trim()&&(g=!0);var p=h(c,!1,g);if(re(p))return p;if(ne(p))return p;try{c=xt(r,o.headsNoWrap,o.tailsNoWrap,{source:"",throwWhenSomethingWrongIsDetected:!1})}catch(t){throw new Error('json-variables/resolveString(): [THROW_ID_22] While trying to resolve string: "'.concat(r,'" at path ').concat(i,", something wrong with no-wrap heads and no-wrap tails was detected! Here's the internal error message:\n").concat(t))}1===c.length&&""===Qt(r,[c[0].headsStartAt,c[0].tailsEndAt]).trim()&&(g=!0);var d=h(c,!0,g);return re(d)?d:ne(d)?d:f&&f.current()?Qt(r,f.current()):r}(s,a,r.path,l):a}))}}));
