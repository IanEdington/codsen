/**
 * json-variables
 * It's like SASS variables, but for JSON
 * Version: 8.0.48
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/json-variables
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).jsonVariables=t()}(this,(function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function r(e,t){return e(t={exports:{}},t.exports),t.exports}var n=r((function(e,r){var n=200,i="__lodash_hash_undefined__",o=9007199254740991,a="[object Arguments]",s="[object Boolean]",l="[object Date]",u="[object Function]",c="[object GeneratorFunction]",h="[object Map]",f="[object Number]",g="[object Object]",p="[object RegExp]",d="[object Set]",y="[object String]",m="[object Symbol]",w="[object ArrayBuffer]",b="[object DataView]",v="[object Float32Array]",_="[object Float64Array]",T="[object Int8Array]",O="[object Int16Array]",W="[object Int32Array]",I="[object Uint8Array]",A="[object Uint8ClampedArray]",$="[object Uint16Array]",j="[object Uint32Array]",E=/\w*$/,S=/^\[object .+?Constructor\]$/,R=/^(?:0|[1-9]\d*)$/,H={};H[a]=H["[object Array]"]=H[w]=H[b]=H[s]=H[l]=H[v]=H[_]=H[T]=H[O]=H[W]=H[h]=H[f]=H[g]=H[p]=H[d]=H[y]=H[m]=H[I]=H[A]=H[$]=H[j]=!0,H["[object Error]"]=H[u]=H["[object WeakMap]"]=!1;var D="object"==typeof t&&t&&t.Object===Object&&t,N="object"==typeof self&&self&&self.Object===Object&&self,x=D||N||Function("return this")(),C=r&&!r.nodeType&&r,B=C&&e&&!e.nodeType&&e,M=B&&B.exports===C;function k(e,t){return e.set(t[0],t[1]),e}function J(e,t){return e.add(t),e}function F(e,t,r,n){var i=-1,o=e?e.length:0;for(n&&o&&(r=e[++i]);++i<o;)r=t(r,e[i],i,e);return r}function P(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}function q(e){var t=-1,r=Array(e.size);return e.forEach((function(e,n){r[++t]=[n,e]})),r}function V(e,t){return function(r){return e(t(r))}}function L(e){var t=-1,r=Array(e.size);return e.forEach((function(e){r[++t]=e})),r}var Z,z=Array.prototype,U=Function.prototype,G=Object.prototype,K=x["__core-js_shared__"],Q=(Z=/[^.]+$/.exec(K&&K.keys&&K.keys.IE_PROTO||""))?"Symbol(src)_1."+Z:"",X=U.toString,Y=G.hasOwnProperty,ee=G.toString,te=RegExp("^"+X.call(Y).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),re=M?x.Buffer:void 0,ne=x.Symbol,ie=x.Uint8Array,oe=V(Object.getPrototypeOf,Object),ae=Object.create,se=G.propertyIsEnumerable,le=z.splice,ue=Object.getOwnPropertySymbols,ce=re?re.isBuffer:void 0,he=V(Object.keys,Object),fe=Be(x,"DataView"),ge=Be(x,"Map"),pe=Be(x,"Promise"),de=Be(x,"Set"),ye=Be(x,"WeakMap"),me=Be(Object,"create"),we=Pe(fe),be=Pe(ge),ve=Pe(pe),_e=Pe(de),Te=Pe(ye),Oe=ne?ne.prototype:void 0,We=Oe?Oe.valueOf:void 0;function Ie(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Ae(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function $e(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function je(e){this.__data__=new Ae(e)}function Ee(e,t){var r=Ve(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Le(e)}(e)&&Y.call(e,"callee")&&(!se.call(e,"callee")||ee.call(e)==a)}(e)?function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(e.length,String):[],n=r.length,i=!!n;for(var o in e)!t&&!Y.call(e,o)||i&&("length"==o||Je(o,n))||r.push(o);return r}function Se(e,t,r){var n=e[t];Y.call(e,t)&&qe(n,r)&&(void 0!==r||t in e)||(e[t]=r)}function Re(e,t){for(var r=e.length;r--;)if(qe(e[r][0],t))return r;return-1}function He(e,t,r,n,i,o,S){var R;if(n&&(R=o?n(e,i,o,S):n(e)),void 0!==R)return R;if(!Ue(e))return e;var D=Ve(e);if(D){if(R=function(e){var t=e.length,r=e.constructor(t);t&&"string"==typeof e[0]&&Y.call(e,"index")&&(r.index=e.index,r.input=e.input);return r}(e),!t)return function(e,t){var r=-1,n=e.length;t||(t=Array(n));for(;++r<n;)t[r]=e[r];return t}(e,R)}else{var N=ke(e),x=N==u||N==c;if(Ze(e))return function(e,t){if(t)return e.slice();var r=new e.constructor(e.length);return e.copy(r),r}(e,t);if(N==g||N==a||x&&!o){if(P(e))return o?e:{};if(R=function(e){return"function"!=typeof e.constructor||Fe(e)?{}:(t=oe(e),Ue(t)?ae(t):{});var t}(x?{}:e),!t)return function(e,t){return xe(e,Me(e),t)}(e,function(e,t){return e&&xe(t,Ge(t),e)}(R,e))}else{if(!H[N])return o?e:{};R=function(e,t,r,n){var i=e.constructor;switch(t){case w:return Ne(e);case s:case l:return new i(+e);case b:return function(e,t){var r=t?Ne(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.byteLength)}(e,n);case v:case _:case T:case O:case W:case I:case A:case $:case j:return function(e,t){var r=t?Ne(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.length)}(e,n);case h:return function(e,t,r){return F(t?r(q(e),!0):q(e),k,new e.constructor)}(e,n,r);case f:case y:return new i(e);case p:return function(e){var t=new e.constructor(e.source,E.exec(e));return t.lastIndex=e.lastIndex,t}(e);case d:return function(e,t,r){return F(t?r(L(e),!0):L(e),J,new e.constructor)}(e,n,r);case m:return o=e,We?Object(We.call(o)):{}}var o}(e,N,He,t)}}S||(S=new je);var C=S.get(e);if(C)return C;if(S.set(e,R),!D)var B=r?function(e){return function(e,t,r){var n=t(e);return Ve(e)?n:function(e,t){for(var r=-1,n=t.length,i=e.length;++r<n;)e[i+r]=t[r];return e}(n,r(e))}(e,Ge,Me)}(e):Ge(e);return function(e,t){for(var r=-1,n=e?e.length:0;++r<n&&!1!==t(e[r],r,e););}(B||e,(function(i,o){B&&(i=e[o=i]),Se(R,o,He(i,t,r,n,o,e,S))})),R}function De(e){return!(!Ue(e)||(t=e,Q&&Q in t))&&(ze(e)||P(e)?te:S).test(Pe(e));var t}function Ne(e){var t=new e.constructor(e.byteLength);return new ie(t).set(new ie(e)),t}function xe(e,t,r,n){r||(r={});for(var i=-1,o=t.length;++i<o;){var a=t[i],s=n?n(r[a],e[a],a,r,e):void 0;Se(r,a,void 0===s?e[a]:s)}return r}function Ce(e,t){var r,n,i=e.__data__;return("string"==(n=typeof(r=t))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?i["string"==typeof t?"string":"hash"]:i.map}function Be(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return De(r)?r:void 0}Ie.prototype.clear=function(){this.__data__=me?me(null):{}},Ie.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Ie.prototype.get=function(e){var t=this.__data__;if(me){var r=t[e];return r===i?void 0:r}return Y.call(t,e)?t[e]:void 0},Ie.prototype.has=function(e){var t=this.__data__;return me?void 0!==t[e]:Y.call(t,e)},Ie.prototype.set=function(e,t){return this.__data__[e]=me&&void 0===t?i:t,this},Ae.prototype.clear=function(){this.__data__=[]},Ae.prototype.delete=function(e){var t=this.__data__,r=Re(t,e);return!(r<0)&&(r==t.length-1?t.pop():le.call(t,r,1),!0)},Ae.prototype.get=function(e){var t=this.__data__,r=Re(t,e);return r<0?void 0:t[r][1]},Ae.prototype.has=function(e){return Re(this.__data__,e)>-1},Ae.prototype.set=function(e,t){var r=this.__data__,n=Re(r,e);return n<0?r.push([e,t]):r[n][1]=t,this},$e.prototype.clear=function(){this.__data__={hash:new Ie,map:new(ge||Ae),string:new Ie}},$e.prototype.delete=function(e){return Ce(this,e).delete(e)},$e.prototype.get=function(e){return Ce(this,e).get(e)},$e.prototype.has=function(e){return Ce(this,e).has(e)},$e.prototype.set=function(e,t){return Ce(this,e).set(e,t),this},je.prototype.clear=function(){this.__data__=new Ae},je.prototype.delete=function(e){return this.__data__.delete(e)},je.prototype.get=function(e){return this.__data__.get(e)},je.prototype.has=function(e){return this.__data__.has(e)},je.prototype.set=function(e,t){var r=this.__data__;if(r instanceof Ae){var i=r.__data__;if(!ge||i.length<n-1)return i.push([e,t]),this;r=this.__data__=new $e(i)}return r.set(e,t),this};var Me=ue?V(ue,Object):function(){return[]},ke=function(e){return ee.call(e)};function Je(e,t){return!!(t=null==t?o:t)&&("number"==typeof e||R.test(e))&&e>-1&&e%1==0&&e<t}function Fe(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||G)}function Pe(e){if(null!=e){try{return X.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function qe(e,t){return e===t||e!=e&&t!=t}(fe&&ke(new fe(new ArrayBuffer(1)))!=b||ge&&ke(new ge)!=h||pe&&"[object Promise]"!=ke(pe.resolve())||de&&ke(new de)!=d||ye&&"[object WeakMap]"!=ke(new ye))&&(ke=function(e){var t=ee.call(e),r=t==g?e.constructor:void 0,n=r?Pe(r):void 0;if(n)switch(n){case we:return b;case be:return h;case ve:return"[object Promise]";case _e:return d;case Te:return"[object WeakMap]"}return t});var Ve=Array.isArray;function Le(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=o}(e.length)&&!ze(e)}var Ze=ce||function(){return!1};function ze(e){var t=Ue(e)?ee.call(e):"";return t==u||t==c}function Ue(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function Ge(e){return Le(e)?Ee(e):function(e){if(!Fe(e))return he(e);var t=[];for(var r in Object(e))Y.call(e,r)&&"constructor"!=r&&t.push(r);return t}(e)}e.exports=function(e){return He(e,!0,!0)}})),i="[object Object]";var o,a,s=Function.prototype,l=Object.prototype,u=s.toString,c=l.hasOwnProperty,h=u.call(Object),f=l.toString,g=(o=Object.getPrototypeOf,a=Object,function(e){return o(a(e))});var p=function(e){if(!function(e){return!!e&&"object"==typeof e}(e)||f.call(e)!=i||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e))return!1;var t=g(e);if(null===t)return!0;var r=c.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&u.call(r)==h};const d=Array.isArray;function y(e){return"string"==typeof e&&e.length>0&&"."===e[0]?e.slice(1):e}function m(e,t){return function e(t,r,i,o){const a=n(t);let s,l,u,c,h;if((i=Object.assign({depth:-1,path:""},i)).depth+=1,d(a))for(s=0,l=a.length;s<l&&!o.now;s++){const t=`${i.path}.${s}`;void 0!==a[s]?(i.parent=n(a),i.parentType="array",u=e(r(a[s],void 0,Object.assign({},i,{path:y(t)}),o),r,Object.assign({},i,{path:y(t)}),o),Number.isNaN(u)&&s<a.length?(a.splice(s,1),s-=1):a[s]=u):a.splice(s,1)}else if(p(a))for(c=Object.keys(a),s=0,l=c.length;s<l&&!o.now;s++){h=c[s];const t=`${i.path}.${h}`;0===i.depth&&null!=h&&(i.topmostKey=h),i.parent=n(a),i.parentType="object",u=e(r(h,a[h],Object.assign({},i,{path:y(t)}),o),r,Object.assign({},i,{path:y(t)}),o),Number.isNaN(u)?delete a[h]:a[h]=u}return a}(e,t,{},{now:!1})}const w=/[|\\{}()[\]^$+*?.-]/g;var b=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(w,"\\$&")};const v=new Map;function _(e,t){t={caseSensitive:!1,...t};const r=e+JSON.stringify(t);if(v.has(r))return v.get(r);const n="!"===e[0];n&&(e=e.slice(1)),e=b(e).replace(/\\\*/g,".*");const i=new RegExp(`^${e}$`,t.caseSensitive?"":"i");return i.negated=n,v.set(r,i),i}var T=(e,t,r)=>{if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError(`Expected two arrays, got ${typeof e} ${typeof t}`);if(0===t.length)return e;const n="!"===t[0][0];t=t.map(e=>_(e,r));const i=[];for(const r of e){let e=n;for(const n of t)n.test(r)&&(e=!n.negated);e&&i.push(r)}return i};T.isMatch=(e,t,r)=>{const n=Array.isArray(e)?e:[e],i=Array.isArray(t)?t:[t];return n.some(e=>i.every(t=>{const n=_(t,r),i=n.test(e);return n.negated?!i:i}))};var O=r((function(e){e.exports=function(){var e=Object.prototype.toString;function t(e,t){return null!=e&&Object.prototype.hasOwnProperty.call(e,t)}function r(e){if(!e)return!0;if(i(e)&&0===e.length)return!0;if("string"!=typeof e){for(var r in e)if(t(e,r))return!1;return!0}return!1}function n(t){return e.call(t)}var i=Array.isArray||function(t){return"[object Array]"===e.call(t)};function o(e){var t=parseInt(e);return t.toString()===e?t:e}function a(e){e=e||{};var a=function(e){return Object.keys(a).reduce((function(t,r){return"create"===r?t:("function"==typeof a[r]&&(t[r]=a[r].bind(a,e)),t)}),{})};function s(r,n){return e.includeInheritedProps||"number"==typeof n&&Array.isArray(r)||t(r,n)}function l(e,t){if(s(e,t))return e[t]}function u(e,t,r,n){if("number"==typeof t&&(t=[t]),!t||0===t.length)return e;if("string"==typeof t)return u(e,t.split(".").map(o),r,n);var i=t[0],a=l(e,i);return 1===t.length?(void 0!==a&&n||(e[i]=r),a):(void 0===a&&("number"==typeof t[1]?e[i]=[]:e[i]={}),u(e[i],t.slice(1),r,n))}return a.has=function(r,n){if("number"==typeof n?n=[n]:"string"==typeof n&&(n=n.split(".")),!n||0===n.length)return!!r;for(var a=0;a<n.length;a++){var s=o(n[a]);if(!("number"==typeof s&&i(r)&&s<r.length||(e.includeInheritedProps?s in Object(r):t(r,s))))return!1;r=r[s]}return!0},a.ensureExists=function(e,t,r){return u(e,t,r,!0)},a.set=function(e,t,r,n){return u(e,t,r,n)},a.insert=function(e,t,r,n){var o=a.get(e,t);n=~~n,i(o)||(o=[],a.set(e,t,o)),o.splice(n,0,r)},a.empty=function(e,t){var o,l;if(!r(t)&&null!=e&&(o=a.get(e,t))){if("string"==typeof o)return a.set(e,t,"");if(function(e){return"boolean"==typeof e||"[object Boolean]"===n(e)}(o))return a.set(e,t,!1);if("number"==typeof o)return a.set(e,t,0);if(i(o))o.length=0;else{if(!function(e){return"object"==typeof e&&"[object Object]"===n(e)}(o))return a.set(e,t,null);for(l in o)s(o,l)&&delete o[l]}}},a.push=function(e,t){var r=a.get(e,t);i(r)||(r=[],a.set(e,t,r)),r.push.apply(r,Array.prototype.slice.call(arguments,2))},a.coalesce=function(e,t,r){for(var n,i=0,o=t.length;i<o;i++)if(void 0!==(n=a.get(e,t[i])))return n;return r},a.get=function(e,t,r){if("number"==typeof t&&(t=[t]),!t||0===t.length)return e;if(null==e)return r;if("string"==typeof t)return a.get(e,t.split("."),r);var n=o(t[0]),i=l(e,n);return void 0===i?r:1===t.length?i:a.get(e[n],t.slice(1),r)},a.del=function(e,t){if("number"==typeof t&&(t=[t]),null==e)return e;if(r(t))return e;if("string"==typeof t)return a.del(e,t.split("."));var n=o(t[0]);return s(e,n)?1!==t.length?a.del(e[n],t.slice(1)):(i(e)?e.splice(n,1):delete e[n],e):e},a}var s=a();return s.create=a,s.withInheritedProps=a({includeInheritedProps:!0}),s}()}));function W(e){return"string"==typeof e?e.length>0?[e]:[]:e}
/*!
   * is-natural-number-string | MIT (c) Shinnosuke Watanabe
   * https://github.com/shinnn/is-natural-number-string
  */var I=function(e,t){if("string"!=typeof e)return!1;if(t&&"includeZero"in t){if("boolean"!=typeof t.includeZero)throw new TypeError(String(t.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(t.includeZero)return/^(-?0|[1-9]\d*)(\.0+)?$/.test(e)}return/^[1-9]\d*(\.0+)?$/.test(e)};function A(e){if("string"==typeof e)return 0!==e.length&&(e.charCodeAt(0)>=55296&&e.charCodeAt(0)<=56319);if(void 0===e)return!1;throw new TypeError(`string-character-is-astral-surrogate/isHighSurrogate(): the input is not string but ${typeof e}`)}function $(e){if("string"==typeof e)return 0!==e.length&&(e.charCodeAt(0)>=56320&&e.charCodeAt(0)<=57343);if(void 0===e)return!1;throw new TypeError(`string-character-is-astral-surrogate/isLowSurrogate(): the input is not string but ${typeof e}`)}function j(e){return null!=e}function E(e){return"string"==typeof e&&(e.charCodeAt(0)>=55296&&e.charCodeAt(0)<=57343)}function S(e,t,r,n,i){const o="function"==typeof r?r():r;if(t>=e.length&&i&&"EOL"===o)return o;if(!(t<=e.length)){if(n.relaxedApi)return!1;throw new Error(`string-match-left-right/marchForward(): [THROW_ID_102] second argument, fromIndexInclusive is ${t} beyond the input string length, ${e.length}.`)}{let a=i?1:r.length;for(let i=t,o=e.length;i<o;i++){let t=e[i];if(A(e[i])&&$(e[i+1])&&(t=e[i]+e[i+1]),$(e[i])&&A(e[i-1])&&(t=e[i-1]+e[i]),n.trimBeforeMatching&&""===e[i].trim())continue;if(!n.i&&n.trimCharsBeforeMatching.includes(t)||n.i&&n.trimCharsBeforeMatching.map(e=>e.toLowerCase()).includes(t.toLowerCase())){2===t.length&&(i+=1);continue}let o=r[r.length-a];if(A(o)&&j(r[r.length-a+1])&&$(r[r.length-a+1])&&(o=r[r.length-a]+r[r.length-a+1]),!(!n.i&&t===o||n.i&&t.toLowerCase()===o.toLowerCase()))return!1;if(a-=t.length,a<1){let n=i-r.length+t.length;return n>=0&&$(e[n])&&j(e[n-1])&&A(e[n-1])&&(n-=1),n>=0?n:0}2===t.length&&A(e[i])&&(i+=1)}if(a>0)return!(!i||"EOL"!==o)}}function R(e,t,r,n,i){const o="function"==typeof r?r():r;if(t<0&&i&&"EOL"===o)return o;if(t>=e.length){if(n.relaxedApi)return!1;throw new Error(`string-match-left-right/marchBackward(): [THROW_ID_203] second argument, starting index, should not be beyond the last character of the input string! Currently the first argument's last character's index is ${e.length} but the second argument is beyond it:\n${JSON.stringify(t,null,4)}`)}let a=i?1:r.length;for(let o=t+1;o--;){if(n.trimBeforeMatching&&""===e[o].trim()){if(0===o&&i&&"EOL"===r)return!0;continue}let t=e[o];if($(e[o])&&A(e[o-1])?t=e[o-1]+e[o]:A(e[o])&&$(e[o+1])&&(t=e[o]+e[o+1]),!n.i&&n.trimCharsBeforeMatching.includes(t)||n.i&&n.trimCharsBeforeMatching.map(e=>e.toLowerCase()).includes(t.toLowerCase())){if(2===t.length&&(o-=1),i&&"EOL"===r&&0===o)return!0;continue}let s=r[a-1];if($(s)&&(s=`${r[a-2]}${r[a-1]}`,a-=1,o-=1),!(!n.i&&t===s||n.i&&t.toLowerCase()===s.toLowerCase()))return!1;if(a-=1,a<1)return o>=0?o:0}return a>0?!(!i||"EOL"!==o):void 0}function H(e,t,r,n,i){if("object"==typeof i&&null!==i&&Object.prototype.hasOwnProperty.call(i,"trimBeforeMatching")&&"boolean"!=typeof i.trimBeforeMatching)throw new Error(`string-match-left-right/${e}(): [THROW_ID_09] opts.trimBeforeMatching should be boolean!${Array.isArray(i.trimBeforeMatching)?" Did you mean to use opts.trimCharsBeforeMatching?":""}`);const o=Object.assign({},{i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],relaxedApi:!1},i);let a,s,l,u;if(o.trimCharsBeforeMatching=W(o.trimCharsBeforeMatching),o.trimCharsBeforeMatching=o.trimCharsBeforeMatching.map(e=>"string"==typeof e?e:String(e)),o.trimCharsBeforeMatching.some((e,t)=>e.length>1&&!E(e)&&(a=t,s=e,!0)))throw new Error(`string-match-left-right/${e}(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index ${a} is longer than 1 character, ${s.length} (equals to ${s}). Please split it into separate characters and put into array as separate elements.`);if("string"!=typeof t){if(o.relaxedApi)return!1;throw new Error(`string-match-left-right/${e}(): [THROW_ID_01] the first argument should be a string. Currently it's of a type: ${typeof t}, equal to:\n${JSON.stringify(t,null,4)}`)}if(0===t.length){if(o.relaxedApi)return!1;throw new Error(`string-match-left-right/${e}(): [THROW_ID_02] the first argument should be a non-empty string. Currently it's empty!`)}if(!(Number.isInteger(r)&&r>=0)){if(o.relaxedApi)return!1;throw new Error(`string-match-left-right/${e}(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`)}if("string"==typeof n)l=[n];else if(Array.isArray(n))l=n;else if(j(n)){if("function"!=typeof n)throw new Error(`string-match-left-right/${e}(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's ${typeof n}, equal to:\n${JSON.stringify(n,null,4)}`);l=[],l.push(n)}else l=n;if(j(i)&&"object"!=typeof i)throw new Error(`string-match-left-right/${e}(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type "${typeof i}", and equal to:\n${JSON.stringify(i,null,4)}`);if(!j(l)||!Array.isArray(l)||Array.isArray(l)&&!l.length||Array.isArray(l)&&1===l.length&&"string"==typeof l[0]&&0===l[0].trim().length){if("function"==typeof o.cb){let n,i=r;if("matchRight"===e&&A(t[r])&&$(t[r+1])&&(i+=1),"matchLeftIncl"!==e&&"matchRight"!==e||(i+=1),e.startsWith("matchLeft"))for(let e=i;e--;){if($(t[e])&&A(t[e-1]))continue;let r=t[e];if(A(t[e])&&$(t[e+1])&&(r=t[e]+t[e+1]),(!o.trimBeforeMatching||o.trimBeforeMatching&&void 0!==r&&""!==r.trim())&&(0===o.trimCharsBeforeMatching.length||void 0!==r&&!o.trimCharsBeforeMatching.includes(r))){n=e;break}$(t[e-1])&&A(t[e-2])&&(e-=1)}else if(e.startsWith("matchRight"))for(let e=i;e<t.length;e++){let r=t[e];if(A(t[e])&&$(t[e+1])&&(r=t[e]+t[e+1]),(!o.trimBeforeMatching||o.trimBeforeMatching&&""!==r.trim())&&(0===o.trimCharsBeforeMatching.length||!o.trimCharsBeforeMatching.includes(r))){n=e;break}A(t[e])&&$(t[e+1])&&(e+=1)}if(void 0===n)return!1;let a=t[n];A(t[n])&&$(t[n+1])&&(a=t[n]+t[n+1]),$(t[n])&&A(t[n-1])&&(a=t[n-1]+t[n],n-=1);let s,l=n+1;return A(t[n])&&$(t[n+1])&&(l+=1),l&&l>0&&(s=t.slice(0,l)),e.startsWith("matchLeft")?o.cb(a,s,n):(n&&n>0&&(s=t.slice(n)),o.cb(a,s,n))}let n="";throw j(i)||(n=" More so, the whole options object, the fourth input argument, is missing!"),new Error(`string-match-left-right/${e}(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!${n}`)}if(e.startsWith("matchLeft")){for(let n=0,i=l.length;n<i;n++){u="function"==typeof l[n];const i=l[n];let a,s,c="",h=r;"matchLeft"===e&&(E(t[n-1])&&E(t[n-2])?h-=2:h-=1);const f=R(t,h,i,o,u);if(f&&u&&"function"==typeof i&&"EOL"===i())return!(!i()||o.cb&&!o.cb(a,c,s))&&i();if(j(f)&&f>0&&(s=f-1,a=t[s],c=t.slice(0,f)),$(t[s])&&j(t[s-1])&&A(t[s-1])&&(s-=1,a=t[s-1]+t[s]),A(t[s])&&j(t[s+1])&&$(t[s+1])&&(a=t[s]+t[s+1],c=t.slice(0,s+2)),!1!==f&&(!o.cb||o.cb(a,c,s)))return i}return!1}for(let n=0,i=l.length;n<i;n++){u="function"==typeof l[n];const i=l[n];let a=r+("matchRight"===e?1:0);"matchRight"===e&&A(t[a-1])&&$(t[a])&&(a+=1);const s=S(t,a,i,o,u);if(s&&u&&"function"==typeof i&&"EOL"===i()){let e,t,r;return!(!i()||o.cb&&!o.cb(e,t,r))&&i()}let c,h,f;if(j(s)&&j(t[s+i.length-1])&&(c=s+i.length,h=t[c],A(t[c])&&$(t[c+1])&&(h=t[c]+t[c+1])),j(c)&&c>=0&&(f=t.slice(c)),!1!==s&&(!o.cb||o.cb(h,f,c)))return i}return!1}function D(e,t,r,n){return H("matchLeftIncl",e,t,r,n)}function N(e,t,r,n){return H("matchRightIncl",e,t,r,n)}function x(e){return"string"==typeof e}const C=Array.isArray;function B(e){throw new Error(`string-find-heads-tails: [THROW_ID_01*] Missing ${e}th parameter!`)}function M(e,t,r,n){if(null!=n){if("object"!=typeof n)throw new TypeError(`string-find-heads-tails: [THROW_ID_13] the fourth input argument, Optional Options Object, must be a plain object! Currently it's: ${typeof n}, equal to: ${n}`);I(n.fromIndex,{includeZero:!0})&&(n.fromIndex=Number(n.fromIndex))}const i={fromIndex:0,throwWhenSomethingWrongIsDetected:!0,allowWholeValueToBeOnlyHeadsOrTails:!0,source:"string-find-heads-tails",matchHeadsAndTailsStrictlyInPairsByTheirOrder:!1,relaxedAPI:!1};if((n=Object.assign({},i,n)).relaxedAPI||(void 0===e&&B(1),void 0===t&&B(2),void 0===r&&B(3)),!x(e)||0===e.length){if(n.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_02] the first input argument, input string, must be a non-zero-length string! Currently it's: ${typeof e}, equal to: ${e}`)}let o,a;if(!x(t)&&!C(t)){if(n.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_03] the second input argument, heads, must be either a string or an array of strings! Currently it's: ${typeof t}, equal to:\n${JSON.stringify(t,null,4)}`)}if(x(t)){if(0===t.length){if(n.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_04] the second input argument, heads, must be a non-empty string! Currently it's empty.")}t=W(t)}else if(C(t)){if(0===t.length){if(n.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_05] the second input argument, heads, must be a non-empty array and contain at least one string! Currently it's empty.")}if(t.every((e,t)=>(o=e,a=t,x(e)))){if(!t.every((e,t)=>(a=t,x(e)&&e.length>0&&""!==e.trim()))){if(!n.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_07] the second input argument, heads, should not contain empty strings! For example, there's one detected at index ${a} of heads array:\n${JSON.stringify(t,null,4)}.`);if(0===(t=t.filter(e=>x(e)&&e.length>0)).length)return[]}}else{if(!n.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_06] the second input argument, heads, contains non-string elements! For example, element at ${a}th index is ${typeof o}, equal to:\n${JSON.stringify(o,null,4)}. Whole heads array looks like:\n${JSON.stringify(t,null,4)}`);if(0===(t=t.filter(e=>x(e)&&e.length>0)).length)return[]}}if(!x(r)&&!C(r)){if(n.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_08] the third input argument, tails, must be either a string or an array of strings! Currently it's: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`)}if(x(r)){if(0===r.length){if(n.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_09] the third input argument, tails, must be a non-empty string! Currently it's empty.")}r=W(r)}else if(C(r)){if(0===r.length){if(n.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_10] the third input argument, tails, must be a non-empty array and contain at least one string! Currently it's empty.")}if(r.every((e,t)=>(o=e,a=t,x(e)))){if(!r.every((e,t)=>(a=t,x(e)&&e.length>0&&""!==e.trim()))){if(!n.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_12] the third input argument, tails, should not contain empty strings! For example, there's one detected at index ${a}. Whole tails array is equal to:\n${JSON.stringify(r,null,4)}`);if(0===(r=r.filter(e=>x(e)&&e.length>0)).length)return[]}}else{if(!n.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_11] the third input argument, tails, contains non-string elements! For example, element at ${a}th index is ${typeof o}, equal to:\n${JSON.stringify(o,null,4)}. Whole tails array is equal to:\n${JSON.stringify(r,null,4)}`);if(0===(r=r.filter(e=>x(e)&&e.length>0)).length)return[]}}const s=n.source===i.source;if(n.throwWhenSomethingWrongIsDetected&&!n.allowWholeValueToBeOnlyHeadsOrTails){if(W(t).includes(e))throw new Error(`${n.source}${s?": [THROW_ID_16]":""} the whole input string can't be equal to ${x(t)?"":"one of "}heads (${e})!`);if(W(r).includes(e))throw new Error(`${n.source}${s?": [THROW_ID_17]":""} the whole input string can't be equal to ${x(r)?"":"one of "}tails (${e})!`)}if(!(Number.isInteger(n.fromIndex)&&n.fromIndex>=0||I(n.fromIndex,{includeZero:!0})))throw new TypeError(`${n.source}${s?": [THROW_ID_18]":""} the fourth input argument must be a natural number! Currently it's: ${n.fromIndex}`);const l=t.concat(r).map(e=>e.charAt(0)).reduce((e,t)=>t.charCodeAt(0)>e[1]?[e[0],t.charCodeAt(0)]:t.charCodeAt(0)<e[0]?[t.charCodeAt(0),e[1]]:e,[t[0].charCodeAt(0),t[0].charCodeAt(0)]),u=[];let c,h=!1,f={},g=!1;for(let i=n.fromIndex,o=e.length;i<o;i++){const a=e[i].charCodeAt(0);if(a<=l[1]&&a>=l[0]){const a=N(e,i,t);if(a&&n.matchHeadsAndTailsStrictlyInPairsByTheirOrder)for(let e=t.length;e--;)if(t[e]===a){c=e;break}if(a){if(!h){f={},f.headsStartAt=i,f.headsEndAt=i+a.length,h=!0,i+=a.length-1,g&&(g=!1);continue}if(n.throwWhenSomethingWrongIsDetected)throw new TypeError(`${n.source}${s?": [THROW_ID_19]":""} When processing "${e}", we found heads (${e.slice(i,i+a.length)}) starting at character with index number "${i}" and there was another set of heads before it! Generally speaking, there should be "heads-tails-heads-tails", not "heads-heads-tails"!\nWe're talking about the area of the code:\n\n\n--------------------------------------starts\n${e.slice(Math.max(i-200,0),i)}\n      [33m-------\x3e[39m ${`[31m${e.slice(i,i+a.length)}[39m`} [33m<-------[39m\n${e.slice(i+a.length,Math.min(o,i+200))}\n--------------------------------------ends\n\n\nTo turn off this error being thrown, set opts.throwWhenSomethingWrongIsDetected to Boolean false.`)}const l=N(e,i,r);if(h&&l&&n.matchHeadsAndTailsStrictlyInPairsByTheirOrder&&void 0!==c&&void 0!==r[c]&&r[c]!==l){let i;for(let e=r.length;e--;)if(r[e]===l){i=e;break}throw new TypeError(`${n.source}${s?": [THROW_ID_20]":""} When processing "${e}", we had "opts.matchHeadsAndTailsStrictlyInPairsByTheirOrder" on. We found heads (${t[c]}) but the tails the followed it were not of the same index, ${c} (${r[c]}) but ${i} (${l}).`)}if(l){if(h){f.tailsStartAt=i,f.tailsEndAt=i+l.length,u.push(f),f={},h=!1,i+=l.length-1;continue}n.throwWhenSomethingWrongIsDetected&&(g=`${n.source}${s?": [THROW_ID_21]":""} When processing "${e}", we found tails (${e.slice(i,i+l.length)}) starting at character with index number "${i}" but there were no heads preceding it. That's very naughty!`)}}if(n.throwWhenSomethingWrongIsDetected&&i===o-1){if(0!==Object.keys(f).length)throw new TypeError(`${n.source}${s?": [THROW_ID_22]":""} When processing "${e}", we reached the end of the string and yet didn't find any tails (${JSON.stringify(r,null,4)}) to match the last detected heads (${e.slice(f.headsStartAt,f.headsEndAt)})!`);if(g)throw new Error(g)}}return u}const k=Array.isArray;function J(e){return null!=e}function F(e,t,r){if(!J(e))throw new Error("ast-get-values-by-key: [THROW_ID_01] the first argument is missing!");if(!J(t))throw new Error("ast-get-values-by-key: [THROW_ID_02] the second argument is missing!");if(k(t)){let e,r;if(t.length&&t.some((t,n)=>!function(e){return"string"==typeof e}(t)&&(e=n,r=t,!0)))throw new Error(`ast-get-values-by-key: [THROW_ID_03] the second argument is array of values and not all of them are strings! For example, at index ${e}, we have a value ${JSON.stringify(r,null,0)} which is not string but ${typeof r}!`)}else if("string"!=typeof t)throw new Error(`ast-get-values-by-key: [THROW_ID_04] the second argument must be string! Currently it's of a type "${typeof t}", equal to:\n${JSON.stringify(t,null,4)}`);let i;J(r)&&(i="string"==typeof r?[r]:n(r));const o=[],a=m(e,(e,r,n)=>{const a=void 0!==r?r:e;if(void 0!==r&&T.isMatch(e,t,{caseSensitive:!0}))if(void 0===i)o.push({val:r,path:n.path});else if(i.length>0)return i.shift();return a});return void 0===i?o:a}const P=" ";function q(e,t=!0,r){if(!(r.trim().length||e.length&&"\n"!==r&&r!==P&&" "===(t?e[e.length-1]:e[0])||e.length&&"\n"===(t?e[e.length-1]:e[0])&&"\n"!==r&&r!==P))if(t){if(("\n"===r||r===P)&&e.length&&" "===e[e.length-1])for(;e.length&&" "===e[e.length-1];)e.pop();e.push(r===P||"\n"===r?r:" ")}else{if(("\n"===r||r===P)&&e.length&&" "===e[0])for(;e.length&&" "===e[0];)e.shift();e.unshift(r===P||"\n"===r?r:" ")}}function V(e,t){if("string"==typeof e&&e.length){let r,n,i=!1;if(e.includes("\r\n")&&(i=!0),r=t&&"number"==typeof t?t:1,""===e.trim()){const t=[];for(n=r,Array.from(e).forEach(e=>{("\n"!==e||n)&&("\n"===e&&n--,q(t,!0,e))});t.length>1&&" "===t[t.length-1];)t.pop();return t.join("")}const o=[];if(n=r,""===e[0].trim())for(let t=0,r=e.length;t<r&&0===e[t].trim().length;t++)("\n"!==e[t]||n)&&("\n"===e[t]&&n--,q(o,!0,e[t]));const a=[];if(n=r,""===e.slice(-1).trim())for(let t=e.length;t--&&0===e[t].trim().length;)("\n"!==e[t]||n)&&("\n"===e[t]&&n--,q(a,!1,e[t]));return i?`${o.join("")}${e.trim()}${a.join("")}`.replace(/\n/g,"\r\n"):o.join("")+e.trim()+a.join("")}return e}
/*!
   * is-natural-number.js | MIT (c) Shinnosuke Watanabe
   * https://github.com/shinnn/is-natural-number.js
  */var L=function(e,t){if(t){if("object"!=typeof t)throw new TypeError(String(t)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in t){if("boolean"!=typeof t.includeZero)throw new TypeError(String(t.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(t.includeZero&&0===e)return!0}}return Number.isSafeInteger(e)&&e>=1};const Z=Array.isArray;function z(e,t){if(!Z(e))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(0===e.length)return e;const r=Object.assign({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null},t);let n,i;if(r.strictlyTwoElementsInRangeArrays&&!e.every((e,t)=>2===e.length||(n=t,i=e.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${n}th range (${JSON.stringify(e[n],null,4)}) has not two but ${i} elements!`);if(!e.every((e,t)=>!(!L(e[0],{includeZero:!0})||!L(e[1],{includeZero:!0}))||(n=t,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${n}th range (${JSON.stringify(e[n],null,4)}) does not consist of only natural numbers!`);const o=e.length*e.length;let a=0;return Array.from(e).sort((e,t)=>(r.progressFn&&(a++,r.progressFn(Math.floor(100*a/o))),e[0]===t[0]?e[1]<t[1]?-1:e[1]>t[1]?1:0:e[0]<t[0]?-1:1))}function U(e,t){function r(e){return"string"==typeof e}if(!Array.isArray(e))return e;const i={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let o;if(t){if(!p(t))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(t,null,4)} (type ${typeof t})`);if(o=Object.assign({},i,t),o.progressFn&&p(o.progressFn)&&!Object.keys(o.progressFn).length)o.progressFn=null;else if(o.progressFn&&"function"!=typeof o.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof o.progressFn}", equal to ${JSON.stringify(o.progressFn,null,4)}`);if(o.mergeType&&1!==o.mergeType&&2!==o.mergeType)if(r(o.mergeType)&&"1"===o.mergeType.trim())o.mergeType=1;else{if(!r(o.mergeType)||"2"!==o.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof o.mergeType}", equal to ${JSON.stringify(o.mergeType,null,4)}`);o.mergeType=2}if("boolean"!=typeof o.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof o.joinRangesThatTouchEdges}", equal to ${JSON.stringify(o.joinRangesThatTouchEdges,null,4)}`)}else o=n(i);const a=n(e).filter(e=>void 0!==e[2]||e[0]!==e[1]);let s,l,u;s=o.progressFn?z(a,{progressFn:e=>{u=Math.floor(e/5),u!==l&&(l=u,o.progressFn(u))}}):z(a);const c=s.length-1;for(let e=c;e>0;e--)o.progressFn&&(u=Math.floor(78*(1-e/c))+21,u!==l&&u>l&&(l=u,o.progressFn(u))),(s[e][0]<=s[e-1][0]||!o.joinRangesThatTouchEdges&&s[e][0]<s[e-1][1]||o.joinRangesThatTouchEdges&&s[e][0]<=s[e-1][1])&&(s[e-1][0]=Math.min(s[e][0],s[e-1][0]),s[e-1][1]=Math.max(s[e][1],s[e-1][1]),void 0!==s[e][2]&&(s[e-1][0]>=s[e][0]||s[e-1][1]<=s[e][1])&&null!==s[e-1][2]&&(null===s[e][2]&&null!==s[e-1][2]?s[e-1][2]=null:void 0!==s[e-1][2]?2===o.mergeType&&s[e-1][0]===s[e][0]?s[e-1][2]=s[e][2]:s[e-1][2]+=s[e][2]:s[e-1][2]=s[e][2]),s.splice(e,1),e=s.length);return s}function G(e){return null!=e}const K=Array.isArray,Q=Number.isInteger;function X(e){return"string"==typeof e}function Y(e){return I(e,{includeZero:!0})?parseInt(e,10):e}class ee{constructor(e){const t=Object.assign({},{limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1},e);if(t.mergeType&&1!==t.mergeType&&2!==t.mergeType)if(X(t.mergeType)&&"1"===t.mergeType.trim())t.mergeType=1;else{if(!X(t.mergeType)||"2"!==t.mergeType.trim())throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof t.mergeType}", equal to ${JSON.stringify(t.mergeType,null,4)}`);t.mergeType=2}this.opts=t}add(e,t,r,...n){if(n.length>0)throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_03] Please don't overload the add() method. From the 4th input argument onwards we see these redundant arguments: ${JSON.stringify(n,null,4)}`);if(!G(e)&&!G(t))return;if(G(e)&&!G(t)){if(K(e)){if(e.length){if(e.some(e=>K(e)))return void e.forEach(e=>{K(e)&&this.add(...e)});e.length>1&&Q(Y(e[0]))&&Q(Y(e[1]))&&this.add(...e)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(e,null,0)}) but second-one, "to" is not (${JSON.stringify(t,null,0)})`)}if(!G(e)&&G(t))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(t,null,0)}) but first-one, "from" is not (${JSON.stringify(e,null,0)})`);const i=I(e,{includeZero:!0})?parseInt(e,10):e,o=I(t,{includeZero:!0})?parseInt(t,10):t;if(Q(r)&&(r=String(r)),!Q(i)||!Q(o))throw Q(i)&&i>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof o}" equal to: ${JSON.stringify(o,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof i}" equal to: ${JSON.stringify(i,null,4)}`);if(G(r)&&!X(r)&&!Q(r))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`);if(G(this.slices)&&K(this.last())&&i===this.last()[1]){if(this.last()[1]=o,this.last()[2],null!==this.last()[2]&&G(r)){let e=!(G(this.last()[2])&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&1!==this.opts.mergeType?r:this.last()[2]+r;this.opts.limitToBeAddedWhitespace&&(e=V(e,this.opts.limitLinebreaksCount)),X(e)&&!e.length||(this.last()[2]=e)}}else{this.slices||(this.slices=[]);const e=void 0===r||X(r)&&!r.length?[i,o]:[i,o,this.opts.limitToBeAddedWhitespace?V(r,this.opts.limitLinebreaksCount):r];this.slices.push(e)}}push(e,t,r,...n){this.add(e,t,r,...n)}current(){return null!=this.slices?(this.slices=U(this.slices,{mergeType:this.opts.mergeType}),this.opts.limitToBeAddedWhitespace?this.slices.map(e=>G(e[2])?[e[0],e[1],V(e[2],this.opts.limitLinebreaksCount)]:e):this.slices):null}wipe(){this.slices=void 0}replace(e){if(K(e)&&e.length){if(!K(e[0])||!Q(e[0][0]))throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(e[0],null,4)} should be an array and its first element should be an integer, a string index.`);this.slices=n(e)}else this.slices=void 0}last(){return void 0!==this.slices&&Array.isArray(this.slices)?this.slices[this.slices.length-1]:null}}const te=Array.isArray;function re(e,t,r){let n=0,i=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if("string"!=typeof e)throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(null===t)return e;if(!te(t))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(r&&"function"!=typeof r)throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);te(t)&&(Number.isInteger(t[0],{includeZero:!0})||I(t[0],{includeZero:!0}))&&(Number.isInteger(t[1],{includeZero:!0})||I(t[1],{includeZero:!0}))&&(t=[t]);const o=t.length;let a=0;t.forEach((e,s)=>{if(r&&(n=Math.floor(a/o*10),n!==i&&(i=n,r(n))),!te(e))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${s}th element not an array: ${JSON.stringify(e,null,4)}, which is ${typeof e}`);if(!Number.isInteger(e[0],{includeZero:!0})){if(!I(e[0],{includeZero:!0}))throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${s}th element, array [${e[0]},${e[1]}]. That array has first element not an integer, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0],null,4)}. Computer doesn't like this.`);t[s][0]=Number.parseInt(t[s][0],10)}if(!Number.isInteger(e[1],{includeZero:!0})){if(!I(e[1],{includeZero:!0}))throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${s}th element, array [${e[0]},${e[1]}]. That array has second element not an integer, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1],null,4)}. Computer doesn't like this.`);t[s][1]=Number.parseInt(t[s][1],10)}a++});const s=U(t,{progressFn:e=>{r&&(n=10+Math.floor(e/10),n!==i&&(i=n,r(n)))}}),l=s.length;if(l>0){const t=e.slice(s[l-1][1]);e=s.reduce((t,o,a,s)=>{r&&(n=20+Math.floor(a/l*80),n!==i&&(i=n,r(n)));const u=0===a?0:s[a-1][1],c=s[a][0];return t+e.slice(u,c)+(function(e){return null!=e}(s[a][2])?s[a][2]:"")},""),e+=t}return e}function ne(e,t){if("string"!=typeof e)throw new Error(`string-trim-spaces-only: [THROW_ID_01] input must be string! It was given as ${typeof e}, equal to:\n${JSON.stringify(e,null,4)}`);const r=Object.assign({},{classicTrim:!1,cr:!1,lf:!1,tab:!1,space:!0,nbsp:!1},t);function n(e){return r.classicTrim&&0===e.trim().length||!r.classicTrim&&(r.space&&" "===e||r.cr&&"\r"===e||r.lf&&"\n"===e||r.tab&&"\t"===e||r.nbsp&&" "===e)}let i,o;if(e.length>0){if(n(e[0]))for(let t=0,r=e.length;t<r;t++){if(!n(e[t])){i=t;break}if(t===e.length-1)return{res:"",ranges:[[0,e.length]]}}if(n(e[e.length-1]))for(let t=e.length;t--;)if(!n(e[t])){o=t+1;break}return i?o?{res:e.slice(i,o),ranges:[[0,i],[o,e.length]]}:{res:e.slice(i),ranges:[[0,i]]}:o?{res:e.slice(0,o),ranges:[[o,e.length]]}:{res:e,ranges:[]}}return{res:"",ranges:[]}}var ie=Array.isArray,oe=Object.prototype.hasOwnProperty;function ae(e){return"string"==typeof e}function se(e){return"boolean"==typeof e}function le(e){return null===e}function ue(e){return ae(e)?e.trim():e}function ce(e){if("string"==typeof e&&e.length>0&&-1!==e.indexOf("."))for(var t=0,r=e.length;t<r;t++)if("."===e[t])return e.slice(t+1);return e}function he(e){if("string"==typeof e&&e.length>0&&-1!==e.indexOf("."))for(var t=e.length;t--;)if("."===e[t])return e.slice(0,t);return e}function fe(e){if("string"==typeof e&&e.length>0&&-1!==e.indexOf("."))for(var t=e.length;t--;)if("."===e[t])return e.slice(t+1);return e}function ge(e,t){return"string"==typeof e&&0!==e.trim().length&&!!(e.includes(t.heads)||e.includes(t.tails)||ae(t.headsNoWrap)&&t.headsNoWrap.length>0&&e.includes(t.headsNoWrap)||ae(t.tailsNoWrap)&&t.tailsNoWrap.length>0&&e.includes(t.tailsNoWrap))}function pe(e,t){var r,n,i,o,a,s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=arguments.length>5?arguments[5]:void 0;if(t.wrapHeadsWith||(t.wrapHeadsWith=""),t.wrapTailsWith||(t.wrapTailsWith=""),ae(e)&&!s&&t.wrapGlobalFlipSwitch&&!t.dontWrapVars.some((function(e){return T.isMatch(l,e)}))&&(!t.preventDoubleWrapping||t.preventDoubleWrapping&&ae(e)&&!e.includes(t.wrapHeadsWith)&&!e.includes(t.wrapTailsWith)))return t.wrapHeadsWith+e+t.wrapTailsWith;if(s){if(!ae(e))return e;var u=function(e,t={}){function r(e){return null!=e}const n=Object.prototype.hasOwnProperty;function i(e){return"string"==typeof e}if(void 0===e)throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_01] The input is missing!");if("string"!=typeof e)return e;if(r(t)&&!p(t))throw new Error(`string-remove-duplicate-heads-tails: [THROW_ID_03] The given options are not a plain object but ${typeof t}!`);if(r(t)&&n.call(t,"heads")){if(!W(t.heads).every(e=>i(e)))throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_04] The opts.heads contains elements which are not string-type!");i(t.heads)&&(t.heads=W(t.heads))}if(r(t)&&n.call(t,"tails")){if(!W(t.tails).every(e=>i(e)))throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_05] The opts.tails contains elements which are not string-type!");i(t.tails)&&(t.tails=W(t.tails))}const o=ne(e).res;if(0===o.length)return e;e=o;const a=Object.assign({},{heads:["{{"],tails:["}}"]},t);a.heads=a.heads.map(e=>e.trim()),a.tails=a.tails.map(e=>e.trim());let s=!1,l=!1;const u=new ee({limitToBeAddedWhitespace:!0}),c=new ee({limitToBeAddedWhitespace:!0});let h=!0,f=!0,g="";function d(e,t){let r;return N(e,0,t.heads,{trimBeforeMatching:!0,cb:(e,t,n)=>(r=n,!0),relaxedApi:!0})&&N(e,r,t.tails,{trimBeforeMatching:!0,cb:(e,t,n)=>(r=n,!0),relaxedApi:!0})?e.slice(r):e}for(;e!==d(e,a);)e=ne(d(e,a)).res;function y(e,t){let r;return D(e,e.length-1,t.tails,{trimBeforeMatching:!0,cb:(e,t,n)=>(r=n,!0),relaxedApi:!0})&&D(e,r,t.heads,{trimBeforeMatching:!0,cb:(e,t,n)=>(r=n,!0),relaxedApi:!0})?e.slice(0,r+1):e}for(;e!==y(e,a);)e=ne(y(e,a)).res;if(!(a.heads.length&&N(e,0,a.heads,{trimBeforeMatching:!0,relaxedApi:!0})&&a.tails.length&&D(e,e.length-1,a.tails,{trimBeforeMatching:!0,relaxedApi:!0})))return ne(e).res;for(let t=0,n=e.length;t<n;t++)if(""===e[t].trim());else{let n;if(N(e,t,a.heads,{trimBeforeMatching:!0,cb:(e,t,r)=>(n=r,!0),relaxedApi:!0})){let r;f=!0,h&&(h=!0),N(e,n,a.tails,{trimBeforeMatching:!0,cb:(e,t,n)=>(r=n,!0),relaxedApi:!0})&&u.push(t,r),c.current()&&s&&"tails"!==g&&u.push(c.current()),s?c.push(t,n):(c.current()&&(u.push(c.current()),c.wipe()),c.push(t,n)),g="heads",t=n-1;continue}if(N(e,t,a.tails,{trimBeforeMatching:!0,cb:(t,i,o)=>(n=r(o)?o:e.length,!0),relaxedApi:!0})){f=!0,h?("heads"===g&&c.wipe(),h=!1):c.push(t,n),g="tails",t=n-1;continue}h&&(h=!0),f&&!s?(s=!0,f=!1):f&&!l?(l=!0,h=!0,f=!1,"heads"===g&&c.wipe()):f&&l&&c.wipe()}return c.current()&&u.push(c.current()),u.current()?re(e,u.current()).trim():e.trim()}(e,{heads:t.wrapHeadsWith,tails:t.wrapTailsWith});return ae(u)?(r=u,n=t.wrapHeadsWith,i=t.wrapTailsWith,"string"==typeof r&&r.length>0&&N(r,0,n,{trimBeforeMatching:!0,cb:function(e,t,r){return o=r,!0}})&&D(r,r.length-1,i,{trimBeforeMatching:!0,cb:function(e,t,r){return a=r+1,!0}})?r.slice(o,a):r):u}return e}function de(e,t,r,n){var i;if(-1!==r.indexOf(".")){var o=r,a=!0;if(n.lookForDataContainers&&"string"==typeof n.dataContainerIdentifierTails&&n.dataContainerIdentifierTails.length>0&&!o.endsWith(n.dataContainerIdentifierTails)){var s=O.get(e,o+n.dataContainerIdentifierTails);p(s)&&O.get(s,t)&&(i=O.get(s,t),a=!1)}for(;a&&-1!==o.indexOf(".");){if(fe(o=he(o))===t)throw new Error('json-variables/findValues(): [THROW_ID_20] While trying to resolve: "'.concat(t,'" at path "').concat(r,'", we encountered a closed loop. The parent key "').concat(fe(o),'" is called the same as the variable "').concat(t,"\" we're looking for."));if(n.lookForDataContainers&&"string"==typeof n.dataContainerIdentifierTails&&n.dataContainerIdentifierTails.length>0&&!o.endsWith(n.dataContainerIdentifierTails)){var l=O.get(e,o+n.dataContainerIdentifierTails);p(l)&&O.get(l,t)&&(i=O.get(l,t),a=!1)}if(void 0===i){var u=O.get(e,o);p(u)&&O.get(u,t)&&(i=O.get(u,t),a=!1)}}}if(void 0===i){var c=O.get(e,t);void 0!==c&&(i=c)}if(void 0===i)if(-1===t.indexOf(".")){var h=F(e,t);if(h.length>0)for(var f=0,g=h.length;f<g;f++){if(ae(h[f].val)||se(h[f].val)||le(h[f].val)){i=h[f].val;break}if("number"==typeof h[f].val){i=String(h[f].val);break}if(ie(h[f].val)){i=h[f].val.join("");break}throw new Error('json-variables/findValues(): [THROW_ID_21] While trying to resolve: "'.concat(t,'" at path "').concat(r,'", we actually found the key named ').concat(t,", but it was not equal to a string but to:\n").concat(JSON.stringify(h[f],null,4),"\nWe can't resolve a string with that! It should be a string."))}}else{var d=F(e,function(e){if("string"==typeof e&&e.length>0&&-1!==e.indexOf("."))for(var t=0,r=e.length;t<r;t++)if("."===e[t])return e.slice(0,t);return e}(t));if(d.length>0)for(var y=0,m=d.length;y<m;y++){var w=O.get(d[y].val,ce(t));w&&ae(w)&&(i=w)}}return i}return function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(0===arguments.length)throw new Error("json-variables/jsonVariables(): [THROW_ID_01] Alas! Inputs are missing!");if(!p(t))throw new TypeError("json-variables/jsonVariables(): [THROW_ID_02] Alas! The input must be a plain object! Currently it's: ".concat(Array.isArray(t)?"array":e(t)));if(!p(r))throw new TypeError("json-variables/jsonVariables(): [THROW_ID_03] Alas! An Optional Options Object must be a plain object! Currently it's: ".concat(Array.isArray(r)?"array":e(r)));var i,o,a,s=n(t),l=Object.assign({},{heads:"%%_",tails:"_%%",headsNoWrap:"%%-",tailsNoWrap:"-%%",lookForDataContainers:!0,dataContainerIdentifierTails:"_data",wrapHeadsWith:"",wrapTailsWith:"",dontWrapVars:[],preventDoubleWrapping:!0,wrapGlobalFlipSwitch:!0,noSingleMarkers:!1,resolveToBoolIfAnyValuesContainBool:!0,resolveToFalseIfAnyValuesContainBool:!0,throwWhenNonStringInsertedInString:!1},r);if(l.dontWrapVars?ie(l.dontWrapVars)||(l.dontWrapVars=W(l.dontWrapVars)):l.dontWrapVars=[],l.dontWrapVars.length>0&&!l.dontWrapVars.every((function(e,t){return!!ae(e)||(i=e,o=t,!1)})))throw new Error('json-variables/jsonVariables(): [THROW_ID_05] Alas! All variable names set in opts.dontWrapVars should be of a string type. Computer detected a value "'.concat(i,'" at index ').concat(o,", which is not string but ").concat(Array.isArray(i)?"array":e(i),"!"));if(""===l.heads)throw new Error("json-variables/jsonVariables(): [THROW_ID_06] Alas! opts.heads are empty!");if(""===l.tails)throw new Error("json-variables/jsonVariables(): [THROW_ID_07] Alas! opts.tails are empty!");if(l.lookForDataContainers&&""===l.dataContainerIdentifierTails)throw new Error("json-variables/jsonVariables(): [THROW_ID_08] Alas! opts.dataContainerIdentifierTails is empty!");if(l.heads===l.tails)throw new Error("json-variables/jsonVariables(): [THROW_ID_09] Alas! opts.heads and opts.tails can't be equal!");if(l.heads===l.headsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_10] Alas! opts.heads and opts.headsNoWrap can't be equal!");if(l.tails===l.tailsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_11] Alas! opts.tails and opts.tailsNoWrap can't be equal!");if(""===l.headsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_12] Alas! opts.headsNoWrap is an empty string!");if(""===l.tailsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_13] Alas! opts.tailsNoWrap is an empty string!");if(l.headsNoWrap===l.tailsNoWrap)throw new Error("json-variables/jsonVariables(): [THROW_ID_14] Alas! opts.headsNoWrap and opts.tailsNoWrap can't be equal!");return m(s,(function(e,t,r){if(null!=t&&ge(e,l))throw new Error("json-variables/jsonVariables(): [THROW_ID_15] Alas! Object keys can't contain variables!\nPlease check the following key: ".concat(e));if(""===(a=void 0!==t?t:e))return a;if(0!==l.heads.length&&ue(a)===ue(l.heads)||0!==l.tails.length&&ue(a)===ue(l.tails)||0!==l.headsNoWrap.length&&ue(a)===ue(l.headsNoWrap)||0!==l.tailsNoWrap.length&&ue(a)===ue(l.tailsNoWrap)){if(!l.noSingleMarkers)return a;throw new Error("json-variables/jsonVariables(): [THROW_ID_16] Alas! While processing the input, we stumbled upon ".concat(ue(a)," which is equal to ").concat(ue(a)===ue(l.heads)?"heads":"").concat(ue(a)===ue(l.tails)?"tails":"").concat(ae(l.headsNoWrap)&&ue(a)===ue(l.headsNoWrap)?"headsNoWrap":"").concat(ae(l.tailsNoWrap)&&ue(a)===ue(l.tailsNoWrap)?"tailsNoWrap":"",'. If you wouldn\'t have set opts.noSingleMarkers to "true" this error would not happen and computer would have left the current element (').concat(ue(a),") alone"))}return ae(a)&&ge(a,l)?function e(t,r,i,o){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(a.includes(i)){var s="";if(a.length>1){s=a.reduce((function(e,t,r){return e+(0===r?"":" →\n")+(t===i?"💥 ":"  ")+t})," Here's the path we travelled up until we hit the recursion:\n\n"),s+="".concat(" →\n","💥 ").concat(i)}throw new Error('json-variables/resolveString(): [THROW_ID_19] While trying to resolve: "'.concat(r,'" at path "').concat(i,'", we encountered a closed loop, the key is referencing itself."').concat(s))}var l={},u=n(a);u.push(i);var c,h=new ee;function f(n,a,s){for(var c=0,f=n.length;c<f;c++){var g=n[c],p=r.slice(g.headsEndAt,g.tailsStartAt);if(0===p.length)h.push(g.headsStartAt,g.tailsEndAt);else if(oe.call(l,p)&&ae(l[p]))h.push(g.headsStartAt,g.tailsEndAt,l[p]);else{var d=de(t,p.trim(),i,o);if(void 0===d)throw new Error("json-variables/processHeadsAndTails(): [THROW_ID_18] We couldn't find the value to resolve the variable ".concat(r.slice(g.headsEndAt,g.tailsStartAt),". We're at path: \"").concat(i,'".'));if(!s&&o.throwWhenNonStringInsertedInString&&!ae(d))throw new Error("json-variables/processHeadsAndTails(): [THROW_ID_23] While resolving the variable ".concat(r.slice(g.headsEndAt,g.tailsStartAt)," at path ").concat(i,", it resolved into a non-string value, ").concat(JSON.stringify(d,null,4),'. This is happening because options setting "throwWhenNonStringInsertedInString" is active (set to "true").'));if(se(d)){if(o.resolveToBoolIfAnyValuesContainBool)return h=void 0,!o.resolveToFalseIfAnyValuesContainBool&&d;d=""}else{if(le(d)&&s)return h=void 0,d;d=ie(d)?String(d.join("")):le(d)?"":String(d)}var y=i.includes(".")?"".concat(he(i),".").concat(p):p;if(ge(d,o)){var m=pe(e(t,d,y,o,u),o,a,u,y,p.trim());ae(m)&&h.push(g.headsStartAt,g.tailsEndAt,m)}else{l[p]=d;var w=pe(d,o,a,u,y,p.trim());ae(w)&&h.push(g.headsStartAt,g.tailsEndAt,w)}}}}try{c=M(r,o.heads,o.tails,{source:"",throwWhenSomethingWrongIsDetected:!1})}catch(e){throw new Error('json-variables/resolveString(): [THROW_ID_17] While trying to resolve string: "'.concat(r,'" at path ').concat(i,", something wrong with heads and tails was detected! Here's the internal error message:\n").concat(e))}var g=!1;1===c.length&&""===re(r,[c[0].headsStartAt,c[0].tailsEndAt]).trim()&&(g=!0);var p=f(c,!1,g);if(se(p))return p;if(le(p))return p;try{c=M(r,o.headsNoWrap,o.tailsNoWrap,{source:"",throwWhenSomethingWrongIsDetected:!1})}catch(e){throw new Error('json-variables/resolveString(): [THROW_ID_22] While trying to resolve string: "'.concat(r,'" at path ').concat(i,", something wrong with no-wrap heads and no-wrap tails was detected! Here's the internal error message:\n").concat(e))}1===c.length&&""===re(r,[c[0].headsStartAt,c[0].tailsEndAt]).trim()&&(g=!0);var d=f(c,!0,g);return se(d)?d:le(d)?d:h&&h.current()?re(r,h.current()):r}(s,a,r.path,l):a}))}}));
