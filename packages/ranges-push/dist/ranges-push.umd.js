/**
 * ranges-push
 * Manage the array of ranges referencing the index ranges within the string
 * Version: 3.7.14
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/ranges-push
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).rangesPush=t()}(this,(function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function t(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function r(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e){return function(e){if(Array.isArray(e))return s(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return s(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return s(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments.length>2?arguments[2]:void 0;if(!(r.trim()||e.length&&"\n"!==r&&" "!==r&&" "===(t?e[e.length-1]:e[0])||e.length&&"\n"===(t?e[e.length-1]:e[0])&&"\n"!==r&&" "!==r))if(t){if(("\n"===r||" "===r)&&e.length&&" "===e[e.length-1])for(;e.length&&" "===e[e.length-1];)e.pop();e.push(" "===r||"\n"===r?r:" ")}else{if(("\n"===r||" "===r)&&e.length&&" "===e[0])for(;e.length&&" "===e[0];)e.shift();e.unshift(" "===r||"\n"===r?r:" ")}}function u(e,t){if("string"==typeof e&&e.length){var r,n,i=!1;if(e.includes("\r\n")&&(i=!0),r=t&&"number"==typeof t?t:1,""===e.trim()){var o=[];for(n=r,Array.from(e).forEach((function(e){("\n"!==e||n)&&("\n"===e&&(n-=1),a(o,!0,e))}));o.length>1&&" "===o[o.length-1];)o.pop();return o.join("")}var s=[];if(n=r,""===e[0].trim())for(var u=0,l=e.length;u<l&&!e[u].trim();u++)("\n"!==e[u]||n)&&("\n"===e[u]&&(n-=1),a(s,!0,e[u]));var c=[];if(n=r,""===e.slice(-1).trim())for(var g=e.length;g--&&!e[g].trim();)("\n"!==e[g]||n)&&("\n"===e[g]&&(n-=1),a(c,!1,e[g]));return i?"".concat(s.join("")).concat(e.trim()).concat(c.join("")).replace(/\n/g,"\r\n"):s.join("")+e.trim()+c.join("")}return e}function l(e,t){if(!Array.isArray(e)||!e.length)return e;var r,n,o=i(i({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null}),t);if(o.strictlyTwoElementsInRangeArrays&&!e.every((function(e,t){return 2===e.length||(r=t,n=e.length,!1)})))throw new TypeError("ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ".concat(r,"th range (").concat(JSON.stringify(e[r],null,4),") has not two but ").concat(n," elements!"));if(!e.every((function(e,t){return!(!Number.isInteger(e[0])||e[0]<0||!Number.isInteger(e[1])||e[1]<0)||(r=t,!1)})))throw new TypeError("ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ".concat(r,"th range (").concat(JSON.stringify(e[r],null,4),") does not consist of only natural numbers!"));var s=e.length*e.length,a=0;return Array.from(e).sort((function(e,t){return o.progressFn&&(a+=1,o.progressFn(Math.floor(100*a/s))),e[0]===t[0]?e[1]<t[1]?-1:e[1]>t[1]?1:0:e[0]<t[0]?-1:1}))}function c(e){return null!=e}function g(e){return Number.isInteger(e)&&e>=0}function f(e){return"string"==typeof e}function h(e){return/^\d*$/.test(e)?parseInt(e,10):e}return function(){function r(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r);var n=i(i({},{limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1}),t);if(n.mergeType&&1!==n.mergeType&&2!==n.mergeType)if(f(n.mergeType)&&"1"===n.mergeType.trim())n.mergeType=1;else{if(!f(n.mergeType)||"2"!==n.mergeType.trim())throw new Error('ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "'.concat(e(n.mergeType),'", equal to ').concat(JSON.stringify(n.mergeType,null,4)));n.mergeType=2}this.opts=n}var n,s,a;return n=r,(s=[{key:"add",value:function(t,r,n){for(var i=this,s=arguments.length,a=new Array(s>3?s-3:0),l=3;l<s;l++)a[l-3]=arguments[l];if(a.length>0)throw new TypeError("ranges-push/Ranges/add(): [THROW_ID_03] Please don't overload the add() method. From the 4th input argument onwards we see these redundant arguments: ".concat(JSON.stringify(a,null,4)));if(c(t)||c(r)){if(c(t)&&!c(r)){if(Array.isArray(t)){if(t.length){if(t.some((function(e){return Array.isArray(e)})))return void t.forEach((function(e){Array.isArray(e)&&i.add.apply(i,o(e))}));t.length>1&&g(h(t[0]))&&g(h(t[1]))&&this.add.apply(this,o(t))}return}throw new TypeError('ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set ('.concat(JSON.stringify(t,null,0),') but second-one, "to" is not (').concat(JSON.stringify(r,null,0),")"))}if(!c(t)&&c(r))throw new TypeError('ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set ('.concat(JSON.stringify(r,null,0),') but first-one, "from" is not (').concat(JSON.stringify(t,null,0),")"));var p=/^\d*$/.test(t)?parseInt(t,10):t,y=/^\d*$/.test(r)?parseInt(r,10):r;if(g(n)&&(n=String(n)),!g(p)||!g(y))throw g(p)&&p>=0?new TypeError('ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it\'s of a type "'.concat(e(y),'" equal to: ').concat(JSON.stringify(y,null,4))):new TypeError('ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it\'s of a type "'.concat(e(p),'" equal to: ').concat(JSON.stringify(p,null,4)));if(c(n)&&!f(n)&&!g(n))throw new TypeError("ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ".concat(e(n),", equal to:\n").concat(JSON.stringify(n,null,4)));if(c(this.slices)&&Array.isArray(this.last())&&p===this.last()[1]){if(this.last()[1]=y,this.last()[2],null!==this.last()[2]&&c(n)){var m=!(c(this.last()[2])&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&1!==this.opts.mergeType?n:this.last()[2]+n;this.opts.limitToBeAddedWhitespace&&(m=u(m,this.opts.limitLinebreaksCount)),f(m)&&!m.length||(this.last()[2]=m)}}else{this.slices||(this.slices=[]);var d=void 0===n||f(n)&&!n.length?[p,y]:[p,y,this.opts.limitToBeAddedWhitespace?u(n,this.opts.limitLinebreaksCount):n];this.slices.push(d)}}}},{key:"push",value:function(e,t,r){for(var n=arguments.length,i=new Array(n>3?n-3:0),o=3;o<n;o++)i[o-3]=arguments[o];this.add.apply(this,[e,t,r].concat(i))}},{key:"current",value:function(){var t=this;return null!=this.slices?(this.slices=function(t,r){function n(e){return"string"==typeof e}function s(t){return t&&"object"===e(t)&&!Array.isArray(t)}if(!Array.isArray(t)||!t.length)return t;var a,u={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};if(r){if(!s(r))throw new Error("emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n".concat(JSON.stringify(r,null,4)," (type ").concat(e(r),")"));if((a=i(i({},u),r)).progressFn&&s(a.progressFn)&&!Object.keys(a.progressFn).length)a.progressFn=null;else if(a.progressFn&&"function"!=typeof a.progressFn)throw new Error('ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "'.concat(e(a.progressFn),'", equal to ').concat(JSON.stringify(a.progressFn,null,4)));if(a.mergeType&&1!==a.mergeType&&2!==a.mergeType)if(n(a.mergeType)&&"1"===a.mergeType.trim())a.mergeType=1;else{if(!n(a.mergeType)||"2"!==a.mergeType.trim())throw new Error('ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "'.concat(e(a.mergeType),'", equal to ').concat(JSON.stringify(a.mergeType,null,4)));a.mergeType=2}if("boolean"!=typeof a.joinRangesThatTouchEdges)throw new Error('ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "'.concat(e(a.joinRangesThatTouchEdges),'", equal to ').concat(JSON.stringify(a.joinRangesThatTouchEdges,null,4)))}else a=i({},u);for(var c,g,f,h=t.map((function(e){return o(e)})).filter((function(e){return void 0!==e[2]||e[0]!==e[1]})),p=(c=a.progressFn?l(h,{progressFn:function(e){(f=Math.floor(e/5))!==g&&(g=f,a.progressFn(f))}}):l(h)).length-1,y=p;y>0;y--)a.progressFn&&(f=Math.floor(78*(1-y/p))+21)!==g&&f>g&&(g=f,a.progressFn(f)),(c[y][0]<=c[y-1][0]||!a.joinRangesThatTouchEdges&&c[y][0]<c[y-1][1]||a.joinRangesThatTouchEdges&&c[y][0]<=c[y-1][1])&&(c[y-1][0]=Math.min(c[y][0],c[y-1][0]),c[y-1][1]=Math.max(c[y][1],c[y-1][1]),void 0!==c[y][2]&&(c[y-1][0]>=c[y][0]||c[y-1][1]<=c[y][1])&&null!==c[y-1][2]&&(null===c[y][2]&&null!==c[y-1][2]?c[y-1][2]=null:void 0!==c[y-1][2]?2===a.mergeType&&c[y-1][0]===c[y][0]?c[y-1][2]=c[y][2]:c[y-1][2]+=c[y][2]:c[y-1][2]=c[y][2]),c.splice(y,1),y=c.length);return c}(this.slices,{mergeType:this.opts.mergeType}),this.opts.limitToBeAddedWhitespace?this.slices.map((function(e){return c(e[2])?[e[0],e[1],u(e[2],t.opts.limitLinebreaksCount)]:e})):this.slices):null}},{key:"wipe",value:function(){this.slices=void 0}},{key:"replace",value:function(e){if(Array.isArray(e)&&e.length){if(!Array.isArray(e[0])||!g(e[0][0]))throw new Error("ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ".concat(JSON.stringify(e[0],null,4)," should be an array and its first element should be an integer, a string index."));this.slices=Array.from(e)}else this.slices=void 0}},{key:"last",value:function(){return void 0!==this.slices&&Array.isArray(this.slices)?this.slices[this.slices.length-1]:null}}])&&t(n.prototype,s),a&&t(n,a),r}()}));
