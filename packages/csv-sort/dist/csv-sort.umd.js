/**
 * csv-sort
 * Sorts double-entry bookkeeping CSV coming from internet banking
 * Version: 4.0.3
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://codsen.com/os/csv-sort/
 */

!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((r="undefined"!=typeof globalThis?globalThis:r||self).csvSort={})}(this,(function(r){"use strict";function e(r,e,t){switch(t.length){case 0:return r.call(e);case 1:return r.call(e,t[0]);case 2:return r.call(e,t[0],t[1]);case 3:return r.call(e,t[0],t[1],t[2])}return r.apply(e,t)}function t(r,e,t){if(e!=e)return function(r,e,t,n){for(var i=r.length,s=t+(n?1:-1);n?s--:++s<i;)if(e(r[s],s,r))return s;return-1}(r,i,t);for(var n=t-1,s=r.length;++n<s;)if(r[n]===e)return n;return-1}function n(r,e,t,n){for(var i=t-1,s=r.length;++i<s;)if(n(r[i],e))return i;return-1}function i(r){return r!=r}var s,o,a=Array.prototype.splice,u=Math.max;function l(r,e,i,s){var o,u=s?n:t,l=-1,f=e.length,p=r;for(r===e&&(e=function(r,e){var t=-1,n=r.length;e||(e=Array(n));for(;++t<n;)e[t]=r[t];return e}(e)),i&&(p=function(r,e){for(var t=-1,n=r?r.length:0,i=Array(n);++t<n;)i[t]=e(r[t],t,r);return i}(r,(o=i,function(r){return o(r)})));++l<f;)for(var g=0,c=e[l],h=i?i(c):c;(g=u(p,h,g,s))>-1;)p!==r&&a.call(p,g,1),a.call(r,g,1);return r}var f=(s=function(r,e){return r&&r.length&&e&&e.length?l(r,e):r},o=u(void 0===o?s.length-1:o,0),function(){for(var r=arguments,t=-1,n=u(r.length-o,0),i=Array(n);++t<n;)i[t]=r[o+t];t=-1;for(var a=Array(o+1);++t<o;)a[t]=r[t];return a[o]=i,e(s,this,a)});function p(r,e,t){return e in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}function g(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(r);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),t.push.apply(t,n)}return t}function c(r){for(var e=1;arguments.length>e;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?g(Object(t),!0).forEach((function(e){p(r,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):g(Object(t)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))}))}return r}var h={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function y(r,e){if(!Array.isArray(r)||!r.length)return r;var t,n,i=c(c({},h),e);if(i.strictlyTwoElementsInRangeArrays&&!r.filter((function(r){return r})).every((function(r,e){return 2===r.length||(t=e,n=r.length,!1)})))throw new TypeError("ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, "+t+"th range ("+JSON.stringify(r[t],null,4)+") has not two but "+n+" elements!");if(!r.filter((function(r){return r})).every((function(r,e){return!(!Number.isInteger(r[0])||0>r[0]||!Number.isInteger(r[1])||0>r[1])||(t=e,!1)})))throw new TypeError("ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, "+t+"th range ("+JSON.stringify(r[t],null,4)+") does not consist of only natural numbers!");var s=Math.pow(r.filter((function(r){return r})).length,2),o=0;return Array.from(r).filter((function(r){return r})).sort((function(r,e){return i.progressFn&&i.progressFn(Math.floor(100*(o+=1)/s)),r[0]===e[0]?e[1]>r[1]?-1:r[1]>e[1]?1:0:e[0]>r[0]?-1:1}))}var m={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function d(r,e){function t(r){return r&&"object"==typeof r&&!Array.isArray(r)}if(!Array.isArray(r)||!r.length)return null;var n;if(e){if(!t(e))throw Error("emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n"+JSON.stringify(e,null,4)+" (type "+typeof e+")");if((n=c(c({},m),e)).progressFn&&t(n.progressFn)&&!Object.keys(n.progressFn).length)n.progressFn=null;else if(n.progressFn&&"function"!=typeof n.progressFn)throw Error('ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "'+typeof n.progressFn+'", equal to '+JSON.stringify(n.progressFn,null,4));if(n.mergeType&&1!=+n.mergeType&&2!=+n.mergeType)throw Error('ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "'+typeof n.mergeType+'", equal to '+JSON.stringify(n.mergeType,null,4));if("boolean"!=typeof n.joinRangesThatTouchEdges)throw Error('ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "'+typeof n.joinRangesThatTouchEdges+'", equal to '+JSON.stringify(n.joinRangesThatTouchEdges,null,4))}else n=c({},m);for(var i,s,o,a=r.filter((function(r){return r})).map((function(r){return[].concat(r)})).filter((function(r){return void 0!==r[2]||r[0]!==r[1]})),u=(i=n.progressFn?y(a,{progressFn:function(r){(o=Math.floor(r/5))!==s&&(s=o,n.progressFn(o))}}):y(a)).length-1,l=u;l>0;l--)n.progressFn&&(o=Math.floor(78*(1-l/u))+21)!==s&&o>s&&(s=o,n.progressFn(o)),(i[l-1][0]>=i[l][0]||!n.joinRangesThatTouchEdges&&i[l-1][1]>i[l][0]||n.joinRangesThatTouchEdges&&i[l-1][1]>=i[l][0])&&(i[l-1][0]=Math.min(i[l][0],i[l-1][0]),i[l-1][1]=Math.max(i[l][1],i[l-1][1]),void 0===i[l][2]||i[l][0]>i[l-1][0]&&i[l-1][1]>i[l][1]||null!==i[l-1][2]&&(null===i[l][2]&&null!==i[l-1][2]?i[l-1][2]=null:null!=i[l-1][2]?2==+n.mergeType&&i[l-1][0]===i[l][0]?i[l-1][2]=i[l][2]:i[l-1][2]+=i[l][2]:i[l-1][2]=i[l][2]),i.splice(l,1),l=i.length);return i.length?i:null}function v(r,e){void 0===e&&(e=1);function t(r){return Array.from(r).reverse().join("")}function n(r,e,t){var n=t?"\n":"\r",i=t?"\r":"\n";if(!r)return r;for(var s=0,o="",a=0,u=r.length;u>a;a++)(r[a]===n||r[a]===i&&r[a-1]!==n)&&s++,"\r\n".includes(r[a])||" "===r[a]?" "===r[a]?o+=r[a]:r[a]===n?s>e||(o+=r[a],r[a+1]===i&&(o+=r[a+1],a++)):r[a]!==i||r[a-1]&&r[a-1]===n||s>e||(o+=r[a]):r[a+1]||s||(o+=" ");return o}if("string"==typeof r&&r.length){var i=1;"number"==typeof+e&&Number.isInteger(+e)&&+e>=0&&(i=+e);var s="",o="";if(r.trim()){if(!r[0].trim())for(var a=0,u=r.length;u>a;a++)if(r[a].trim()){s=r.slice(0,a);break}}else s=r;if(r.trim()&&(""===r.slice(-1).trim()||" "===r.slice(-1)))for(var l=r.length;l--;)if(r[l].trim()){o=r.slice(l+1);break}return""+n(s,i,!1)+r.trim()+t(n(t(o),i,!0))}return r}function b(r){return null!=r}function T(r){return Number.isInteger(r)&&r>=0}function w(r){return"string"==typeof r}var S={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1},O=function(){function r(r){var e=c(c({},S),r);if(e.mergeType&&1!==e.mergeType&&2!==e.mergeType)if(w(e.mergeType)&&"1"===e.mergeType.trim())e.mergeType=1;else{if(!w(e.mergeType)||"2"!==e.mergeType.trim())throw Error('ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "'+typeof e.mergeType+'", equal to '+JSON.stringify(e.mergeType,null,4));e.mergeType=2}this.opts=e,this.ranges=null}var e=r.prototype;return e.add=function(r,e,t){var n=this;if(null!=r||null!=e){if(b(r)&&!b(e)){if(Array.isArray(r)){if(r.length){if(r.some((function(r){return Array.isArray(r)})))return void r.forEach((function(r){Array.isArray(r)&&n.add.apply(n,r)}));r.length&&T(+r[0])&&T(+r[1])&&this.add.apply(this,r)}return}throw new TypeError('ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set ('+JSON.stringify(r,null,0)+') but second-one, "to" is not ('+JSON.stringify(e,null,0)+")")}if(!b(r)&&b(e))throw new TypeError('ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set ('+JSON.stringify(e,null,0)+') but first-one, "from" is not ('+JSON.stringify(r,null,0)+")");var i=+r,s=+e;if(T(t)&&(t+=""),!T(i)||!T(s))throw!T(i)||0>i?new TypeError('ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it\'s of a type "'+typeof i+'" equal to: '+JSON.stringify(i,null,4)):new TypeError('ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it\'s of a type "'+typeof s+'" equal to: '+JSON.stringify(s,null,4));if(b(t)&&!w(t)&&!T(t))throw new TypeError("ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but "+typeof t+", equal to:\n"+JSON.stringify(t,null,4));if(b(this.ranges)&&Array.isArray(this.last())&&i===this.last()[1]){if(this.last()[1]=s,this.last(),null!==this.last()[2]&&b(t)){var o=!this.last()[2]||0>=this.last()[2].length||this.opts&&this.opts.mergeType&&1!==this.opts.mergeType?t:this.last()[2]+t;this.opts.limitToBeAddedWhitespace&&(o=v(o,this.opts.limitLinebreaksCount)),w(o)&&!o.length||(this.last()[2]=o)}}else{this.ranges||(this.ranges=[]);var a=void 0===t||w(t)&&!t.length?[i,s]:[i,s,t&&this.opts.limitToBeAddedWhitespace?v(t,this.opts.limitLinebreaksCount):t];this.ranges.push(a)}}},e.push=function(r,e,t){this.add(r,e,t)},e.current=function(){var r=this;return null!=this.ranges?(this.ranges=d(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map((function(e){return b(e[2])?[e[0],e[1],v(e[2],r.opts.limitLinebreaksCount)]:e})):this.ranges):null},e.wipe=function(){this.ranges=null},e.replace=function(r){if(Array.isArray(r)&&r.length){if(!Array.isArray(r[0])||!T(r[0][0]))throw Error("ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, "+JSON.stringify(r[0],null,4)+" should be an array and its first element should be an integer, a string index.");this.ranges=Array.from(r)}else this.ranges=null},e.last=function(){return null!=this.ranges&&Array.isArray(this.ranges)?this.ranges[this.ranges.length-1]:null},r}(),N="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},_="[object Symbol]",I=/^\s+|\s+$/g,A="\\u0300-\\u036f\\ufe20-\\ufe23",R="[\\ud800-\\udfff]",D="["+A+"\\u20d0-\\u20f0]",E="\\ud83c[\\udffb-\\udfff]",j="[^\\ud800-\\udfff]",F="(?:\\ud83c[\\udde6-\\uddff]){2}",W="[\\ud800-\\udbff][\\udc00-\\udfff]",H="(?:"+D+"|"+E+")"+"?",J="[\\ufe0e\\ufe0f]?",C=J+H+("(?:\\u200d(?:"+[j,F,W].join("|")+")"+J+H+")*"),k=RegExp(E+"(?="+E+")|"+("(?:"+[j+D+"?",D,F,W,R].join("|")+")")+C,"g"),P=/[\u200d\ud800-\udfff\u0300-\u036f\ufe20-\ufe23\u20d0-\u20f0\ufe0e\ufe0f]/,M="object"==typeof self&&self&&self.Object===Object&&self,$="object"==typeof N&&N&&N.Object===Object&&N||M||Function("return this")();function x(r,e,t){if(e!=e)return function(r,e,t,n){for(var i=r.length,s=t+(n?1:-1);n?s--:++s<i;)if(e(r[s],s,r))return s;return-1}(r,K,t);for(var n=t-1,i=r.length;++n<i;)if(r[n]===e)return n;return-1}function K(r){return r!=r}function q(r){return function(r){return P.test(r)}(r)?function(r){return r.match(k)||[]}(r):function(r){return r.split("")}(r)}var U=Object.prototype.toString,V=$.Symbol,B=V?V.prototype:void 0,L=B?B.toString:void 0;function z(r){if("string"==typeof r)return r;if(function(r){return"symbol"==typeof r||function(r){return!!r&&"object"==typeof r}(r)&&U.call(r)==_}(r))return L?L.call(r):"";var e=r+"";return"0"==e&&1/r==-Infinity?"-0":e}function G(r,e,t){var n=r.length;return t=void 0===t?n:t,e||n>t?function(r,e,t){var n=-1,i=r.length;0>e&&(e=-e>i?0:i+e),0>(t=t>i?i:t)&&(t+=i),i=e>t?0:t-e>>>0,e>>>=0;for(var s=Array(i);++n<i;)s[n]=r[n+e];return s}(r,e,t):r}var Z=function(r,e,t){var n;if((r=null==(n=r)?"":z(n))&&(t||void 0===e))return r.replace(I,"");if(!r||!(e=z(e)))return r;var i=q(r),s=q(e);return G(i,function(r,e){for(var t=-1,n=r.length;++t<n&&x(e,r[t],0)>-1;);return t}(i,s),function(r,e){for(var t=r.length;t--&&x(e,r[t],0)>-1;);return t}(i,s)+1).join("")};function Q(r,e){var t,n=!0,i=[".",",","'"," "];if("string"!=typeof r)throw new TypeError("string-remove-thousand-separators/remSep(): [THROW_ID_01] Input must be string! Currently it's: "+typeof r+", equal to:\n"+JSON.stringify(r,null,4));if(e&&"object"!=typeof e)throw new TypeError("string-remove-thousand-separators/remSep(): [THROW_ID_02] Options object must be a plain object! Currently it's: "+typeof e+", equal to:\n"+JSON.stringify(e,null,4));var s=c(c({},{removeThousandSeparatorsFromNumbers:!0,padSingleDecimalPlaceNumbers:!0,forceUKStyle:!1}),e),o=Z(r.trim(),'"');if(""===o)return o;for(var a=new O,u=0,l=o.length;l>u;u++){if(s.removeThousandSeparatorsFromNumbers&&""===o[u].trim()&&a.add(u,u+1),s.removeThousandSeparatorsFromNumbers&&"'"===o[u]&&(a.add(u,u+1),"'"===o[u+1])){n=!1;break}if(i.includes(o[u])){if(void 0!==o[u+1]&&/^\d*$/.test(o[u+1]))if(void 0!==o[u+2]){if(!/^\d*$/.test(o[u+2])){n=!1;break}if(void 0!==o[u+3]){if(!/^\d*$/.test(o[u+3])){n=!1;break}if(void 0!==o[u+4]&&/^\d*$/.test(o[u+4])){n=!1;break}if(s.removeThousandSeparatorsFromNumbers&&a.add(u,u+1),t){if(o[u]!==t){n=!1;break}}else t=o[u]}else s.removeThousandSeparatorsFromNumbers&&s.forceUKStyle&&","===o[u]&&a.add(u,u+1,".")}else s.forceUKStyle&&","===o[u]&&a.add(u,u+1,"."),s.padSingleDecimalPlaceNumbers&&a.add(u+2,u+2,"0")}else if(!/^\d*$/.test(o[u])){n=!1;break}}return n&&a.current()?function(r,e,t){var n,i=0,s=0;if(0===arguments.length)throw Error("ranges-apply: [THROW_ID_01] inputs missing!");if("string"!=typeof r)throw new TypeError("ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: "+typeof r+", equal to: "+JSON.stringify(r,null,4));if(e&&!Array.isArray(e))throw new TypeError("ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: "+typeof e+", equal to: "+JSON.stringify(e,null,4));if(t&&"function"!=typeof t)throw new TypeError("ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: "+typeof t+", equal to: "+JSON.stringify(t,null,4));if(!e||!e.filter((function(r){return r})).length)return r;var o=(n=Array.isArray(e)&&Number.isInteger(+e[0])&&+e[0]>=0&&Number.isInteger(+e[1])&&+e[1]>=0?[Array.from(e)]:Array.from(e)).length,a=0;n.filter((function(r){return r})).forEach((function(r,e){if(t&&(i=Math.floor(a/o*10))!==s&&(s=i,t(i)),!Array.isArray(r))throw new TypeError("ranges-apply: [THROW_ID_05] ranges array, second input arg., has "+e+"th element not an array: "+JSON.stringify(r,null,4)+", which is "+typeof r);if(!Number.isInteger(r[0])){if(!Number.isInteger(+r[0])||0>+r[0])throw new TypeError("ranges-apply: [THROW_ID_06] ranges array, second input arg. has "+e+"th element, array "+JSON.stringify(r,null,0)+". Its first element is not an integer, string index, but "+typeof r[0]+", equal to: "+JSON.stringify(r[0],null,4)+".");n[e][0]=+n[e][0]}if(!Number.isInteger(r[1])){if(!Number.isInteger(+r[1])||0>+r[1])throw new TypeError("ranges-apply: [THROW_ID_07] ranges array, second input arg. has "+e+"th element, array "+JSON.stringify(r,null,0)+". Its second element is not an integer, string index, but "+typeof r[1]+", equal to: "+JSON.stringify(r[1],null,4)+".");n[e][1]=+n[e][1]}a+=1}));var u=d(n,{progressFn:function(r){t&&(i=10+Math.floor(r/10))!==s&&(s=i,t(i))}}),l=u.length;if(l>0){var f=r.slice(u[l-1][1]);r=u.reduce((function(e,n,o,a){return t&&(i=20+Math.floor(o/l*80))!==s&&(s=i,t(i)),e+r.slice(0===o?0:a[o-1][1],a[o][0])+(a[o][2]||"")}),""),r+=f}return r}(o,a.current()):o}var Y={removeThousandSeparatorsFromNumbers:!0,padSingleDecimalPlaceNumbers:!0,forceUKStyle:!1};
/*!
 * currency.js - v2.0.3
 * http://scurker.github.io/currency.js
 *
 * Copyright (c) 2020 Jason Wilson
 * Released under MIT license
 */
var X={symbol:"$",separator:",",decimal:".",errorOnInvalid:!1,precision:2,pattern:"!#",negativePattern:"-!#",format:function(r,e){var t=e.pattern,n=e.negativePattern,i=e.symbol,s=e.separator,o=e.decimal,a=e.groups,u=(""+r).replace(/^-/,"").split("."),l=u[0],f=u[1];return(0>r.value?n:t).replace("!",i).replace("#",l.replace(a,"$1"+s)+(f?o+f:""))},fromCents:!1},rr=function(r){return Math.round(r)},er=function(r){return Math.pow(10,r)},tr=/(\d)(?=(\d{3})+\b)/g,nr=/(\d)(?=(\d\d)+\d\b)/g;function ir(r,e){var t=this;if(!(t instanceof ir))return new ir(r,e);var n=Object.assign({},X,e),i=er(n.precision),s=sr(r,n);t.intValue=s,t.value=s/i,n.increment=n.increment||1/i,n.groups=n.useVedic?nr:tr,this.s=n,this.p=i}function sr(r,e){var t=2>=arguments.length||void 0===arguments[2]||arguments[2],n=0,i=e.decimal,s=e.errorOnInvalid,o=e.precision,a=e.fromCents,u=er(o),l="number"==typeof r,f=r instanceof ir;if(f&&a)return r.intValue;if(l||f)n=f?r.value:r;else if("string"==typeof r){var p=RegExp("[^-\\d"+i+"]","g"),g=RegExp("\\"+i,"g");n=(n=r.replace(/\((.*)\)/,"-$1").replace(p,"").replace(g,"."))||0}else{if(s)throw Error("Invalid Input");n=0}return a||(n=(n*=u).toFixed(4)),t?rr(n):n}function or(r){return!!r.trim()&&Number(r)==Number(r)}ir.prototype={add:function(r){var e=this.intValue,t=this.s,n=this.p;return ir((e+=sr(r,t))/(t.fromCents?1:n),t)},subtract:function(r){var e=this.intValue,t=this.s,n=this.p;return ir((e-=sr(r,t))/(t.fromCents?1:n),t)},multiply:function(r){var e=this.intValue,t=this.s;return ir((e*=r)/(t.fromCents?1:er(t.precision)),t)},divide:function(r){var e=this.intValue,t=this.s;return ir(e/=sr(r,t,!1),t)},distribute:function(r){for(var e=this.intValue,t=this.p,n=this.s,i=[],s=Math[0>e?"ceil":"floor"](e/r),o=Math.abs(e-s*r),a=n.fromCents?1:t;0!==r;r--){var u=ir(s/a,n);o-- >0&&(u=u[0>e?"subtract":"add"](1/a)),i.push(u)}return i},dollars:function(){return~~this.value},cents:function(){return~~(this.intValue%this.p)},format:function(r){var e=this.s;return"function"==typeof r?r(this,e):e.format(this,Object.assign({},e,r))},toString:function(){var r,e,t=this.s;return(r=this.intValue/this.p,e=t.increment,rr(r/e)*e).toFixed(t.precision)},toJSON:function(){return this.value}};var ar=["د.إ","؋","L","֏","ƒ","Kz","$","ƒ","₼","KM","৳","лв",".د.ب","FBu","$b","R$","฿","Nu.","P","p.","BZ$","FC","CHF","¥","₡","₱","Kč","Fdj","kr","RD$","دج","kr","Nfk","Br","Ξ","€","₾","₵","GH₵","D","FG","Q","L","kn","G","Ft","Rp","₪","₹","ع.د","﷼","kr","J$","JD","¥","KSh","лв","៛","CF","₩","₩","KD","лв","₭","₨","M","Ł","Lt","Ls","LD","MAD","lei","Ar","ден","K","₮","MOP$","UM","₨","Rf","MK","RM","MT","₦","C$","kr","₨","﷼","B/.","S/.","K","₱","₨","zł","Gs","﷼","￥","lei","Дин.","₽","R₣","﷼","₨","ج.س.","kr","£","Le","S","Db","E","฿","SM","T","د.ت","T$","₤","₺","TT$","NT$","TSh","₴","USh","$U","лв","Bs","₫","VT","WS$","FCFA","Ƀ","CFA","₣","﷼","R","Z$"];function ur(r){if("string"!=typeof r)throw Error("csv-sort/util/findType(): input must be string! Currently it's: "+typeof r);return or(r)||ar.some((function(e){return or(r.replace(e,"").replace(/[,.]/g,""))}))?"numeric":r.trim()?"text":"empty"}r.sort=function(r){var e=null,t=null;if("string"!=typeof r)throw new TypeError("csv-sort/csvSort(): [THROW_ID_01] The input is of a wrong type! We accept either string of array of arrays. We got instead: "+typeof r+", equal to:\n"+JSON.stringify(r,null,4));if(!r.trim())return{res:[[""]],msgContent:e,msgType:t};for(var n=function(r,e){var t=0,n=0,i=[],s=[],o=!1,a=!0;if(e&&"object"!=typeof e)throw Error("csv-split-easy/split(): [THROW_ID_02] Options object must be a plain object! Currently it's of a type "+typeof e+" equal to:\n"+JSON.stringify(e,null,4));var u=c(c({},Y),e);if("string"!=typeof r)throw new TypeError("csv-split-easy/split(): [THROW_ID_04] input must be string! Currently it's: "+typeof r+", equal to: "+JSON.stringify(r,null,4));if(""===r)return[[""]];for(var l=0,f=(r=r.trim()).length;f>l;l++){if(a&&'"'!==r[l]&&","!==r[l]&&""!==r[l].trim()&&(a=!1),'"'===r[l])if(o&&'"'===r[l+1])l+=1;else if(o){o=!1;var p=r.slice(t,l);""!==p.trim()&&(a=!1);var g=/""/.test(p)?p.replace(/""/g,'"'):Q(p,{removeThousandSeparatorsFromNumbers:u.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:u.padSingleDecimalPlaceNumbers,forceUKStyle:u.forceUKStyle});i.push(g)}else o=!0,t=l+1;else if(o||","!==r[l])if("\n"===r[l]||"\r"===r[l]){if(!n){if(n=l,!o&&'"'!==r[l-1]){var h=r.slice(t,l);""!==h.trim()&&(a=!1),i.push(Q(h,{removeThousandSeparatorsFromNumbers:u.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:u.padSingleDecimalPlaceNumbers,forceUKStyle:u.forceUKStyle}))}a?i.length=0:s.push(i),a=!0,i=[]}t=l+1}else n&&(n=0,t=l);else{if('"'!==r[l-1]&&!o){var y=r.slice(t,l);""!==y.trim()&&(a=!1),i.push(Q(y,{removeThousandSeparatorsFromNumbers:u.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:u.padSingleDecimalPlaceNumbers,forceUKStyle:u.forceUKStyle}))}t=l+1,n&&(n=0)}if(l+1===f){if('"'!==r[l]){var m=r.slice(t,l+1);m.trim()&&(a=!1),i.push(Q(m,{removeThousandSeparatorsFromNumbers:u.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:u.padSingleDecimalPlaceNumbers,forceUKStyle:u.forceUKStyle}))}a?i=[]:s.push(i),a=!0}}return 0===s.length?[[""]]:s}(r),i=[],s=!1,o=!0,a=[],u=null,l=n.length-1;l>=0;l--)if(i.length){0===l&&(s=n[l].every((function(r){return"text"===ur(r)||"empty"===ur(r)}))),s||i.length===n[l].length||(o=!1);for(var p=null,g=0,h=n[l].length;h>g;g++)if(null===p&&"empty"===ur(n[l][g].trim())&&(p=g),null!==p&&"empty"!==ur(n[l][g].trim())&&(p=null),ur(n[l][g].trim())!==i[g]&&!s){var y=ur(n[l][g].trim());if(Array.isArray(i[g]))i[g].includes(y)||i[g].push(ur(n[l][g].trim()));else if(i[g]!==y){var m=i[g];i[g]=[],i[g].push(m),i[g].push(y)}}null!==u&&null!==p&&p>u&&(!s||s&&0!==l)&&(u=p)}else if(1!==n[l].length||""!==n[l][0])for(var d=0,v=n[l].length;v>d;d++)i.push(ur(n[l][d].trim())),null===u&&"empty"===ur(n[l][d].trim())&&(u=d),null!==u&&"empty"!==ur(n[l][d].trim())&&(u=null);u||(u=i.length);for(var b=0,T=0,w=i.length;w>T&&"empty"===i[T];T++)b=T;0!==b&&(n=n.map((function(r){return r.slice(b+1,u)})),i=i.slice(b+1,u));var S,O=[];i.forEach((function(r,e){"numeric"===r&&O.push(e)}));var N=s?1:0;if(1===O.length)S=O[0];else{if(0===O.length)throw Error('csv-sort/csvSort(): [THROW_ID_03] Your CSV file does not contain numeric-only columns and computer was not able to detect the "Balance" column!');for(var _=Array.from(O),I=[],A=0,R=_.length;R>A;A++){for(var D=_[A],E=void 0,j=!0,F=void 0,W=!0,H=N,J=n.length;J>H&&(j&&(null==E?E=n[H][D]:E===n[H][D]?(I.push(D),j=!1):E=n[H][D]),W&&(null==F?F=n[H][D]:n[H][D]!==F&&(W=!1)),j);H++);W&&a.push(D)}if(1===(_=f.apply(void 0,[_].concat(I))).length)S=_[0];else if(0===_.length)throw Error('csv-sort/csvSort(): [THROW_ID_04] The computer can\'t find the "Balance" column! It saw some numeric-only columns, but they all seem to have certain rows with the same values as rows right below/above them!')}if(!S)throw Error("csv-sort/csvSort(): [THROW_ID_05] Sadly computer couldn't find its way in this CSV and had to stop working on it.");var C=f.apply(void 0,[Array.from(i.reduce((function(r,e,t){return("string"==typeof e&&"numeric"===e||Array.isArray(e)&&e.includes("numeric"))&&r.push(t),r}),[])),S].concat(a)),k=[];k.push(n[n.length-1].slice(0,u));for(var P=[],M=s?1:0,$=n.length-2;$>=M;$--)for(var x=n.length-2;x>=M;x--)if(!P.includes(x)){for(var K=!1,q=0,U=C.length;U>q;q++){var V=null;""!==n[x][C[q]]&&(V=ir(n[x][C[q]]));var B=null;""!==n[x][S]&&(B=ir(n[x][S]));var L=null;""!==k[0][S]&&(L=ir(k[0][S]).format());var z=null;""!==k[k.length-1][C[q]]&&(z=ir(k[k.length-1][C[q]]).format());var G=null;if(""!==k[k.length-1][S]&&(G=ir(k[k.length-1][S])),V&&B.add(V).format()===L){k.unshift(n[x].slice(0,u)),P.push(x),K=!0;break}if(V&&B.subtract(V).format()===L){k.unshift(n[x].slice(0,u)),P.push(x),K=!0;break}if(z&&G.add(z).format()===B.format()){k.push(n[x].slice(0,u)),P.push(x),K=!0;break}if(z&&G.subtract(z).format()===B.format()){k.push(n[x].slice(0,u)),P.push(x),K=!0;break}}if(K){K=!1;break}}return s&&(o&&n[0].length>i.length&&(n[0].length=i.length),k.unshift(n[0].slice(0,u))),n.length-(s?2:1)!==P.length&&(e="Not all rows were recognised!",t="alert"),{res:k,msgContent:e,msgType:t}},Object.defineProperty(r,"__esModule",{value:!0})}));
