/**
 * csv-sort
 * Sorts double-entry bookkeeping CSV coming from internet banking
 * Version: 3.0.48
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/csv-sort
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).csvSort=t()}(this,(function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}
/*!
   * is-natural-number.js | MIT (c) Shinnosuke Watanabe
   * https://github.com/shinnn/is-natural-number.js
  */var t=function(e,t){if(t){if("object"!=typeof t)throw new TypeError(String(t)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in t){if("boolean"!=typeof t.includeZero)throw new TypeError(String(t.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(t.includeZero&&0===e)return!0}}return Number.isSafeInteger(e)&&e>=1};const r=Array.isArray;function n(e,n){if(!r(e))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(0===e.length)return e;const o=Object.assign({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null},n);let i,s;if(o.strictlyTwoElementsInRangeArrays&&!e.every((e,t)=>2===e.length||(i=t,s=e.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${i}th range (${JSON.stringify(e[i],null,4)}) has not two but ${s} elements!`);if(!e.every((e,r)=>!(!t(e[0],{includeZero:!0})||!t(e[1],{includeZero:!0}))||(i=r,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${i}th range (${JSON.stringify(e[i],null,4)}) does not consist of only natural numbers!`);const a=e.length*e.length;let u=0;return Array.from(e).sort((e,t)=>(o.progressFn&&(u++,o.progressFn(Math.floor(100*u/a))),e[0]===t[0]?e[1]<t[1]?-1:e[1]>t[1]?1:0:e[0]<t[0]?-1:1))}var o="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function i(e,t){return e(t={exports:{}},t.exports),t.exports}var s=i((function(e,t){var r="[object Arguments]",n="[object Function]",i="[object GeneratorFunction]",s="[object Map]",a="[object Set]",u=/\w*$/,l=/^\[object .+?Constructor\]$/,c=/^(?:0|[1-9]\d*)$/,f={};f[r]=f["[object Array]"]=f["[object ArrayBuffer]"]=f["[object DataView]"]=f["[object Boolean]"]=f["[object Date]"]=f["[object Float32Array]"]=f["[object Float64Array]"]=f["[object Int8Array]"]=f["[object Int16Array]"]=f["[object Int32Array]"]=f[s]=f["[object Number]"]=f["[object Object]"]=f["[object RegExp]"]=f[a]=f["[object String]"]=f["[object Symbol]"]=f["[object Uint8Array]"]=f["[object Uint8ClampedArray]"]=f["[object Uint16Array]"]=f["[object Uint32Array]"]=!0,f["[object Error]"]=f[n]=f["[object WeakMap]"]=!1;var p="object"==typeof o&&o&&o.Object===Object&&o,h="object"==typeof self&&self&&self.Object===Object&&self,g=p||h||Function("return this")(),y=t&&!t.nodeType&&t,d=y&&e&&!e.nodeType&&e,m=d&&d.exports===y;function b(e,t){return e.set(t[0],t[1]),e}function v(e,t){return e.add(t),e}function _(e,t,r,n){var o=-1,i=e?e.length:0;for(n&&i&&(r=e[++o]);++o<i;)r=t(r,e[o],o,e);return r}function w(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}function T(e){var t=-1,r=Array(e.size);return e.forEach((function(e,n){r[++t]=[n,e]})),r}function j(e,t){return function(r){return e(t(r))}}function S(e){var t=-1,r=Array(e.size);return e.forEach((function(e){r[++t]=e})),r}var O,$=Array.prototype,N=Function.prototype,A=Object.prototype,I=g["__core-js_shared__"],E=(O=/[^.]+$/.exec(I&&I.keys&&I.keys.IE_PROTO||""))?"Symbol(src)_1."+O:"",R=N.toString,F=A.hasOwnProperty,D=A.toString,W=RegExp("^"+R.call(F).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),x=m?g.Buffer:void 0,H=g.Symbol,k=g.Uint8Array,J=j(Object.getPrototypeOf,Object),C=Object.create,M=A.propertyIsEnumerable,P=$.splice,U=Object.getOwnPropertySymbols,B=x?x.isBuffer:void 0,K=j(Object.keys,Object),q=de(g,"DataView"),Z=de(g,"Map"),V=de(g,"Promise"),L=de(g,"Set"),z=de(g,"WeakMap"),G=de(Object,"create"),Q=we(q),Y=we(Z),X=we(V),ee=we(L),te=we(z),re=H?H.prototype:void 0,ne=re?re.valueOf:void 0;function oe(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function ie(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function se(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function ae(e){this.__data__=new ie(e)}function ue(e,t){var n=je(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Se(e)}(e)&&F.call(e,"callee")&&(!M.call(e,"callee")||D.call(e)==r)}(e)?function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(e.length,String):[],o=n.length,i=!!o;for(var s in e)!t&&!F.call(e,s)||i&&("length"==s||ve(s,o))||n.push(s);return n}function le(e,t,r){var n=e[t];F.call(e,t)&&Te(n,r)&&(void 0!==r||t in e)||(e[t]=r)}function ce(e,t){for(var r=e.length;r--;)if(Te(e[r][0],t))return r;return-1}function fe(e,t,o,l,c,p,h){var g;if(l&&(g=p?l(e,c,p,h):l(e)),void 0!==g)return g;if(!Ne(e))return e;var y=je(e);if(y){if(g=function(e){var t=e.length,r=e.constructor(t);t&&"string"==typeof e[0]&&F.call(e,"index")&&(r.index=e.index,r.input=e.input);return r}(e),!t)return function(e,t){var r=-1,n=e.length;t||(t=Array(n));for(;++r<n;)t[r]=e[r];return t}(e,g)}else{var d=be(e),m=d==n||d==i;if(Oe(e))return function(e,t){if(t)return e.slice();var r=new e.constructor(e.length);return e.copy(r),r}(e,t);if("[object Object]"==d||d==r||m&&!p){if(w(e))return p?e:{};if(g=function(e){return"function"!=typeof e.constructor||_e(e)?{}:(t=J(e),Ne(t)?C(t):{});var t}(m?{}:e),!t)return function(e,t){return ge(e,me(e),t)}(e,function(e,t){return e&&ge(t,Ae(t),e)}(g,e))}else{if(!f[d])return p?e:{};g=function(e,t,r,n){var o=e.constructor;switch(t){case"[object ArrayBuffer]":return he(e);case"[object Boolean]":case"[object Date]":return new o(+e);case"[object DataView]":return function(e,t){var r=t?he(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.byteLength)}(e,n);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return function(e,t){var r=t?he(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.length)}(e,n);case s:return function(e,t,r){return _(t?r(T(e),!0):T(e),b,new e.constructor)}(e,n,r);case"[object Number]":case"[object String]":return new o(e);case"[object RegExp]":return function(e){var t=new e.constructor(e.source,u.exec(e));return t.lastIndex=e.lastIndex,t}(e);case a:return function(e,t,r){return _(t?r(S(e),!0):S(e),v,new e.constructor)}(e,n,r);case"[object Symbol]":return i=e,ne?Object(ne.call(i)):{}}var i}(e,d,fe,t)}}h||(h=new ae);var j=h.get(e);if(j)return j;if(h.set(e,g),!y)var O=o?function(e){return function(e,t,r){var n=t(e);return je(e)?n:function(e,t){for(var r=-1,n=t.length,o=e.length;++r<n;)e[o+r]=t[r];return e}(n,r(e))}(e,Ae,me)}(e):Ae(e);return function(e,t){for(var r=-1,n=e?e.length:0;++r<n&&!1!==t(e[r],r,e););}(O||e,(function(r,n){O&&(r=e[n=r]),le(g,n,fe(r,t,o,l,n,e,h))})),g}function pe(e){return!(!Ne(e)||(t=e,E&&E in t))&&($e(e)||w(e)?W:l).test(we(e));var t}function he(e){var t=new e.constructor(e.byteLength);return new k(t).set(new k(e)),t}function ge(e,t,r,n){r||(r={});for(var o=-1,i=t.length;++o<i;){var s=t[o],a=n?n(r[s],e[s],s,r,e):void 0;le(r,s,void 0===a?e[s]:a)}return r}function ye(e,t){var r,n,o=e.__data__;return("string"==(n=typeof(r=t))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?o["string"==typeof t?"string":"hash"]:o.map}function de(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return pe(r)?r:void 0}oe.prototype.clear=function(){this.__data__=G?G(null):{}},oe.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},oe.prototype.get=function(e){var t=this.__data__;if(G){var r=t[e];return"__lodash_hash_undefined__"===r?void 0:r}return F.call(t,e)?t[e]:void 0},oe.prototype.has=function(e){var t=this.__data__;return G?void 0!==t[e]:F.call(t,e)},oe.prototype.set=function(e,t){return this.__data__[e]=G&&void 0===t?"__lodash_hash_undefined__":t,this},ie.prototype.clear=function(){this.__data__=[]},ie.prototype.delete=function(e){var t=this.__data__,r=ce(t,e);return!(r<0)&&(r==t.length-1?t.pop():P.call(t,r,1),!0)},ie.prototype.get=function(e){var t=this.__data__,r=ce(t,e);return r<0?void 0:t[r][1]},ie.prototype.has=function(e){return ce(this.__data__,e)>-1},ie.prototype.set=function(e,t){var r=this.__data__,n=ce(r,e);return n<0?r.push([e,t]):r[n][1]=t,this},se.prototype.clear=function(){this.__data__={hash:new oe,map:new(Z||ie),string:new oe}},se.prototype.delete=function(e){return ye(this,e).delete(e)},se.prototype.get=function(e){return ye(this,e).get(e)},se.prototype.has=function(e){return ye(this,e).has(e)},se.prototype.set=function(e,t){return ye(this,e).set(e,t),this},ae.prototype.clear=function(){this.__data__=new ie},ae.prototype.delete=function(e){return this.__data__.delete(e)},ae.prototype.get=function(e){return this.__data__.get(e)},ae.prototype.has=function(e){return this.__data__.has(e)},ae.prototype.set=function(e,t){var r=this.__data__;if(r instanceof ie){var n=r.__data__;if(!Z||n.length<199)return n.push([e,t]),this;r=this.__data__=new se(n)}return r.set(e,t),this};var me=U?j(U,Object):function(){return[]},be=function(e){return D.call(e)};function ve(e,t){return!!(t=null==t?9007199254740991:t)&&("number"==typeof e||c.test(e))&&e>-1&&e%1==0&&e<t}function _e(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||A)}function we(e){if(null!=e){try{return R.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Te(e,t){return e===t||e!=e&&t!=t}(q&&"[object DataView]"!=be(new q(new ArrayBuffer(1)))||Z&&be(new Z)!=s||V&&"[object Promise]"!=be(V.resolve())||L&&be(new L)!=a||z&&"[object WeakMap]"!=be(new z))&&(be=function(e){var t=D.call(e),r="[object Object]"==t?e.constructor:void 0,n=r?we(r):void 0;if(n)switch(n){case Q:return"[object DataView]";case Y:return s;case X:return"[object Promise]";case ee:return a;case te:return"[object WeakMap]"}return t});var je=Array.isArray;function Se(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}(e.length)&&!$e(e)}var Oe=B||function(){return!1};function $e(e){var t=Ne(e)?D.call(e):"";return t==n||t==i}function Ne(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function Ae(e){return Se(e)?ue(e):function(e){if(!_e(e))return K(e);var t=[];for(var r in Object(e))F.call(e,r)&&"constructor"!=r&&t.push(r);return t}(e)}e.exports=function(e){return fe(e,!0,!0)}}));var a,u,l=Function.prototype,c=Object.prototype,f=l.toString,p=c.hasOwnProperty,h=f.call(Object),g=c.toString,y=(a=Object.getPrototypeOf,u=Object,function(e){return a(u(e))});var d=function(e){if(!function(e){return!!e&&"object"==typeof e}(e)||"[object Object]"!=g.call(e)||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e))return!1;var t=y(e);if(null===t)return!0;var r=p.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&f.call(r)==h};function m(e,t){function r(e){return"string"==typeof e}if(!Array.isArray(e))return e;const o={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let i;if(t){if(!d(t))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(t,null,4)} (type ${typeof t})`);if(i=Object.assign({},o,t),i.progressFn&&d(i.progressFn)&&!Object.keys(i.progressFn).length)i.progressFn=null;else if(i.progressFn&&"function"!=typeof i.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof i.progressFn}", equal to ${JSON.stringify(i.progressFn,null,4)}`);if(i.mergeType&&1!==i.mergeType&&2!==i.mergeType)if(r(i.mergeType)&&"1"===i.mergeType.trim())i.mergeType=1;else{if(!r(i.mergeType)||"2"!==i.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof i.mergeType}", equal to ${JSON.stringify(i.mergeType,null,4)}`);i.mergeType=2}if("boolean"!=typeof i.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof i.joinRangesThatTouchEdges}", equal to ${JSON.stringify(i.joinRangesThatTouchEdges,null,4)}`)}else i=s(o);const a=s(e).filter(e=>void 0!==e[2]||e[0]!==e[1]);let u,l,c;u=i.progressFn?n(a,{progressFn:e=>{c=Math.floor(e/5),c!==l&&(l=c,i.progressFn(c))}}):n(a);const f=u.length-1;for(let e=f;e>0;e--)i.progressFn&&(c=Math.floor(78*(1-e/f))+21,c!==l&&c>l&&(l=c,i.progressFn(c))),(u[e][0]<=u[e-1][0]||!i.joinRangesThatTouchEdges&&u[e][0]<u[e-1][1]||i.joinRangesThatTouchEdges&&u[e][0]<=u[e-1][1])&&(u[e-1][0]=Math.min(u[e][0],u[e-1][0]),u[e-1][1]=Math.max(u[e][1],u[e-1][1]),void 0!==u[e][2]&&(u[e-1][0]>=u[e][0]||u[e-1][1]<=u[e][1])&&null!==u[e-1][2]&&(null===u[e][2]&&null!==u[e-1][2]?u[e-1][2]=null:void 0!==u[e-1][2]?2===i.mergeType&&u[e-1][0]===u[e][0]?u[e-1][2]=u[e][2]:u[e-1][2]+=u[e][2]:u[e-1][2]=u[e][2]),u.splice(e,1),e=u.length);return u}function b(e){return null!=e}function v(e){return"string"==typeof e}function _(e,t=!0,r){if(!(r.trim().length||e.length&&"\n"!==r&&" "!==r&&" "===(t?e[e.length-1]:e[0])||e.length&&"\n"===(t?e[e.length-1]:e[0])&&"\n"!==r&&" "!==r))if(t){if(("\n"===r||" "===r)&&e.length&&" "===e[e.length-1])for(;e.length&&" "===e[e.length-1];)e.pop();e.push(" "===r||"\n"===r?r:" ")}else{if(("\n"===r||" "===r)&&e.length&&" "===e[0])for(;e.length&&" "===e[0];)e.shift();e.unshift(" "===r||"\n"===r?r:" ")}}function w(e,t){if("string"==typeof e&&e.length){let r,n,o=!1;if(e.includes("\r\n")&&(o=!0),r=t&&"number"==typeof t?t:1,""===e.trim()){const t=[];for(n=r,Array.from(e).forEach(e=>{("\n"!==e||n)&&("\n"===e&&n--,_(t,!0,e))});t.length>1&&" "===t[t.length-1];)t.pop();return t.join("")}const i=[];if(n=r,""===e[0].trim())for(let t=0,r=e.length;t<r&&0===e[t].trim().length;t++)("\n"!==e[t]||n)&&("\n"===e[t]&&n--,_(i,!0,e[t]));const s=[];if(n=r,""===e.slice(-1).trim())for(let t=e.length;t--&&0===e[t].trim().length;)("\n"!==e[t]||n)&&("\n"===e[t]&&n--,_(s,!1,e[t]));return o?`${i.join("")}${e.trim()}${s.join("")}`.replace(/\n/g,"\r\n"):i.join("")+e.trim()+s.join("")}return e}
/*!
   * is-natural-number-string | MIT (c) Shinnosuke Watanabe
   * https://github.com/shinnn/is-natural-number-string
  */var T=function(e,t){if("string"!=typeof e)return!1;if(t&&"includeZero"in t){if("boolean"!=typeof t.includeZero)throw new TypeError(String(t.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(t.includeZero)return/^(-?0|[1-9]\d*)(\.0+)?$/.test(e)}return/^[1-9]\d*(\.0+)?$/.test(e)};function j(e){return null!=e}const S=Array.isArray,O=Number.isInteger;function $(e){return"string"==typeof e}function N(e){return T(e,{includeZero:!0})?parseInt(e,10):e}class A{constructor(e){const t=Object.assign({},{limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1},e);if(t.mergeType&&1!==t.mergeType&&2!==t.mergeType)if($(t.mergeType)&&"1"===t.mergeType.trim())t.mergeType=1;else{if(!$(t.mergeType)||"2"!==t.mergeType.trim())throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof t.mergeType}", equal to ${JSON.stringify(t.mergeType,null,4)}`);t.mergeType=2}this.opts=t}add(e,t,r,...n){if(n.length>0)throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_03] Please don't overload the add() method. From the 4th input argument onwards we see these redundant arguments: ${JSON.stringify(n,null,4)}`);if(!j(e)&&!j(t))return;if(j(e)&&!j(t)){if(S(e)){if(e.length){if(e.some(e=>S(e)))return void e.forEach(e=>{S(e)&&this.add(...e)});e.length>1&&O(N(e[0]))&&O(N(e[1]))&&this.add(...e)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(e,null,0)}) but second-one, "to" is not (${JSON.stringify(t,null,0)})`)}if(!j(e)&&j(t))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(t,null,0)}) but first-one, "from" is not (${JSON.stringify(e,null,0)})`);const o=T(e,{includeZero:!0})?parseInt(e,10):e,i=T(t,{includeZero:!0})?parseInt(t,10):t;if(O(r)&&(r=String(r)),!O(o)||!O(i))throw O(o)&&o>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof i}" equal to: ${JSON.stringify(i,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof o}" equal to: ${JSON.stringify(o,null,4)}`);if(j(r)&&!$(r)&&!O(r))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`);if(j(this.slices)&&S(this.last())&&o===this.last()[1]){if(this.last()[1]=i,this.last()[2],null!==this.last()[2]&&j(r)){let e=!(j(this.last()[2])&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&1!==this.opts.mergeType?r:this.last()[2]+r;this.opts.limitToBeAddedWhitespace&&(e=w(e,this.opts.limitLinebreaksCount)),$(e)&&!e.length||(this.last()[2]=e)}}else{this.slices||(this.slices=[]);const e=void 0===r||$(r)&&!r.length?[o,i]:[o,i,this.opts.limitToBeAddedWhitespace?w(r,this.opts.limitLinebreaksCount):r];this.slices.push(e)}}push(e,t,r,...n){this.add(e,t,r,...n)}current(){return null!=this.slices?(this.slices=m(this.slices,{mergeType:this.opts.mergeType}),this.opts.limitToBeAddedWhitespace?this.slices.map(e=>j(e[2])?[e[0],e[1],w(e[2],this.opts.limitLinebreaksCount)]:e):this.slices):null}wipe(){this.slices=void 0}replace(e){if(S(e)&&e.length){if(!S(e[0])||!O(e[0][0]))throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(e[0],null,4)} should be an array and its first element should be an integer, a string index.`);this.slices=s(e)}else this.slices=void 0}last(){return void 0!==this.slices&&Array.isArray(this.slices)?this.slices[this.slices.length-1]:null}}var I=i((function(e,t){!function(r){function n(e,t){return t instanceof Object||(t={trim:!0}),"number"==typeof e&&!isNaN(e)||(e=(e||"").toString(),"trim"in t&&!t.trim?!/\s/.test(e):!!(e=e.trim())&&!isNaN(e))}e.exports&&(t=e.exports=n),t.isNumeric=n}()})),E=(I.isNumeric,/^\s+|\s+$/g),R="[\\ud800-\\udfff]",F="[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]",D="\\ud83c[\\udffb-\\udfff]",W="[^\\ud800-\\udfff]",x="(?:\\ud83c[\\udde6-\\uddff]){2}",H="[\\ud800-\\udbff][\\udc00-\\udfff]",k="(?:"+F+"|"+D+")"+"?",J="[\\ufe0e\\ufe0f]?"+k+("(?:\\u200d(?:"+[W,x,H].join("|")+")[\\ufe0e\\ufe0f]?"+k+")*"),C="(?:"+[W+F+"?",F,x,H,R].join("|")+")",M=RegExp(D+"(?="+D+")|"+C+J,"g"),P=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"),U="object"==typeof o&&o&&o.Object===Object&&o,B="object"==typeof self&&self&&self.Object===Object&&self,K=U||B||Function("return this")();function q(e,t,r){if(t!=t)return function(e,t,r,n){for(var o=e.length,i=r+(n?1:-1);n?i--:++i<o;)if(t(e[i],i,e))return i;return-1}(e,Z,r);for(var n=r-1,o=e.length;++n<o;)if(e[n]===t)return n;return-1}function Z(e){return e!=e}function V(e){return function(e){return P.test(e)}(e)?function(e){return e.match(M)||[]}(e):function(e){return e.split("")}(e)}var L=Object.prototype.toString,z=K.Symbol,G=z?z.prototype:void 0,Q=G?G.toString:void 0;function Y(e){if("string"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==L.call(e)}(e))return Q?Q.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function X(e,t,r){var n=e.length;return r=void 0===r?n:r,!t&&r>=n?e:function(e,t,r){var n=-1,o=e.length;t<0&&(t=-t>o?0:o+t),(r=r>o?o:r)<0&&(r+=o),o=t>r?0:r-t>>>0,t>>>=0;for(var i=Array(o);++n<o;)i[n]=e[n+t];return i}(e,t,r)}var ee=function(e,t,r){var n;if((e=null==(n=e)?"":Y(n))&&(r||void 0===t))return e.replace(E,"");if(!e||!(t=Y(t)))return e;var o=V(e),i=V(t);return X(o,function(e,t){for(var r=-1,n=e.length;++r<n&&q(t,e[r],0)>-1;);return r}(o,i),function(e,t){for(var r=e.length;r--&&q(t,e[r],0)>-1;);return r}(o,i)+1).join("")};function te(e,t){let r=!0;const n=[".",",","'"," "];let o;if("string"!=typeof e)throw new TypeError(`string-remove-thousand-separators/remSep(): [THROW_ID_01] Input must be string! Currently it's: ${typeof e}, equal to:\n${JSON.stringify(e,null,4)}`);if(null!=t&&!d(t))throw new TypeError(`string-remove-thousand-separators/remSep(): [THROW_ID_02] Options object must be a plain object! Currently it's: ${typeof t}, equal to:\n${JSON.stringify(t,null,4)}`);const i=Object.assign({},{removeThousandSeparatorsFromNumbers:!0,padSingleDecimalPlaceNumbers:!0,forceUKStyle:!1},t),s=ee(e.trim(),'"');if(""===s)return s;const a=new A;for(let e=0,t=s.length;e<t;e++){if(i.removeThousandSeparatorsFromNumbers&&""===s[e].trim()&&a.add(e,e+1),i.removeThousandSeparatorsFromNumbers&&"'"===s[e]&&(a.add(e,e+1),"'"===s[e+1])){r=!1;break}if(n.includes(s[e])){if(void 0!==s[e+1]&&I(s[e+1]))if(void 0!==s[e+2]){if(!I(s[e+2])){r=!1;break}if(void 0!==s[e+3]){if(!I(s[e+3])){r=!1;break}if(void 0!==s[e+4]&&I(s[e+4])){r=!1;break}if(i.removeThousandSeparatorsFromNumbers&&a.add(e,e+1),o){if(s[e]!==o){r=!1;break}}else o=s[e]}else i.removeThousandSeparatorsFromNumbers&&i.forceUKStyle&&","===s[e]&&a.add(e,e+1,".")}else i.forceUKStyle&&","===s[e]&&a.add(e,e+1,"."),i.padSingleDecimalPlaceNumbers&&a.add(e+2,e+2,"0")}else if(!I(s[e])){r=!1;break}}return r&&a.current()?function(e,t,r){let n=0,o=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(!v(e))throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(null===t)return e;if(!Array.isArray(t))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(r&&"function"!=typeof r)throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);Array.isArray(t)&&(Number.isInteger(t[0])&&t[0]>=0||/^\d*$/.test(t[0]))&&(Number.isInteger(t[1])&&t[1]>=0||/^\d*$/.test(t[1]))&&(t=[t]);const i=t.length;let s=0;t.forEach((e,a)=>{if(r&&(n=Math.floor(s/i*10),n!==o&&(o=n,r(n))),!Array.isArray(e))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${a}th element not an array: ${JSON.stringify(e,null,4)}, which is ${typeof e}`);if(!Number.isInteger(e[0])||e[0]<0){if(!/^\d*$/.test(e[0]))throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${a}th element, array [${e[0]},${e[1]}]. That array has first element not an integer, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0],null,4)}. Computer doesn't like this.`);t[a][0]=Number.parseInt(t[a][0],10)}if(!Number.isInteger(e[1])){if(!/^\d*$/.test(e[1]))throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${a}th element, array [${e[0]},${e[1]}]. That array has second element not an integer, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1],null,4)}. Computer doesn't like this.`);t[a][1]=Number.parseInt(t[a][1],10)}s++});const a=m(t,{progressFn:e=>{r&&(n=10+Math.floor(e/10),n!==o&&(o=n,r(n)))}}),u=a.length;if(u>0){const t=e.slice(a[u-1][1]);e=a.reduce((t,i,s,a)=>{r&&(n=20+Math.floor(s/u*80),n!==o&&(o=n,r(n)));const l=0===s?0:a[s-1][1],c=a[s][0];return t+e.slice(l,c)+(b(a[s][2])?a[s][2]:"")},""),e+=t}return e}(s,a.current()):s}function re(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}function ne(e,t,r){if(t!=t)return function(e,t,r,n){for(var o=e.length,i=r+(n?1:-1);n?i--:++i<o;)if(t(e[i],i,e))return i;return-1}(e,ie,r);for(var n=r-1,o=e.length;++n<o;)if(e[n]===t)return n;return-1}function oe(e,t,r,n){for(var o=r-1,i=e.length;++o<i;)if(n(e[o],t))return o;return-1}function ie(e){return e!=e}var se=Array.prototype.splice,ae=Math.max;function ue(e,t,r,n){var o=n?oe:ne,i=-1,s=t.length,a=e;for(e===t&&(t=function(e,t){var r=-1,n=e.length;t||(t=Array(n));for(;++r<n;)t[r]=e[r];return t}(t)),r&&(a=function(e,t){for(var r=-1,n=e?e.length:0,o=Array(n);++r<n;)o[r]=t(e[r],r,e);return o}(e,function(e){return function(t){return e(t)}}(r)));++i<s;)for(var u=0,l=t[i],c=r?r(l):l;(u=o(a,c,u,n))>-1;)a!==e&&se.call(a,u,1),se.call(e,u,1);return e}var le=function(e,t){return t=ae(void 0===t?e.length-1:t,0),function(){for(var r=arguments,n=-1,o=ae(r.length-t,0),i=Array(o);++n<o;)i[n]=r[t+n];n=-1;for(var s=Array(t+1);++n<t;)s[n]=r[n];return s[t]=i,re(e,this,s)}}((function(e,t){return e&&e.length&&t&&t.length?ue(e,t):e})),ce={symbol:"$",separator:",",decimal:".",formatWithSymbol:!1,errorOnInvalid:!1,precision:2,pattern:"!#",negativePattern:"-!#"},fe=function(e){return Math.round(e)},pe=function(e){return Math.pow(10,e)},he=/(\d)(?=(\d{3})+\b)/g,ge=/(\d)(?=(\d\d)+\d\b)/g;
/*!
   * currency.js - v1.2.2
   * http://scurker.github.io/currency.js
   *
   * Copyright (c) 2019 Jason Wilson
   * Released under MIT license
   */function ye(e,t){if(!(this instanceof ye))return new ye(e,t);var r=Object.assign({},ce,t),n=pe(r.precision),o=de(e,r);this.intValue=o,this.value=o/n,r.increment=r.increment||1/n,r.useVedic?r.groups=ge:r.groups=he,this.s=r,this.p=n}function de(e,t){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=0,o=t.decimal,i=t.errorOnInvalid,s=t.precision,a=pe(s),u="number"==typeof e;if(u||e instanceof ye)n=(u?e:e.value)*a;else if("string"==typeof e){var l=new RegExp("[^-\\d"+o+"]","g"),c=new RegExp("\\"+o,"g");n=(n=e.replace(/\((.*)\)/,"-$1").replace(l,"").replace(c,".")*a)||0}else{if(i)throw Error("Invalid Input");n=0}return n=n.toFixed(4),r?fe(n):n}ye.prototype={add:function(e){var t=this.intValue,r=this.s,n=this.p;return ye((t+=de(e,r))/n,r)},subtract:function(e){var t=this.intValue,r=this.s,n=this.p;return ye((t-=de(e,r))/n,r)},multiply:function(e){var t=this.intValue,r=this.s;return ye((t*=e)/pe(r.precision),r)},divide:function(e){var t=this.intValue,r=this.s;return ye(t/=de(e,r,!1),r)},distribute:function(e){for(var t=this.intValue,r=this.p,n=this.s,o=[],i=Math[t>=0?"floor":"ceil"](t/e),s=Math.abs(t-i*e);0!==e;e--){var a=ye(i/r,n);s-- >0&&(a=t>=0?a.add(1/r):a.subtract(1/r)),o.push(a)}return o},dollars:function(){return~~this.value},cents:function(){return~~(this.intValue%this.p)},format:function(e){var t=this.s,r=t.pattern,n=t.negativePattern,o=t.formatWithSymbol,i=t.symbol,s=t.separator,a=t.decimal,u=t.groups,l=(this+"").replace(/^-/,"").split("."),c=l[0],f=l[1];return void 0===e&&(e=o),(this.value>=0?r:n).replace("!",e?i:"").replace("#","".concat(c.replace(u,"$1"+s)).concat(f?a+f:""))},toString:function(){var e,t,r=this.intValue,n=this.p,o=this.s;return(e=r/n,t=o.increment,fe(e/t)*t).toFixed(o.precision)},toJSON:function(){return this.value}};var me=Array.isArray;function be(e){return null!=e}var ve=["د.إ","؋","L","֏","ƒ","Kz","$","ƒ","₼","KM","৳","лв",".د.ب","FBu","$b","R$","฿","Nu.","P","p.","BZ$","FC","CHF","¥","₡","₱","Kč","Fdj","kr","RD$","دج","kr","Nfk","Br","Ξ","€","₾","₵","GH₵","D","FG","Q","L","kn","G","Ft","Rp","₪","₹","ع.د","﷼","kr","J$","JD","¥","KSh","лв","៛","CF","₩","₩","KD","лв","₭","₨","M","Ł","Lt","Ls","LD","MAD","lei","Ar","ден","K","₮","MOP$","UM","₨","Rf","MK","RM","MT","₦","C$","kr","₨","﷼","B/.","S/.","K","₱","₨","zł","Gs","﷼","￥","lei","Дин.","₽","R₣","﷼","₨","ج.س.","kr","£","Le","S","Db","E","฿","SM","T","د.ت","T$","₤","₺","TT$","NT$","TSh","₴","USh","$U","лв","Bs","₫","VT","WS$","FCFA","Ƀ","CFA","₣","﷼","R","Z$"];function _e(t){if("string"!=typeof t)throw new Error("csv-sort/util/findtype(): input must be string! Currently it's: ".concat(e(t)));return I(t)?"numeric":ve.some((function(e){return I(t.replace(e,"").replace(/[,.]/g,""))}))?"numeric":0===t.trim().length?"empty":"text"}return function(t){var r,n=null,o=null;if("string"==typeof t){if(0===t.length)return[[""]];r=function(e,t){let r=0,n=0,o=[];const i=[];let s=!1,a=!0;if(void 0!==t&&!d(t))throw new Error(`csv-split-easy/split(): [THROW_ID_02] Options object must be a plain object! Currently it's of a type ${typeof t} equal to:\n${JSON.stringify(t,null,4)}`);const u=Object.assign({},{removeThousandSeparatorsFromNumbers:!0,padSingleDecimalPlaceNumbers:!0,forceUKStyle:!1},t);if("string"!=typeof e)throw new TypeError(`csv-split-easy/split(): [THROW_ID_04] input must be string! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(""===e)return[[""]];for(let t=0,l=(e=e.trim()).length;t<l;t++){if(a&&'"'!==e[t]&&","!==e[t]&&""!==e[t].trim()&&(a=!1),'"'===e[t])if(s&&'"'===e[t+1])t+=1;else if(s){s=!1;const n=e.slice(r,t);""!==n.trim()&&(a=!1);const i=/""/.test(n)?n.replace(/""/g,'"'):te(n,{removeThousandSeparatorsFromNumbers:u.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:u.padSingleDecimalPlaceNumbers,forceUKStyle:u.forceUKStyle});o.push(i)}else s=!0,r=t+1;else if(s||","!==e[t])if("\n"===e[t]||"\r"===e[t]){if(!n){if(n=t,!s&&'"'!==e[t-1]){const n=e.slice(r,t);""!==n.trim()&&(a=!1),o.push(te(n,{removeThousandSeparatorsFromNumbers:u.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:u.padSingleDecimalPlaceNumbers,forceUKStyle:u.forceUKStyle}))}a?o=[]:i.push(o),a=!0,o=[]}r=t+1}else n&&(n=0,r=t);else{if('"'!==e[t-1]&&!s){const n=e.slice(r,t);""!==n.trim()&&(a=!1),o.push(te(n,{removeThousandSeparatorsFromNumbers:u.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:u.padSingleDecimalPlaceNumbers,forceUKStyle:u.forceUKStyle}))}r=t+1,n&&(n=0)}if(t+1===l){if('"'!==e[t]){const n=e.slice(r,t+1);""!==n.trim()&&(a=!1),o.push(te(n,{removeThousandSeparatorsFromNumbers:u.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:u.padSingleDecimalPlaceNumbers,forceUKStyle:u.forceUKStyle}))}a?o=[]:i.push(o),a=!0}}return 0===i.length?[[""]]:i}(t)}else{if(!me(t))throw new TypeError("csv-sort/csvSort(): [THROW_ID_02] The input is of a wrong type! We accept either string of array of arrays. We got instead: ".concat(e(t),", equal to:\n").concat(JSON.stringify(t,null,4)));var i,s;if(!t.every((function(e,t){return me(e)||(i=e,s=t),me(e)})))throw new TypeError("csv-sort/csvSort(): [THROW_ID_01] the input is array as expected, but not all of its children are arrays! For example, the element at index ".concat(s," is not array but: ").concat(e(i),", equal to:\n").concat(JSON.stringify(i,null,4)))}for(var a=null,u=!1,l=!0,c=[],f=null,p=r.length-1;p>=0;p--)if(a){0===p&&(u=r[p].every((function(e){return"text"===_e(e)||"empty"===_e(e)}))),u||a.length===r[p].length||(l=!1);for(var h=null,g=0,y=r[p].length;g<y;g++)if(null===h&&"empty"===_e(r[p][g].trim())&&(h=g),null!==h&&"empty"!==_e(r[p][g].trim())&&(h=null),_e(r[p][g].trim())!==a[g]&&!u){var m=_e(r[p][g].trim());if(me(a[g]))a[g].includes(m)||a[g].push(_e(r[p][g].trim()));else if(a[g]!==m){var b=a[g];a[g]=[],a[g].push(b),a[g].push(m)}}null!==f&&null!==h&&h>f&&(!u||u&&0!==p)&&(f=h)}else if(1!==r[p].length||""!==r[p][0]){a=[];for(var v=0,_=r[p].length;v<_;v++)a.push(_e(r[p][v].trim())),null===f&&"empty"===_e(r[p][v].trim())&&(f=v),null!==f&&"empty"!==_e(r[p][v].trim())&&(f=null)}f||(f=a.length);for(var w=0,T=0,j=a.length;T<j&&"empty"===a[T];T++)w=T;0!==w&&(r=r.map((function(e){return e.slice(w+1,f)})),a=a.slice(w+1,f));var S,O=[];a.forEach((function(e,t){"numeric"===e&&O.push(t)}));var $=u?1:0;if(1===O.length)S=O[0];else{if(0===O.length)throw new Error('csv-sort/csvSort(): [THROW_ID_03] Your CSV file does not contain numeric-only columns and computer was not able to detect the "Balance" column!');for(var N=Array.from(O),A=[],I=0,E=N.length;I<E;I++){for(var R=N[I],F=void 0,D=!0,W=void 0,x=!0,H=$,k=r.length;H<k&&(D&&(be(F)&&F===r[H][R]?(A.push(R),D=!1):F=r[H][R]),x&&(be(W)?r[H][R]!==W&&(x=!1):W=r[H][R]),D);H++);x&&c.push(R)}if(1===(N=le.apply(void 0,[N].concat(A))).length)S=N[0];else if(0===N.length)throw new Error('csv-sort/csvSort(): [THROW_ID_04] The computer can\'t find the "Balance" column! It saw some numeric-only columns, but they all seem to have certain rows with the same values as rows right below/above them!')}if(!S)throw new Error("csv-sort/csvSort(): [THROW_ID_05] Sadly computer couldn't find its way in this CSV and had to stop working on it.");var J=le.apply(void 0,[Array.from(a.reduce((function(e,t,r){return("string"==typeof t&&"numeric"===t||me(t)&&t.includes("numeric"))&&e.push(r),e}),[])),S].concat(c)),C=[];C.push(r[r.length-1].slice(0,f));for(var M=[],P=u?1:0,U=r.length-2;U>=P;U--)for(var B=r.length-2;B>=P;B--)if(!M.includes(B)){for(var K=!1,q=0,Z=J.length;q<Z;q++){var V=null;""!==r[B][J[q]]&&(V=ye(r[B][J[q]]));var L=null;""!==r[B][S]&&(L=ye(r[B][S]));var z=null;""!==C[0][S]&&(z=ye(C[0][S]).format());var G=null;""!==C[C.length-1][J[q]]&&(G=ye(C[C.length-1][J[q]]).format());var Q=null;if(""!==C[C.length-1][S]&&(Q=ye(C[C.length-1][S])),V&&L.add(V).format()===z){C.unshift(r[B].slice(0,f)),M.push(B),K=!0;break}if(V&&L.subtract(V).format()===z){C.unshift(r[B].slice(0,f)),M.push(B),K=!0;break}if(G&&Q.add(G).format()===L.format()){C.push(r[B].slice(0,f)),M.push(B),K=!0;break}if(G&&Q.subtract(G).format()===L.format()){C.push(r[B].slice(0,f)),M.push(B),K=!0;break}}if(K){K=!1;break}}return u&&(l&&r[0].length>a.length&&(r[0].length=a.length),C.unshift(r[0].slice(0,f))),r.length-(u?2:1)!==M.length&&(n="Not all rows were recognised!",o="alert"),{res:C,msgContent:n,msgType:o}}}));
