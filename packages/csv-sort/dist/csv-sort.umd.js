/**
 * csv-sort
 * Sorts double-entry bookkeeping CSV coming from internet banking
 * Version: 3.0.65
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/csv-sort
 */

!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e="undefined"!=typeof globalThis?globalThis:e||self).csvSort=r()}(this,(function(){"use strict";function e(r){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(r)}function r(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function t(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?n(Object(o),!0).forEach((function(r){t(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function i(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,r){if(!e)return;if("string"==typeof e)return a(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return a(e,r)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function s(e,r){if(!Array.isArray(e)||!e.length)return e;var t,n,i=o(o({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null}),r);if(i.strictlyTwoElementsInRangeArrays&&!e.every((function(e,r){return 2===e.length||(t=r,n=e.length,!1)})))throw new TypeError("ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ".concat(t,"th range (").concat(JSON.stringify(e[t],null,4),") has not two but ").concat(n," elements!"));if(!e.every((function(e,r){return!(!Number.isInteger(e[0])||e[0]<0||!Number.isInteger(e[1])||e[1]<0)||(t=r,!1)})))throw new TypeError("ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ".concat(t,"th range (").concat(JSON.stringify(e[t],null,4),") does not consist of only natural numbers!"));var a=e.length*e.length,s=0;return Array.from(e).sort((function(e,r){return i.progressFn&&(s+=1,i.progressFn(Math.floor(100*s/a))),e[0]===r[0]?e[1]<r[1]?-1:e[1]>r[1]?1:0:e[0]<r[0]?-1:1}))}function u(r,t){function n(e){return"string"==typeof e}function a(r){return r&&"object"===e(r)&&!Array.isArray(r)}if(!Array.isArray(r)||!r.length)return r;var u,l={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};if(t){if(!a(t))throw new Error("emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n".concat(JSON.stringify(t,null,4)," (type ").concat(e(t),")"));if((u=o(o({},l),t)).progressFn&&a(u.progressFn)&&!Object.keys(u.progressFn).length)u.progressFn=null;else if(u.progressFn&&"function"!=typeof u.progressFn)throw new Error('ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "'.concat(e(u.progressFn),'", equal to ').concat(JSON.stringify(u.progressFn,null,4)));if(u.mergeType&&1!==u.mergeType&&2!==u.mergeType)if(n(u.mergeType)&&"1"===u.mergeType.trim())u.mergeType=1;else{if(!n(u.mergeType)||"2"!==u.mergeType.trim())throw new Error('ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "'.concat(e(u.mergeType),'", equal to ').concat(JSON.stringify(u.mergeType,null,4)));u.mergeType=2}if("boolean"!=typeof u.joinRangesThatTouchEdges)throw new Error('ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "'.concat(e(u.joinRangesThatTouchEdges),'", equal to ').concat(JSON.stringify(u.joinRangesThatTouchEdges,null,4)))}else u=o({},l);for(var c,f,p,h=r.map((function(e){return i(e)})).filter((function(e){return void 0!==e[2]||e[0]!==e[1]})),g=(c=u.progressFn?s(h,{progressFn:function(e){(p=Math.floor(e/5))!==f&&(f=p,u.progressFn(p))}}):s(h)).length-1,y=g;y>0;y--)u.progressFn&&(p=Math.floor(78*(1-y/g))+21)!==f&&p>f&&(f=p,u.progressFn(p)),(c[y][0]<=c[y-1][0]||!u.joinRangesThatTouchEdges&&c[y][0]<c[y-1][1]||u.joinRangesThatTouchEdges&&c[y][0]<=c[y-1][1])&&(c[y-1][0]=Math.min(c[y][0],c[y-1][0]),c[y-1][1]=Math.max(c[y][1],c[y-1][1]),void 0!==c[y][2]&&(c[y-1][0]>=c[y][0]||c[y-1][1]<=c[y][1])&&null!==c[y-1][2]&&(null===c[y][2]&&null!==c[y-1][2]?c[y-1][2]=null:void 0!==c[y-1][2]?2===u.mergeType&&c[y-1][0]===c[y][0]?c[y-1][2]=c[y][2]:c[y-1][2]+=c[y][2]:c[y-1][2]=c[y][2]),c.splice(y,1),y=c.length);return c}function l(e){return null!=e}function c(e){return"string"==typeof e}function f(e){var r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=arguments.length>2?arguments[2]:void 0;if(!(t.trim()||e.length&&"\n"!==t&&" "!==t&&" "===(r?e[e.length-1]:e[0])||e.length&&"\n"===(r?e[e.length-1]:e[0])&&"\n"!==t&&" "!==t))if(r){if(("\n"===t||" "===t)&&e.length&&" "===e[e.length-1])for(;e.length&&" "===e[e.length-1];)e.pop();e.push(" "===t||"\n"===t?t:" ")}else{if(("\n"===t||" "===t)&&e.length&&" "===e[0])for(;e.length&&" "===e[0];)e.shift();e.unshift(" "===t||"\n"===t?t:" ")}}function p(e,r){if("string"==typeof e&&e.length){var t,n,o=!1;if(e.includes("\r\n")&&(o=!0),t=r&&"number"==typeof r?r:1,""===e.trim()){var i=[];for(n=t,Array.from(e).forEach((function(e){("\n"!==e||n)&&("\n"===e&&(n-=1),f(i,!0,e))}));i.length>1&&" "===i[i.length-1];)i.pop();return i.join("")}var a=[];if(n=t,""===e[0].trim())for(var s=0,u=e.length;s<u&&!e[s].trim();s++)("\n"!==e[s]||n)&&("\n"===e[s]&&(n-=1),f(a,!0,e[s]));var l=[];if(n=t,""===e.slice(-1).trim())for(var c=e.length;c--&&!e[c].trim();)("\n"!==e[c]||n)&&("\n"===e[c]&&(n-=1),f(l,!1,e[c]));return o?"".concat(a.join("")).concat(e.trim()).concat(l.join("")).replace(/\n/g,"\r\n"):a.join("")+e.trim()+l.join("")}return e}function h(e){return null!=e}function g(e){return Number.isInteger(e)&&e>=0}function y(e){return"string"==typeof e}function m(e){return/^\d*$/.test(e)?parseInt(e,10):e}var d=function(){function t(r){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,t);var n=o(o({},{limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1}),r);if(n.mergeType&&1!==n.mergeType&&2!==n.mergeType)if(y(n.mergeType)&&"1"===n.mergeType.trim())n.mergeType=1;else{if(!y(n.mergeType)||"2"!==n.mergeType.trim())throw new Error('ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "'.concat(e(n.mergeType),'", equal to ').concat(JSON.stringify(n.mergeType,null,4)));n.mergeType=2}this.opts=n}var n,a,s;return n=t,(a=[{key:"add",value:function(r,t,n){for(var o=this,a=arguments.length,s=new Array(a>3?a-3:0),u=3;u<a;u++)s[u-3]=arguments[u];if(s.length>0)throw new TypeError("ranges-push/Ranges/add(): [THROW_ID_03] Please don't overload the add() method. From the 4th input argument onwards we see these redundant arguments: ".concat(JSON.stringify(s,null,4)));if(h(r)||h(t)){if(h(r)&&!h(t)){if(Array.isArray(r)){if(r.length){if(r.some((function(e){return Array.isArray(e)})))return void r.forEach((function(e){Array.isArray(e)&&o.add.apply(o,i(e))}));r.length>1&&g(m(r[0]))&&g(m(r[1]))&&this.add.apply(this,i(r))}return}throw new TypeError('ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set ('.concat(JSON.stringify(r,null,0),') but second-one, "to" is not (').concat(JSON.stringify(t,null,0),")"))}if(!h(r)&&h(t))throw new TypeError('ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set ('.concat(JSON.stringify(t,null,0),') but first-one, "from" is not (').concat(JSON.stringify(r,null,0),")"));var l=/^\d*$/.test(r)?parseInt(r,10):r,c=/^\d*$/.test(t)?parseInt(t,10):t;if(g(n)&&(n=String(n)),!g(l)||!g(c))throw g(l)&&l>=0?new TypeError('ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it\'s of a type "'.concat(e(c),'" equal to: ').concat(JSON.stringify(c,null,4))):new TypeError('ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it\'s of a type "'.concat(e(l),'" equal to: ').concat(JSON.stringify(l,null,4)));if(h(n)&&!y(n)&&!g(n))throw new TypeError("ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ".concat(e(n),", equal to:\n").concat(JSON.stringify(n,null,4)));if(h(this.slices)&&Array.isArray(this.last())&&l===this.last()[1]){if(this.last()[1]=c,this.last()[2],null!==this.last()[2]&&h(n)){var f=!(h(this.last()[2])&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&1!==this.opts.mergeType?n:this.last()[2]+n;this.opts.limitToBeAddedWhitespace&&(f=p(f,this.opts.limitLinebreaksCount)),y(f)&&!f.length||(this.last()[2]=f)}}else{this.slices||(this.slices=[]);var d=void 0===n||y(n)&&!n.length?[l,c]:[l,c,this.opts.limitToBeAddedWhitespace?p(n,this.opts.limitLinebreaksCount):n];this.slices.push(d)}}}},{key:"push",value:function(e,r,t){for(var n=arguments.length,o=new Array(n>3?n-3:0),i=3;i<n;i++)o[i-3]=arguments[i];this.add.apply(this,[e,r,t].concat(o))}},{key:"current",value:function(){var e=this;return null!=this.slices?(this.slices=u(this.slices,{mergeType:this.opts.mergeType}),this.opts.limitToBeAddedWhitespace?this.slices.map((function(r){return h(r[2])?[r[0],r[1],p(r[2],e.opts.limitLinebreaksCount)]:r})):this.slices):null}},{key:"wipe",value:function(){this.slices=void 0}},{key:"replace",value:function(e){if(Array.isArray(e)&&e.length){if(!Array.isArray(e[0])||!g(e[0][0]))throw new Error("ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ".concat(JSON.stringify(e[0],null,4)," should be an array and its first element should be an integer, a string index."));this.slices=Array.from(e)}else this.slices=void 0}},{key:"last",value:function(){return void 0!==this.slices&&Array.isArray(this.slices)?this.slices[this.slices.length-1]:null}}])&&r(n.prototype,a),s&&r(n,s),t}();var v,b,T=Function.prototype,w=Object.prototype,S=T.toString,O=w.hasOwnProperty,N=S.call(Object),A=w.toString,j=(v=Object.getPrototypeOf,b=Object,function(e){return v(b(e))});var _=function(r){if(!function(r){return!!r&&"object"==e(r)}(r)||"[object Object]"!=A.call(r)||function(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}(r))return!1;var t=j(r);if(null===t)return!0;var n=O.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&S.call(n)==N},I="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};var R=function(e,r,t){return e(t={path:r,exports:{},require:function(e,r){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==r&&t.path)}},t.exports),t.exports}((function(e,r){!function(t){function n(e,r){return r instanceof Object||(r={trim:!0}),"number"==typeof e&&!isNaN(e)||(e=(e||"").toString(),"trim"in r&&!r.trim?!/\s/.test(e):!!(e=e.trim())&&!isNaN(e))}e.exports&&(r=e.exports=n),r.isNumeric=n}()})),E=/^\s+|\s+$/g,D="[\\ud800-\\udfff]",F="[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]",W="\\ud83c[\\udffb-\\udfff]",k="[^\\ud800-\\udfff]",H="(?:\\ud83c[\\udde6-\\uddff]){2}",C="[\\ud800-\\udbff][\\udc00-\\udfff]",J="(?:"+F+"|"+W+")"+"?",P="[\\ufe0e\\ufe0f]?"+J+("(?:\\u200d(?:"+[k,H,C].join("|")+")[\\ufe0e\\ufe0f]?"+J+")*"),x="(?:"+[k+F+"?",F,H,C,D].join("|")+")",$=RegExp(W+"(?="+W+")|"+x+P,"g"),M=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"),q="object"==e(I)&&I&&I.Object===Object&&I,K="object"==("undefined"==typeof self?"undefined":e(self))&&self&&self.Object===Object&&self,U=q||K||Function("return this")();function V(e,r,t){if(r!=r)return function(e,r,t,n){for(var o=e.length,i=t+(n?1:-1);n?i--:++i<o;)if(r(e[i],i,e))return i;return-1}(e,B,t);for(var n=t-1,o=e.length;++n<o;)if(e[n]===r)return n;return-1}function B(e){return e!=e}function L(e){return function(e){return M.test(e)}(e)?function(e){return e.match($)||[]}(e):function(e){return e.split("")}(e)}var z=Object.prototype.toString,G=U.Symbol,Z=G?G.prototype:void 0,Q=Z?Z.toString:void 0;function Y(r){if("string"==typeof r)return r;if(function(r){return"symbol"==e(r)||function(r){return!!r&&"object"==e(r)}(r)&&"[object Symbol]"==z.call(r)}(r))return Q?Q.call(r):"";var t=r+"";return"0"==t&&1/r==-1/0?"-0":t}function X(e,r,t){var n=e.length;return t=void 0===t?n:t,!r&&t>=n?e:function(e,r,t){var n=-1,o=e.length;r<0&&(r=-r>o?0:o+r),(t=t>o?o:t)<0&&(t+=o),o=r>t?0:t-r>>>0,r>>>=0;for(var i=Array(o);++n<o;)i[n]=e[n+r];return i}(e,r,t)}var ee=function(e,r,t){var n;if((e=null==(n=e)?"":Y(n))&&(t||void 0===r))return e.replace(E,"");if(!e||!(r=Y(r)))return e;var o=L(e),i=L(r);return X(o,function(e,r){for(var t=-1,n=e.length;++t<n&&V(r,e[t],0)>-1;);return t}(o,i),function(e,r){for(var t=e.length;t--&&V(r,e[t],0)>-1;);return t}(o,i)+1).join("")};function re(r,t){var n,i=!0,a=[".",",","'"," "];if("string"!=typeof r)throw new TypeError("string-remove-thousand-separators/remSep(): [THROW_ID_01] Input must be string! Currently it's: ".concat(e(r),", equal to:\n").concat(JSON.stringify(r,null,4)));if(null!=t&&!_(t))throw new TypeError("string-remove-thousand-separators/remSep(): [THROW_ID_02] Options object must be a plain object! Currently it's: ".concat(e(t),", equal to:\n").concat(JSON.stringify(t,null,4)));var s=o(o({},{removeThousandSeparatorsFromNumbers:!0,padSingleDecimalPlaceNumbers:!0,forceUKStyle:!1}),t),f=ee(r.trim(),'"');if(""===f)return f;for(var p=new d,h=0,g=f.length;h<g;h++){if(s.removeThousandSeparatorsFromNumbers&&""===f[h].trim()&&p.add(h,h+1),s.removeThousandSeparatorsFromNumbers&&"'"===f[h]&&(p.add(h,h+1),"'"===f[h+1])){i=!1;break}if(a.includes(f[h])){if(void 0!==f[h+1]&&R(f[h+1]))if(void 0!==f[h+2]){if(!R(f[h+2])){i=!1;break}if(void 0!==f[h+3]){if(!R(f[h+3])){i=!1;break}if(void 0!==f[h+4]&&R(f[h+4])){i=!1;break}if(s.removeThousandSeparatorsFromNumbers&&p.add(h,h+1),n){if(f[h]!==n){i=!1;break}}else n=f[h]}else s.removeThousandSeparatorsFromNumbers&&s.forceUKStyle&&","===f[h]&&p.add(h,h+1,".")}else s.forceUKStyle&&","===f[h]&&p.add(h,h+1,"."),s.padSingleDecimalPlaceNumbers&&p.add(h+2,h+2,"0")}else if(!R(f[h])){i=!1;break}}return i&&p.current()?function(r,t,n){var o,i=0,a=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(!c(r))throw new TypeError("ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ".concat(e(r),", equal to: ").concat(JSON.stringify(r,null,4)));if(null===t)return r;if(!Array.isArray(t))throw new TypeError("ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ".concat(e(t),", equal to: ").concat(JSON.stringify(t,null,4)));if(n&&"function"!=typeof n)throw new TypeError("ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ".concat(e(n),", equal to: ").concat(JSON.stringify(n,null,4)));var s=(o=Array.isArray(t)&&(Number.isInteger(t[0])&&t[0]>=0||/^\d*$/.test(t[0]))&&(Number.isInteger(t[1])&&t[1]>=0||/^\d*$/.test(t[1]))?[Array.from(t)]:Array.from(t)).length,f=0;o.forEach((function(r,t){if(n&&(i=Math.floor(f/s*10))!==a&&(a=i,n(i)),!Array.isArray(r))throw new TypeError("ranges-apply: [THROW_ID_05] ranges array, second input arg., has ".concat(t,"th element not an array: ").concat(JSON.stringify(r,null,4),", which is ").concat(e(r)));if(!Number.isInteger(r[0])||r[0]<0){if(!/^\d*$/.test(r[0]))throw new TypeError("ranges-apply: [THROW_ID_06] ranges array, second input arg. has ".concat(t,"th element, array [").concat(r[0],",").concat(r[1],"]. That array has first element not an integer, but ").concat(e(r[0]),", equal to: ").concat(JSON.stringify(r[0],null,4),". Computer doesn't like this."));o[t][0]=Number.parseInt(o[t][0],10)}if(!Number.isInteger(r[1])){if(!/^\d*$/.test(r[1]))throw new TypeError("ranges-apply: [THROW_ID_07] ranges array, second input arg. has ".concat(t,"th element, array [").concat(r[0],",").concat(r[1],"]. That array has second element not an integer, but ").concat(e(r[1]),", equal to: ").concat(JSON.stringify(r[1],null,4),". Computer doesn't like this."));o[t][1]=Number.parseInt(o[t][1],10)}f+=1}));var p=u(o,{progressFn:function(e){n&&(i=10+Math.floor(e/10))!==a&&(a=i,n(i))}}),h=p.length;if(h>0){var g=r.slice(p[h-1][1]);r=p.reduce((function(e,t,o,s){n&&(i=20+Math.floor(o/h*80))!==a&&(a=i,n(i));var u=0===o?0:s[o-1][1],c=s[o][0];return e+r.slice(u,c)+(l(s[o][2])?s[o][2]:"")}),""),r+=g}return r}(f,p.current()):f}function te(e,r,t){switch(t.length){case 0:return e.call(r);case 1:return e.call(r,t[0]);case 2:return e.call(r,t[0],t[1]);case 3:return e.call(r,t[0],t[1],t[2])}return e.apply(r,t)}function ne(e,r,t){if(r!=r)return function(e,r,t,n){for(var o=e.length,i=t+(n?1:-1);n?i--:++i<o;)if(r(e[i],i,e))return i;return-1}(e,ie,t);for(var n=t-1,o=e.length;++n<o;)if(e[n]===r)return n;return-1}function oe(e,r,t,n){for(var o=t-1,i=e.length;++o<i;)if(n(e[o],r))return o;return-1}function ie(e){return e!=e}var ae=Array.prototype.splice,se=Math.max;function ue(e,r,t,n){var o=n?oe:ne,i=-1,a=r.length,s=e;for(e===r&&(r=function(e,r){var t=-1,n=e.length;r||(r=Array(n));for(;++t<n;)r[t]=e[t];return r}(r)),t&&(s=function(e,r){for(var t=-1,n=e?e.length:0,o=Array(n);++t<n;)o[t]=r(e[t],t,e);return o}(e,function(e){return function(r){return e(r)}}(t)));++i<a;)for(var u=0,l=r[i],c=t?t(l):l;(u=o(s,c,u,n))>-1;)s!==e&&ae.call(s,u,1),ae.call(e,u,1);return e}var le=function(e,r){return r=se(void 0===r?e.length-1:r,0),function(){for(var t=arguments,n=-1,o=se(t.length-r,0),i=Array(o);++n<o;)i[n]=t[r+n];n=-1;for(var a=Array(r+1);++n<r;)a[n]=t[n];return a[r]=i,te(e,this,a)}}((function(e,r){return e&&e.length&&r&&r.length?ue(e,r):e})),ce={symbol:"$",separator:",",decimal:".",errorOnInvalid:!1,precision:2,pattern:"!#",negativePattern:"-!#",format:function(e,r){var t=r.pattern,n=r.negativePattern,o=r.symbol,i=r.separator,a=r.decimal,s=r.groups,u=(""+e).replace(/^-/,"").split("."),l=u[0],c=u[1];return(e.value>=0?t:n).replace("!",o).replace("#",l.replace(s,"$1"+i)+(c?a+c:""))},fromCents:!1},fe=function(e){return Math.round(e)},pe=function(e){return Math.pow(10,e)},he=/(\d)(?=(\d{3})+\b)/g,ge=/(\d)(?=(\d\d)+\d\b)/g;
/*!
   * currency.js - v2.0.3
   * http://scurker.github.io/currency.js
   *
   * Copyright (c) 2020 Jason Wilson
   * Released under MIT license
   */function ye(e,r){if(!(this instanceof ye))return new ye(e,r);var t=Object.assign({},ce,r),n=pe(t.precision),o=me(e,t);this.intValue=o,this.value=o/n,t.increment=t.increment||1/n,t.useVedic?t.groups=ge:t.groups=he,this.s=t,this.p=n}function me(e,r){var t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=0,o=r.decimal,i=r.errorOnInvalid,a=r.precision,s=r.fromCents,u=pe(a),l="number"==typeof e,c=e instanceof ye;if(c&&s)return e.intValue;if(l||c)n=c?e.value:e;else if("string"==typeof e){var f=new RegExp("[^-\\d"+o+"]","g"),p=new RegExp("\\"+o,"g");n=(n=e.replace(/\((.*)\)/,"-$1").replace(f,"").replace(p,"."))||0}else{if(i)throw Error("Invalid Input");n=0}return s||(n=(n*=u).toFixed(4)),t?fe(n):n}function de(e){return null!=e}ye.prototype={add:function(e){var r=this.intValue,t=this.s,n=this.p;return ye((r+=me(e,t))/(t.fromCents?1:n),t)},subtract:function(e){var r=this.intValue,t=this.s,n=this.p;return ye((r-=me(e,t))/(t.fromCents?1:n),t)},multiply:function(e){var r=this.intValue,t=this.s;return ye((r*=e)/(t.fromCents?1:pe(t.precision)),t)},divide:function(e){var r=this.intValue,t=this.s;return ye(r/=me(e,t,!1),t)},distribute:function(e){for(var r=this.intValue,t=this.p,n=this.s,o=[],i=Math[r>=0?"floor":"ceil"](r/e),a=Math.abs(r-i*e),s=n.fromCents?1:t;0!==e;e--){var u=ye(i/s,n);a-- >0&&(u=u[r>=0?"add":"subtract"](1/s)),o.push(u)}return o},dollars:function(){return~~this.value},cents:function(){return~~(this.intValue%this.p)},format:function(e){var r=this.s;return"function"==typeof e?e(this,r):r.format(this,Object.assign({},r,e))},toString:function(){var e,r,t=this.intValue,n=this.p,o=this.s;return(e=t/n,r=o.increment,fe(e/r)*r).toFixed(o.precision)},toJSON:function(){return this.value}};var ve=["د.إ","؋","L","֏","ƒ","Kz","$","ƒ","₼","KM","৳","лв",".د.ب","FBu","$b","R$","฿","Nu.","P","p.","BZ$","FC","CHF","¥","₡","₱","Kč","Fdj","kr","RD$","دج","kr","Nfk","Br","Ξ","€","₾","₵","GH₵","D","FG","Q","L","kn","G","Ft","Rp","₪","₹","ع.د","﷼","kr","J$","JD","¥","KSh","лв","៛","CF","₩","₩","KD","лв","₭","₨","M","Ł","Lt","Ls","LD","MAD","lei","Ar","ден","K","₮","MOP$","UM","₨","Rf","MK","RM","MT","₦","C$","kr","₨","﷼","B/.","S/.","K","₱","₨","zł","Gs","﷼","￥","lei","Дин.","₽","R₣","﷼","₨","ج.س.","kr","£","Le","S","Db","E","฿","SM","T","د.ت","T$","₤","₺","TT$","NT$","TSh","₴","USh","$U","лв","Bs","₫","VT","WS$","FCFA","Ƀ","CFA","₣","﷼","R","Z$"];function be(r){if("string"!=typeof r)throw new Error("csv-sort/util/findtype(): input must be string! Currently it's: ".concat(e(r)));return R(r)||ve.some((function(e){return R(r.replace(e,"").replace(/[,.]/g,""))}))?"numeric":r.trim()?"text":"empty"}return function(r){var t,n=null,i=null;if("string"==typeof r){if(0===r.length)return[[""]];t=function(r,t){var n=0,i=0,a=[],s=[],u=!1,l=!0;if(t&&"object"!==e(t))throw new Error("csv-split-easy/split(): [THROW_ID_02] Options object must be a plain object! Currently it's of a type ".concat(e(t)," equal to:\n").concat(JSON.stringify(t,null,4)));var c=o(o({},{removeThousandSeparatorsFromNumbers:!0,padSingleDecimalPlaceNumbers:!0,forceUKStyle:!1}),t);if("string"!=typeof r)throw new TypeError("csv-split-easy/split(): [THROW_ID_04] input must be string! Currently it's: ".concat(e(r),", equal to: ").concat(JSON.stringify(r,null,4)));if(""===r)return[[""]];for(var f=0,p=(r=r.trim()).length;f<p;f++){if(l&&'"'!==r[f]&&","!==r[f]&&""!==r[f].trim()&&(l=!1),'"'===r[f])if(u&&'"'===r[f+1])f+=1;else if(u){u=!1;var h=r.slice(n,f);""!==h.trim()&&(l=!1);var g=/""/.test(h)?h.replace(/""/g,'"'):re(h,{removeThousandSeparatorsFromNumbers:c.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:c.padSingleDecimalPlaceNumbers,forceUKStyle:c.forceUKStyle});a.push(g)}else u=!0,n=f+1;else if(u||","!==r[f])if("\n"===r[f]||"\r"===r[f]){if(!i){if(i=f,!u&&'"'!==r[f-1]){var y=r.slice(n,f);""!==y.trim()&&(l=!1),a.push(re(y,{removeThousandSeparatorsFromNumbers:c.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:c.padSingleDecimalPlaceNumbers,forceUKStyle:c.forceUKStyle}))}l?a.length=0:s.push(a),l=!0,a=[]}n=f+1}else i&&(i=0,n=f);else{if('"'!==r[f-1]&&!u){var m=r.slice(n,f);""!==m.trim()&&(l=!1),a.push(re(m,{removeThousandSeparatorsFromNumbers:c.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:c.padSingleDecimalPlaceNumbers,forceUKStyle:c.forceUKStyle}))}n=f+1,i&&(i=0)}if(f+1===p){if('"'!==r[f]){var d=r.slice(n,f+1);d.trim()&&(l=!1),a.push(re(d,{removeThousandSeparatorsFromNumbers:c.removeThousandSeparatorsFromNumbers,padSingleDecimalPlaceNumbers:c.padSingleDecimalPlaceNumbers,forceUKStyle:c.forceUKStyle}))}l?a=[]:s.push(a),l=!0}}return 0===s.length?[[""]]:s}(r)}else{if(!Array.isArray(r))throw new TypeError("csv-sort/csvSort(): [THROW_ID_02] The input is of a wrong type! We accept either string of array of arrays. We got instead: ".concat(e(r),", equal to:\n").concat(JSON.stringify(r,null,4)));var a,s;if(!r.every((function(e,r){return Array.isArray(e)||(a=e,s=r),Array.isArray(e)})))throw new TypeError("csv-sort/csvSort(): [THROW_ID_01] the input is array as expected, but not all of its children are arrays! For example, the element at index ".concat(s," is not array but: ").concat(e(a),", equal to:\n").concat(JSON.stringify(a,null,4)))}for(var u=null,l=!1,c=!0,f=[],p=null,h=t.length-1;h>=0;h--)if(u){0===h&&(l=t[h].every((function(e){return"text"===be(e)||"empty"===be(e)}))),l||u.length===t[h].length||(c=!1);for(var g=null,y=0,m=t[h].length;y<m;y++)if(null===g&&"empty"===be(t[h][y].trim())&&(g=y),null!==g&&"empty"!==be(t[h][y].trim())&&(g=null),be(t[h][y].trim())!==u[y]&&!l){var d=be(t[h][y].trim());if(Array.isArray(u[y]))u[y].includes(d)||u[y].push(be(t[h][y].trim()));else if(u[y]!==d){var v=u[y];u[y]=[],u[y].push(v),u[y].push(d)}}null!==p&&null!==g&&g>p&&(!l||l&&0!==h)&&(p=g)}else if(1!==t[h].length||""!==t[h][0]){u=[];for(var b=0,T=t[h].length;b<T;b++)u.push(be(t[h][b].trim())),null===p&&"empty"===be(t[h][b].trim())&&(p=b),null!==p&&"empty"!==be(t[h][b].trim())&&(p=null)}p||(p=u.length);for(var w=0,S=0,O=u.length;S<O&&"empty"===u[S];S++)w=S;0!==w&&(t=t.map((function(e){return e.slice(w+1,p)})),u=u.slice(w+1,p));var N,A=[];u.forEach((function(e,r){"numeric"===e&&A.push(r)}));var j=l?1:0;if(1===A.length)N=A[0];else{if(0===A.length)throw new Error('csv-sort/csvSort(): [THROW_ID_03] Your CSV file does not contain numeric-only columns and computer was not able to detect the "Balance" column!');for(var _=Array.from(A),I=[],R=0,E=_.length;R<E;R++){for(var D=_[R],F=void 0,W=!0,k=void 0,H=!0,C=j,J=t.length;C<J&&(W&&(de(F)&&F===t[C][D]?(I.push(D),W=!1):F=t[C][D]),H&&(de(k)?t[C][D]!==k&&(H=!1):k=t[C][D]),W);C++);H&&f.push(D)}if(1===(_=le.apply(void 0,[_].concat(I))).length)N=_[0];else if(0===_.length)throw new Error('csv-sort/csvSort(): [THROW_ID_04] The computer can\'t find the "Balance" column! It saw some numeric-only columns, but they all seem to have certain rows with the same values as rows right below/above them!')}if(!N)throw new Error("csv-sort/csvSort(): [THROW_ID_05] Sadly computer couldn't find its way in this CSV and had to stop working on it.");var P=le.apply(void 0,[Array.from(u.reduce((function(e,r,t){return("string"==typeof r&&"numeric"===r||Array.isArray(r)&&r.includes("numeric"))&&e.push(t),e}),[])),N].concat(f)),x=[];x.push(t[t.length-1].slice(0,p));for(var $=[],M=l?1:0,q=t.length-2;q>=M;q--)for(var K=t.length-2;K>=M;K--)if(!$.includes(K)){for(var U=!1,V=0,B=P.length;V<B;V++){var L=null;""!==t[K][P[V]]&&(L=ye(t[K][P[V]]));var z=null;""!==t[K][N]&&(z=ye(t[K][N]));var G=null;""!==x[0][N]&&(G=ye(x[0][N]).format());var Z=null;""!==x[x.length-1][P[V]]&&(Z=ye(x[x.length-1][P[V]]).format());var Q=null;if(""!==x[x.length-1][N]&&(Q=ye(x[x.length-1][N])),L&&z.add(L).format()===G){x.unshift(t[K].slice(0,p)),$.push(K),U=!0;break}if(L&&z.subtract(L).format()===G){x.unshift(t[K].slice(0,p)),$.push(K),U=!0;break}if(Z&&Q.add(Z).format()===z.format()){x.push(t[K].slice(0,p)),$.push(K),U=!0;break}if(Z&&Q.subtract(Z).format()===z.format()){x.push(t[K].slice(0,p)),$.push(K),U=!0;break}}if(U){U=!1;break}}return l&&(c&&t[0].length>u.length&&(t[0].length=u.length),x.unshift(t[0].slice(0,p))),t.length-(l?2:1)!==$.length&&(n="Not all rows were recognised!",i="alert"),{res:x,msgContent:n,msgType:i}}}));
