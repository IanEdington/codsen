{"_quickTake.js":{"title":"Quick Take","content":"import { strict as assert } from \"assert\";\nimport extractVars from \"string-extract-sass-vars\";\n\nassert.deepEqual(\n  extractVars(`// all variables are here!!!\n// ------------------------------------------\n$red: #ff6565; // this is red\n// $green: #63ffbd; // no green here\n$yellow: #ffff65; // this is yellow\n$blue: #08f0fd; // this is blue\n$fontfamily: Helvetica, sans-serif;\n$border: 1px solid #dedede;\n$borderroundedness: 3px;\n$customValue1: tralala;\n$customValue2: tralala;\n// don't mind this comment about #ff6565;\n$customValue3: 10;`),\n  {\n    red: \"#ff6565\",\n    yellow: \"#ffff65\",\n    blue: \"#08f0fd\",\n    fontfamily: \"Helvetica, sans-serif\",\n    border: \"1px solid #dedede\",\n    borderroundedness: \"3px\",\n    customValue1: \"tralala\",\n    customValue2: \"tralala\",\n    customValue3: 10,\n  }\n);"},"opts-cb.js":{"title":"Quick Take","content":"import { strict as assert } from \"assert\";\nimport extractVars from \"string-extract-sass-vars\";\n// import \"color-shorthand-hex-to-six-digit\" to convert three-digit colour hex\n// codes to six-digit:\nimport conv from \"color-shorthand-hex-to-six-digit\";\n\nassert.deepEqual(\n  extractVars(\"$blue: #ccc;\", {\n    throwIfEmpty: true,\n    cb: (val) => conv(val), // converts hex codes only, bypasses the rest\n  }),\n  { blue: \"#cccccc\" }\n);"},"throw-if-empty.js":{"title":"Raise alarm if variables file has been wiped","content":"import { strict as assert } from \"assert\";\nimport extractVars from \"string-extract-sass-vars\";\n\nassert.throws(() =>\n  extractVars(\"\", {\n    throwIfEmpty: true,\n  })\n);"}}