/**
 * is-html-attribute-closing
 * Is a character on a given index a closing of an HTML attribute?
 * Version: 1.0.0
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/is-html-attribute-closing
 */

!function(o,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(o=o||self).isHtmlAttributeClosing=e()}(this,(function(){"use strict";const o=new Set(["abbr","accept","accept-charset","accesskey","action","align","alink","allow","alt","archive","async","autocapitalize","autocomplete","autofocus","autoplay","axis","background","background-attachment","background-color","background-image","background-position","background-position-x","background-position-y","background-repeat","bgcolor","border","border-bottom","border-bottom-color","border-bottom-style","border-bottom-width","border-collapse","border-color","border-left","border-left-color","border-left-style","border-left-width","border-right","border-right-color","border-right-style","border-right-width","border-style","border-top","border-top-color","border-top-style","border-top-width","border-width","buffered","capture","cellpadding","cellspacing","challenge","char","charoff","charset","checked","cite","class","classid","clear","clip","code","codebase","codetype","color","cols","colspan","column-span","compact","content","contenteditable","contextmenu","controls","coords","crossorigin","csp","cursor","data","data-*","datetime","declare","decoding","default","defer","dir","direction","dirname","disabled","display","download","draggable","dropzone","enctype","enterkeyhint","face","filter","float","font","font-color","font-emphasize","font-emphasize-position","font-emphasize-style","font-family","font-size","font-style","font-variant","font-weight","for","form","formaction","formenctype","formmethod","formnovalidate","formtarget","frame","frameborder","frontuid","headers","height","hidden","high","horiz-align","href","hreflang","hspace","http-equiv","icon","id","importance","inputmode","integrity","intrinsicsize","ismap","itemprop","keytype","kind","label","lang","language","layout-flow","layout-grid","layout-grid-char","layout-grid-line","layout-grid-mode","layout-grid-type","left","letter-spacing","line-break","line-height","link","list","list-image-1","list-image-2","list-image-3","list-style","list-style-image","list-style-position","list-style-type","loading","longdesc","loop","low","manifest","margin","margin-bottom","margin-left","margin-right","margin-top","marginheight","marginwidth","max","maxlength","media","method","min","minlength","mso-ansi-font-size","mso-ansi-font-style","mso-ansi-font-weight","mso-ansi-language","mso-ascii-font-family","mso-background","mso-background-source","mso-baseline-position","mso-bidi-flag","mso-bidi-font-family","mso-bidi-font-size","mso-bidi-font-style","mso-bidi-font-weight","mso-bidi-language","mso-bookmark","mso-border-alt","mso-border-between","mso-border-between-color","mso-border-between-style","mso-border-between-width","mso-border-bottom-alt","mso-border-bottom-color-alt","mso-border-bottom-source","mso-border-bottom-style-alt","mso-border-bottom-width-alt","mso-border-color-alt","mso-border-effect","mso-border-left-alt","mso-border-left-color-alt","mso-border-left-source","mso-border-left-style-alt","mso-border-left-width-alt","mso-border-right-alt","mso-border-right-color-alt","mso-border-right-source","mso-border-right-style-alt","mso-border-right-width-alt","mso-border-shadow","mso-border-source","mso-border-style-alt","mso-border-top-alt","mso-border-top-color-alt","mso-border-top-source","mso-border-top-style-alt","mso-border-top-width-alt","mso-border-width-alt","mso-break-type","mso-build","mso-build-after-action","mso-build-after-color","mso-build-auto-secs","mso-build-avi","mso-build-dual-id","mso-build-order","mso-build-sound-name","mso-bullet-image","mso-cell-special","mso-cellspacing","mso-char-indent","mso-char-indent-count","mso-char-indent-size","mso-char-type","mso-char-wrap","mso-color-alt","mso-color-index","mso-color-source","mso-column-break-before","mso-column-separator","mso-columns","mso-comment-author","mso-comment-continuation","mso-comment-id","mso-comment-reference","mso-data-placement","mso-default-height","mso-default-width","mso-diagonal-down","mso-diagonal-down-color","mso-diagonal-down-source","mso-diagonal-down-style","mso-diagonal-down-width","mso-diagonal-up","mso-diagonal-up-color","mso-diagonal-up-source","mso-diagonal-up-style","mso-diagonal-up-width","mso-displayed-decimal-separator","mso-displayed-thousand-separator","mso-element","mso-element-anchor-horizontal","mso-element-anchor-lock","mso-element-anchor-vertical","mso-element-frame-height","mso-element-frame-hspace","mso-element-frame-vspace","mso-element-frame-width","mso-element-left","mso-element-linespan","mso-element-top","mso-element-wrap","mso-endnote-continuation-notice","mso-endnote-continuation-notice-id","mso-endnote-continuation-notice-src","mso-endnote-continuation-separator","mso-endnote-continuation-separator-id","mso-endnote-continuation-separator-src","mso-endnote-display","mso-endnote-id","mso-endnote-numbering","mso-endnote-numbering-restart","mso-endnote-numbering-start","mso-endnote-numbering-style","mso-endnote-position","mso-endnote-separator","mso-endnote-separator-id","mso-endnote-separator-src","mso-even-footer","mso-even-footer-id","mso-even-footer-src","mso-even-header","mso-even-header-id","mso-even-header-src","mso-facing-pages","mso-fareast-font-family","mso-fareast-hint","mso-fareast-language","mso-field-change","mso-field-change-author","mso-field-change-time","mso-field-change-value","mso-field-code","mso-field-lock","mso-fills-color","mso-first-footer","mso-first-footer-id","mso-first-footer-src","mso-first-header","mso-first-header-id","mso-first-header-src","mso-font-alt","mso-font-charset","mso-font-format","mso-font-info","mso-font-info-charset","mso-font-info-type","mso-font-kerning","mso-font-pitch","mso-font-signature","mso-font-signature-csb-one","mso-font-signature-csb-two","mso-font-signature-usb-four","mso-font-signature-usb-one","mso-font-signature-usb-three","mso-font-signature-usb-two","mso-font-src","mso-font-width","mso-footer","mso-footer-data","mso-footer-id","mso-footer-margin","mso-footer-src","mso-footnote-continuation-notice","mso-footnote-continuation-notice-id","mso-footnote-continuation-notice-src","mso-footnote-continuation-separator","mso-footnote-continuation-separator-id","mso-footnote-continuation-separator-src","mso-footnote-id","mso-footnote-numbering","mso-footnote-numbering-restart","mso-footnote-numbering-start","mso-footnote-numbering-style","mso-footnote-position","mso-footnote-separator","mso-footnote-separator-id","mso-footnote-separator-src","mso-foreground","mso-forms-protection","mso-generic-font-family","mso-grid-bottom","mso-grid-bottom-count","mso-grid-left","mso-grid-left-count","mso-grid-right","mso-grid-right-count","mso-grid-top","mso-grid-top-count","mso-gutter-direction","mso-gutter-margin","mso-gutter-position","mso-hansi-font-family","mso-header","mso-header-data","mso-header-id","mso-header-margin","mso-header-src","mso-height-alt","mso-height-rule","mso-height-source","mso-hide","mso-highlight","mso-horizontal-page-align","mso-hyphenate","mso-ignore","mso-kinsoku-overflow","mso-layout-grid-align","mso-layout-grid-char-alt","mso-layout-grid-origin","mso-level-inherit","mso-level-legacy","mso-level-legacy-indent","mso-level-legacy-space","mso-level-legal-format","mso-level-number-format","mso-level-number-position","mso-level-numbering","mso-level-reset-level","mso-level-start-at","mso-level-style-link","mso-level-suffix","mso-level-tab-stop","mso-level-text","mso-line-break-override","mso-line-grid","mso-line-height-alt","mso-line-height-rule","mso-line-numbers-count-by","mso-line-numbers-distance","mso-line-numbers-restart","mso-line-numbers-start","mso-line-spacing","mso-linked-frame","mso-list","mso-list-change","mso-list-change-author","mso-list-change-time","mso-list-change-values","mso-list-id","mso-list-ins","mso-list-ins-author","mso-list-ins-time","mso-list-name","mso-list-template-ids","mso-list-type","mso-margin-bottom-alt","mso-margin-left-alt","mso-margin-top-alt","mso-mirror-margins","mso-negative-indent-tab","mso-number-format","mso-outline-level","mso-outline-parent","mso-outline-parent-col","mso-outline-parent-row","mso-outline-parent-visibility","mso-outline-style","mso-padding-alt","mso-padding-between","mso-padding-bottom-alt","mso-padding-left-alt","mso-padding-right-alt","mso-padding-top-alt","mso-page-border-aligned","mso-page-border-art","mso-page-border-bottom-art","mso-page-border-display","mso-page-border-left-art","mso-page-border-offset-from","mso-page-border-right-art","mso-page-border-surround-footer","mso-page-border-surround-header","mso-page-border-top-art","mso-page-border-z-order","mso-page-numbers","mso-page-numbers-chapter-separator","mso-page-numbers-chapter-style","mso-page-numbers-start","mso-page-numbers-style","mso-page-orientation","mso-page-scale","mso-pagination","mso-panose-arm-style","mso-panose-contrast","mso-panose-family-type","mso-panose-letterform","mso-panose-midline","mso-panose-proportion","mso-panose-serif-style","mso-panose-stroke-variation","mso-panose-weight","mso-panose-x-height","mso-paper-source","mso-paper-source-first-page","mso-paper-source-other-pages","mso-pattern","mso-pattern-color","mso-pattern-style","mso-print-area","mso-print-color","mso-print-gridlines","mso-print-headings","mso-print-resolution","mso-print-sheet-order","mso-print-title-column","mso-print-title-row","mso-prop-change","mso-prop-change-author","mso-prop-change-time","mso-protection","mso-rotate","mso-row-margin-left","mso-row-margin-right","mso-ruby-merge","mso-ruby-visibility","mso-scheme-fill-color","mso-scheme-shadow-color","mso-shading","mso-shadow-color","mso-space-above","mso-space-below","mso-spacerun","mso-special-character","mso-special-format","mso-style-id","mso-style-name","mso-style-next","mso-style-parent","mso-style-type","mso-style-update","mso-subdocument","mso-symbol-font-family","mso-tab-count","mso-table-anchor-horizontal","mso-table-anchor-vertical","mso-table-bspace","mso-table-del-author","mso-table-del-time","mso-table-deleted","mso-table-dir","mso-table-ins-author","mso-table-ins-time","mso-table-inserted","mso-table-layout-alt","mso-table-left","mso-table-lspace","mso-table-overlap","mso-table-prop-author","mso-table-prop-change","mso-table-prop-time","mso-table-rspace","mso-table-top","mso-table-tspace","mso-table-wrap","mso-text-animation","mso-text-combine-brackets","mso-text-combine-id","mso-text-control","mso-text-fit-id","mso-text-indent-alt","mso-text-orientation","mso-text-raise","mso-title-page","mso-tny-compress","mso-unsynced","mso-vertical-align-alt","mso-vertical-align-special","mso-vertical-page-align","mso-width-alt","mso-width-source","mso-word-wrap","mso-xlrowspan","mso-zero-height","multiple","muted","name","nav-banner-image","navbutton_background_color","navbutton_home_hovered","navbutton_home_normal","navbutton_home_pushed","navbutton_horiz_hovered","navbutton_horiz_normal","navbutton_horiz_pushed","navbutton_next_hovered","navbutton_next_normal","navbutton_next_pushed","navbutton_prev_hovered","navbutton_prev_normal","navbutton_prev_pushed","navbutton_up_hovered","navbutton_up_normal","navbutton_up_pushed","navbutton_vert_hovered","navbutton_vert_normal","navbutton_vert_pushed","nohref","noresize","noshade","novalidate","nowrap","object","onblur","onchange","onclick","ondblclick","onfocus","onkeydown","onkeypress","onkeyup","onload","onmousedown","onmousemove","onmouseout","onmouseover","onmouseup","onreset","onselect","onsubmit","onunload","open","optimum","overflow","padding","padding-bottom","padding-left","padding-right","padding-top","page","page-break-after","page-break-before","panose-1","pattern","ping","placeholder","position","poster","preload","profile","prompt","punctuation-trim","punctuation-wrap","radiogroup","readonly","referrerpolicy","rel","required","rev","reversed","right","row-span","rows","rowspan","ruby-align","ruby-overhang","ruby-position","rules","sandbox","scheme","scope","scoped","scrolling","selected","separator-image","shape","size","sizes","slot","span","spellcheck","src","srcdoc","srclang","srcset","standby","start","step","style","summary","tab-interval","tab-stops","tabindex","table-border-color-dark","table-border-color-light","table-layout","target","text","text-align","text-autospace","text-combine","text-decoration","text-effect","text-fit","text-indent","text-justify","text-justify-trim","text-kashida","text-line-through","text-shadow","text-transform","text-underline","text-underline-color","text-underline-style","title","top","top-bar-button","translate","type","unicode-bidi","urlId","usemap","valign","value","valuetype","version","vert-align","vertical-align","visibility","vlink","vnd.ms-excel.numberformat","vspace","white-space","width","word-break","word-spacing","wrap","xmlns","z-index"]);function e(o){return"string"==typeof o&&(o.charCodeAt(0)>96&&o.charCodeAt(0)<123||o.charCodeAt(0)>64&&o.charCodeAt(0)<91||o.charCodeAt(0)>47&&o.charCodeAt(0)<58||":"===o||"-"===o)}function t(o){return o&&"object"==typeof o&&!Array.isArray(o)}function r(o){return"string"==typeof o}function s(o,e,t,r,s,n){const a="function"==typeof t?t():t;if(e<0&&s&&"EOL"===a)return a;if(e>=o.length&&!s)return!1;let i=s?1:t.length,m=!1,l=!1,c=r.maxMismatches,d=e,h=!1,u=!1,g=!1;for(;o[d];){const e=n(d);if(r.trimBeforeMatching&&""===o[d].trim()){if(!o[e]&&s&&"EOL"===t)return!0;d=n(d);continue}if(!r.i&&r.trimCharsBeforeMatching.includes(o[d])||r.i&&r.trimCharsBeforeMatching.map(o=>o.toLowerCase()).includes(o[d].toLowerCase())){if(s&&"EOL"===t&&!o[e])return!0;d=n(d);continue}const a=e>d?t[t.length-i]:t[i-1];if(!r.i&&o[d]===a||r.i&&o[d].toLowerCase()===a.toLowerCase()){if(h||(h=!0),l||(l=!0),i===t.length?u=!0:1===i&&(g=!0),i-=1,i<1)return d}else{if(!(r.maxMismatches&&c&&d))return!(0!==d||1!==i||r.lastMustMatch||!l)&&0;c--;for(let s=0;s<=c;s++){const a=e>d?t[t.length-i+1+s]:t[i-2-s],m=o[n(d)];if(a&&(!r.i&&o[d]===a||r.i&&o[d].toLowerCase()===a.toLowerCase())&&(!r.firstMustMatch||i!==t.length)){i-=2,h=!0;break}if(m&&a&&(!r.i&&m===a||r.i&&m.toLowerCase()===a.toLowerCase())&&(!r.firstMustMatch||i!==t.length)){i-=1,h=!0;break}if(void 0===a&&c>=0&&h&&(!r.firstMustMatch||u)&&(!r.lastMustMatch||g))return d}h||(m=d)}if(!1!==m&&m!==d&&(m=!1),i<1)return d;d=n(d)}return i>0?!(!s||"EOL"!==a)||!!(r.maxMismatches>=i&&l)&&(m||0):void 0}function n(o,e,n,a){return function(o,e,n,a,i){if(t(i)&&Object.prototype.hasOwnProperty.call(i,"trimBeforeMatching")&&"boolean"!=typeof i.trimBeforeMatching)throw new Error(`string-match-left-right/${o}(): [THROW_ID_09] opts.trimBeforeMatching should be boolean!${Array.isArray(i.trimBeforeMatching)?" Did you mean to use opts.trimCharsBeforeMatching?":""}`);const m=Object.assign({},{i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],maxMismatches:0,firstMustMatch:!1,lastMustMatch:!1},i);var l;if(m.trimCharsBeforeMatching="string"==typeof(l=m.trimCharsBeforeMatching)?l.length>0?[l]:[]:l,m.trimCharsBeforeMatching=m.trimCharsBeforeMatching.map(o=>r(o)?o:String(o)),!r(e))return!1;if(!e.length)return!1;if(!Number.isInteger(n)||n<0)throw new Error(`string-match-left-right/${o}(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: ${typeof n}, equal to:\n${JSON.stringify(n,null,4)}`);let c,d,h,u;if(r(a))c=[a];else if(Array.isArray(a))c=a;else if(a){if("function"!=typeof a)throw new Error(`string-match-left-right/${o}(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's ${typeof a}, equal to:\n${JSON.stringify(a,null,4)}`);c=[],c.push(a)}else c=a;if(i&&!t(i))throw new Error(`string-match-left-right/${o}(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type "${typeof i}", and equal to:\n${JSON.stringify(i,null,4)}`);if(m.trimCharsBeforeMatching.some((o,e)=>o.length>1&&(h=e,u=o,!0)))throw new Error(`string-match-left-right/${o}(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index ${h} is longer than 1 character, ${u.length} (equals to ${u}). Please split it into separate characters and put into array as separate elements.`);if(!c||!Array.isArray(c)||Array.isArray(c)&&!c.length||Array.isArray(c)&&1===c.length&&r(c[0])&&!c[0].trim().length){if("function"==typeof m.cb){let t,r=n;if("matchLeftIncl"!==o&&"matchRight"!==o||(r+=1),"L"===o[5])for(let o=r;o--;){const r=e[o];if((!m.trimBeforeMatching||m.trimBeforeMatching&&void 0!==r&&r.trim().length)&&(!m.trimCharsBeforeMatching.length||void 0!==r&&!m.trimCharsBeforeMatching.includes(r))){t=o;break}}else if(o.startsWith("matchRight"))for(let o=r;o<e.length;o++){const r=e[o];if((!m.trimBeforeMatching||m.trimBeforeMatching&&r.trim().length)&&(!m.trimCharsBeforeMatching.length||!m.trimCharsBeforeMatching.includes(r))){t=o;break}}if(void 0===t)return!1;const s=e[t],a=t+1;let i="";return a&&a>0&&(i=e.slice(0,a)),"L"===o[5]?m.cb(s,i,t):(t&&t>0&&(i=e.slice(t)),m.cb(s,i,t))}let t="";throw i||(t=" More so, the whole options object, the fourth input argument, is missing!"),new Error(`string-match-left-right/${o}(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!${t}`)}for(let t=0,r=c.length;t<r;t++){d="function"==typeof c[t];const r=c[t];let a,i,l="",h=n;"matchRight"===o?h++:"matchLeft"===o&&h--;const u=s(e,h,r,m,d,e=>"L"===o[5]?e-1:e+1);if(u&&d&&"function"==typeof r&&"EOL"===r())return!(!r()||m.cb&&!m.cb(a,l,i))&&r();if(Number.isInteger(u)&&(i=o.startsWith("matchLeft")?u-1:u+1,l="L"===o[5]?e.slice(0,u):e.slice(i)),i<0&&(i=void 0),e[i]&&(a=e[i]),Number.isInteger(u)&&(!m.cb||m.cb(a,l,i)))return r}return!1}("matchRight",o,e,n,a)}return function(t,r,s){if("string"!=typeof t||!t.trim().length||!Number.isInteger(r)||!Number.isInteger(s)||!t[r]||!t[s]||r>=s)return!1;var a,i="'\"".includes(t[r])?t[r]:null,m=null;i&&(m='"'===i?"'":'"');for(var l,c=(new Map).set("'",0).set('"',0),d=!1,h=r,u=t.length;h<u;h++){if("'\"".includes(t[h])&&c.set(t[h],c.get(t[h])+1),t[h].trim().length&&!a?e(t[h])&&(a=h):a&&!e(t[h])&&(l=t.slice(a,h),d=a>=s,a=null),"'\"".includes(t[h])&&(!(c.get('"')%2)||!(c.get("'")%2))&&(c.get('"')+c.get("'"))%2&&l&&o.has(l))return h>s;if(h>s){if(i&&t[r]===t[h])return!1;if(i&&t[s]===m&&t[h]===m)return!1;if("/"===t[h]||">"===t[h]||"<"===t[h])return!0;if("="===t[h]&&n(t,h,["'",'"'],{trimBeforeMatching:!0,trimCharsBeforeMatching:["="]}))return!0}else{var g=void 0;if(t[h-1]&&t[h-1].trim().length&&"="!==t[h-1])g=h-1;else for(var f=h;f--;)if(t[f].trim().length&&"="!==t[f]){g=f;break}if("="===t[h]&&n(t,h,["'",'"'],{cb:function(o){return!"/>".includes(o)},trimBeforeMatching:!0,trimCharsBeforeMatching:["="]})&&e(t[g]))return!1}if("'\"".includes(t[h])&&h>s)return!!(d&&l&&o.has(l))}return!1}}));
