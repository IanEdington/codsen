/**
 * string-remove-widows
 * Helps to prevent widow words in a text
 * Version: 1.7.3
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://codsen.com/os/string-remove-widows/
 */

import{matchRightIncl as t}from"string-match-left-right";import{arrayiffy as e}from"arrayiffy-if-string";import{left as r,right as o}from"string-left-right";import{Ranges as i}from"ranges-push";import{rApply as s}from"ranges-apply";var n="1.7.3";const a=[{heads:"{{",tails:"}}"},{heads:["{% if","{%- if"],tails:["{% endif","{%- endif"]},{heads:["{% for","{%- for"],tails:["{% endfor","{%- endfor"]},{heads:["{%","{%-"],tails:["%}","-%}"]},{heads:"{#",tails:"#}"}],g=[{heads:"{{",tails:"}}"}],u=[{heads:["<%","<%=","<%-"],tails:["%>","=%>","-%>"]}],c=["abbr","address","area","article","aside","audio","base","bdi","bdo","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","doctype","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","rb","rp","rt","rtc","ruby","samp","script","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","ul","var","video","wbr","xml"],d={removeWidowPreventionMeasures:!1,convertEntities:!0,targetLanguage:"html",UKPostcodes:!1,hyphens:!0,minWordCount:4,minCharCount:5,ignore:[],reportProgressFunc:null,reportProgressFuncFrom:0,reportProgressFuncTo:100,tagRanges:[]};function l(n,l){const m=Date.now();if("string"!=typeof n)throw void 0===n?new Error("string-remove-widows: [THROW_ID_01] the first input argument is completely missing! It should be given as string."):new Error(`string-remove-widows: [THROW_ID_02] the first input argument must be string! It was given as "${typeof n}", equal to:\n${JSON.stringify(n,null,4)}`);if(l&&"object"!=typeof l)throw new Error(`string-remove-widows: [THROW_ID_03] the second input argument, options object, should be a plain object but it was given as type ${typeof l}, equal to ${JSON.stringify(l,null,4)}`);const h=Array.isArray,p=n.length,f=new i({mergeType:2}),v=["."],b=/[A-Z]{1,2}[0-9][0-9A-Z]?$/,y=/^[0-9][A-Z]{2}/,w=.06;let W,F,L,P,C,A,E,j,T,k=0,M=0,R=0;const D={...d,...l},I={removeWidows:!1,convertEntities:!1};if(!D.ignore||!h(D.ignore)&&"string"!=typeof D.ignore)D.ignore=[];else if(D.ignore=e(D.ignore),D.ignore.includes("all"))D.ignore=D.ignore.concat(a.concat(u));else if(D.ignore.some((t=>"string"==typeof t))){let t=[];D.ignore=D.ignore.filter((e=>"string"==typeof e&&e.length?(["nunjucks","jinja","liquid"].includes(e.trim().toLowerCase())?t=t.concat(a):["hugo"].includes(e.trim().toLowerCase())?t=t.concat(g):["hexo"].includes(e.trim().toLowerCase())&&(t=t.concat(u)),!1):"object"==typeof e||void 0)),t.length&&(D.ignore=D.ignore.concat(t))}let _;function O(t,e){let r=" ";D.removeWidowPreventionMeasures?r=" ":D.convertEntities&&(r="&nbsp;","string"==typeof D.targetLanguage&&("css"===D.targetLanguage.trim().toLowerCase()?r="\\00A0":"js"===D.targetLanguage.trim().toLowerCase()&&(r="\\u00A0"))),n.slice(t,e)!==r&&f.push(t,e,r)}function $(){M=0,R=0,F=void 0,L=void 0,P=void 0,C=void 0,A=void 0,E=void 0}D.reportProgressFunc&&(_=Math.floor(D.reportProgressFuncTo-(D.reportProgressFuncTo-D.reportProgressFuncFrom)*w-D.reportProgressFuncFrom)),$();for(let e=0;e<=p;e++){if(!j&&h(D.ignore)&&D.ignore.length&&D.ignore.some(((t,r)=>{if(h(t.heads)&&t.heads.some((t=>n.startsWith(t,e)))||"string"==typeof t.heads&&n.startsWith(t.heads,e))return M+=1,j=D.ignore[r].tails,!0})),!j&&T&&T===e&&(M+=1,T=void 0),"function"==typeof D.reportProgressFunc&&(W=D.reportProgressFuncFrom+Math.floor(e/p*(_||1)),W!==k&&(k=W,D.reportProgressFunc(W))),!j&&e&&n[e]&&n[e].trim()&&(!n[e-1]||n[e-1]&&!n[e-1].trim())&&(C=e),!j&&n[e]&&n[e].trim()&&(R+=1),j||!D.hyphens||!("-—–".includes(n[e])||n.startsWith("&ndash;",e)||n.startsWith("\\2013",e)||n.startsWith("\\u2013",e)||n.startsWith("&mdash;",e)||n.startsWith("\\2014",e)||n.startsWith("\\u2014",e))||!n[e+1]||n[e+1].trim()&&"&"!==n[e]||n[e-1]&&!n[e-1].trim()&&n[r(n,e)]&&(O(r(n,e)+1,e),I.removeWidows=!0),j||!n.startsWith("&nbsp;",e)&&!n.startsWith("&#160;",e)||(A=e,E=e+6,n[e+6]&&n[e+6].trim()&&(T=e+6),D.convertEntities?"css"!==D.targetLanguage&&"js"!==D.targetLanguage||(f.push(e,e+6,"css"===D.targetLanguage?"\\00A0":"\\u00A0"),I.convertEntities=!0):(f.push(e,e+6," "),I.convertEntities=!0)),!j&&n[e+4]&&"\\"===n[e]&&"0"===n[e+1]&&"0"===n[e+2]&&"A"===n[e+3].toUpperCase()&&"0"===n[e+4]&&(A=e,E=e+5,n[e+5]&&n[e+5].trim()&&(T=e+5),D.convertEntities?"html"!==D.targetLanguage&&"js"!==D.targetLanguage||(f.push(e,e+5,"html"===D.targetLanguage?"&nbsp;":"\\u00A0"),I.convertEntities=!0):(f.push(e,e+5," "),I.convertEntities=!0)),!j&&"\\"===n[e]&&n[e+1]&&"u"===n[e+1].toLowerCase()&&"0"===n[e+2]&&"0"===n[e+3]&&n[e+4]&&"A"===n[e+4].toUpperCase()&&"0"===n[e+5]&&(A=e,E=e+6,n[e+6]&&n[e+6].trim()&&(T=e+6),D.convertEntities?"html"!==D.targetLanguage&&"css"!==D.targetLanguage||f.push(e,e+6,"html"===D.targetLanguage?"&nbsp;":"\\00A0"):f.push(e,e+6," ")),j||" "!==n[e]||(A=e,E=e+1,D.convertEntities&&f.push(e,e+1,"css"===D.targetLanguage?"\\00A0":"js"===D.targetLanguage?"\\u00A0":"&nbsp;")),j||!n[e]||!n[e].trim()||n[e-1]&&n[e-1].trim()||(M+=1),!j&&(!n[e]||"\r\n".includes(n[e])||("\n"===n[e]||"\r"===n[e]||"\r"===n[e]&&"\n"===n[e+1])&&r(n,e)&&v.includes(n[r(n,e)]))){if((!D.minWordCount||M>=D.minWordCount)&&(!D.minCharCount||R>=D.minCharCount)){let t,e;void 0!==P&&void 0!==C&&void 0!==A&&void 0!==E?P>A?(t=P,e=C):(t=A,e=E):void 0!==P&&void 0!==C?(t=P,e=C):void 0!==A&&void 0!==E&&(t=A,e=E),t&&e||!F||!L||(t=F,e=L),t&&e&&(O(t,e),I.removeWidows=!0)}$()}let i;D.UKPostcodes&&n[e]&&!n[e].trim()&&n[e-1]&&n[e-1].trim()&&b.test(n.slice(0,e))&&n[o(n,e)]&&y.test(n.slice(o(n,e)))&&(O(e,o(n,e)),I.removeWidows=!0),j||!n[e]||n[e].trim()||!n[e-1]||!n[e-1].trim()||!(void 0===P||n[P-1]&&n[P-1].trim())||"/>".includes(n[o(n,e)])||n.slice(0,e).trim().endsWith("br")||n.slice(0,e).trim().endsWith("hr")||n.slice(0,e).endsWith("<")&&c.some((t=>n.startsWith(t,o(n,e))))||(F=P,L=C,P=e,C=void 0,void 0===A&&void 0===E||(A=void 0,E=void 0)),j&&("string"!=typeof j||j.length&&!n.startsWith(j,e)?!h(j)||j.length&&!j.some((t=>{if(n.startsWith(t,e))return i=t,!0}))||(j=void 0,e+=i.length,h(D.ignore)&&D.ignore.length&&n[e+1]&&D.ignore.some((r=>t(n,e,r.tails,{trimBeforeMatching:!0,cb:(t,r,o)=>(o&&(e=o-1,n[e+1]&&n[e+1].trim()&&(M+=1)),!0)})))):j=void 0),n[e]&&"\r\n".includes(n[e])&&(M=0,R=0),h(D.tagRanges)&&D.tagRanges.length&&D.tagRanges.some((t=>{if(e>=t[0]&&e<=t[1]&&t[1]-1>e)return e=t[1]-1,!0}))}return s(n,f.current()).split("").forEach(((t,e)=>{})),{res:s(n,f.current(),D.reportProgressFunc?t=>{W=Math.floor(.94*(D.reportProgressFuncTo-D.reportProgressFuncFrom)+t/100*(D.reportProgressFuncTo-D.reportProgressFuncFrom)*w),W!==k&&(k=W,D.reportProgressFunc(W))}:void 0),ranges:f.current(),log:{timeTakenInMilliseconds:Date.now()-m},whatWasDone:I}}export{d as defaults,l as removeWidows,n as version};
