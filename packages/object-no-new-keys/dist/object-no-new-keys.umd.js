/**
 * object-no-new-keys
 * Check, does a plain object (AST/JSON) has any unique keys, not present in a reference object (another AST/JSON)
 * Version: 2.8.10
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/object-no-new-keys
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).objectNoNewKeys=t()}(this,(function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function t(t){return t&&"object"===e(t)&&!Array.isArray(t)}return function(o,r,n){if(n&&!t(n))throw new TypeError("object-no-new-keys/objectNoNewKeys(): [THROW_ID_02] opts should be a plain object. It was given as ".concat(JSON.stringify(n,null,4)," (type ").concat(e(n),")"));var c=Object.assign({},{mode:2},n);if("string"==typeof c.mode&&["1","2"].includes(c.mode))"1"===c.mode?c.mode=1:c.mode=2;else if(![1,2].includes(c.mode))throw new TypeError('object-no-new-keys/objectNoNewKeys(): [THROW_ID_01] opts.mode should be "1" or "2" (string or number).');return function e(o,r,n,c){var s;if(void 0===c&&(c={path:"",res:[]}),t(o))t(r)?Object.keys(o).forEach((function(a){Object.prototype.hasOwnProperty.call(r,a)?(t(o[a])||Array.isArray(o[a]))&&(s={path:c.path.length>0?"".concat(c.path,".").concat(a):a,res:c.res},c.res=e(o[a],r[a],n,s).res):(s=c.path.length>0?"".concat(c.path,".").concat(a):a,c.res.push(s))})):c.res=c.res.concat(Object.keys(o).map((function(e){return c.path.length>0?"".concat(c.path,".").concat(e):e})));else if(Array.isArray(o))if(Array.isArray(r))for(var a=0,i=o.length;a<i;a++)s={path:"".concat(c.path.length>0?c.path:"","[").concat(a,"]"),res:c.res},2===n.mode?c.res=e(o[a],r[0],n,s).res:c.res=e(o[a],r[a],n,s).res;else c.res=c.res.concat(o.map((function(e,t){return"".concat(c.path.length>0?c.path:"","[").concat(t,"]")})));return c}(o,r,c).res}}));
