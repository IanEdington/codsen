/**
 * ranges-process-outside
 * Iterate through string and optionally a given ranges as if they were one
 * Version: 2.2.30
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/ranges-process-outside
 */

!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(r="undefined"!=typeof globalThis?globalThis:r||self).rangesProcessOutside=e()}(this,(function(){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(e)}function e(r,e,n){return e in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function n(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(r);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.push.apply(n,t)}return n}function t(r){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(n){e(r,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(o,e))}))}return r}function o(r,e){return function(r){if(Array.isArray(r))return r}(r)||function(r,e){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(r)))return;var n=[],t=!0,o=!1,i=void 0;try{for(var s,a=r[Symbol.iterator]();!(t=(s=a.next()).done)&&(n.push(s.value),!e||n.length!==e);t=!0);}catch(r){o=!0,i=r}finally{try{t||null==a.return||a.return()}finally{if(o)throw i}}return n}(r,e)||s(r,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(r){return function(r){if(Array.isArray(r))return a(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||s(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(r,e){if(r){if("string"==typeof r)return a(r,e);var n=Object.prototype.toString.call(r).slice(8,-1);return"Object"===n&&r.constructor&&(n=r.constructor.name),"Map"===n||"Set"===n?Array.from(r):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(r,e):void 0}}function a(r,e){(null==e||e>r.length)&&(e=r.length);for(var n=0,t=new Array(e);n<e;n++)t[n]=r[n];return t}function u(r,e){if(!Array.isArray(r)||!r.length)return r;var n,o,i=t(t({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null}),e);if(i.strictlyTwoElementsInRangeArrays&&!r.every((function(r,e){return 2===r.length||(n=e,o=r.length,!1)})))throw new TypeError("ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ".concat(n,"th range (").concat(JSON.stringify(r[n],null,4),") has not two but ").concat(o," elements!"));if(!r.every((function(r,e){return!(!Number.isInteger(r[0])||r[0]<0||!Number.isInteger(r[1])||r[1]<0)||(n=e,!1)})))throw new TypeError("ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ".concat(n,"th range (").concat(JSON.stringify(r[n],null,4),") does not consist of only natural numbers!"));var s=r.length*r.length,a=0;return Array.from(r).sort((function(r,e){return i.progressFn&&(a+=1,i.progressFn(Math.floor(100*a/s))),r[0]===e[0]?r[1]<e[1]?-1:r[1]>e[1]?1:0:r[0]<e[0]?-1:1}))}function c(e,n){function o(r){return"string"==typeof r}function s(e){return e&&"object"===r(e)&&!Array.isArray(e)}if(!Array.isArray(e)||!e.length)return e;var a,c={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};if(n){if(!s(n))throw new Error("emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n".concat(JSON.stringify(n,null,4)," (type ").concat(r(n),")"));if((a=t(t({},c),n)).progressFn&&s(a.progressFn)&&!Object.keys(a.progressFn).length)a.progressFn=null;else if(a.progressFn&&"function"!=typeof a.progressFn)throw new Error('ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "'.concat(r(a.progressFn),'", equal to ').concat(JSON.stringify(a.progressFn,null,4)));if(a.mergeType&&1!==a.mergeType&&2!==a.mergeType)if(o(a.mergeType)&&"1"===a.mergeType.trim())a.mergeType=1;else{if(!o(a.mergeType)||"2"!==a.mergeType.trim())throw new Error('ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "'.concat(r(a.mergeType),'", equal to ').concat(JSON.stringify(a.mergeType,null,4)));a.mergeType=2}if("boolean"!=typeof a.joinRangesThatTouchEdges)throw new Error('ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "'.concat(r(a.joinRangesThatTouchEdges),'", equal to ').concat(JSON.stringify(a.joinRangesThatTouchEdges,null,4)))}else a=t({},c);for(var g,l,f,y=e.map((function(r){return i(r)})).filter((function(r){return void 0!==r[2]||r[0]!==r[1]})),p=(g=a.progressFn?u(y,{progressFn:function(r){(f=Math.floor(r/5))!==l&&(l=f,a.progressFn(f))}}):u(y)).length-1,h=p;h>0;h--)a.progressFn&&(f=Math.floor(78*(1-h/p))+21)!==l&&f>l&&(l=f,a.progressFn(f)),(g[h][0]<=g[h-1][0]||!a.joinRangesThatTouchEdges&&g[h][0]<g[h-1][1]||a.joinRangesThatTouchEdges&&g[h][0]<=g[h-1][1])&&(g[h-1][0]=Math.min(g[h][0],g[h-1][0]),g[h-1][1]=Math.max(g[h][1],g[h-1][1]),void 0!==g[h][2]&&(g[h-1][0]>=g[h][0]||g[h-1][1]<=g[h][1])&&null!==g[h-1][2]&&(null===g[h][2]&&null!==g[h-1][2]?g[h-1][2]=null:void 0!==g[h-1][2]?2===a.mergeType&&g[h-1][0]===g[h][0]?g[h-1][2]=g[h][2]:g[h-1][2]+=g[h][2]:g[h-1][2]=g[h][2]),g.splice(h,1),h=g.length);return g}var g=Array.isArray;function l(e,n){if(!g(e))throw new TypeError("ranges-crop: [THROW_ID_01] The first input's argument must be an array, consisting of range arrays! Currently its type is: ".concat(r(e),", equal to: ").concat(JSON.stringify(e,null,4)));if(!Number.isInteger(n))throw new TypeError("ranges-crop: [THROW_ID_02] The second input's argument must be a natural number or zero (coming from String.length)! Currently its type is: ".concat(r(n),", equal to: ").concat(JSON.stringify(n,null,4)));if(0===e.length)return e;var t;if(!e.every((function(r,e){return!(!Number.isInteger(r[0])||!Number.isInteger(r[1]))||(t=e,!1)}))){if(Array.isArray(e)&&"number"==typeof e[0]&&"number"==typeof e[1])throw new TypeError("ranges-crop: [THROW_ID_03] The first argument should be AN ARRAY OF RANGES, not a single range! Currently arrOfRanges = ".concat(JSON.stringify(e,null,0),"!"));throw new TypeError("ranges-crop: [THROW_ID_04] The first argument should be AN ARRAY OF ARRAYS! Each sub-array means string slice indexes. In our case, here ".concat(t+1,"th range (").concat(JSON.stringify(e[t],null,0),") does not consist of only natural numbers!"))}if(!e.every((function(r,e){return null==r[2]||"string"==typeof r[2]||(t=e,!1)})))throw new TypeError("ranges-crop: [THROW_ID_05] The third argument, if present at all, should be of a string-type or null. Currently the ".concat(t,"th range ").concat(JSON.stringify(e[t],null,0)," has a argument in the range of a type ").concat(r(e[t][2])));return c(e).filter((function(r){return r[0]<=n&&(void 0!==r[2]||r[0]<n)})).map((function(r){return r[1]>n?void 0!==r[2]?[r[0],n,r[2]]:[r[0],n]:r}))}var f=Array.isArray;function y(e,n,o){if(!f(e)&&null!==e)throw new TypeError("ranges-invert: [THROW_ID_01] Input's first argument must be an array, consisting of range arrays! Currently its type is: ".concat(r(e),", equal to: ").concat(JSON.stringify(e,null,4)));if(!Number.isInteger(n)||n<0)throw new TypeError("ranges-invert: [THROW_ID_02] Input's second argument must be a natural number or zero (coming from String.length)! Currently its type is: ".concat(r(n),", equal to: ").concat(JSON.stringify(n,null,4)));if(null===e)return 0===n?[]:[[0,n]];if(0===e.length)return[];var i,s,a,u=t(t({},{strictlyTwoElementsInRangeArrays:!1,skipChecks:!1}),o);if(!u.skipChecks&&u.strictlyTwoElementsInRangeArrays&&!e.every((function(r,e){return 2===r.length||(i=e,s=r.length,!1)})))throw new TypeError("ranges-invert: [THROW_ID_04] Because opts.strictlyTwoElementsInRangeArrays was enabled, all ranges must be strictly two-element-long. However, the ".concat(i,"th range (").concat(JSON.stringify(e[i],null,0),") has not two but ").concat(s," elements!"));if(!u.skipChecks&&!e.every((function(r,e){return!(!Number.isInteger(r[0])||r[0]<0||!Number.isInteger(r[1])||r[1]<0)||(i=e,!1)}))){if(Array.isArray(e)&&"number"==typeof e[0]&&"number"==typeof e[1])throw new TypeError("ranges-invert: [THROW_ID_07] The first argument should be AN ARRAY OF RANGES, not a single range! Currently arrOfRanges = ".concat(JSON.stringify(e,null,0),"!"));throw new TypeError("ranges-invert: [THROW_ID_05] The first argument should be AN ARRAY OF ARRAYS! Each sub-array means string slice indexes. In our case, here ".concat(i+1,"th range (").concat(JSON.stringify(e[i],null,0),") does not consist of only natural numbers!"))}return 0===(a=u.skipChecks?e.filter((function(r){return r[0]!==r[1]})):c(e.filter((function(r){return r[0]!==r[1]})))).length?0===n?[]:[[0,n]]:l(a.reduce((function(r,e,t,o){var i=[];0===t&&0!==o[0][0]&&i.push([0,o[0][0]]);var s=t<o.length-1?o[t+1][0]:n;if(e[1]!==s){if(u.skipChecks&&e[1]>s)throw new TypeError("ranges-invert: [THROW_ID_08] The checking (opts.skipChecks) is off and input ranges were not sorted! We nearly wrote range [".concat(e[1],", ").concat(s,"] which is backwards. For investigation, whole ranges array is:\n").concat(JSON.stringify(o,null,0)));i.push([e[1],s])}return r.concat(i)}),[]),n)}var p=55296,h=127995,m=127999,b=[776,2359,2359,2367,2367,2984,3007,3021,3633,3635,3648,3657,4352,4449,4520];function d(r){if("string"!=typeof r)throw new Error("string cannot be undefined or null");for(var e=[],n=0,t=0;n<r.length;)A(r[n+(t+=w(n+t,r))])&&t++,O(r[n+t])&&t++,v(r[n+t])&&t++,I(r[n+t])?t++:(e.push(r.substring(n,n+t)),n+=t,t=0);return e}function w(r,e){var n=e[r];if(!function(r){return r&&E(r[0].charCodeAt(0),p,56319)}(n)||r===e.length-1)return 1;var t=n+e[r+1],o=e.substring(r+2,r+5);return T(t)&&T(o)||function(r){return E(R(r),h,m)}(o)?4:2}function T(r){return E(R(r),127462,127487)}function O(r){return"string"==typeof r&&E(r.charCodeAt(0),65024,65039)}function v(r){return"string"==typeof r&&E(r.charCodeAt(0),8400,8447)}function A(r){return"string"==typeof r&&-1!==b.indexOf(r.charCodeAt(0))}function I(r){return"string"==typeof r&&8205===r.charCodeAt(0)}function R(r){return(r.charCodeAt(0)-p<<10)+(r.charCodeAt(1)-56320)+65536}function E(r,e,n){return r>=e&&r<=n}var S=d,_=function(r,e,n){var t=d(r);if(void 0===e)return r;if(e>=t.length)return"";var o=t.length-e,i=e+(void 0===n?o:n);return i>e+o&&(i=void 0),t.slice(e,i).join("")};S.substr=_;var N=Array.isArray;return function(e,n,t){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];function s(r){return r&&"[object Function]"==={}.toString.call(r)}if("string"!=typeof e)throw void 0===e?new Error("ranges-process-outside: [THROW_ID_01] the first input argument must be string! It's missing currently (undefined)!"):new Error("ranges-process-outside: [THROW_ID_02] the first input argument must be string! It was given as:\n".concat(JSON.stringify(e,null,4)," (type ").concat(r(e),")"));if(n&&!N(n))throw new Error("ranges-process-outside: [THROW_ID_03] the second input argument must be array of ranges or null! It was given as:\n".concat(JSON.stringify(n,null,4)," (type ").concat(r(n),")"));if(!s(t))throw new Error("ranges-process-outside: [THROW_ID_04] the third input argument must be a function! It was given as:\n".concat(JSON.stringify(t,null,4)," (type ").concat(r(t),")"));function a(r,e){e.forEach((function(e){for(var n=o(e,2),i=n[0],s=n[1],a=i;a<s;a++){var u=S(r.slice(a))[0].length;t(a,a+u,(function(r){null!=r&&(a+=r)})),u&&u>1&&(a+=u-1)}}))}if(n&&n.length){var u=l(y(n,e.length,{skipChecks:!!i}),e.length);a(e,u)}else a(e,[[0,e.length]])}}));
