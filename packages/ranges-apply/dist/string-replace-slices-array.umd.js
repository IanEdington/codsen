!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):e.stringCollapseWhiteSpace=r()}(this,function(){"use strict";function e(e){return null!=e}function r(e){return"string"==typeof e}var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t=function(e,r){if(r){if("object"!==(void 0===r?"undefined":n(r)))throw new TypeError(String(r)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in r){if("boolean"!=typeof r.includeZero)throw new TypeError(String(r.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(r.includeZero&&0===e)return!0}}return Number.isSafeInteger(e)&&e>=1},o=function(e,r){if("string"!=typeof e)return!1;if(r&&"includeZero"in r){if("boolean"!=typeof r.includeZero)throw new TypeError(String(r.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(r.includeZero)return/^(-?0|[1-9]\d*)(\.0+)?$/.test(e)}return/^[1-9]\d*(\.0+)?$/.test(e)},i=function(e,r){return r={exports:{}},e(r,r.exports),r.exports}(function(e,r){(r=e.exports=function(e){return e+r.suffix(+e)}).suffix=function(e){return 1===Math.floor(e/10)?"th":e%10==1?"st":e%10==2?"nd":e%10==3?"rd":"th"}}),u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=Array.isArray;return function(n,s){if(0===arguments.length)throw new Error("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_01] inputs missing!");if(!r(n))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_02] first input argument must be a string! Currently it's: "+(void 0===n?"undefined":u(n))+", equal to: "+n);if(!a(s))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_03] second input argument must be an array! Currently it's: "+(void 0===s?"undefined":u(s))+", equal to: "+s);if(s.forEach(function(e,r){if(!a(e))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_05] ranges array, second input arg., has "+r+i(r)+" element not an array: "+JSON.stringify(e,null,4)+", which is "+(void 0===e?"undefined":u(e)));if(!t(e[0],{includeZero:!0})){if(!o(e[0]))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_06] ranges array, second input arg. has "+r+i(r)+" element, array ["+e[0]+","+e[1]+"]. That array has first element not an integer, but "+u(e[0])+", equal to: "+JSON.stringify(e[0],null,4)+". Computer doesn't like this.");s[r][0]=Number.parseInt(s[r][0],10)}if(!t(e[1],{includeZero:!0})){if(!o(e[1]))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_07] ranges array, second input arg. has "+r+i(r)+" element, array ["+e[0]+","+e[1]+"]. That array has second element not an integer, but "+u(e[1])+", equal to: "+JSON.stringify(e[1],null,4)+". Computer doesn't like this.");s[r][1]=Number.parseInt(s[r][1],10)}}),s.length>0){var l=n.slice(s[s.length-1][1]);n=s.reduce(function(r,t,o,i){var u=0===o?0:i[o-1][1],a=i[o][0];return r+n.slice(u,a)+(e(i[o][2])?i[o][2]:"")},""),n+=l}return n}});
