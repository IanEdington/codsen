!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):e.stringReplaceSlicesArray=r()}(this,function(){"use strict";var e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r=function(r,n){if(n){if("object"!==(void 0===n?"undefined":e(n)))throw new TypeError(String(n)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in n){if("boolean"!=typeof n.includeZero)throw new TypeError(String(n.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(n.includeZero&&0===r)return!0}}return Number.isSafeInteger(r)&&r>=1},n=function(e,r){if("string"!=typeof e)return!1;if(r&&"includeZero"in r){if("boolean"!=typeof r.includeZero)throw new TypeError(String(r.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(r.includeZero)return/^(-?0|[1-9]\d*)(\.0+)?$/.test(e)}return/^[1-9]\d*(\.0+)?$/.test(e)};var t,o=(function(e,r){(r=e.exports=function(e){return e+r.suffix(+e)}).suffix=function(e){return 1===Math.floor(e/10)?"th":e%10==1?"st":e%10==2?"nd":e%10==3?"rd":"th"}}(t={exports:{}},t.exports),t.exports),i=(o.suffix,"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e}),u=Array.isArray;return function(e,t){if(0===arguments.length)throw new Error("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_01] inputs missing!");if("string"!=typeof e)throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_02] first input argument must be a string! Currently it's: "+(void 0===e?"undefined":i(e))+", equal to: "+e);if(!u(t))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_03] second input argument must be an array! Currently it's: "+(void 0===t?"undefined":i(t))+", equal to: "+t);if(u(t)&&(r(t[0],{includeZero:!0})||n(t[0],{includeZero:!0}))&&(r(t[1],{includeZero:!0})||n(t[1],{includeZero:!0}))&&(t=[t]),t.forEach(function(e,a){if(!u(e))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_05] ranges array, second input arg., has "+o(a)+" element not an array: "+JSON.stringify(e,null,4)+", which is "+(void 0===e?"undefined":i(e)));if(!r(e[0],{includeZero:!0})){if(!n(e[0],{includeZero:!0}))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_06] ranges array, second input arg. has "+o(a)+" element, array ["+e[0]+","+e[1]+"]. That array has first element not an integer, but "+i(e[0])+", equal to: "+JSON.stringify(e[0],null,4)+". Computer doesn't like this.");t[a][0]=Number.parseInt(t[a][0],10)}if(!r(e[1],{includeZero:!0})){if(!n(e[1],{includeZero:!0}))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_07] ranges array, second input arg. has "+o(a)+" element, array ["+e[0]+","+e[1]+"]. That array has second element not an integer, but "+i(e[1])+", equal to: "+JSON.stringify(e[1],null,4)+". Computer doesn't like this.");t[a][1]=Number.parseInt(t[a][1],10)}}),t.length>0){var a=e.slice(t[t.length-1][1]);e=t.reduce(function(r,n,t,o){var i=0===t?0:o[t-1][1],u=o[t][0];return r+e.slice(i,u)+(null!=o[t][2]?o[t][2]:"")},""),e+=a}return e}});
