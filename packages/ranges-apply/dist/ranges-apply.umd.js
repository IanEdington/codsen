!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):e.rangesApply=r()}(this,function(){"use strict";var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t=function(e,r){if(r){if("object"!==(void 0===r?"undefined":n(r)))throw new TypeError(String(r)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in r){if("boolean"!=typeof r.includeZero)throw new TypeError(String(r.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(r.includeZero&&0===e)return!0}}return Number.isSafeInteger(e)&&1<=e},o=function(e,r){if("string"!=typeof e)return!1;if(r&&"includeZero"in r){if("boolean"!=typeof r.includeZero)throw new TypeError(String(r.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(r.includeZero)return/^(-?0|[1-9]\d*)(\.0+)?$/.test(e)}return/^[1-9]\d*(\.0+)?$/.test(e)};var e,i=(function(e,r){(r=e.exports=function(e){return e+r.suffix(+e)}).suffix=function(e){return 1===Math.floor(e/10)?"th":e%10==1?"st":e%10==2?"nd":e%10==3?"rd":"th"}}(e={exports:{}},e.exports),e.exports),a=(i.suffix,"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e}),l=Array.isArray;return function(u,n){if(0===arguments.length)throw new Error("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_01] inputs missing!");if("string"!=typeof u)throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_02] first input argument must be a string! Currently it's: "+(void 0===u?"undefined":a(u))+", equal to: "+u);if(!l(n))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_03] second input argument must be an array! Currently it's: "+(void 0===n?"undefined":a(n))+", equal to: "+n);if(l(n)&&(t(n[0],{includeZero:!0})||o(n[0],{includeZero:!0}))&&(t(n[1],{includeZero:!0})||o(n[1],{includeZero:!0}))&&(n=[n]),n.forEach(function(e,r){if(!l(e))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_05] ranges array, second input arg., has "+i(r)+" element not an array: "+JSON.stringify(e,null,4)+", which is "+(void 0===e?"undefined":a(e)));if(!t(e[0],{includeZero:!0})){if(!o(e[0],{includeZero:!0}))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_06] ranges array, second input arg. has "+i(r)+" element, array ["+e[0]+","+e[1]+"]. That array has first element not an integer, but "+a(e[0])+", equal to: "+JSON.stringify(e[0],null,4)+". Computer doesn't like this.");n[r][0]=Number.parseInt(n[r][0],10)}if(!t(e[1],{includeZero:!0})){if(!o(e[1],{includeZero:!0}))throw new TypeError("string-replace-slices-array/replaceSlicesArr(): [THROW_ID_07] ranges array, second input arg. has "+i(r)+" element, array ["+e[0]+","+e[1]+"]. That array has second element not an integer, but "+a(e[1])+", equal to: "+JSON.stringify(e[1],null,4)+". Computer doesn't like this.");n[r][1]=Number.parseInt(n[r][1],10)}}),0<n.length){var e=u.slice(n[n.length-1][1]);u=n.reduce(function(e,r,n,t){var o=0===n?0:t[n-1][1],i=t[n][0];return e+u.slice(o,i)+(null!=t[n][2]?t[n][2]:"")},""),u+=e}return u}});
