/**
 * string-process-comma-separated
 * Extracts chunks from possibly comma or whatever-separated string
 * Version: 1.0.0
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/string-process-comma-separated
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).stringProcessCommaSeparated=t()}(this,(function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}return function(t,r){if("string"!=typeof t)throw new Error("string-process-comma-separated: [THROW_ID_01] input must be string! It was given as ".concat(e(t),", equal to:\n").concat(JSON.stringify(t,null,4)));if(t.length&&(r.cb||r.errCb)){var o={from:0,to:t.length,leadingWhitespaceOK:!1,trailingWhitespaceOK:!1,oneSpaceAfterCommaOK:!1,separator:",",cb:null,errCb:null},n=Object.assign({},o,r);Number.isInteger(r.from)||(n.from=0),Number.isInteger(r.to)||(n.to=t.length);for(var a=null,i=null,s=!1,f=[],l=n.from;l<n.to;l++){if(null!==a||!t[l].trim().length||n.separator&&t[l]===n.separator||(s||(s=!0),f.length&&(f.length>1&&f.forEach((function(e,t){t&&n.errCb([e,e+1],"Remove separator.")})),f=[]),a=l),Number.isInteger(a)&&(l>a&&(!t[l].trim().length||n.separator&&t[l]===n.separator)||l+1===n.to)){t.slice(a,l+1===n.to&&t[l]!==n.separator?l+1:l);"function"==typeof n.cb&&n.cb(a,l+1===n.to&&t[l]!==n.separator?l+1:l),a=null}if(t[l].trim().length||null!==i||(i=l),null!==i&&(t[l].trim().length||l+1===n.to)){if(n.leadingWhitespaceOK||i!==n.from)if(n.trailingWhitespaceOK||l+1!==n.to||t[l]===n.separator){if(!n.oneSpaceAfterCommaOK||!(t[l].trim().length&&l>n.from+1&&" "===t[l-1]&&","===t[l-2])){var p=i,c=l+1===n.to&&t[l]!==n.separator?l+1:l,m="";n.oneSpaceAfterCommaOK&&(" "===t[i]&&t[i-1]===n.separator?p++:" "!==t[i]&&(m=" ")),m.length?n.errCb([p,c,m],"Remove whitespace."):n.errCb([p,c],"Remove whitespace.")}}else"function"==typeof n.errCb&&n.errCb([i,l+1],"Remove whitespace.");else"function"==typeof n.errCb&&n.errCb([i,l+1===n.to?l+1:l],"Remove whitespace.");i=null}t[l]===n.separator&&(s?f.push(l):n.errCb([l,l+1],"Remove separator.")),l+1===n.to&&f.forEach((function(e){n.errCb([e,e+1],"Remove separator.")}))}}}}));
