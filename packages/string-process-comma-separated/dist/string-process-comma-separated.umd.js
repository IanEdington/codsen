/**
 * string-process-comma-separated
 * Extracts chunks from possibly comma or whatever-separated string
 * Version: 1.2.6
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/string-process-comma-separated
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).stringProcessCommaSeparated=t()}(this,(function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function t(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function r(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}return function(o,n){if("string"!=typeof o)throw new Error("string-process-comma-separated: [THROW_ID_01] input must be string! It was given as ".concat(e(o),", equal to:\n").concat(JSON.stringify(o,null,4)));if(o.length&&(n.cb||n.errCb)){var f=function(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?r(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},{from:0,to:o.length,offset:0,leadingWhitespaceOK:!1,trailingWhitespaceOK:!1,oneSpaceAfterCommaOK:!1,innerWhitespaceAllowed:!1,separator:",",cb:null,errCb:null},{},n);Number.isInteger(n.from)||(f.from=0),Number.isInteger(n.to)||(f.to=o.length),Number.isInteger(n.offset)||(f.offset=0);for(var i=null,a=null,s=!1,c=[],p=null,l=!0,u=f.from;u<f.to;u++){if(o[u].trim()&&o[u]!==f.separator&&(p=u),null!==i||!o[u].trim()||f.separator&&o[u]===f.separator||(s||(s=!0),c.length&&(c.length>1&&c.forEach((function(e,t){t&&f.errCb([[e+f.offset,e+1+f.offset]],"Remove separator.",l)})),c=[]),i=u),Number.isInteger(i)&&(u>i&&f.separator&&o[u]===f.separator||u+1===f.to)){o.slice(i,u+1===f.to&&o[u]!==f.separator&&o[u].trim()?u+1:u);"function"==typeof f.cb&&f.cb(i+f.offset,(u+1===f.to&&o[u]!==f.separator&&o[u].trim()?u+1:p+1)+f.offset),i=null}if(o[u].trim()||null!==a||(a=u),null!==a&&(o[u].trim()||u+1===f.to)){if(a===f.from)f.leadingWhitespaceOK||"function"!=typeof f.errCb||f.errCb([[a+f.offset,(u+1===f.to?u+1:u)+f.offset]],"Remove whitespace.",l);else if(o[u].trim()||u+1!==f.to){if(!(f.oneSpaceAfterCommaOK&&o[u].trim()&&u>f.from+1&&" "===o[u-1]&&","===o[u-2]||f.innerWhitespaceAllowed&&s&&o[a-1]&&o[u].trim()&&o[u]!==f.separator&&o[a-1]!==f.separator)){var m=a,b=u;u+1!==f.to||o[u]===f.separator||o[u].trim()||(b+=1);var y="";f.oneSpaceAfterCommaOK&&(" "===o[a]&&o[a-1]===f.separator?m+=1:" "!==o[a]&&(y=" "));var g="Remove whitespace.";!f.innerWhitespaceAllowed&&s&&o[a-1]&&o[u].trim()&&o[u]!==f.separator&&o[a-1]!==f.separator&&(l=!1,g="Bad whitespace."),y.length?f.errCb([[m+f.offset,b+f.offset,y]],g,l):f.errCb([[m+f.offset,b+f.offset]],g,l),l=!0}}else f.trailingWhitespaceOK||"function"!=typeof f.errCb||f.errCb([[a+f.offset,u+1+f.offset]],"Remove whitespace.",l);a=null}o[u]===f.separator&&(s?c.push(u):f.errCb([[u+f.offset,u+1+f.offset]],"Remove separator.",l)),u+1===f.to&&c.forEach((function(e){f.errCb([[e+f.offset,e+1+f.offset]],"Remove separator.",l)}))}}}}));
