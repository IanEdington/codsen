/**
 * string-process-comma-separated
 * Extracts chunks from possibly comma or whatever-separated string
 * Version: 1.2.5
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/string-process-comma-separated
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).stringProcessCommaSeparated=t()}(this,(function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}return function(t,r){if("string"!=typeof t)throw new Error("string-process-comma-separated: [THROW_ID_01] input must be string! It was given as ".concat(e(t),", equal to:\n").concat(JSON.stringify(t,null,4)));if(t.length&&(r.cb||r.errCb)){var o={from:0,to:t.length,offset:0,leadingWhitespaceOK:!1,trailingWhitespaceOK:!1,oneSpaceAfterCommaOK:!1,innerWhitespaceAllowed:!1,separator:",",cb:null,errCb:null},f=Object.assign({},o,r);Number.isInteger(r.from)||(f.from=0),Number.isInteger(r.to)||(f.to=t.length),Number.isInteger(r.offset)||(f.offset=0);for(var n=null,s=null,a=!1,i=[],p=null,l=!0,m=f.from;m<f.to;m++){if(t[m].trim()&&t[m]!==f.separator&&(p=m),null!==n||!t[m].trim()||f.separator&&t[m]===f.separator||(a||(a=!0),i.length&&(i.length>1&&i.forEach((function(e,t){t&&f.errCb([[e+f.offset,e+1+f.offset]],"Remove separator.",l)})),i=[]),n=m),Number.isInteger(n)&&(m>n&&f.separator&&t[m]===f.separator||m+1===f.to)){t.slice(n,m+1===f.to&&t[m]!==f.separator&&t[m].trim()?m+1:m);"function"==typeof f.cb&&f.cb(n+f.offset,(m+1===f.to&&t[m]!==f.separator&&t[m].trim()?m+1:p+1)+f.offset),n=null}if(t[m].trim()||null!==s||(s=m),null!==s&&(t[m].trim()||m+1===f.to)){if(s===f.from)f.leadingWhitespaceOK||"function"!=typeof f.errCb||f.errCb([[s+f.offset,(m+1===f.to?m+1:m)+f.offset]],"Remove whitespace.",l);else if(t[m].trim()||m+1!==f.to){if(!(f.oneSpaceAfterCommaOK&&t[m].trim()&&m>f.from+1&&" "===t[m-1]&&","===t[m-2]||f.innerWhitespaceAllowed&&a&&t[s-1]&&t[m].trim()&&t[m]!==f.separator&&t[s-1]!==f.separator)){var c=s,u=m;m+1!==f.to||t[m]===f.separator||t[m].trim()||u++;var b="";f.oneSpaceAfterCommaOK&&(" "===t[s]&&t[s-1]===f.separator?c++:" "!==t[s]&&(b=" "));var h="Remove whitespace.";!f.innerWhitespaceAllowed&&a&&t[s-1]&&t[m].trim()&&t[m]!==f.separator&&t[s-1]!==f.separator&&(l=!1,h="Bad whitespace."),b.length?f.errCb([[c+f.offset,u+f.offset,b]],h,l):f.errCb([[c+f.offset,u+f.offset]],h,l),l=!0}}else f.trailingWhitespaceOK||"function"!=typeof f.errCb||f.errCb([[s+f.offset,m+1+f.offset]],"Remove whitespace.",l);s=null}t[m]===f.separator&&(a?i.push(m):f.errCb([[m+f.offset,m+1+f.offset]],"Remove separator.",l)),m+1===f.to&&i.forEach((function(e){f.errCb([[e+f.offset,e+1+f.offset]],"Remove separator.",l)}))}}}}));
