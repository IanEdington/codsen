/**
 * string-process-comma-separated
 * Extracts chunks from possibly comma or whatever-separated string
 * Version: 1.1.0
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/string-process-comma-separated
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).stringProcessCommaSeparated=t()}(this,(function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}return function(t,o){if("string"!=typeof t)throw new Error("string-process-comma-separated: [THROW_ID_01] input must be string! It was given as ".concat(e(t),", equal to:\n").concat(JSON.stringify(t,null,4)));if(t.length&&(o.cb||o.errCb)){var r={from:0,to:t.length,offset:0,leadingWhitespaceOK:!1,trailingWhitespaceOK:!1,oneSpaceAfterCommaOK:!1,separator:",",cb:null,errCb:null},f=Object.assign({},r,o);Number.isInteger(o.from)||(f.from=0),Number.isInteger(o.to)||(f.to=t.length),Number.isInteger(o.offset)||(f.offset=0);for(var n=null,s=null,a=!1,i=[],l=f.from;l<f.to;l++){if(null!==n||!t[l].trim().length||f.separator&&t[l]===f.separator||(a||(a=!0),i.length&&(i.length>1&&i.forEach((function(e,t){t&&f.errCb([[e+f.offset,e+1+f.offset]],"Remove separator.")})),i=[]),n=l),Number.isInteger(n)&&(l>n&&(!t[l].trim().length||f.separator&&t[l]===f.separator)||l+1===f.to)){t.slice(n,l+1===f.to&&t[l]!==f.separator&&t[l].trim().length?l+1:l);"function"==typeof f.cb&&f.cb(n+f.offset,(l+1===f.to&&t[l]!==f.separator&&t[l].trim().length?l+1:l)+f.offset),n=null}if(t[l].trim().length||null!==s||(s=l),null!==s&&(t[l].trim().length||l+1===f.to)){if(s===f.from)f.leadingWhitespaceOK||"function"!=typeof f.errCb||f.errCb([[s+f.offset,(l+1===f.to?l+1:l)+f.offset]],"Remove whitespace.");else if(l+1===f.to&&t[l]!==f.separator&&t[l].trim().length)f.trailingWhitespaceOK||"function"!=typeof f.errCb||f.errCb([[s+f.offset,l+1+f.offset]],"Remove whitespace.");else if(!f.oneSpaceAfterCommaOK||!(t[l].trim().length&&l>f.from+1&&" "===t[l-1]&&","===t[l-2])){var m=s,p=l;l+1!==f.to||t[l]===f.separator||t[l].trim().length||p++;var c="";f.oneSpaceAfterCommaOK&&(" "===t[s]&&t[s-1]===f.separator?m++:" "!==t[s]&&(c=" ")),c.length?f.errCb([[m+f.offset,p+f.offset,c]],"Remove whitespace."):f.errCb([[m+f.offset,p+f.offset]],"Remove whitespace.")}s=null}t[l]===f.separator&&(a?i.push(l):f.errCb([[l+f.offset,l+1+f.offset]],"Remove separator.")),l+1===f.to&&i.forEach((function(e){f.errCb([[e+f.offset,e+1+f.offset]],"Remove separator.")}))}}}}));
