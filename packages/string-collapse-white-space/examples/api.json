{"_quickTake.js":{"title":"Quick Take","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport collapse from \"string-collapse-white-space\";\n\nassert.equal(\n  collapse(\"  aaa     bbb    ccc   dddd  \").result,\n  \"aaa bbb ccc dddd\"\n);\n\nassert.equal(collapse(\"   \\t\\t\\t   aaa   \\t\\t\\t   \").result, \"aaa\");\n\nassert.equal(\n  collapse(\"   aaa   bbb  \\n    ccc   ddd   \", &#x7B; trimLines: false &#x7D;).result,\n  \"aaa bbb \\n ccc ddd\"\n);\n\nassert.equal(\n  collapse(\"   aaa   bbb  \\n    ccc   ddd   \", &#x7B; trimLines: true &#x7D;).result,\n  \"aaa bbb\\nccc ddd\"\n);\n\n// \\xa0 is an unencoded non-breaking space:\nassert.equal(\n  collapse(\n    \"     \\xa0    aaa   bbb    \\xa0    \\n     \\xa0     ccc   ddd   \\xa0   \",\n    &#x7B; trimLines: true, trimnbsp: true &#x7D;\n  ).result,\n  \"aaa bbb\\nccc ddd\"\n);"},"cb.js":{"title":"Minify a chunk of CSS selector","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport collapse from \"string-collapse-white-space\";\n\nassert.equal(\n  collapse(`div > span`, &#x7B;\n    cb: (&#x7B; suggested, whiteSpaceStartsAt, whiteSpaceEndsAt, str &#x7D;) => &#x7B;\n      if (str[whiteSpaceStartsAt - 1] === \">\") &#x7B;\n        // console.log(`> on the left! - wipe this whitespace`);\n        return [whiteSpaceStartsAt, whiteSpaceEndsAt];\n      &#x7D;\n      if (str[whiteSpaceEndsAt] === \">\") &#x7B;\n        // console.log(`> on the right! - wipe this whitespace`);\n        return [whiteSpaceStartsAt, whiteSpaceEndsAt];\n      &#x7D;\n      return suggested;\n    &#x7D;,\n  &#x7D;).result,\n  \"div>span\"\n);"}}