/**
 * string-collapse-white-space
 * Efficient collapsing of white space with optional outer- and/or line-trimming and HTML tag recognition
 * Version: 5.2.12
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/string-collapse-white-space
 */

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).stringCollapseWhiteSpace=e()}(this,(function(){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}function e(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var r=[],n=!0,i=!1,o=void 0;try{for(var s,a=t[Symbol.iterator]();!(n=(s=a.next()).done)&&(r.push(s.value),!e||r.length!==e);n=!0);}catch(t){i=!0,o=t}finally{try{n||null==a.return||a.return()}finally{if(i)throw o}}return r}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var r,n,i=Function.prototype,o=Object.prototype,s=i.toString,a=o.hasOwnProperty,l=s.call(Object),u=o.toString,c=(r=Object.getPrototypeOf,n=Object,function(t){return r(n(t))});var h=function(t){if(!function(t){return!!t&&"object"==typeof t}(t)||"[object Object]"!=u.call(t)||function(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}(t))return!1;var e=c(t);if(null===e)return!0;var r=a.call(e,"constructor")&&e.constructor;return"function"==typeof r&&r instanceof r&&s.call(r)==l};function f(t,e){if(!Array.isArray(t))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(0===t.length)return t;const r=Object.assign({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null},e);let n,i;if(r.strictlyTwoElementsInRangeArrays&&!t.every((t,e)=>2===t.length||(n=e,i=t.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${n}th range (${JSON.stringify(t[n],null,4)}) has not two but ${i} elements!`);if(!t.every((t,e)=>!(!Number.isInteger(t[0])||t[0]<0||!Number.isInteger(t[1])||t[1]<0)||(n=e,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${n}th range (${JSON.stringify(t[n],null,4)}) does not consist of only natural numbers!`);const o=t.length*t.length;let s=0;return Array.from(t).sort((t,e)=>(r.progressFn&&(s++,r.progressFn(Math.floor(100*s/o))),t[0]===e[0]?t[1]<e[1]?-1:t[1]>e[1]?1:0:t[0]<e[0]?-1:1))}function g(t,e){function r(t){return"string"==typeof t}function n(t){return t&&"object"==typeof t&&!Array.isArray(t)}if(!Array.isArray(t))return t;const i={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let o;if(e){if(!n(e))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(e,null,4)} (type ${typeof e})`);if(o=Object.assign({},i,e),o.progressFn&&n(o.progressFn)&&!Object.keys(o.progressFn).length)o.progressFn=null;else if(o.progressFn&&"function"!=typeof o.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof o.progressFn}", equal to ${JSON.stringify(o.progressFn,null,4)}`);if(o.mergeType&&1!==o.mergeType&&2!==o.mergeType)if(r(o.mergeType)&&"1"===o.mergeType.trim())o.mergeType=1;else{if(!r(o.mergeType)||"2"!==o.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof o.mergeType}", equal to ${JSON.stringify(o.mergeType,null,4)}`);o.mergeType=2}if("boolean"!=typeof o.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof o.joinRangesThatTouchEdges}", equal to ${JSON.stringify(o.joinRangesThatTouchEdges,null,4)}`)}else o=Object.assign({},i);const s=t.map(t=>[...t]).filter(t=>void 0!==t[2]||t[0]!==t[1]);let a,l,u;a=o.progressFn?f(s,{progressFn:t=>{u=Math.floor(t/5),u!==l&&(l=u,o.progressFn(u))}}):f(s);const c=a.length-1;for(let t=c;t>0;t--)o.progressFn&&(u=Math.floor(78*(1-t/c))+21,u!==l&&u>l&&(l=u,o.progressFn(u))),(a[t][0]<=a[t-1][0]||!o.joinRangesThatTouchEdges&&a[t][0]<a[t-1][1]||o.joinRangesThatTouchEdges&&a[t][0]<=a[t-1][1])&&(a[t-1][0]=Math.min(a[t][0],a[t-1][0]),a[t-1][1]=Math.max(a[t][1],a[t-1][1]),void 0!==a[t][2]&&(a[t-1][0]>=a[t][0]||a[t-1][1]<=a[t][1])&&null!==a[t-1][2]&&(null===a[t][2]&&null!==a[t-1][2]?a[t-1][2]=null:void 0!==a[t-1][2]?2===o.mergeType&&a[t-1][0]===a[t][0]?a[t-1][2]=a[t][2]:a[t-1][2]+=a[t][2]:a[t-1][2]=a[t][2]),a.splice(t,1),t=a.length);return a}function p(t){return null!=t}function y(t){return"string"==typeof t}function m(t,e,r){let n=0,i=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(!y(t))throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(null===e)return t;if(!Array.isArray(e))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(r&&"function"!=typeof r)throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);Array.isArray(e)&&(Number.isInteger(e[0])&&e[0]>=0||/^\d*$/.test(e[0]))&&(Number.isInteger(e[1])&&e[1]>=0||/^\d*$/.test(e[1]))&&(e=[e]);const o=e.length;let s=0;e.forEach((t,a)=>{if(r&&(n=Math.floor(s/o*10),n!==i&&(i=n,r(n))),!Array.isArray(t))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${a}th element not an array: ${JSON.stringify(t,null,4)}, which is ${typeof t}`);if(!Number.isInteger(t[0])||t[0]<0){if(!/^\d*$/.test(t[0]))throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${a}th element, array [${t[0]},${t[1]}]. That array has first element not an integer, but ${typeof t[0]}, equal to: ${JSON.stringify(t[0],null,4)}. Computer doesn't like this.`);e[a][0]=Number.parseInt(e[a][0],10)}if(!Number.isInteger(t[1])){if(!/^\d*$/.test(t[1]))throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${a}th element, array [${t[0]},${t[1]}]. That array has second element not an integer, but ${typeof t[1]}, equal to: ${JSON.stringify(t[1],null,4)}. Computer doesn't like this.`);e[a][1]=Number.parseInt(e[a][1],10)}s++});const a=g(e,{progressFn:t=>{r&&(n=10+Math.floor(t/10),n!==i&&(i=n,r(n)))}}),l=a.length;if(l>0){const e=t.slice(a[l-1][1]);t=a.reduce((e,o,s,a)=>{r&&(n=20+Math.floor(s/l*80),n!==i&&(i=n,r(n)));const u=0===s?0:a[s-1][1],c=a[s][0];return e+t.slice(u,c)+(p(a[s][2])?a[s][2]:"")},""),t+=e}return t}function b(t){if("string"==typeof t)return 0!==t.length&&(t.charCodeAt(0)>=55296&&t.charCodeAt(0)<=56319);if(void 0===t)return!1;throw new TypeError(`string-character-is-astral-surrogate/isHighSurrogate(): the input is not string but ${typeof t}`)}function d(t){if("string"==typeof t)return 0!==t.length&&(t.charCodeAt(0)>=56320&&t.charCodeAt(0)<=57343);if(void 0===t)return!1;throw new TypeError(`string-character-is-astral-surrogate/isLowSurrogate(): the input is not string but ${typeof t}`)}function w(t){return null!=t}function T(t){return"string"==typeof t&&(t.charCodeAt(0)>=55296&&t.charCodeAt(0)<=57343)}function O(t,e,r,n,i){const o="function"==typeof r?r():r;if(e>=t.length&&i&&"EOL"===o)return o;if(!(e<=t.length)){if(n.relaxedApi)return!1;throw new Error(`string-match-left-right/marchForward(): [THROW_ID_102] second argument, fromIndexInclusive is ${e} beyond the input string length, ${t.length}.`)}{let s=i?1:r.length;for(let i=e,o=t.length;i<o;i++){let e=t[i];if(b(t[i])&&d(t[i+1])&&(e=t[i]+t[i+1]),d(t[i])&&b(t[i-1])&&(e=t[i-1]+t[i]),n.trimBeforeMatching&&""===t[i].trim())continue;if(!n.i&&n.trimCharsBeforeMatching.includes(e)||n.i&&n.trimCharsBeforeMatching.map(t=>t.toLowerCase()).includes(e.toLowerCase())){2===e.length&&(i+=1);continue}let o=r[r.length-s];if(b(o)&&w(r[r.length-s+1])&&d(r[r.length-s+1])&&(o=r[r.length-s]+r[r.length-s+1]),!(!n.i&&e===o||n.i&&e.toLowerCase()===o.toLowerCase()))return!1;if(s-=e.length,s<1){let n=i-r.length+e.length;return n>=0&&d(t[n])&&w(t[n-1])&&b(t[n-1])&&(n-=1),n>=0?n:0}2===e.length&&b(t[i])&&(i+=1)}if(s>0)return!(!i||"EOL"!==o)}}function $(t,e,r,n,i){const o="function"==typeof r?r():r;if(e<0&&i&&"EOL"===o)return o;if(e>=t.length){if(n.relaxedApi)return!1;throw new Error(`string-match-left-right/marchBackward(): [THROW_ID_203] second argument, starting index, should not be beyond the last character of the input string! Currently the first argument's last character's index is ${t.length} but the second argument is beyond it:\n${JSON.stringify(e,null,4)}`)}let s=i?1:r.length;for(let o=e+1;o--;){if(n.trimBeforeMatching&&""===t[o].trim()){if(0===o&&i&&"EOL"===r)return!0;continue}let e=t[o];if(d(t[o])&&b(t[o-1])?e=t[o-1]+t[o]:b(t[o])&&d(t[o+1])&&(e=t[o]+t[o+1]),!n.i&&n.trimCharsBeforeMatching.includes(e)||n.i&&n.trimCharsBeforeMatching.map(t=>t.toLowerCase()).includes(e.toLowerCase())){if(2===e.length&&(o-=1),i&&"EOL"===r&&0===o)return!0;continue}let a=r[s-1];if(d(a)&&(a=`${r[s-2]}${r[s-1]}`,s-=1,o-=1),!(!n.i&&e===a||n.i&&e.toLowerCase()===a.toLowerCase()))return!1;if(s-=1,s<1)return o>=0?o:0}return s>0?!(!i||"EOL"!==o):void 0}function C(t,e,r,n){return function(t,e,r,n,i){if("object"==typeof i&&null!==i&&Object.prototype.hasOwnProperty.call(i,"trimBeforeMatching")&&"boolean"!=typeof i.trimBeforeMatching)throw new Error(`string-match-left-right/${t}(): [THROW_ID_09] opts.trimBeforeMatching should be boolean!${Array.isArray(i.trimBeforeMatching)?" Did you mean to use opts.trimCharsBeforeMatching?":""}`);const o=Object.assign({},{i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],relaxedApi:!1},i);var s;let a,l,u,c;if(o.trimCharsBeforeMatching="string"==typeof(s=o.trimCharsBeforeMatching)?s.length>0?[s]:[]:s,o.trimCharsBeforeMatching=o.trimCharsBeforeMatching.map(t=>"string"==typeof t?t:String(t)),o.trimCharsBeforeMatching.some((t,e)=>t.length>1&&!T(t)&&(a=e,l=t,!0)))throw new Error(`string-match-left-right/${t}(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index ${a} is longer than 1 character, ${l.length} (equals to ${l}). Please split it into separate characters and put into array as separate elements.`);if("string"!=typeof e){if(o.relaxedApi)return!1;throw new Error(`string-match-left-right/${t}(): [THROW_ID_01] the first argument should be a string. Currently it's of a type: ${typeof e}, equal to:\n${JSON.stringify(e,null,4)}`)}if(0===e.length){if(o.relaxedApi)return!1;throw new Error(`string-match-left-right/${t}(): [THROW_ID_02] the first argument should be a non-empty string. Currently it's empty!`)}if(!(Number.isInteger(r)&&r>=0)){if(o.relaxedApi)return!1;throw new Error(`string-match-left-right/${t}(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`)}if("string"==typeof n)u=[n];else if(Array.isArray(n))u=n;else if(w(n)){if("function"!=typeof n)throw new Error(`string-match-left-right/${t}(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's ${typeof n}, equal to:\n${JSON.stringify(n,null,4)}`);u=[],u.push(n)}else u=n;if(w(i)&&"object"!=typeof i)throw new Error(`string-match-left-right/${t}(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type "${typeof i}", and equal to:\n${JSON.stringify(i,null,4)}`);if(!w(u)||!Array.isArray(u)||Array.isArray(u)&&!u.length||Array.isArray(u)&&1===u.length&&"string"==typeof u[0]&&0===u[0].trim().length){if("function"==typeof o.cb){let n,i=r;if("matchRight"===t&&b(e[r])&&d(e[r+1])&&(i+=1),"matchLeftIncl"!==t&&"matchRight"!==t||(i+=1),t.startsWith("matchLeft"))for(let t=i;t--;){if(d(e[t])&&b(e[t-1]))continue;let r=e[t];if(b(e[t])&&d(e[t+1])&&(r=e[t]+e[t+1]),(!o.trimBeforeMatching||o.trimBeforeMatching&&void 0!==r&&""!==r.trim())&&(0===o.trimCharsBeforeMatching.length||void 0!==r&&!o.trimCharsBeforeMatching.includes(r))){n=t;break}d(e[t-1])&&b(e[t-2])&&(t-=1)}else if(t.startsWith("matchRight"))for(let t=i;t<e.length;t++){let r=e[t];if(b(e[t])&&d(e[t+1])&&(r=e[t]+e[t+1]),(!o.trimBeforeMatching||o.trimBeforeMatching&&""!==r.trim())&&(0===o.trimCharsBeforeMatching.length||!o.trimCharsBeforeMatching.includes(r))){n=t;break}b(e[t])&&d(e[t+1])&&(t+=1)}if(void 0===n)return!1;let s=e[n];b(e[n])&&d(e[n+1])&&(s=e[n]+e[n+1]),d(e[n])&&b(e[n-1])&&(s=e[n-1]+e[n],n-=1);let a,l=n+1;return b(e[n])&&d(e[n+1])&&(l+=1),l&&l>0&&(a=e.slice(0,l)),t.startsWith("matchLeft")?o.cb(s,a,n):(n&&n>0&&(a=e.slice(n)),o.cb(s,a,n))}let n="";throw w(i)||(n=" More so, the whole options object, the fourth input argument, is missing!"),new Error(`string-match-left-right/${t}(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!${n}`)}if(t.startsWith("matchLeft")){for(let n=0,i=u.length;n<i;n++){c="function"==typeof u[n];const i=u[n];let s,a,l="",h=r;"matchLeft"===t&&(T(e[n-1])&&T(e[n-2])?h-=2:h-=1);const f=$(e,h,i,o,c);if(f&&c&&"function"==typeof i&&"EOL"===i())return!(!i()||o.cb&&!o.cb(s,l,a))&&i();if(w(f)&&f>0&&(a=f-1,s=e[a],l=e.slice(0,f)),d(e[a])&&w(e[a-1])&&b(e[a-1])&&(a-=1,s=e[a-1]+e[a]),b(e[a])&&w(e[a+1])&&d(e[a+1])&&(s=e[a]+e[a+1],l=e.slice(0,a+2)),!1!==f&&(!o.cb||o.cb(s,l,a)))return i}return!1}for(let n=0,i=u.length;n<i;n++){c="function"==typeof u[n];const i=u[n];let s=r+("matchRight"===t?1:0);"matchRight"===t&&b(e[s-1])&&d(e[s])&&(s+=1);const a=O(e,s,i,o,c);if(a&&c&&"function"==typeof i&&"EOL"===i()){let t,e,r;return!(!i()||o.cb&&!o.cb(t,e,r))&&i()}let l,h,f;if(w(a)&&w(e[a+i.length-1])&&(l=a+i.length,h=e[l],b(e[l])&&d(e[l+1])&&(h=e[l]+e[l+1])),w(l)&&l>=0&&(f=e.slice(l)),!1!==a&&(!o.cb||o.cb(h,f,l)))return i}return!1}("matchLeftIncl",t,e,r,n)}return function(r,n){function i(t,e,r){return t.charCodeAt(0)>=e&&t.charCodeAt(0)<=r}function o(t){return"string"==typeof t&&("<"===t||""===t.trim())}if("string"!=typeof r)throw new Error("string-collapse-white-space/collapse(): [THROW_ID_01] The input is not string but ".concat(t(r),", equal to: ").concat(JSON.stringify(r,null,4)));if(null!=n&&!h(n))throw new Error("string-collapse-white-space/collapse(): [THROW_ID_02] The opts is not a plain object but ".concat(t(n),", equal to:\n").concat(JSON.stringify(n,null,4)));if(0===r.length)return"";var s,a=Number.isInteger,l=[],u=Object.assign({},{trimStart:!0,trimEnd:!0,trimLines:!1,trimnbsp:!1,recogniseHTML:!0,removeEmptyLines:!1,returnRangesOnly:!1,limitConsecutiveEmptyLinesTo:0},n);u.recogniseHTML&&(s=[]);var c,f,p=null,y=null,b=null,d=!1,w=!1,T=null,O=!1,$=!1,E=!1,v=!1;u.recogniseHTML&&(c={equalDoubleQuoteCombo:0,equalOnly:0,doubleQuoteOnly:0,spacesBetweenLetterChunks:0,linebreaks:0});for(var _=0,I=r.length;I--;){if("\n"===r[I]||"\r"===r[I]&&"\n"!==r[I+1]?_++:r[I].trim().length&&(_=0)," "===r[I]?null===p&&(p=I):null!==p&&(I+1!==p&&l.push([I+1,p]),p=null),""===r[I].trim()&&(!u.trimnbsp&&" "!==r[I]||u.trimnbsp)){if(null===y&&(y=I),"\n"!==r[I]&&"\r"!==r[I]&&null===b&&(b=I+1),"\n"!==r[I]&&"\r"!==r[I]||(null!==b&&(u.trimLines&&l.push([I+1,b]),b=null),"\n"!==r[I-1]&&"\r"!==r[I-1]&&(b=I,d=!0)),"\n"===r[I]||"\r"===r[I]&&"\n"!==r[I+1]){var A=I+1,M=void 0;a(f)&&(M=f+1,u.removeEmptyLines&&void 0!==f&&""===r.slice(A,M).trim()&&_>u.limitConsecutiveEmptyLinesTo+1&&l.push([I+1,f+1])),f=I}}else null!==y&&(I+1!==y+1&&y===r.length-1&&u.trimEnd&&l.push([I+1,y+1]),y=null),null!==b&&(d&&u.trimLines&&(d=!1,b!==I+1&&l.push([I+1,b])),b=null);if(0===I&&(null!==y&&u.trimStart?l.push([0,y+1]):null!==p&&l.push([I+1,p+1])),u.recogniseHTML)if(""===r[I].trim()){if(w&&!$&&($=!0),O&&!T&&(T=I+1),O&&void 0!==r[I-1]&&""!==r[I-1].trim()&&"<"!==r[I-1]&&"/"!==r[I-1]&&(O=!1,w=!1,s=[]),!E&&!v&&""===r[I].trim()&&"<"!==r[I-1]&&(void 0===r[I+1]||""!==r[I+1].trim()&&"/"!==r[I+1].trim()))if(void 0===r[I-1]||""!==r[I-1].trim()&&"<"!==r[I-1]&&"/"!==r[I-1])c.spacesBetweenLetterChunks+=1;else for(var R=I-1;R--;)if(""!==r[R].trim()){"<"===r[R]?E=!0:"/"!==r[R]&&(c.spacesBetweenLetterChunks+=I-R);break}}else"="===r[I]?(c.equalOnly+=1,'"'===r[I+1]&&(c.equalDoubleQuoteCombo+=1)):'"'===r[I]&&(c.doubleQuoteOnly+=1),v&&(v=!1),null!==T&&(s.push([I+1,T]),T=null),">"===r[I]?(c={equalDoubleQuoteCombo:0,equalOnly:0,doubleQuoteOnly:0,spacesBetweenLetterChunks:0,linebreaks:0},v=!0,w?s=[]:(w=!0,void 0===r[I-1]||""!==r[I-1].trim()||T||(T=I)),$||($=!0)):"<"===r[I]?(w=!1,E&&(E=!1),c.spacesBetweenLetterChunks>0&&0===c.equalDoubleQuoteCombo&&(O=!1,s=[]),O&&(s.length&&s.forEach((function(t){var r=e(t,2),n=r[0],i=r[1];return l.push([n,i])})),O=!1),c={equalDoubleQuoteCombo:0,equalOnly:0,doubleQuoteOnly:0,spacesBetweenLetterChunks:0,linebreaks:0}):w&&"/"===r[I]?T=I:w&&!O&&($&&i(r[I],97,122)?($=!1,i(r[I],97,110)?("a"===r[I]&&("e"===r[I-1]&&C(r,I,["area","textarea"],{cb:o,i:!0})||"t"===r[I-1]&&C(r,I,["data","meta"],{cb:o,i:!0})||o(r[I-1]))||"b"===r[I]&&(C(r,I,["rb","sub"],{cb:o,i:!0})||o(r[I-1]))||"c"===r[I]&&C(r,I,"rtc",{cb:o,i:!0})||"d"===r[I]&&("a"===r[I-1]&&C(r,I,["head","thead"],{cb:o,i:!0})||C(r,I,["kbd","dd","embed","legend","td"],{cb:o,i:!0}))||"e"===r[I]&&(C(r,I,"source",{cb:o,i:!0})||"d"===r[I-1]&&C(r,I,["aside","code"],{cb:o,i:!0})||"l"===r[I-1]&&C(r,I,["table","article","title","style"],{cb:o,i:!0})||"m"===r[I-1]&&C(r,I,["iframe","time"],{cb:o,i:!0})||"r"===r[I-1]&&C(r,I,["pre","figure","picture"],{cb:o,i:!0})||"t"===r[I-1]&&C(r,I,["template","cite","blockquote"],{cb:o,i:!0})||C(r,I,"base",{cb:o,i:!0})||o(r[I-1]))||"g"===r[I]&&C(r,I,["img","strong","dialog","svg"],{cb:o,i:!0})||"h"===r[I]&&C(r,I,["th","math"],{cb:o,i:!0})||"i"===r[I]&&(C(r,I,["bdi","li"],{cb:o,i:!0})||o(r[I-1]))||"k"===r[I]&&C(r,I,["track","link","mark"],{cb:o,i:!0})||"l"===r[I]&&C(r,I,["html","ol","ul","dl","label","del","small","col"],{cb:o,i:!0})||"m"===r[I]&&C(r,I,["param","em","menuitem","form"],{cb:o,i:!0})||"n"===r[I]&&("o"===r[I-1]&&C(r,I,["section","caption","figcaption","option","button"],{cb:o,i:!0})||C(r,I,["span","keygen","dfn","main"],{cb:o,i:!0})))&&(O=!0):("o"===r[I]&&C(r,I,["bdo","video","audio"],{cb:o,i:!0})||"p"===r[I]&&(o(r[I-1])||"u"===r[I-1]&&C(r,I,["hgroup","colgroup","optgroup","sup"],{cb:o,i:!0})||C(r,I,["map","samp","rp"],{cb:o,i:!0}))||"q"===r[I]&&o(r[I-1])||"r"===r[I]&&("e"===r[I-1]&&C(r,I,["header","meter","footer"],{cb:o,i:!0})||C(r,I,["var","br","abbr","wbr","hr","tr"],{cb:o,i:!0}))||"s"===r[I]&&("s"===r[I-1]&&C(r,I,["address","progress"],{cb:o,i:!0})||C(r,I,["canvas","details","ins"],{cb:o,i:!0})||o(r[I-1]))||"t"===r[I]&&("c"===r[I-1]&&C(r,I,["object","select"],{cb:o,i:!0})||"o"===r[I-1]&&C(r,I,["slot","tfoot"],{cb:o,i:!0})||"p"===r[I-1]&&C(r,I,["script","noscript"],{cb:o,i:!0})||"u"===r[I-1]&&C(r,I,["input","output"],{cb:o,i:!0})||C(r,I,["fieldset","rt","datalist","dt"],{cb:o,i:!0}))||"u"===r[I]&&(o(r[I-1])||C(r,I,"menu",{cb:o,i:!0}))||"v"===r[I]&&C(r,I,["nav","div"],{cb:o,i:!0})||"y"===r[I]&&C(r,I,["ruby","body","tbody","summary"],{cb:o,i:!0}))&&(O=!0)):$&&i(r[I],49,54)?($=!1,"h"!==r[I-1]||"<"!==r[I-2]&&""!==r[I-2].trim()||(O=!0)):"="!==r[I]&&'"'!==r[I]||($=!1))}return u.returnRangesOnly?g(l):l.length?m(r,l):r}}));
