/**
 * string-collapse-white-space
 * Efficient collapsing of white space with optional outer- and/or line-trimming and HTML tag recognition
 * Version: 5.2.16
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/string-collapse-white-space
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).stringCollapseWhiteSpace=t()}(this,(function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function t(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,i=!1,o=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(r.push(s.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{n||null==a.return||a.return()}finally{if(i)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function n(e,t){if(!Array.isArray(e))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(0===e.length)return e;const r=Object.assign({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null},t);let n,i;if(r.strictlyTwoElementsInRangeArrays&&!e.every((e,t)=>2===e.length||(n=t,i=e.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${n}th range (${JSON.stringify(e[n],null,4)}) has not two but ${i} elements!`);if(!e.every((e,t)=>!(!Number.isInteger(e[0])||e[0]<0||!Number.isInteger(e[1])||e[1]<0)||(n=t,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${n}th range (${JSON.stringify(e[n],null,4)}) does not consist of only natural numbers!`);const o=e.length*e.length;let s=0;return Array.from(e).sort((e,t)=>(r.progressFn&&(s++,r.progressFn(Math.floor(100*s/o))),e[0]===t[0]?e[1]<t[1]?-1:e[1]>t[1]?1:0:e[0]<t[0]?-1:1))}function i(e,t){function r(e){return"string"==typeof e}function i(e){return e&&"object"==typeof e&&!Array.isArray(e)}if(!Array.isArray(e))return e;const o={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let s;if(t){if(!i(t))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(t,null,4)} (type ${typeof t})`);if(s=Object.assign({},o,t),s.progressFn&&i(s.progressFn)&&!Object.keys(s.progressFn).length)s.progressFn=null;else if(s.progressFn&&"function"!=typeof s.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof s.progressFn}", equal to ${JSON.stringify(s.progressFn,null,4)}`);if(s.mergeType&&1!==s.mergeType&&2!==s.mergeType)if(r(s.mergeType)&&"1"===s.mergeType.trim())s.mergeType=1;else{if(!r(s.mergeType)||"2"!==s.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof s.mergeType}", equal to ${JSON.stringify(s.mergeType,null,4)}`);s.mergeType=2}if("boolean"!=typeof s.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof s.joinRangesThatTouchEdges}", equal to ${JSON.stringify(s.joinRangesThatTouchEdges,null,4)}`)}else s=Object.assign({},o);const a=e.map(e=>[...e]).filter(e=>void 0!==e[2]||e[0]!==e[1]);let l,u,c;l=s.progressFn?n(a,{progressFn:e=>{c=Math.floor(e/5),c!==u&&(u=c,s.progressFn(c))}}):n(a);const f=l.length-1;for(let e=f;e>0;e--)s.progressFn&&(c=Math.floor(78*(1-e/f))+21,c!==u&&c>u&&(u=c,s.progressFn(c))),(l[e][0]<=l[e-1][0]||!s.joinRangesThatTouchEdges&&l[e][0]<l[e-1][1]||s.joinRangesThatTouchEdges&&l[e][0]<=l[e-1][1])&&(l[e-1][0]=Math.min(l[e][0],l[e-1][0]),l[e-1][1]=Math.max(l[e][1],l[e-1][1]),void 0!==l[e][2]&&(l[e-1][0]>=l[e][0]||l[e-1][1]<=l[e][1])&&null!==l[e-1][2]&&(null===l[e][2]&&null!==l[e-1][2]?l[e-1][2]=null:void 0!==l[e-1][2]?2===s.mergeType&&l[e-1][0]===l[e][0]?l[e-1][2]=l[e][2]:l[e-1][2]+=l[e][2]:l[e-1][2]=l[e][2]),l.splice(e,1),e=l.length);return l}function o(e){return null!=e}function s(e){return"string"==typeof e}function a(e){return e&&"object"==typeof e&&!Array.isArray(e)}function l(e){return"string"==typeof e}function u(e,t,r,n,i,o){const s="function"==typeof r?r():r;if(t<0&&i&&"EOL"===s)return s;if(t>=e.length&&!i)return!1;let a=i?1:r.length,l=!1,u=!1,c=n.maxMismatches,f=t,h=!1,g=!1,m=!1;for(;e[f];){const t=o(f);if(n.trimBeforeMatching&&""===e[f].trim()){if(!e[t]&&i&&"EOL"===r)return!0;f=o(f);continue}if(!n.i&&n.trimCharsBeforeMatching.includes(e[f])||n.i&&n.trimCharsBeforeMatching.map(e=>e.toLowerCase()).includes(e[f].toLowerCase())){if(i&&"EOL"===r&&!e[t])return!0;f=o(f);continue}const s=t>f?r[r.length-a]:r[a-1];if(!n.i&&e[f]===s||n.i&&e[f].toLowerCase()===s.toLowerCase()){if(h||(h=!0),u||(u=!0),a===r.length?g=!0:1===a&&(m=!0),a-=1,a<1)return f}else{if(!(n.maxMismatches&&c&&f))return!(0!==f||1!==a||n.lastMustMatch||!u)&&0;c--;for(let i=0;i<=c;i++){const s=t>f?r[r.length-a+1+i]:r[a-2-i],l=e[o(f)];if(s&&(!n.i&&e[f]===s||n.i&&e[f].toLowerCase()===s.toLowerCase())&&(!n.firstMustMatch||a!==r.length)){a-=2,h=!0;break}if(l&&s&&(!n.i&&l===s||n.i&&l.toLowerCase()===s.toLowerCase())&&(!n.firstMustMatch||a!==r.length)){a-=1,h=!0;break}if(void 0===s&&c>=0&&h&&(!n.firstMustMatch||g)&&(!n.lastMustMatch||m))return f}h||(l=f)}if(!1!==l&&l!==f&&(l=!1),a<1)return f;f=o(f)}return a>0?!(!i||"EOL"!==s)||!!(n.maxMismatches>=a&&u)&&(l||0):void 0}function c(e,t,r,n){return function(e,t,r,n,i){if(a(i)&&Object.prototype.hasOwnProperty.call(i,"trimBeforeMatching")&&"boolean"!=typeof i.trimBeforeMatching)throw new Error(`string-match-left-right/${e}(): [THROW_ID_09] opts.trimBeforeMatching should be boolean!${Array.isArray(i.trimBeforeMatching)?" Did you mean to use opts.trimCharsBeforeMatching?":""}`);const o=Object.assign({},{i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],maxMismatches:0,firstMustMatch:!1,lastMustMatch:!1},i);var s;if(o.trimCharsBeforeMatching="string"==typeof(s=o.trimCharsBeforeMatching)?s.length>0?[s]:[]:s,o.trimCharsBeforeMatching=o.trimCharsBeforeMatching.map(e=>l(e)?e:String(e)),!l(t))return!1;if(!t.length)return!1;if(!Number.isInteger(r)||r<0)throw new Error(`string-match-left-right/${e}(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`);let c,f,h,g;if(l(n))c=[n];else if(Array.isArray(n))c=n;else if(n){if("function"!=typeof n)throw new Error(`string-match-left-right/${e}(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's ${typeof n}, equal to:\n${JSON.stringify(n,null,4)}`);c=[],c.push(n)}else c=n;if(i&&!a(i))throw new Error(`string-match-left-right/${e}(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type "${typeof i}", and equal to:\n${JSON.stringify(i,null,4)}`);if(o.trimCharsBeforeMatching.some((e,t)=>e.length>1&&(h=t,g=e,!0)))throw new Error(`string-match-left-right/${e}(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index ${h} is longer than 1 character, ${g.length} (equals to ${g}). Please split it into separate characters and put into array as separate elements.`);if(!c||!Array.isArray(c)||Array.isArray(c)&&!c.length||Array.isArray(c)&&1===c.length&&l(c[0])&&!c[0].trim().length){if("function"==typeof o.cb){let n,i=r;if("matchLeftIncl"!==e&&"matchRight"!==e||(i+=1),"L"===e[5])for(let e=i;e--;){const r=t[e];if((!o.trimBeforeMatching||o.trimBeforeMatching&&void 0!==r&&r.trim().length)&&(!o.trimCharsBeforeMatching.length||void 0!==r&&!o.trimCharsBeforeMatching.includes(r))){n=e;break}}else if(e.startsWith("matchRight"))for(let e=i;e<t.length;e++){const r=t[e];if((!o.trimBeforeMatching||o.trimBeforeMatching&&r.trim().length)&&(!o.trimCharsBeforeMatching.length||!o.trimCharsBeforeMatching.includes(r))){n=e;break}}if(void 0===n)return!1;const s=t[n],a=n+1;let l="";return a&&a>0&&(l=t.slice(0,a)),"L"===e[5]?o.cb(s,l,n):(n&&n>0&&(l=t.slice(n)),o.cb(s,l,n))}let n="";throw i||(n=" More so, the whole options object, the fourth input argument, is missing!"),new Error(`string-match-left-right/${e}(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!${n}`)}for(let n=0,i=c.length;n<i;n++){f="function"==typeof c[n];const i=c[n];let s,a,l="",h=r;"matchRight"===e?h++:"matchLeft"===e&&h--;const g=u(t,h,i,o,f,t=>"L"===e[5]?t-1:t+1);if(g&&f&&"function"==typeof i&&"EOL"===i())return!(!i()||o.cb&&!o.cb(s,l,a))&&i();if(Number.isInteger(g)&&(a=e.startsWith("matchLeft")?g-1:g+1,l="L"===e[5]?t.slice(0,g):t.slice(a)),a<0&&(a=void 0),t[a]&&(s=t[a]),Number.isInteger(g)&&(!o.cb||o.cb(s,l,a)))return i}return!1}("matchLeftIncl",e,t,r,n)}return function(r,n){function a(e,t,r){return e.charCodeAt(0)>=t&&e.charCodeAt(0)<=r}function l(e){return"string"==typeof e&&("<"===e||!e.trim())}if("string"!=typeof r)throw new Error("string-collapse-white-space/collapse(): [THROW_ID_01] The input is not string but ".concat(e(r),", equal to: ").concat(JSON.stringify(r,null,4)));if(n&&"object"!==e(n))throw new Error("string-collapse-white-space/collapse(): [THROW_ID_02] The opts is not a plain object but ".concat(e(n),", equal to:\n").concat(JSON.stringify(n,null,4)));if(!r.length)return"";var u,f=[],h=Object.assign({},{trimStart:!0,trimEnd:!0,trimLines:!1,trimnbsp:!1,recogniseHTML:!0,removeEmptyLines:!1,returnRangesOnly:!1,limitConsecutiveEmptyLinesTo:0},n);h.recogniseHTML&&(u=[]);var g,m,p=null,y=null,b=null,d=!1,w=!1,T=null,O=!1,M=!1,$=!1,v=!1;h.recogniseHTML&&(g={equalDoubleQuoteCombo:0,equalOnly:0,doubleQuoteOnly:0,spacesBetweenLetterChunks:0,linebreaks:0});for(var I=0,C=r.length;C--;){if("\n"===r[C]||"\r"===r[C]&&"\n"!==r[C+1]?I++:r[C].trim().length&&(I=0)," "===r[C]?null===p&&(p=C):null!==p&&(C+1!==p&&f.push([C+1,p]),p=null),""===r[C].trim()&&(!h.trimnbsp&&" "!==r[C]||h.trimnbsp)){if(null===y&&(y=C),"\n"!==r[C]&&"\r"!==r[C]&&null===b&&(b=C+1),"\n"!==r[C]&&"\r"!==r[C]||(null!==b&&(h.trimLines&&f.push([C+1,b]),b=null),"\n"!==r[C-1]&&"\r"!==r[C-1]&&(b=C,d=!0)),"\n"===r[C]||"\r"===r[C]&&"\n"!==r[C+1]){var E=C+1,_=void 0;Number.isInteger(m)&&(_=m+1,h.removeEmptyLines&&void 0!==m&&""===r.slice(E,_).trim()&&I>h.limitConsecutiveEmptyLinesTo+1&&f.push([C+1,m+1])),m=C}}else null!==y&&(C+1!==y+1&&y===r.length-1&&h.trimEnd&&f.push([C+1,y+1]),y=null),null!==b&&(d&&h.trimLines&&(d=!1,b!==C+1&&f.push([C+1,b])),b=null);if(0===C&&(null!==y&&h.trimStart?f.push([0,y+1]):null!==p&&f.push([C+1,p+1])),h.recogniseHTML)if(""===r[C].trim()){if(w&&!M&&(M=!0),O&&!T&&(T=C+1),O&&void 0!==r[C-1]&&""!==r[C-1].trim()&&"<"!==r[C-1]&&"/"!==r[C-1]&&(O=!1,w=!1,u=[]),!$&&!v&&""===r[C].trim()&&"<"!==r[C-1]&&(void 0===r[C+1]||""!==r[C+1].trim()&&"/"!==r[C+1].trim()))if(void 0===r[C-1]||""!==r[C-1].trim()&&"<"!==r[C-1]&&"/"!==r[C-1])g.spacesBetweenLetterChunks+=1;else for(var L=C-1;L--;)if(""!==r[L].trim()){"<"===r[L]?$=!0:"/"!==r[L]&&(g.spacesBetweenLetterChunks+=C-L);break}}else"="===r[C]?(g.equalOnly+=1,'"'===r[C+1]&&(g.equalDoubleQuoteCombo+=1)):'"'===r[C]&&(g.doubleQuoteOnly+=1),v&&(v=!1),null!==T&&(u.push([C+1,T]),T=null),">"===r[C]?(g={equalDoubleQuoteCombo:0,equalOnly:0,doubleQuoteOnly:0,spacesBetweenLetterChunks:0,linebreaks:0},v=!0,w?u=[]:(w=!0,void 0===r[C-1]||""!==r[C-1].trim()||T||(T=C)),M||(M=!0)):"<"===r[C]?(w=!1,$&&($=!1),g.spacesBetweenLetterChunks>0&&0===g.equalDoubleQuoteCombo&&(O=!1,u=[]),O&&(u.length&&u.forEach((function(e){var r=t(e,2),n=r[0],i=r[1];return f.push([n,i])})),O=!1),g={equalDoubleQuoteCombo:0,equalOnly:0,doubleQuoteOnly:0,spacesBetweenLetterChunks:0,linebreaks:0}):w&&"/"===r[C]?T=C:w&&!O&&(M&&a(r[C],97,122)?(M=!1,a(r[C],97,110)?("a"===r[C]&&("e"===r[C-1]&&c(r,C,["area","textarea"],{cb:l,i:!0})||"t"===r[C-1]&&c(r,C,["data","meta"],{cb:l,i:!0})||l(r[C-1]))||"b"===r[C]&&(c(r,C,["rb","sub"],{cb:l,i:!0})||l(r[C-1]))||"c"===r[C]&&c(r,C,"rtc",{cb:l,i:!0})||"d"===r[C]&&("a"===r[C-1]&&c(r,C,["head","thead"],{cb:l,i:!0})||c(r,C,["kbd","dd","embed","legend","td"],{cb:l,i:!0}))||"e"===r[C]&&(c(r,C,"source",{cb:l,i:!0})||"d"===r[C-1]&&c(r,C,["aside","code"],{cb:l,i:!0})||"l"===r[C-1]&&c(r,C,["table","article","title","style"],{cb:l,i:!0})||"m"===r[C-1]&&c(r,C,["iframe","time"],{cb:l,i:!0})||"r"===r[C-1]&&c(r,C,["pre","figure","picture"],{cb:l,i:!0})||"t"===r[C-1]&&c(r,C,["template","cite","blockquote"],{cb:l,i:!0})||c(r,C,"base",{cb:l,i:!0})||l(r[C-1]))||"g"===r[C]&&c(r,C,["img","strong","dialog","svg"],{cb:l,i:!0})||"h"===r[C]&&c(r,C,["th","math"],{cb:l,i:!0})||"i"===r[C]&&(c(r,C,["bdi","li"],{cb:l,i:!0})||l(r[C-1]))||"k"===r[C]&&c(r,C,["track","link","mark"],{cb:l,i:!0})||"l"===r[C]&&c(r,C,["html","ol","ul","dl","label","del","small","col"],{cb:l,i:!0})||"m"===r[C]&&c(r,C,["param","em","menuitem","form"],{cb:l,i:!0})||"n"===r[C]&&("o"===r[C-1]&&c(r,C,["section","caption","figcaption","option","button"],{cb:l,i:!0})||c(r,C,["span","keygen","dfn","main"],{cb:l,i:!0})))&&(O=!0):("o"===r[C]&&c(r,C,["bdo","video","audio"],{cb:l,i:!0})||"p"===r[C]&&(l(r[C-1])||"u"===r[C-1]&&c(r,C,["hgroup","colgroup","optgroup","sup"],{cb:l,i:!0})||c(r,C,["map","samp","rp"],{cb:l,i:!0}))||"q"===r[C]&&l(r[C-1])||"r"===r[C]&&("e"===r[C-1]&&c(r,C,["header","meter","footer"],{cb:l,i:!0})||c(r,C,["var","br","abbr","wbr","hr","tr"],{cb:l,i:!0}))||"s"===r[C]&&("s"===r[C-1]&&c(r,C,["address","progress"],{cb:l,i:!0})||c(r,C,["canvas","details","ins"],{cb:l,i:!0})||l(r[C-1]))||"t"===r[C]&&("c"===r[C-1]&&c(r,C,["object","select"],{cb:l,i:!0})||"o"===r[C-1]&&c(r,C,["slot","tfoot"],{cb:l,i:!0})||"p"===r[C-1]&&c(r,C,["script","noscript"],{cb:l,i:!0})||"u"===r[C-1]&&c(r,C,["input","output"],{cb:l,i:!0})||c(r,C,["fieldset","rt","datalist","dt"],{cb:l,i:!0}))||"u"===r[C]&&(l(r[C-1])||c(r,C,"menu",{cb:l,i:!0}))||"v"===r[C]&&c(r,C,["nav","div"],{cb:l,i:!0})||"y"===r[C]&&c(r,C,["ruby","body","tbody","summary"],{cb:l,i:!0}))&&(O=!0)):M&&a(r[C],49,54)?(M=!1,"h"!==r[C-1]||"<"!==r[C-2]&&""!==r[C-2].trim()||(O=!0)):"="!==r[C]&&'"'!==r[C]||(M=!1))}return h.returnRangesOnly?i(f):f.length?function(e,t,r){let n=0,a=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(!s(e))throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(null===t)return e;if(!Array.isArray(t))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(r&&"function"!=typeof r)throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);Array.isArray(t)&&(Number.isInteger(t[0])&&t[0]>=0||/^\d*$/.test(t[0]))&&(Number.isInteger(t[1])&&t[1]>=0||/^\d*$/.test(t[1]))&&(t=[t]);const l=t.length;let u=0;t.forEach((e,i)=>{if(r&&(n=Math.floor(u/l*10),n!==a&&(a=n,r(n))),!Array.isArray(e))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${i}th element not an array: ${JSON.stringify(e,null,4)}, which is ${typeof e}`);if(!Number.isInteger(e[0])||e[0]<0){if(!/^\d*$/.test(e[0]))throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${i}th element, array [${e[0]},${e[1]}]. That array has first element not an integer, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0],null,4)}. Computer doesn't like this.`);t[i][0]=Number.parseInt(t[i][0],10)}if(!Number.isInteger(e[1])){if(!/^\d*$/.test(e[1]))throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${i}th element, array [${e[0]},${e[1]}]. That array has second element not an integer, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1],null,4)}. Computer doesn't like this.`);t[i][1]=Number.parseInt(t[i][1],10)}u++});const c=i(t,{progressFn:e=>{r&&(n=10+Math.floor(e/10),n!==a&&(a=n,r(n)))}}),f=c.length;if(f>0){const t=e.slice(c[f-1][1]);e=c.reduce((t,i,s,l)=>{r&&(n=20+Math.floor(s/f*80),n!==a&&(a=n,r(n)));const u=0===s?0:l[s-1][1],c=l[s][0];return t+e.slice(u,c)+(o(l[s][2])?l[s][2]:"")},""),e+=t}return e}(r,f):r}}));
