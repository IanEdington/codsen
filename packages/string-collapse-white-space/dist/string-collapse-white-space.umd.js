/**
 * string-collapse-white-space
 * Efficient collapsing of white space with optional outer- and/or line-trimming and HTML tag recognition
 * Version: 5.2.15
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/string-collapse-white-space
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).stringCollapseWhiteSpace=t()}(this,(function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function t(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,i=!1,o=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(r.push(s.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{n||null==a.return||a.return()}finally{if(i)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var n,i,o=Function.prototype,s=Object.prototype,a=o.toString,l=s.hasOwnProperty,u=a.call(Object),c=s.toString,f=(n=Object.getPrototypeOf,i=Object,function(e){return n(i(e))});var h=function(e){if(!function(e){return!!e&&"object"==typeof e}(e)||"[object Object]"!=c.call(e)||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e))return!1;var t=f(e);if(null===t)return!0;var r=l.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&a.call(r)==u};function g(e,t){if(!Array.isArray(e))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(0===e.length)return e;const r=Object.assign({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null},t);let n,i;if(r.strictlyTwoElementsInRangeArrays&&!e.every((e,t)=>2===e.length||(n=t,i=e.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${n}th range (${JSON.stringify(e[n],null,4)}) has not two but ${i} elements!`);if(!e.every((e,t)=>!(!Number.isInteger(e[0])||e[0]<0||!Number.isInteger(e[1])||e[1]<0)||(n=t,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${n}th range (${JSON.stringify(e[n],null,4)}) does not consist of only natural numbers!`);const o=e.length*e.length;let s=0;return Array.from(e).sort((e,t)=>(r.progressFn&&(s++,r.progressFn(Math.floor(100*s/o))),e[0]===t[0]?e[1]<t[1]?-1:e[1]>t[1]?1:0:e[0]<t[0]?-1:1))}function p(e,t){function r(e){return"string"==typeof e}function n(e){return e&&"object"==typeof e&&!Array.isArray(e)}if(!Array.isArray(e))return e;const i={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let o;if(t){if(!n(t))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(t,null,4)} (type ${typeof t})`);if(o=Object.assign({},i,t),o.progressFn&&n(o.progressFn)&&!Object.keys(o.progressFn).length)o.progressFn=null;else if(o.progressFn&&"function"!=typeof o.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof o.progressFn}", equal to ${JSON.stringify(o.progressFn,null,4)}`);if(o.mergeType&&1!==o.mergeType&&2!==o.mergeType)if(r(o.mergeType)&&"1"===o.mergeType.trim())o.mergeType=1;else{if(!r(o.mergeType)||"2"!==o.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof o.mergeType}", equal to ${JSON.stringify(o.mergeType,null,4)}`);o.mergeType=2}if("boolean"!=typeof o.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof o.joinRangesThatTouchEdges}", equal to ${JSON.stringify(o.joinRangesThatTouchEdges,null,4)}`)}else o=Object.assign({},i);const s=e.map(e=>[...e]).filter(e=>void 0!==e[2]||e[0]!==e[1]);let a,l,u;a=o.progressFn?g(s,{progressFn:e=>{u=Math.floor(e/5),u!==l&&(l=u,o.progressFn(u))}}):g(s);const c=a.length-1;for(let e=c;e>0;e--)o.progressFn&&(u=Math.floor(78*(1-e/c))+21,u!==l&&u>l&&(l=u,o.progressFn(u))),(a[e][0]<=a[e-1][0]||!o.joinRangesThatTouchEdges&&a[e][0]<a[e-1][1]||o.joinRangesThatTouchEdges&&a[e][0]<=a[e-1][1])&&(a[e-1][0]=Math.min(a[e][0],a[e-1][0]),a[e-1][1]=Math.max(a[e][1],a[e-1][1]),void 0!==a[e][2]&&(a[e-1][0]>=a[e][0]||a[e-1][1]<=a[e][1])&&null!==a[e-1][2]&&(null===a[e][2]&&null!==a[e-1][2]?a[e-1][2]=null:void 0!==a[e-1][2]?2===o.mergeType&&a[e-1][0]===a[e][0]?a[e-1][2]=a[e][2]:a[e-1][2]+=a[e][2]:a[e-1][2]=a[e][2]),a.splice(e,1),e=a.length);return a}function y(e){return null!=e}function m(e){return"string"==typeof e}function b(e,t,r){let n=0,i=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(!m(e))throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(null===t)return e;if(!Array.isArray(t))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(r&&"function"!=typeof r)throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);Array.isArray(t)&&(Number.isInteger(t[0])&&t[0]>=0||/^\d*$/.test(t[0]))&&(Number.isInteger(t[1])&&t[1]>=0||/^\d*$/.test(t[1]))&&(t=[t]);const o=t.length;let s=0;t.forEach((e,a)=>{if(r&&(n=Math.floor(s/o*10),n!==i&&(i=n,r(n))),!Array.isArray(e))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${a}th element not an array: ${JSON.stringify(e,null,4)}, which is ${typeof e}`);if(!Number.isInteger(e[0])||e[0]<0){if(!/^\d*$/.test(e[0]))throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${a}th element, array [${e[0]},${e[1]}]. That array has first element not an integer, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0],null,4)}. Computer doesn't like this.`);t[a][0]=Number.parseInt(t[a][0],10)}if(!Number.isInteger(e[1])){if(!/^\d*$/.test(e[1]))throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${a}th element, array [${e[0]},${e[1]}]. That array has second element not an integer, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1],null,4)}. Computer doesn't like this.`);t[a][1]=Number.parseInt(t[a][1],10)}s++});const a=p(t,{progressFn:e=>{r&&(n=10+Math.floor(e/10),n!==i&&(i=n,r(n)))}}),l=a.length;if(l>0){const t=e.slice(a[l-1][1]);e=a.reduce((t,o,s,a)=>{r&&(n=20+Math.floor(s/l*80),n!==i&&(i=n,r(n)));const u=0===s?0:a[s-1][1],c=a[s][0];return t+e.slice(u,c)+(y(a[s][2])?a[s][2]:"")},""),e+=t}return e}function d(e){return e&&"object"==typeof e&&!Array.isArray(e)}function w(e){return"string"==typeof e}function T(e,t,r,n,i,o){const s="function"==typeof r?r():r;if(t<0&&i&&"EOL"===s)return s;if(t>=e.length&&!i)return!1;let a=i?1:r.length,l=!1,u=!1,c=n.maxMismatches,f=t,h=!1,g=!1,p=!1;for(;e[f];){const t=o(f);if(n.trimBeforeMatching&&""===e[f].trim()){if(!e[t]&&i&&"EOL"===r)return!0;f=o(f);continue}if(!n.i&&n.trimCharsBeforeMatching.includes(e[f])||n.i&&n.trimCharsBeforeMatching.map(e=>e.toLowerCase()).includes(e[f].toLowerCase())){if(i&&"EOL"===r&&!e[t])return!0;f=o(f);continue}const s=t>f?r[r.length-a]:r[a-1];if(!n.i&&e[f]===s||n.i&&e[f].toLowerCase()===s.toLowerCase()){if(h||(h=!0),u||(u=!0),a===r.length?g=!0:1===a&&(p=!0),a-=1,a<1)return f}else{if(!(n.maxMismatches&&c&&f))return!(0!==f||1!==a||n.lastMustMatch||!u)&&0;c--;for(let i=0;i<=c;i++){const s=t>f?r[r.length-a+1+i]:r[a-2-i],l=e[o(f)];if(s&&(!n.i&&e[f]===s||n.i&&e[f].toLowerCase()===s.toLowerCase())&&(!n.firstMustMatch||a!==r.length)){a-=2,h=!0;break}if(l&&s&&(!n.i&&l===s||n.i&&l.toLowerCase()===s.toLowerCase())&&(!n.firstMustMatch||a!==r.length)){a-=1,h=!0;break}if(void 0===s&&c>=0&&h&&(!n.firstMustMatch||g)&&(!n.lastMustMatch||p))return f}h||(l=f)}if(!1!==l&&l!==f&&(l=!1),a<1)return f;f=o(f)}return a>0?!(!i||"EOL"!==s)||!!(n.maxMismatches>=a&&u)&&(l||0):void 0}function O(e,t,r,n){return function(e,t,r,n,i){if(d(i)&&Object.prototype.hasOwnProperty.call(i,"trimBeforeMatching")&&"boolean"!=typeof i.trimBeforeMatching)throw new Error(`string-match-left-right/${e}(): [THROW_ID_09] opts.trimBeforeMatching should be boolean!${Array.isArray(i.trimBeforeMatching)?" Did you mean to use opts.trimCharsBeforeMatching?":""}`);const o=Object.assign({},{i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],maxMismatches:0,firstMustMatch:!1,lastMustMatch:!1},i);var s;if(o.trimCharsBeforeMatching="string"==typeof(s=o.trimCharsBeforeMatching)?s.length>0?[s]:[]:s,o.trimCharsBeforeMatching=o.trimCharsBeforeMatching.map(e=>w(e)?e:String(e)),!w(t))return!1;if(!t.length)return!1;if(!Number.isInteger(r)||r<0)throw new Error(`string-match-left-right/${e}(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`);let a,l,u,c;if(w(n))a=[n];else if(Array.isArray(n))a=n;else if(n){if("function"!=typeof n)throw new Error(`string-match-left-right/${e}(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's ${typeof n}, equal to:\n${JSON.stringify(n,null,4)}`);a=[],a.push(n)}else a=n;if(i&&!d(i))throw new Error(`string-match-left-right/${e}(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type "${typeof i}", and equal to:\n${JSON.stringify(i,null,4)}`);if(o.trimCharsBeforeMatching.some((e,t)=>e.length>1&&(u=t,c=e,!0)))throw new Error(`string-match-left-right/${e}(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index ${u} is longer than 1 character, ${c.length} (equals to ${c}). Please split it into separate characters and put into array as separate elements.`);if(!a||!Array.isArray(a)||Array.isArray(a)&&!a.length||Array.isArray(a)&&1===a.length&&w(a[0])&&!a[0].trim().length){if("function"==typeof o.cb){let n,i=r;if("matchLeftIncl"!==e&&"matchRight"!==e||(i+=1),"L"===e[5])for(let e=i;e--;){const r=t[e];if((!o.trimBeforeMatching||o.trimBeforeMatching&&void 0!==r&&r.trim().length)&&(!o.trimCharsBeforeMatching.length||void 0!==r&&!o.trimCharsBeforeMatching.includes(r))){n=e;break}}else if(e.startsWith("matchRight"))for(let e=i;e<t.length;e++){const r=t[e];if((!o.trimBeforeMatching||o.trimBeforeMatching&&r.trim().length)&&(!o.trimCharsBeforeMatching.length||!o.trimCharsBeforeMatching.includes(r))){n=e;break}}if(void 0===n)return!1;const s=t[n],a=n+1;let l="";return a&&a>0&&(l=t.slice(0,a)),"L"===e[5]?o.cb(s,l,n):(n&&n>0&&(l=t.slice(n)),o.cb(s,l,n))}let n="";throw i||(n=" More so, the whole options object, the fourth input argument, is missing!"),new Error(`string-match-left-right/${e}(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!${n}`)}for(let n=0,i=a.length;n<i;n++){l="function"==typeof a[n];const i=a[n];let s,u,c="",f=r;"matchRight"===e?f++:"matchLeft"===e&&f--;const h=T(t,f,i,o,l,t=>"L"===e[5]?t-1:t+1);if(h&&l&&"function"==typeof i&&"EOL"===i())return!(!i()||o.cb&&!o.cb(s,c,u))&&i();if(Number.isInteger(h)&&(u=e.startsWith("matchLeft")?h-1:h+1,c="L"===e[5]?t.slice(0,h):t.slice(u)),u<0&&(u=void 0),t[u]&&(s=t[u]),Number.isInteger(h)&&(!o.cb||o.cb(s,c,u)))return i}return!1}("matchLeftIncl",e,t,r,n)}return function(r,n){function i(e,t,r){return e.charCodeAt(0)>=t&&e.charCodeAt(0)<=r}function o(e){return"string"==typeof e&&("<"===e||""===e.trim())}if("string"!=typeof r)throw new Error("string-collapse-white-space/collapse(): [THROW_ID_01] The input is not string but ".concat(e(r),", equal to: ").concat(JSON.stringify(r,null,4)));if(null!=n&&!h(n))throw new Error("string-collapse-white-space/collapse(): [THROW_ID_02] The opts is not a plain object but ".concat(e(n),", equal to:\n").concat(JSON.stringify(n,null,4)));if(0===r.length)return"";var s,a=Number.isInteger,l=[],u=Object.assign({},{trimStart:!0,trimEnd:!0,trimLines:!1,trimnbsp:!1,recogniseHTML:!0,removeEmptyLines:!1,returnRangesOnly:!1,limitConsecutiveEmptyLinesTo:0},n);u.recogniseHTML&&(s=[]);var c,f,g=null,y=null,m=null,d=!1,w=!1,T=null,M=!1,$=!1,v=!1,I=!1;u.recogniseHTML&&(c={equalDoubleQuoteCombo:0,equalOnly:0,doubleQuoteOnly:0,spacesBetweenLetterChunks:0,linebreaks:0});for(var C=0,E=r.length;E--;){if("\n"===r[E]||"\r"===r[E]&&"\n"!==r[E+1]?C++:r[E].trim().length&&(C=0)," "===r[E]?null===g&&(g=E):null!==g&&(E+1!==g&&l.push([E+1,g]),g=null),""===r[E].trim()&&(!u.trimnbsp&&" "!==r[E]||u.trimnbsp)){if(null===y&&(y=E),"\n"!==r[E]&&"\r"!==r[E]&&null===m&&(m=E+1),"\n"!==r[E]&&"\r"!==r[E]||(null!==m&&(u.trimLines&&l.push([E+1,m]),m=null),"\n"!==r[E-1]&&"\r"!==r[E-1]&&(m=E,d=!0)),"\n"===r[E]||"\r"===r[E]&&"\n"!==r[E+1]){var _=E+1,L=void 0;a(f)&&(L=f+1,u.removeEmptyLines&&void 0!==f&&""===r.slice(_,L).trim()&&C>u.limitConsecutiveEmptyLinesTo+1&&l.push([E+1,f+1])),f=E}}else null!==y&&(E+1!==y+1&&y===r.length-1&&u.trimEnd&&l.push([E+1,y+1]),y=null),null!==m&&(d&&u.trimLines&&(d=!1,m!==E+1&&l.push([E+1,m])),m=null);if(0===E&&(null!==y&&u.trimStart?l.push([0,y+1]):null!==g&&l.push([E+1,g+1])),u.recogniseHTML)if(""===r[E].trim()){if(w&&!$&&($=!0),M&&!T&&(T=E+1),M&&void 0!==r[E-1]&&""!==r[E-1].trim()&&"<"!==r[E-1]&&"/"!==r[E-1]&&(M=!1,w=!1,s=[]),!v&&!I&&""===r[E].trim()&&"<"!==r[E-1]&&(void 0===r[E+1]||""!==r[E+1].trim()&&"/"!==r[E+1].trim()))if(void 0===r[E-1]||""!==r[E-1].trim()&&"<"!==r[E-1]&&"/"!==r[E-1])c.spacesBetweenLetterChunks+=1;else for(var R=E-1;R--;)if(""!==r[R].trim()){"<"===r[R]?v=!0:"/"!==r[R]&&(c.spacesBetweenLetterChunks+=E-R);break}}else"="===r[E]?(c.equalOnly+=1,'"'===r[E+1]&&(c.equalDoubleQuoteCombo+=1)):'"'===r[E]&&(c.doubleQuoteOnly+=1),I&&(I=!1),null!==T&&(s.push([E+1,T]),T=null),">"===r[E]?(c={equalDoubleQuoteCombo:0,equalOnly:0,doubleQuoteOnly:0,spacesBetweenLetterChunks:0,linebreaks:0},I=!0,w?s=[]:(w=!0,void 0===r[E-1]||""!==r[E-1].trim()||T||(T=E)),$||($=!0)):"<"===r[E]?(w=!1,v&&(v=!1),c.spacesBetweenLetterChunks>0&&0===c.equalDoubleQuoteCombo&&(M=!1,s=[]),M&&(s.length&&s.forEach((function(e){var r=t(e,2),n=r[0],i=r[1];return l.push([n,i])})),M=!1),c={equalDoubleQuoteCombo:0,equalOnly:0,doubleQuoteOnly:0,spacesBetweenLetterChunks:0,linebreaks:0}):w&&"/"===r[E]?T=E:w&&!M&&($&&i(r[E],97,122)?($=!1,i(r[E],97,110)?("a"===r[E]&&("e"===r[E-1]&&O(r,E,["area","textarea"],{cb:o,i:!0})||"t"===r[E-1]&&O(r,E,["data","meta"],{cb:o,i:!0})||o(r[E-1]))||"b"===r[E]&&(O(r,E,["rb","sub"],{cb:o,i:!0})||o(r[E-1]))||"c"===r[E]&&O(r,E,"rtc",{cb:o,i:!0})||"d"===r[E]&&("a"===r[E-1]&&O(r,E,["head","thead"],{cb:o,i:!0})||O(r,E,["kbd","dd","embed","legend","td"],{cb:o,i:!0}))||"e"===r[E]&&(O(r,E,"source",{cb:o,i:!0})||"d"===r[E-1]&&O(r,E,["aside","code"],{cb:o,i:!0})||"l"===r[E-1]&&O(r,E,["table","article","title","style"],{cb:o,i:!0})||"m"===r[E-1]&&O(r,E,["iframe","time"],{cb:o,i:!0})||"r"===r[E-1]&&O(r,E,["pre","figure","picture"],{cb:o,i:!0})||"t"===r[E-1]&&O(r,E,["template","cite","blockquote"],{cb:o,i:!0})||O(r,E,"base",{cb:o,i:!0})||o(r[E-1]))||"g"===r[E]&&O(r,E,["img","strong","dialog","svg"],{cb:o,i:!0})||"h"===r[E]&&O(r,E,["th","math"],{cb:o,i:!0})||"i"===r[E]&&(O(r,E,["bdi","li"],{cb:o,i:!0})||o(r[E-1]))||"k"===r[E]&&O(r,E,["track","link","mark"],{cb:o,i:!0})||"l"===r[E]&&O(r,E,["html","ol","ul","dl","label","del","small","col"],{cb:o,i:!0})||"m"===r[E]&&O(r,E,["param","em","menuitem","form"],{cb:o,i:!0})||"n"===r[E]&&("o"===r[E-1]&&O(r,E,["section","caption","figcaption","option","button"],{cb:o,i:!0})||O(r,E,["span","keygen","dfn","main"],{cb:o,i:!0})))&&(M=!0):("o"===r[E]&&O(r,E,["bdo","video","audio"],{cb:o,i:!0})||"p"===r[E]&&(o(r[E-1])||"u"===r[E-1]&&O(r,E,["hgroup","colgroup","optgroup","sup"],{cb:o,i:!0})||O(r,E,["map","samp","rp"],{cb:o,i:!0}))||"q"===r[E]&&o(r[E-1])||"r"===r[E]&&("e"===r[E-1]&&O(r,E,["header","meter","footer"],{cb:o,i:!0})||O(r,E,["var","br","abbr","wbr","hr","tr"],{cb:o,i:!0}))||"s"===r[E]&&("s"===r[E-1]&&O(r,E,["address","progress"],{cb:o,i:!0})||O(r,E,["canvas","details","ins"],{cb:o,i:!0})||o(r[E-1]))||"t"===r[E]&&("c"===r[E-1]&&O(r,E,["object","select"],{cb:o,i:!0})||"o"===r[E-1]&&O(r,E,["slot","tfoot"],{cb:o,i:!0})||"p"===r[E-1]&&O(r,E,["script","noscript"],{cb:o,i:!0})||"u"===r[E-1]&&O(r,E,["input","output"],{cb:o,i:!0})||O(r,E,["fieldset","rt","datalist","dt"],{cb:o,i:!0}))||"u"===r[E]&&(o(r[E-1])||O(r,E,"menu",{cb:o,i:!0}))||"v"===r[E]&&O(r,E,["nav","div"],{cb:o,i:!0})||"y"===r[E]&&O(r,E,["ruby","body","tbody","summary"],{cb:o,i:!0}))&&(M=!0)):$&&i(r[E],49,54)?($=!1,"h"!==r[E-1]||"<"!==r[E-2]&&""!==r[E-2].trim()||(M=!0)):"="!==r[E]&&'"'!==r[E]||($=!1))}return u.returnRangesOnly?p(l):l.length?b(r,l):r}}));
