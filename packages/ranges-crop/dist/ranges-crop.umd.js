/**
 * ranges-crop
 * Crop array of ranges when they go beyond the reference string's length
 * Version: 2.0.46
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/ranges-crop
 */

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).rangesCrop=e()}(this,(function(){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}
/*!
   * is-natural-number.js | MIT (c) Shinnosuke Watanabe
   * https://github.com/shinnn/is-natural-number.js
  */var e=function(t,e){if(e){if("object"!=typeof e)throw new TypeError(String(e)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in e){if("boolean"!=typeof e.includeZero)throw new TypeError(String(e.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(e.includeZero&&0===t)return!0}}return Number.isSafeInteger(t)&&t>=1};const r=Array.isArray;function n(t,n){if(!r(t))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(0===t.length)return t;const o=Object.assign({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null},n);let a,i;if(o.strictlyTwoElementsInRangeArrays&&!t.every((t,e)=>2===t.length||(a=e,i=t.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${a}th range (${JSON.stringify(t[a],null,4)}) has not two but ${i} elements!`);if(!t.every((t,r)=>!(!e(t[0],{includeZero:!0})||!e(t[1],{includeZero:!0}))||(a=r,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${a}th range (${JSON.stringify(t[a],null,4)}) does not consist of only natural numbers!`);const u=t.length*t.length;let c=0;return Array.from(t).sort((t,e)=>(o.progressFn&&(c++,o.progressFn(Math.floor(100*c/u))),t[0]===e[0]?t[1]<e[1]?-1:t[1]>e[1]?1:0:t[0]<e[0]?-1:1))}var o="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};var a=function(t,e){return t(e={exports:{}},e.exports),e.exports}((function(t,e){var r="[object Arguments]",n="[object Function]",a="[object GeneratorFunction]",i="[object Map]",u="[object Set]",c=/\w*$/,s=/^\[object .+?Constructor\]$/,f=/^(?:0|[1-9]\d*)$/,l={};l[r]=l["[object Array]"]=l["[object ArrayBuffer]"]=l["[object DataView]"]=l["[object Boolean]"]=l["[object Date]"]=l["[object Float32Array]"]=l["[object Float64Array]"]=l["[object Int8Array]"]=l["[object Int16Array]"]=l["[object Int32Array]"]=l[i]=l["[object Number]"]=l["[object Object]"]=l["[object RegExp]"]=l[u]=l["[object String]"]=l["[object Symbol]"]=l["[object Uint8Array]"]=l["[object Uint8ClampedArray]"]=l["[object Uint16Array]"]=l["[object Uint32Array]"]=!0,l["[object Error]"]=l[n]=l["[object WeakMap]"]=!1;var p="object"==typeof o&&o&&o.Object===Object&&o,y="object"==typeof self&&self&&self.Object===Object&&self,g=p||y||Function("return this")(),h=e&&!e.nodeType&&e,b=h&&t&&!t.nodeType&&t,_=b&&b.exports===h;function d(t,e){return t.set(e[0],e[1]),t}function v(t,e){return t.add(e),t}function j(t,e,r,n){var o=-1,a=t?t.length:0;for(n&&a&&(r=t[++o]);++o<a;)r=e(r,t[o],o,t);return r}function m(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}function w(t){var e=-1,r=Array(t.size);return t.forEach((function(t,n){r[++e]=[n,t]})),r}function O(t,e){return function(r){return t(e(r))}}function T(t){var e=-1,r=Array(t.size);return t.forEach((function(t){r[++e]=t})),r}var A,S=Array.prototype,E=Function.prototype,I=Object.prototype,R=g["__core-js_shared__"],F=(A=/[^.]+$/.exec(R&&R.keys&&R.keys.IE_PROTO||""))?"Symbol(src)_1."+A:"",x=E.toString,$=I.hasOwnProperty,N=I.toString,D=RegExp("^"+x.call($).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),W=_?g.Buffer:void 0,H=g.Symbol,J=g.Uint8Array,M=O(Object.getPrototypeOf,Object),Z=Object.create,P=I.propertyIsEnumerable,C=S.splice,U=Object.getOwnPropertySymbols,k=W?W.isBuffer:void 0,B=O(Object.keys,Object),q=bt(g,"DataView"),V=bt(g,"Map"),z=bt(g,"Promise"),Y=bt(g,"Set"),G=bt(g,"WeakMap"),L=bt(Object,"create"),K=mt(q),Q=mt(V),X=mt(z),tt=mt(Y),et=mt(G),rt=H?H.prototype:void 0,nt=rt?rt.valueOf:void 0;function ot(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function at(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function it(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function ut(t){this.__data__=new at(t)}function ct(t,e){var n=Ot(t)||function(t){return function(t){return function(t){return!!t&&"object"==typeof t}(t)&&Tt(t)}(t)&&$.call(t,"callee")&&(!P.call(t,"callee")||N.call(t)==r)}(t)?function(t,e){for(var r=-1,n=Array(t);++r<t;)n[r]=e(r);return n}(t.length,String):[],o=n.length,a=!!o;for(var i in t)!e&&!$.call(t,i)||a&&("length"==i||vt(i,o))||n.push(i);return n}function st(t,e,r){var n=t[e];$.call(t,e)&&wt(n,r)&&(void 0!==r||e in t)||(t[e]=r)}function ft(t,e){for(var r=t.length;r--;)if(wt(t[r][0],e))return r;return-1}function lt(t,e,o,s,f,p,y){var g;if(s&&(g=p?s(t,f,p,y):s(t)),void 0!==g)return g;if(!Et(t))return t;var h=Ot(t);if(h){if(g=function(t){var e=t.length,r=t.constructor(e);e&&"string"==typeof t[0]&&$.call(t,"index")&&(r.index=t.index,r.input=t.input);return r}(t),!e)return function(t,e){var r=-1,n=t.length;e||(e=Array(n));for(;++r<n;)e[r]=t[r];return e}(t,g)}else{var b=dt(t),_=b==n||b==a;if(At(t))return function(t,e){if(e)return t.slice();var r=new t.constructor(t.length);return t.copy(r),r}(t,e);if("[object Object]"==b||b==r||_&&!p){if(m(t))return p?t:{};if(g=function(t){return"function"!=typeof t.constructor||jt(t)?{}:(e=M(t),Et(e)?Z(e):{});var e}(_?{}:t),!e)return function(t,e){return gt(t,_t(t),e)}(t,function(t,e){return t&&gt(e,It(e),t)}(g,t))}else{if(!l[b])return p?t:{};g=function(t,e,r,n){var o=t.constructor;switch(e){case"[object ArrayBuffer]":return yt(t);case"[object Boolean]":case"[object Date]":return new o(+t);case"[object DataView]":return function(t,e){var r=e?yt(t.buffer):t.buffer;return new t.constructor(r,t.byteOffset,t.byteLength)}(t,n);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return function(t,e){var r=e?yt(t.buffer):t.buffer;return new t.constructor(r,t.byteOffset,t.length)}(t,n);case i:return function(t,e,r){return j(e?r(w(t),!0):w(t),d,new t.constructor)}(t,n,r);case"[object Number]":case"[object String]":return new o(t);case"[object RegExp]":return function(t){var e=new t.constructor(t.source,c.exec(t));return e.lastIndex=t.lastIndex,e}(t);case u:return function(t,e,r){return j(e?r(T(t),!0):T(t),v,new t.constructor)}(t,n,r);case"[object Symbol]":return a=t,nt?Object(nt.call(a)):{}}var a}(t,b,lt,e)}}y||(y=new ut);var O=y.get(t);if(O)return O;if(y.set(t,g),!h)var A=o?function(t){return function(t,e,r){var n=e(t);return Ot(t)?n:function(t,e){for(var r=-1,n=e.length,o=t.length;++r<n;)t[o+r]=e[r];return t}(n,r(t))}(t,It,_t)}(t):It(t);return function(t,e){for(var r=-1,n=t?t.length:0;++r<n&&!1!==e(t[r],r,t););}(A||t,(function(r,n){A&&(r=t[n=r]),st(g,n,lt(r,e,o,s,n,t,y))})),g}function pt(t){return!(!Et(t)||(e=t,F&&F in e))&&(St(t)||m(t)?D:s).test(mt(t));var e}function yt(t){var e=new t.constructor(t.byteLength);return new J(e).set(new J(t)),e}function gt(t,e,r,n){r||(r={});for(var o=-1,a=e.length;++o<a;){var i=e[o],u=n?n(r[i],t[i],i,r,t):void 0;st(r,i,void 0===u?t[i]:u)}return r}function ht(t,e){var r,n,o=t.__data__;return("string"==(n=typeof(r=e))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?o["string"==typeof e?"string":"hash"]:o.map}function bt(t,e){var r=function(t,e){return null==t?void 0:t[e]}(t,e);return pt(r)?r:void 0}ot.prototype.clear=function(){this.__data__=L?L(null):{}},ot.prototype.delete=function(t){return this.has(t)&&delete this.__data__[t]},ot.prototype.get=function(t){var e=this.__data__;if(L){var r=e[t];return"__lodash_hash_undefined__"===r?void 0:r}return $.call(e,t)?e[t]:void 0},ot.prototype.has=function(t){var e=this.__data__;return L?void 0!==e[t]:$.call(e,t)},ot.prototype.set=function(t,e){return this.__data__[t]=L&&void 0===e?"__lodash_hash_undefined__":e,this},at.prototype.clear=function(){this.__data__=[]},at.prototype.delete=function(t){var e=this.__data__,r=ft(e,t);return!(r<0)&&(r==e.length-1?e.pop():C.call(e,r,1),!0)},at.prototype.get=function(t){var e=this.__data__,r=ft(e,t);return r<0?void 0:e[r][1]},at.prototype.has=function(t){return ft(this.__data__,t)>-1},at.prototype.set=function(t,e){var r=this.__data__,n=ft(r,t);return n<0?r.push([t,e]):r[n][1]=e,this},it.prototype.clear=function(){this.__data__={hash:new ot,map:new(V||at),string:new ot}},it.prototype.delete=function(t){return ht(this,t).delete(t)},it.prototype.get=function(t){return ht(this,t).get(t)},it.prototype.has=function(t){return ht(this,t).has(t)},it.prototype.set=function(t,e){return ht(this,t).set(t,e),this},ut.prototype.clear=function(){this.__data__=new at},ut.prototype.delete=function(t){return this.__data__.delete(t)},ut.prototype.get=function(t){return this.__data__.get(t)},ut.prototype.has=function(t){return this.__data__.has(t)},ut.prototype.set=function(t,e){var r=this.__data__;if(r instanceof at){var n=r.__data__;if(!V||n.length<199)return n.push([t,e]),this;r=this.__data__=new it(n)}return r.set(t,e),this};var _t=U?O(U,Object):function(){return[]},dt=function(t){return N.call(t)};function vt(t,e){return!!(e=null==e?9007199254740991:e)&&("number"==typeof t||f.test(t))&&t>-1&&t%1==0&&t<e}function jt(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||I)}function mt(t){if(null!=t){try{return x.call(t)}catch(t){}try{return t+""}catch(t){}}return""}function wt(t,e){return t===e||t!=t&&e!=e}(q&&"[object DataView]"!=dt(new q(new ArrayBuffer(1)))||V&&dt(new V)!=i||z&&"[object Promise]"!=dt(z.resolve())||Y&&dt(new Y)!=u||G&&"[object WeakMap]"!=dt(new G))&&(dt=function(t){var e=N.call(t),r="[object Object]"==e?t.constructor:void 0,n=r?mt(r):void 0;if(n)switch(n){case K:return"[object DataView]";case Q:return i;case X:return"[object Promise]";case tt:return u;case et:return"[object WeakMap]"}return e});var Ot=Array.isArray;function Tt(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}(t.length)&&!St(t)}var At=k||function(){return!1};function St(t){var e=Et(t)?N.call(t):"";return e==n||e==a}function Et(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function It(t){return Tt(t)?ct(t):function(t){if(!jt(t))return B(t);var e=[];for(var r in Object(t))$.call(t,r)&&"constructor"!=r&&e.push(r);return e}(t)}t.exports=function(t){return lt(t,!0,!0)}}));var i,u,c=Function.prototype,s=Object.prototype,f=c.toString,l=s.hasOwnProperty,p=f.call(Object),y=s.toString,g=(i=Object.getPrototypeOf,u=Object,function(t){return i(u(t))});var h=function(t){if(!function(t){return!!t&&"object"==typeof t}(t)||"[object Object]"!=y.call(t)||function(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}(t))return!1;var e=g(t);if(null===e)return!0;var r=l.call(e,"constructor")&&e.constructor;return"function"==typeof r&&r instanceof r&&f.call(r)==p};var b=Array.isArray;return function(e,r){if(!b(e))throw new TypeError("ranges-crop: [THROW_ID_01] The first input's argument must be an array, consisting of range arrays! Currently its type is: ".concat(t(e),", equal to: ").concat(JSON.stringify(e,null,4)));if(!Number.isInteger(r,{includeZero:!0}))throw new TypeError("ranges-crop: [THROW_ID_02] The second input's argument must be a natural number or zero (coming from String.length)! Currently its type is: ".concat(t(r),", equal to: ").concat(JSON.stringify(r,null,4)));if(0===e.length)return e;var o;if(!e.every((function(t,e){return!(!Number.isInteger(t[0],{includeZero:!0})||!Number.isInteger(t[1],{includeZero:!0}))||(o=e,!1)}))){if(Array.isArray(e)&&"number"==typeof e[0]&&"number"==typeof e[1])throw new TypeError("ranges-crop: [THROW_ID_03] The first argument should be AN ARRAY OF RANGES, not a single range! Currently arrOfRanges = ".concat(JSON.stringify(e,null,0),"!"));throw new TypeError("ranges-crop: [THROW_ID_04] The first argument should be AN ARRAY OF ARRAYS! Each sub-array means string slice indexes. In our case, here ".concat(o+1,"th range (").concat(JSON.stringify(e[o],null,0),") does not consist of only natural numbers!"))}if(!e.every((function(t,e){return null==t[2]||"string"==typeof t[2]||(o=e,!1)})))throw new TypeError("ranges-crop: [THROW_ID_05] The third argument, if present at all, should be of a string-type or null. Currently the ".concat(o,"th range ").concat(JSON.stringify(e[o],null,0)," has a argument in the range of a type ").concat(t(e[o][2])));return function(t,e){function r(t){return"string"==typeof t}if(!Array.isArray(t))return t;const o={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let i;if(e){if(!h(e))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(e,null,4)} (type ${typeof e})`);if(i=Object.assign({},o,e),i.progressFn&&h(i.progressFn)&&!Object.keys(i.progressFn).length)i.progressFn=null;else if(i.progressFn&&"function"!=typeof i.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof i.progressFn}", equal to ${JSON.stringify(i.progressFn,null,4)}`);if(i.mergeType&&1!==i.mergeType&&2!==i.mergeType)if(r(i.mergeType)&&"1"===i.mergeType.trim())i.mergeType=1;else{if(!r(i.mergeType)||"2"!==i.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof i.mergeType}", equal to ${JSON.stringify(i.mergeType,null,4)}`);i.mergeType=2}if("boolean"!=typeof i.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof i.joinRangesThatTouchEdges}", equal to ${JSON.stringify(i.joinRangesThatTouchEdges,null,4)}`)}else i=a(o);const u=a(t).filter(t=>void 0!==t[2]||t[0]!==t[1]);let c,s,f;c=i.progressFn?n(u,{progressFn:t=>{f=Math.floor(t/5),f!==s&&(s=f,i.progressFn(f))}}):n(u);const l=c.length-1;for(let t=l;t>0;t--)i.progressFn&&(f=Math.floor(78*(1-t/l))+21,f!==s&&f>s&&(s=f,i.progressFn(f))),(c[t][0]<=c[t-1][0]||!i.joinRangesThatTouchEdges&&c[t][0]<c[t-1][1]||i.joinRangesThatTouchEdges&&c[t][0]<=c[t-1][1])&&(c[t-1][0]=Math.min(c[t][0],c[t-1][0]),c[t-1][1]=Math.max(c[t][1],c[t-1][1]),void 0!==c[t][2]&&(c[t-1][0]>=c[t][0]||c[t-1][1]<=c[t][1])&&null!==c[t-1][2]&&(null===c[t][2]&&null!==c[t-1][2]?c[t-1][2]=null:void 0!==c[t-1][2]?2===i.mergeType&&c[t-1][0]===c[t][0]?c[t-1][2]=c[t][2]:c[t-1][2]+=c[t][2]:c[t-1][2]=c[t][2]),c.splice(t,1),t=c.length);return c}(e).filter((function(t){return t[0]<=r&&(void 0!==t[2]||t[0]<r)})).map((function(t){return t[1]>r?void 0!==t[2]?[t[0],r,t[2]]:[t[0],r]:t}))}}));
