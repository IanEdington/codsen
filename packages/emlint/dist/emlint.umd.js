/**
 * emlint
 * Non-parsing, email template-oriented linter
 * Version: 1.6.1
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/emlint
 */

!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e=e||self).emlint={})}(this,function(e){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function t(e){return function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var a=["async","autofocus","autoplay","checked","compact","contenteditable","controls","default","defer","disabled","formNoValidate","frameborder","hidden","ismap","itemscope","loop","multiple","muted","nohref","nomodule","noresize","noshade","novalidate","nowrap","open","readonly","required","reversed","scoped","scrolling","seamless","selected","typemustmatch"],n="[object Object]";var o,s,c=Function.prototype,i=Object.prototype,l=c.toString,u=i.hasOwnProperty,p=l.call(Object),d=i.toString,m=(o=Object.getPrototypeOf,s=Object,function(e){return o(s(e))});var g=function(e){if(!function(e){return!!e&&"object"==typeof e}(e)||d.call(e)!=n||function(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}(e))return!1;var r=m(e);if(null===r)return!0;var t=u.call(r,"constructor")&&r.constructor;return"function"==typeof t&&t instanceof t&&l.call(t)==p},f="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function h(e,r){return e(r={exports:{}},r.exports),r.exports}var b=h(function(e,r){var t=200,a="__lodash_hash_undefined__",n=9007199254740991,o="[object Arguments]",s="[object Boolean]",c="[object Date]",i="[object Function]",l="[object GeneratorFunction]",u="[object Map]",p="[object Number]",d="[object Object]",m="[object RegExp]",g="[object Set]",h="[object String]",b="[object Symbol]",x="[object ArrayBuffer]",A="[object DataView]",w="[object Float32Array]",y="[object Float64Array]",v="[object Int8Array]",q="[object Int16Array]",S="[object Int32Array]",E="[object Uint8Array]",D="[object Uint8ClampedArray]",I="[object Uint16Array]",C="[object Uint32Array]",k=/\w*$/,P=/^\[object .+?Constructor\]$/,T=/^(?:0|[1-9]\d*)$/,L={};L[o]=L["[object Array]"]=L[x]=L[A]=L[s]=L[c]=L[w]=L[y]=L[v]=L[q]=L[S]=L[u]=L[p]=L[d]=L[m]=L[g]=L[h]=L[b]=L[E]=L[D]=L[I]=L[C]=!0,L["[object Error]"]=L[i]=L["[object WeakMap]"]=!1;var N="object"==typeof f&&f&&f.Object===Object&&f,R="object"==typeof self&&self&&self.Object===Object&&self,B=N||R||Function("return this")(),F=r&&!r.nodeType&&r,O=F&&e&&!e.nodeType&&e,V=O&&O.exports===F;function U(e,r){return e.set(r[0],r[1]),e}function j(e,r){return e.add(r),e}function _(e,r,t,a){var n=-1,o=e?e.length:0;for(a&&o&&(t=e[++n]);++n<o;)t=r(t,e[n],n,e);return t}function H(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}function G(e){var r=-1,t=Array(e.size);return e.forEach(function(e,a){t[++r]=[a,e]}),t}function z(e,r){return function(t){return e(r(t))}}function Q(e){var r=-1,t=Array(e.size);return e.forEach(function(e){t[++r]=e}),t}var J,M=Array.prototype,$=Function.prototype,W=Object.prototype,Z=B["__core-js_shared__"],Y=(J=/[^.]+$/.exec(Z&&Z.keys&&Z.keys.IE_PROTO||""))?"Symbol(src)_1."+J:"",K=$.toString,X=W.hasOwnProperty,ee=W.toString,re=RegExp("^"+K.call(X).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),te=V?B.Buffer:void 0,ae=B.Symbol,ne=B.Uint8Array,oe=z(Object.getPrototypeOf,Object),se=Object.create,ce=W.propertyIsEnumerable,ie=M.splice,le=Object.getOwnPropertySymbols,ue=te?te.isBuffer:void 0,pe=z(Object.keys,Object),de=Oe(B,"DataView"),me=Oe(B,"Map"),ge=Oe(B,"Promise"),fe=Oe(B,"Set"),he=Oe(B,"WeakMap"),be=Oe(Object,"create"),xe=He(de),Ae=He(me),we=He(ge),ye=He(fe),ve=He(he),qe=ae?ae.prototype:void 0,Se=qe?qe.valueOf:void 0;function Ee(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function De(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function Ie(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function Ce(e){this.__data__=new De(e)}function ke(e,r){var t=ze(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Qe(e)}(e)&&X.call(e,"callee")&&(!ce.call(e,"callee")||ee.call(e)==o)}(e)?function(e,r){for(var t=-1,a=Array(e);++t<e;)a[t]=r(t);return a}(e.length,String):[],a=t.length,n=!!a;for(var s in e)!r&&!X.call(e,s)||n&&("length"==s||je(s,a))||t.push(s);return t}function Pe(e,r,t){var a=e[r];X.call(e,r)&&Ge(a,t)&&(void 0!==t||r in e)||(e[r]=t)}function Te(e,r){for(var t=e.length;t--;)if(Ge(e[t][0],r))return t;return-1}function Le(e,r,t,a,n,f,P){var T;if(a&&(T=f?a(e,n,f,P):a(e)),void 0!==T)return T;if(!$e(e))return e;var N=ze(e);if(N){if(T=function(e){var r=e.length,t=e.constructor(r);r&&"string"==typeof e[0]&&X.call(e,"index")&&(t.index=e.index,t.input=e.input);return t}(e),!r)return function(e,r){var t=-1,a=e.length;r||(r=Array(a));for(;++t<a;)r[t]=e[t];return r}(e,T)}else{var R=Ue(e),B=R==i||R==l;if(Je(e))return function(e,r){if(r)return e.slice();var t=new e.constructor(e.length);return e.copy(t),t}(e,r);if(R==d||R==o||B&&!f){if(H(e))return f?e:{};if(T=function(e){return"function"!=typeof e.constructor||_e(e)?{}:(r=oe(e),$e(r)?se(r):{});var r}(B?{}:e),!r)return function(e,r){return Be(e,Ve(e),r)}(e,function(e,r){return e&&Be(r,We(r),e)}(T,e))}else{if(!L[R])return f?e:{};T=function(e,r,t,a){var n=e.constructor;switch(r){case x:return Re(e);case s:case c:return new n(+e);case A:return function(e,r){var t=r?Re(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.byteLength)}(e,a);case w:case y:case v:case q:case S:case E:case D:case I:case C:return function(e,r){var t=r?Re(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.length)}(e,a);case u:return function(e,r,t){return _(r?t(G(e),!0):G(e),U,new e.constructor)}(e,a,t);case p:case h:return new n(e);case m:return(l=new(i=e).constructor(i.source,k.exec(i))).lastIndex=i.lastIndex,l;case g:return function(e,r,t){return _(r?t(Q(e),!0):Q(e),j,new e.constructor)}(e,a,t);case b:return o=e,Se?Object(Se.call(o)):{}}var o;var i,l}(e,R,Le,r)}}P||(P=new Ce);var F=P.get(e);if(F)return F;if(P.set(e,T),!N)var O=t?function(e){return function(e,r,t){var a=r(e);return ze(e)?a:function(e,r){for(var t=-1,a=r.length,n=e.length;++t<a;)e[n+t]=r[t];return e}(a,t(e))}(e,We,Ve)}(e):We(e);return function(e,r){for(var t=-1,a=e?e.length:0;++t<a&&!1!==r(e[t],t,e););}(O||e,function(n,o){O&&(n=e[o=n]),Pe(T,o,Le(n,r,t,a,o,e,P))}),T}function Ne(e){return!(!$e(e)||function(e){return!!Y&&Y in e}(e))&&(Me(e)||H(e)?re:P).test(He(e))}function Re(e){var r=new e.constructor(e.byteLength);return new ne(r).set(new ne(e)),r}function Be(e,r,t,a){t||(t={});for(var n=-1,o=r.length;++n<o;){var s=r[n],c=a?a(t[s],e[s],s,t,e):void 0;Pe(t,s,void 0===c?e[s]:c)}return t}function Fe(e,r){var t,a,n=e.__data__;return("string"==(a=typeof(t=r))||"number"==a||"symbol"==a||"boolean"==a?"__proto__"!==t:null===t)?n["string"==typeof r?"string":"hash"]:n.map}function Oe(e,r){var t=function(e,r){return null==e?void 0:e[r]}(e,r);return Ne(t)?t:void 0}Ee.prototype.clear=function(){this.__data__=be?be(null):{}},Ee.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Ee.prototype.get=function(e){var r=this.__data__;if(be){var t=r[e];return t===a?void 0:t}return X.call(r,e)?r[e]:void 0},Ee.prototype.has=function(e){var r=this.__data__;return be?void 0!==r[e]:X.call(r,e)},Ee.prototype.set=function(e,r){return this.__data__[e]=be&&void 0===r?a:r,this},De.prototype.clear=function(){this.__data__=[]},De.prototype.delete=function(e){var r=this.__data__,t=Te(r,e);return!(t<0||(t==r.length-1?r.pop():ie.call(r,t,1),0))},De.prototype.get=function(e){var r=this.__data__,t=Te(r,e);return t<0?void 0:r[t][1]},De.prototype.has=function(e){return Te(this.__data__,e)>-1},De.prototype.set=function(e,r){var t=this.__data__,a=Te(t,e);return a<0?t.push([e,r]):t[a][1]=r,this},Ie.prototype.clear=function(){this.__data__={hash:new Ee,map:new(me||De),string:new Ee}},Ie.prototype.delete=function(e){return Fe(this,e).delete(e)},Ie.prototype.get=function(e){return Fe(this,e).get(e)},Ie.prototype.has=function(e){return Fe(this,e).has(e)},Ie.prototype.set=function(e,r){return Fe(this,e).set(e,r),this},Ce.prototype.clear=function(){this.__data__=new De},Ce.prototype.delete=function(e){return this.__data__.delete(e)},Ce.prototype.get=function(e){return this.__data__.get(e)},Ce.prototype.has=function(e){return this.__data__.has(e)},Ce.prototype.set=function(e,r){var a=this.__data__;if(a instanceof De){var n=a.__data__;if(!me||n.length<t-1)return n.push([e,r]),this;a=this.__data__=new Ie(n)}return a.set(e,r),this};var Ve=le?z(le,Object):function(){return[]},Ue=function(e){return ee.call(e)};function je(e,r){return!!(r=null==r?n:r)&&("number"==typeof e||T.test(e))&&e>-1&&e%1==0&&e<r}function _e(e){var r=e&&e.constructor;return e===("function"==typeof r&&r.prototype||W)}function He(e){if(null!=e){try{return K.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Ge(e,r){return e===r||e!=e&&r!=r}(de&&Ue(new de(new ArrayBuffer(1)))!=A||me&&Ue(new me)!=u||ge&&"[object Promise]"!=Ue(ge.resolve())||fe&&Ue(new fe)!=g||he&&"[object WeakMap]"!=Ue(new he))&&(Ue=function(e){var r=ee.call(e),t=r==d?e.constructor:void 0,a=t?He(t):void 0;if(a)switch(a){case xe:return A;case Ae:return u;case we:return"[object Promise]";case ye:return g;case ve:return"[object WeakMap]"}return r});var ze=Array.isArray;function Qe(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=n}(e.length)&&!Me(e)}var Je=ue||function(){return!1};function Me(e){var r=$e(e)?ee.call(e):"";return r==i||r==l}function $e(e){var r=typeof e;return!!e&&("object"==r||"function"==r)}function We(e){return Qe(e)?ke(e):function(e){if(!_e(e))return pe(e);var r=[];for(var t in Object(e))X.call(e,t)&&"constructor"!=t&&r.push(t);return r}(e)}e.exports=function(e){return Le(e,!0,!0)}}),x={Aacute:"Á",aacute:"á",Abreve:"Ă",abreve:"ă",ac:"∾",acd:"∿",acE:"∾̳",Acirc:"Â",acirc:"â",acute:"´",Acy:"А",acy:"а",AElig:"Æ",aelig:"æ",af:"⁡",Afr:"𝔄",afr:"𝔞",Agrave:"À",agrave:"à",alefsym:"ℵ",aleph:"ℵ",Alpha:"Α",alpha:"α",Amacr:"Ā",amacr:"ā",amalg:"⨿",AMP:"&",amp:"&",And:"⩓",and:"∧",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",Aogon:"Ą",aogon:"ą",Aopf:"𝔸",aopf:"𝕒",ap:"≈",apacir:"⩯",apE:"⩰",ape:"≊",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",Aring:"Å",aring:"å",Ascr:"𝒜",ascr:"𝒶",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",Barwed:"⌆",barwed:"⌅",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",Bcy:"Б",bcy:"б",bdquo:"„",becaus:"∵",Because:"∵",because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",Beta:"Β",beta:"β",beth:"ℶ",between:"≬",Bfr:"𝔅",bfr:"𝔟",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bNot:"⫭",bnot:"⌐",Bopf:"𝔹",bopf:"𝕓",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxDL:"╗",boxDl:"╖",boxdL:"╕",boxdl:"┐",boxDR:"╔",boxDr:"╓",boxdR:"╒",boxdr:"┌",boxH:"═",boxh:"─",boxHD:"╦",boxHd:"╤",boxhD:"╥",boxhd:"┬",boxHU:"╩",boxHu:"╧",boxhU:"╨",boxhu:"┴",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxUL:"╝",boxUl:"╜",boxuL:"╛",boxul:"┘",boxUR:"╚",boxUr:"╙",boxuR:"╘",boxur:"└",boxV:"║",boxv:"│",boxVH:"╬",boxVh:"╫",boxvH:"╪",boxvh:"┼",boxVL:"╣",boxVl:"╢",boxvL:"╡",boxvl:"┤",boxVR:"╠",boxVr:"╟",boxvR:"╞",boxvr:"├",bprime:"‵",Breve:"˘",breve:"˘",brvbar:"¦",Bscr:"ℬ",bscr:"𝒷",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpE:"⪮",bumpe:"≏",Bumpeq:"≎",bumpeq:"≏",Cacute:"Ć",cacute:"ć",Cap:"⋒",cap:"∩",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",Ccaron:"Č",ccaron:"č",Ccedil:"Ç",ccedil:"ç",Ccirc:"Ĉ",ccirc:"ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",Cdot:"Ċ",cdot:"ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",CenterDot:"·",centerdot:"·",Cfr:"ℭ",cfr:"𝔠",CHcy:"Ч",chcy:"ч",check:"✓",checkmark:"✓",Chi:"Χ",chi:"χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cirE:"⧃",cire:"≗",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",Colon:"∷",colon:":",Colone:"⩴",colone:"≔",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",Conint:"∯",conint:"∮",ContourIntegral:"∮",Copf:"ℂ",copf:"𝕔",coprod:"∐",Coproduct:"∐",COPY:"©",copy:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",Cross:"⨯",cross:"✗",Cscr:"𝒞",cscr:"𝒸",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",Cup:"⋓",cup:"∪",cupbrcap:"⩈",CupCap:"≍",cupcap:"⩆",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",Dagger:"‡",dagger:"†",daleth:"ℸ",Darr:"↡",dArr:"⇓",darr:"↓",dash:"‐",Dashv:"⫤",dashv:"⊣",dbkarow:"⤏",dblac:"˝",Dcaron:"Ď",dcaron:"ď",Dcy:"Д",dcy:"д",DD:"ⅅ",dd:"ⅆ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",Delta:"Δ",delta:"δ",demptyv:"⦱",dfisht:"⥿",Dfr:"𝔇",dfr:"𝔡",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",Diamond:"⋄",diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",DJcy:"Ђ",djcy:"ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",Dopf:"𝔻",dopf:"𝕕",Dot:"¨",dot:"˙",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",DownArrow:"↓",Downarrow:"⇓",downarrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",Dscr:"𝒟",dscr:"𝒹",DScy:"Ѕ",dscy:"ѕ",dsol:"⧶",Dstrok:"Đ",dstrok:"đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",DZcy:"Џ",dzcy:"џ",dzigrarr:"⟿",Eacute:"É",eacute:"é",easter:"⩮",Ecaron:"Ě",ecaron:"ě",ecir:"≖",Ecirc:"Ê",ecirc:"ê",ecolon:"≕",Ecy:"Э",ecy:"э",eDDot:"⩷",Edot:"Ė",eDot:"≑",edot:"ė",ee:"ⅇ",efDot:"≒",Efr:"𝔈",efr:"𝔢",eg:"⪚",Egrave:"È",egrave:"è",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",Emacr:"Ē",emacr:"ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",ENG:"Ŋ",eng:"ŋ",ensp:" ",Eogon:"Ę",eogon:"ę",Eopf:"𝔼",eopf:"𝕖",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",Epsilon:"Ε",epsilon:"ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",Escr:"ℰ",escr:"ℯ",esdot:"≐",Esim:"⩳",esim:"≂",Eta:"Η",eta:"η",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",ExponentialE:"ⅇ",exponentiale:"ⅇ",fallingdotseq:"≒",Fcy:"Ф",fcy:"ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",Ffr:"𝔉",ffr:"𝔣",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",Fopf:"𝔽",fopf:"𝕗",ForAll:"∀",forall:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",Fscr:"ℱ",fscr:"𝒻",gacute:"ǵ",Gamma:"Γ",gamma:"γ",Gammad:"Ϝ",gammad:"ϝ",gap:"⪆",Gbreve:"Ğ",gbreve:"ğ",Gcedil:"Ģ",Gcirc:"Ĝ",gcirc:"ĝ",Gcy:"Г",gcy:"г",Gdot:"Ġ",gdot:"ġ",gE:"≧",ge:"≥",gEl:"⪌",gel:"⋛",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",Gfr:"𝔊",gfr:"𝔤",Gg:"⋙",gg:"≫",ggg:"⋙",gimel:"ℷ",GJcy:"Ѓ",gjcy:"ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gnE:"≩",gne:"⪈",gneq:"⪈",gneqq:"≩",gnsim:"⋧",Gopf:"𝔾",gopf:"𝕘",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",Gscr:"𝒢",gscr:"ℊ",gsim:"≳",gsime:"⪎",gsiml:"⪐",GT:">",Gt:"≫",gt:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",HARDcy:"Ъ",hardcy:"ъ",hArr:"⇔",harr:"↔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",Hcirc:"Ĥ",hcirc:"ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",Hfr:"ℌ",hfr:"𝔥",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",Hopf:"ℍ",hopf:"𝕙",horbar:"―",HorizontalLine:"─",Hscr:"ℋ",hscr:"𝒽",hslash:"ℏ",Hstrok:"Ħ",hstrok:"ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",Iacute:"Í",iacute:"í",ic:"⁣",Icirc:"Î",icirc:"î",Icy:"И",icy:"и",Idot:"İ",IEcy:"Е",iecy:"е",iexcl:"¡",iff:"⇔",Ifr:"ℑ",ifr:"𝔦",Igrave:"Ì",igrave:"ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",IJlig:"Ĳ",ijlig:"ĳ",Im:"ℑ",Imacr:"Ī",imacr:"ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",Int:"∬",int:"∫",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",IOcy:"Ё",iocy:"ё",Iogon:"Į",iogon:"į",Iopf:"𝕀",iopf:"𝕚",Iota:"Ι",iota:"ι",iprod:"⨼",iquest:"¿",Iscr:"ℐ",iscr:"𝒾",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",Itilde:"Ĩ",itilde:"ĩ",Iukcy:"І",iukcy:"і",Iuml:"Ï",iuml:"ï",Jcirc:"Ĵ",jcirc:"ĵ",Jcy:"Й",jcy:"й",Jfr:"𝔍",jfr:"𝔧",jmath:"ȷ",Jopf:"𝕁",jopf:"𝕛",Jscr:"𝒥",jscr:"𝒿",Jsercy:"Ј",jsercy:"ј",Jukcy:"Є",jukcy:"є",Kappa:"Κ",kappa:"κ",kappav:"ϰ",Kcedil:"Ķ",kcedil:"ķ",Kcy:"К",kcy:"к",Kfr:"𝔎",kfr:"𝔨",kgreen:"ĸ",KHcy:"Х",khcy:"х",KJcy:"Ќ",kjcy:"ќ",Kopf:"𝕂",kopf:"𝕜",Kscr:"𝒦",kscr:"𝓀",lAarr:"⇚",Lacute:"Ĺ",lacute:"ĺ",laemptyv:"⦴",lagran:"ℒ",Lambda:"Λ",lambda:"λ",Lang:"⟪",lang:"⟨",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",Larr:"↞",lArr:"⇐",larr:"←",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",lAtail:"⤛",latail:"⤙",late:"⪭",lates:"⪭︀",lBarr:"⤎",lbarr:"⤌",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",Lcaron:"Ľ",lcaron:"ľ",Lcedil:"Ļ",lcedil:"ļ",lceil:"⌈",lcub:"{",Lcy:"Л",lcy:"л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",lE:"≦",le:"≤",LeftAngleBracket:"⟨",LeftArrow:"←",Leftarrow:"⇐",leftarrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",LeftRightArrow:"↔",Leftrightarrow:"⇔",leftrightarrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",lEg:"⪋",leg:"⋚",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",Lfr:"𝔏",lfr:"𝔩",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",LJcy:"Љ",ljcy:"љ",Ll:"⋘",ll:"≪",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",Lmidot:"Ŀ",lmidot:"ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lnE:"≨",lne:"⪇",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",LongLeftArrow:"⟵",Longleftarrow:"⟸",longleftarrow:"⟵",LongLeftRightArrow:"⟷",Longleftrightarrow:"⟺",longleftrightarrow:"⟷",longmapsto:"⟼",LongRightArrow:"⟶",Longrightarrow:"⟹",longrightarrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",Lopf:"𝕃",lopf:"𝕝",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",Lscr:"ℒ",lscr:"𝓁",Lsh:"↰",lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",Lstrok:"Ł",lstrok:"ł",LT:"<",Lt:"≪",lt:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",Map:"⤅",map:"↦",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",Mcy:"М",mcy:"м",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",Mfr:"𝔐",mfr:"𝔪",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",Mopf:"𝕄",mopf:"𝕞",mp:"∓",Mscr:"ℳ",mscr:"𝓂",mstpos:"∾",Mu:"Μ",mu:"μ",multimap:"⊸",mumap:"⊸",nabla:"∇",Nacute:"Ń",nacute:"ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",Ncaron:"Ň",ncaron:"ň",Ncedil:"Ņ",ncedil:"ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",Ncy:"Н",ncy:"н",ndash:"–",ne:"≠",nearhk:"⤤",neArr:"⇗",nearr:"↗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",Nfr:"𝔑",nfr:"𝔫",ngE:"≧̸",nge:"≱",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",nGt:"≫⃒",ngt:"≯",ngtr:"≯",nGtv:"≫̸",nhArr:"⇎",nharr:"↮",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",NJcy:"Њ",njcy:"њ",nlArr:"⇍",nlarr:"↚",nldr:"‥",nlE:"≦̸",nle:"≰",nLeftarrow:"⇍",nleftarrow:"↚",nLeftrightarrow:"⇎",nleftrightarrow:"↮",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nLt:"≪⃒",nlt:"≮",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",Nopf:"ℕ",nopf:"𝕟",Not:"⫬",not:"¬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrArr:"⇏",nrarr:"↛",nrarrc:"⤳̸",nrarrw:"↝̸",nRightarrow:"⇏",nrightarrow:"↛",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",Nscr:"𝒩",nscr:"𝓃",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsubE:"⫅̸",nsube:"⊈",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupE:"⫆̸",nsupe:"⊉",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",Ntilde:"Ñ",ntilde:"ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",Nu:"Ν",nu:"ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nVDash:"⊯",nVdash:"⊮",nvDash:"⊭",nvdash:"⊬",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwArr:"⇖",nwarr:"↖",nwarrow:"↖",nwnear:"⤧",Oacute:"Ó",oacute:"ó",oast:"⊛",ocir:"⊚",Ocirc:"Ô",ocirc:"ô",Ocy:"О",ocy:"о",odash:"⊝",Odblac:"Ő",odblac:"ő",odiv:"⨸",odot:"⊙",odsold:"⦼",OElig:"Œ",oelig:"œ",ofcir:"⦿",Ofr:"𝔒",ofr:"𝔬",ogon:"˛",Ograve:"Ò",ograve:"ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",Omacr:"Ō",omacr:"ō",Omega:"Ω",omega:"ω",Omicron:"Ο",omicron:"ο",omid:"⦶",ominus:"⊖",Oopf:"𝕆",oopf:"𝕠",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",Or:"⩔",or:"∨",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",Oscr:"𝒪",oscr:"ℴ",Oslash:"Ø",oslash:"ø",osol:"⊘",Otilde:"Õ",otilde:"õ",Otimes:"⨷",otimes:"⊗",otimesas:"⨶",Ouml:"Ö",ouml:"ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",Pcy:"П",pcy:"п",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",Pfr:"𝔓",pfr:"𝔭",Phi:"Φ",phi:"φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",Pi:"Π",pi:"π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",Popf:"ℙ",popf:"𝕡",pound:"£",Pr:"⪻",pr:"≺",prap:"⪷",prcue:"≼",prE:"⪳",pre:"⪯",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",Prime:"″",prime:"′",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",Pscr:"𝒫",pscr:"𝓅",Psi:"Ψ",psi:"ψ",puncsp:" ",Qfr:"𝔔",qfr:"𝔮",qint:"⨌",Qopf:"ℚ",qopf:"𝕢",qprime:"⁗",Qscr:"𝒬",qscr:"𝓆",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",QUOT:'"',quot:'"',rAarr:"⇛",race:"∽̱",Racute:"Ŕ",racute:"ŕ",radic:"√",raemptyv:"⦳",Rang:"⟫",rang:"⟩",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",Rarr:"↠",rArr:"⇒",rarr:"→",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",Rarrtl:"⤖",rarrtl:"↣",rarrw:"↝",rAtail:"⤜",ratail:"⤚",ratio:"∶",rationals:"ℚ",RBarr:"⤐",rBarr:"⤏",rbarr:"⤍",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",Rcaron:"Ř",rcaron:"ř",Rcedil:"Ŗ",rcedil:"ŗ",rceil:"⌉",rcub:"}",Rcy:"Р",rcy:"р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",REG:"®",reg:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",Rfr:"ℜ",rfr:"𝔯",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",Rho:"Ρ",rho:"ρ",rhov:"ϱ",RightAngleBracket:"⟩",RightArrow:"→",Rightarrow:"⇒",rightarrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",Ropf:"ℝ",ropf:"𝕣",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",Rscr:"ℛ",rscr:"𝓇",Rsh:"↱",rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",Sacute:"Ś",sacute:"ś",sbquo:"‚",Sc:"⪼",sc:"≻",scap:"⪸",Scaron:"Š",scaron:"š",sccue:"≽",scE:"⪴",sce:"⪰",Scedil:"Ş",scedil:"ş",Scirc:"Ŝ",scirc:"ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",Scy:"С",scy:"с",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",seArr:"⇘",searr:"↘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",Sfr:"𝔖",sfr:"𝔰",sfrown:"⌢",sharp:"♯",SHCHcy:"Щ",shchcy:"щ",SHcy:"Ш",shcy:"ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",Sigma:"Σ",sigma:"σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",SOFTcy:"Ь",softcy:"ь",sol:"/",solb:"⧄",solbar:"⌿",Sopf:"𝕊",sopf:"𝕤",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",Square:"□",square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",Sscr:"𝒮",sscr:"𝓈",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",Star:"⋆",star:"☆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",Sub:"⋐",sub:"⊂",subdot:"⪽",subE:"⫅",sube:"⊆",subedot:"⫃",submult:"⫁",subnE:"⫋",subne:"⊊",subplus:"⪿",subrarr:"⥹",Subset:"⋐",subset:"⊂",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",Sum:"∑",sum:"∑",sung:"♪",Sup:"⋑",sup:"⊃",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supE:"⫆",supe:"⊇",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supnE:"⫌",supne:"⊋",supplus:"⫀",Supset:"⋑",supset:"⊃",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swArr:"⇙",swarr:"↙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",Tau:"Τ",tau:"τ",tbrk:"⎴",Tcaron:"Ť",tcaron:"ť",Tcedil:"Ţ",tcedil:"ţ",Tcy:"Т",tcy:"т",tdot:"⃛",telrec:"⌕",Tfr:"𝔗",tfr:"𝔱",there4:"∴",Therefore:"∴",therefore:"∴",Theta:"Θ",theta:"θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",THORN:"Þ",thorn:"þ",Tilde:"∼",tilde:"˜",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",Topf:"𝕋",topf:"𝕥",topfork:"⫚",tosa:"⤩",tprime:"‴",TRADE:"™",trade:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",Tscr:"𝒯",tscr:"𝓉",TScy:"Ц",tscy:"ц",TSHcy:"Ћ",tshcy:"ћ",Tstrok:"Ŧ",tstrok:"ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",Uacute:"Ú",uacute:"ú",Uarr:"↟",uArr:"⇑",uarr:"↑",Uarrocir:"⥉",Ubrcy:"Ў",ubrcy:"ў",Ubreve:"Ŭ",ubreve:"ŭ",Ucirc:"Û",ucirc:"û",Ucy:"У",ucy:"у",udarr:"⇅",Udblac:"Ű",udblac:"ű",udhar:"⥮",ufisht:"⥾",Ufr:"𝔘",ufr:"𝔲",Ugrave:"Ù",ugrave:"ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",Umacr:"Ū",umacr:"ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",Uogon:"Ų",uogon:"ų",Uopf:"𝕌",uopf:"𝕦",UpArrow:"↑",Uparrow:"⇑",uparrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",UpDownArrow:"↕",Updownarrow:"⇕",updownarrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",Upsi:"ϒ",upsi:"υ",upsih:"ϒ",Upsilon:"Υ",upsilon:"υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",Uring:"Ů",uring:"ů",urtri:"◹",Uscr:"𝒰",uscr:"𝓊",utdot:"⋰",Utilde:"Ũ",utilde:"ũ",utri:"▵",utrif:"▴",uuarr:"⇈",Uuml:"Ü",uuml:"ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",vArr:"⇕",varr:"↕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",Vbar:"⫫",vBar:"⫨",vBarv:"⫩",Vcy:"В",vcy:"в",VDash:"⊫",Vdash:"⊩",vDash:"⊨",vdash:"⊢",Vdashl:"⫦",Vee:"⋁",vee:"∨",veebar:"⊻",veeeq:"≚",vellip:"⋮",Verbar:"‖",verbar:"|",Vert:"‖",vert:"|",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",Vfr:"𝔙",vfr:"𝔳",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",Vopf:"𝕍",vopf:"𝕧",vprop:"∝",vrtri:"⊳",Vscr:"𝒱",vscr:"𝓋",vsubnE:"⫋︀",vsubne:"⊊︀",vsupnE:"⫌︀",vsupne:"⊋︀",Vvdash:"⊪",vzigzag:"⦚",Wcirc:"Ŵ",wcirc:"ŵ",wedbar:"⩟",Wedge:"⋀",wedge:"∧",wedgeq:"≙",weierp:"℘",Wfr:"𝔚",wfr:"𝔴",Wopf:"𝕎",wopf:"𝕨",wp:"℘",wr:"≀",wreath:"≀",Wscr:"𝒲",wscr:"𝓌",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",Xfr:"𝔛",xfr:"𝔵",xhArr:"⟺",xharr:"⟷",Xi:"Ξ",xi:"ξ",xlArr:"⟸",xlarr:"⟵",xmap:"⟼",xnis:"⋻",xodot:"⨀",Xopf:"𝕏",xopf:"𝕩",xoplus:"⨁",xotime:"⨂",xrArr:"⟹",xrarr:"⟶",Xscr:"𝒳",xscr:"𝓍",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",Yacute:"Ý",yacute:"ý",YAcy:"Я",yacy:"я",Ycirc:"Ŷ",ycirc:"ŷ",Ycy:"Ы",ycy:"ы",yen:"¥",Yfr:"𝔜",yfr:"𝔶",YIcy:"Ї",yicy:"ї",Yopf:"𝕐",yopf:"𝕪",Yscr:"𝒴",yscr:"𝓎",YUcy:"Ю",yucy:"ю",Yuml:"Ÿ",yuml:"ÿ",Zacute:"Ź",zacute:"ź",Zcaron:"Ž",zcaron:"ž",Zcy:"З",zcy:"з",Zdot:"Ż",zdot:"ż",zeetrf:"ℨ",ZeroWidthSpace:"​",Zeta:"Ζ",zeta:"ζ",Zfr:"ℨ",zfr:"𝔷",ZHcy:"Ж",zhcy:"ж",zigrarr:"⇝",Zopf:"ℤ",zopf:"𝕫",Zscr:"𝒵",zscr:"𝓏",zwj:"‍",zwnj:"‌"},A={ound:"pound",pond:"pound",poubd:"pound",poud:"pound",poumd:"pound",poun:"pound",pund:"pound",zvbj:"zwnj",zvhj:"zwnj",zvjb:"zwnj",zvjh:"zwnj",zvjm:"zwnj",zvjn:"zwnj",zvmj:"zwnj",zvng:"zwnj",zvnh:"zwnj",zvnj:"zwnj",zvnk:"zwnj",zvnm:"zwnj",zwbj:"zwnj",zwhj:"zwnj",zwjb:"zwnj",zwjh:"zwnj",zwjm:"zwnj",zwjn:"zwnj",zwmj:"zwnj",zwng:"zwnj",zwnh:"zwnj",zwnk:"zwnj",zwnm:"zwnj"},w={A:{a:["Aacute"],b:["Abreve"],c:["Acirc","Acy"],E:["AElig"],f:["Afr"],g:["Agrave"],l:["Alpha"],m:["Amacr"],M:["AMP"],n:["And"],o:["Aogon","Aopf"],p:["ApplyFunction"],r:["Aring"],s:["Ascr","Assign"],t:["Atilde"],u:["Auml"]},a:{a:["aacute"],b:["abreve"],c:["ac","acd","acE","acirc","acute","acy"],e:["aelig"],f:["af","afr"],g:["agrave"],l:["alefsym","aleph","alpha"],m:["amacr","amalg","amp"],n:["and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr"],o:["aogon","aopf"],p:["ap","apacir","apE","ape","apid","apos","approx","approxeq"],r:["aring"],s:["ascr","ast","asymp","asympeq"],t:["atilde"],u:["auml"],w:["awconint","awint"]},b:{a:["backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge"],b:["bbrk","bbrktbrk"],c:["bcong","bcy"],d:["bdquo"],e:["becaus","because","bemptyv","bepsi","bernou","beta","beth","between"],f:["bfr"],i:["bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge"],k:["bkarow"],l:["blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block"],n:["bne","bnequiv","bnot"],N:["bNot"],o:["bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr"],p:["bprime"],r:["breve","brvbar"],s:["bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub"],u:["bull","bullet","bump","bumpE","bumpe","bumpeq"]},B:{a:["Backslash","Barv","Barwed"],c:["Bcy"],e:["Because","Bernoullis","Beta"],f:["Bfr"],o:["Bopf"],r:["Breve"],s:["Bscr"],u:["Bumpeq"]},C:{a:["Cacute","Cap","CapitalDifferentialD","Cayleys"],c:["Ccaron","Ccedil","Ccirc","Cconint"],d:["Cdot"],e:["Cedilla","CenterDot"],f:["Cfr"],H:["CHcy"],h:["Chi"],i:["CircleDot","CircleMinus","CirclePlus","CircleTimes"],l:["ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote"],o:["Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral"],O:["COPY"],r:["Cross"],s:["Cscr"],u:["Cup","CupCap"]},c:{a:["cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron"],c:["ccaps","ccaron","ccedil","ccirc","ccups","ccupssm"],d:["cdot"],e:["cedil","cemptyv","cent","centerdot"],f:["cfr"],h:["chcy","check","checkmark","chi"],i:["cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledR","circledS","cirE","cire","cirfnint","cirmid","cirscir"],l:["clubs","clubsuit"],o:["colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copy","copysr"],r:["crarr","cross"],s:["cscr","csub","csube","csup","csupe"],t:["ctdot"],u:["cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed"],w:["cwconint","cwint"],y:["cylcty"]},D:{a:["Dagger","Darr","Dashv"],c:["Dcaron","Dcy"],D:["DD","DDotrahd"],e:["Del","Delta"],f:["Dfr"],i:["DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD"],J:["DJcy"],o:["Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow"],s:["Dscr","Dstrok"],S:["DScy"],Z:["DZcy"]},d:{a:["dagger","daleth","darr","dash","dashv"],A:["dArr"],b:["dbkarow","dblac"],c:["dcaron","dcy"],d:["dd","ddagger","ddarr","ddotseq"],e:["deg","delta","demptyv"],f:["dfisht","dfr"],H:["dHar"],h:["dharl","dharr"],i:["diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx"],j:["djcy"],l:["dlcorn","dlcrop"],o:["dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright"],r:["drbkarow","drcorn","drcrop"],s:["dscr","dscy","dsol","dstrok"],t:["dtdot","dtri","dtrif"],u:["duarr","duhar"],w:["dwangle"],z:["dzcy","dzigrarr"]},E:{a:["Eacute"],c:["Ecaron","Ecirc","Ecy"],d:["Edot"],f:["Efr"],g:["Egrave"],l:["Element"],m:["Emacr","EmptySmallSquare","EmptyVerySmallSquare"],N:["ENG"],o:["Eogon","Eopf"],p:["Epsilon"],q:["Equal","EqualTilde","Equilibrium"],s:["Escr","Esim"],t:["Eta"],T:["ETH"],u:["Euml"],x:["Exists","ExponentialE"]},e:{a:["eacute","easter"],c:["ecaron","ecir","ecirc","ecolon","ecy"],D:["eDDot","eDot"],d:["edot"],e:["ee"],f:["efDot","efr"],g:["eg","egrave","egs","egsdot"],l:["el","elinters","ell","els","elsdot"],m:["emacr","empty","emptyset","emptyv","emsp","emsp13","emsp14"],n:["eng","ensp"],o:["eogon","eopf"],p:["epar","eparsl","eplus","epsi","epsilon","epsiv"],q:["eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl"],r:["erarr","erDot"],s:["escr","esdot","esim"],t:["eta","eth"],u:["euml","euro"],x:["excl","exist","expectation","exponentiale"]},f:{a:["fallingdotseq"],c:["fcy"],e:["female"],f:["ffilig","fflig","ffllig","ffr"],i:["filig"],j:["fjlig"],l:["flat","fllig","fltns"],n:["fnof"],o:["fopf","forall","fork","forkv"],p:["fpartint"],r:["frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown"],s:["fscr"]},F:{c:["Fcy"],f:["Ffr"],i:["FilledSmallSquare","FilledVerySmallSquare"],o:["Fopf","ForAll","Fouriertrf"],s:["Fscr"]},g:{a:["gacute","gamma","gammad","gap"],b:["gbreve"],c:["gcirc","gcy"],d:["gdot"],E:["gE","gEl"],e:["ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles"],f:["gfr"],g:["gg","ggg"],i:["gimel"],j:["gjcy"],l:["gl","gla","glE","glj"],n:["gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim"],o:["gopf"],r:["grave"],s:["gscr","gsim","gsime","gsiml"],t:["gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim"],v:["gvertneqq","gvnE"]},G:{a:["Gamma","Gammad"],b:["Gbreve"],c:["Gcedil","Gcirc","Gcy"],d:["Gdot"],f:["Gfr"],g:["Gg"],J:["GJcy"],o:["Gopf"],r:["GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde"],s:["Gscr"],T:["GT"],t:["Gt"]},H:{a:["Hacek","Hat"],A:["HARDcy"],c:["Hcirc"],f:["Hfr"],i:["HilbertSpace"],o:["Hopf","HorizontalLine"],s:["Hscr","Hstrok"],u:["HumpDownHump","HumpEqual"]},h:{a:["hairsp","half","hamilt","hardcy","harr","harrcir","harrw"],A:["hArr"],b:["hbar"],c:["hcirc"],e:["hearts","heartsuit","hellip","hercon"],f:["hfr"],k:["hksearow","hkswarow"],o:["hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar"],s:["hscr","hslash","hstrok"],y:["hybull","hyphen"]},I:{a:["Iacute"],c:["Icirc","Icy"],d:["Idot"],E:["IEcy"],f:["Ifr"],g:["Igrave"],J:["IJlig"],m:["Im","Imacr","ImaginaryI","Implies"],n:["Int","Integral","Intersection","InvisibleComma","InvisibleTimes"],O:["IOcy"],o:["Iogon","Iopf","Iota"],s:["Iscr"],t:["Itilde"],u:["Iukcy","Iuml"]},i:{a:["iacute"],c:["ic","icirc","icy"],e:["iecy","iexcl"],f:["iff","ifr"],g:["igrave"],i:["ii","iiiint","iiint","iinfin","iiota"],j:["ijlig"],m:["imacr","image","imagline","imagpart","imath","imof","imped"],n:["in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod"],o:["iocy","iogon","iopf","iota"],p:["iprod"],q:["iquest"],s:["iscr","isin","isindot","isinE","isins","isinsv","isinv"],t:["it","itilde"],u:["iukcy","iuml"]},J:{c:["Jcirc","Jcy"],f:["Jfr"],o:["Jopf"],s:["Jscr","Jsercy"],u:["Jukcy"]},j:{c:["jcirc","jcy"],f:["jfr"],m:["jmath"],o:["jopf"],s:["jscr","jsercy"],u:["jukcy"]},K:{a:["Kappa"],c:["Kcedil","Kcy"],f:["Kfr"],H:["KHcy"],J:["KJcy"],o:["Kopf"],s:["Kscr"]},k:{a:["kappa","kappav"],c:["kcedil","kcy"],f:["kfr"],g:["kgreen"],h:["khcy"],j:["kjcy"],o:["kopf"],s:["kscr"]},l:{A:["lAarr","lArr","lAtail"],a:["lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates"],B:["lBarr"],b:["lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu"],c:["lcaron","lcedil","lceil","lcub","lcy"],d:["ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh"],E:["lE","lEg"],e:["le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim"],f:["lfisht","lfloor","lfr"],g:["lg","lgE"],H:["lHar"],h:["lhard","lharu","lharul","lhblk"],j:["ljcy"],l:["ll","llarr","llcorner","llhard","lltri"],m:["lmidot","lmoust","lmoustache"],n:["lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim"],o:["loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf"],p:["lpar","lparlt"],r:["lrarr","lrcorner","lrhar","lrhard","lrm","lrtri"],s:["lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok"],t:["lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar"],u:["lurdshar","luruhar"],v:["lvertneqq","lvnE"]},L:{a:["Lacute","Lambda","Lang","Laplacetrf","Larr"],c:["Lcaron","Lcedil","Lcy"],e:["LeftAngleBracket","LeftArrow","Leftarrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","Leftrightarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde"],f:["Lfr"],J:["LJcy"],l:["Ll","Lleftarrow"],m:["Lmidot"],o:["LongLeftArrow","Longleftarrow","LongLeftRightArrow","Longleftrightarrow","LongRightArrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow"],s:["Lscr","Lsh","Lstrok"],T:["LT"],t:["Lt"]},m:{a:["macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker"],c:["mcomma","mcy"],d:["mdash"],D:["mDDot"],e:["measuredangle"],f:["mfr"],h:["mho"],i:["micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu"],l:["mlcp","mldr"],n:["mnplus"],o:["models","mopf"],p:["mp"],s:["mscr","mstpos"],u:["mu","multimap","mumap"]},M:{a:["Map"],c:["Mcy"],e:["MediumSpace","Mellintrf"],f:["Mfr"],i:["MinusPlus"],o:["Mopf"],s:["Mscr"],u:["Mu"]},n:{a:["nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals"],b:["nbsp","nbump","nbumpe"],c:["ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy"],d:["ndash"],e:["ne","nearhk","neArr","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists"],f:["nfr"],g:["ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr"],G:["nGg","nGt","nGtv"],h:["nhArr","nharr","nhpar"],i:["ni","nis","nisd","niv"],j:["njcy"],l:["nlArr","nlarr","nldr","nlE","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie"],L:["nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv"],m:["nmid"],o:["nopf","not","notin","notindot","notinE","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc"],p:["npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq"],r:["nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie"],R:["nRightarrow"],s:["nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq"],t:["ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq"],u:["nu","num","numero","numsp"],v:["nvap","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim"],V:["nVDash","nVdash"],w:["nwarhk","nwArr","nwarr","nwarrow","nwnear"]},N:{a:["Nacute"],c:["Ncaron","Ncedil","Ncy"],e:["NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine"],f:["Nfr"],J:["NJcy"],o:["NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar"],s:["Nscr"],t:["Ntilde"],u:["Nu"]},O:{a:["Oacute"],c:["Ocirc","Ocy"],d:["Odblac"],E:["OElig"],f:["Ofr"],g:["Ograve"],m:["Omacr","Omega","Omicron"],o:["Oopf"],p:["OpenCurlyDoubleQuote","OpenCurlyQuote"],r:["Or"],s:["Oscr","Oslash"],t:["Otilde","Otimes"],u:["Ouml"],v:["OverBar","OverBrace","OverBracket","OverParenthesis"]},o:{a:["oacute","oast"],c:["ocir","ocirc","ocy"],d:["odash","odblac","odiv","odot","odsold"],e:["oelig"],f:["ofcir","ofr"],g:["ogon","ograve","ogt"],h:["ohbar","ohm"],i:["oint"],l:["olarr","olcir","olcross","oline","olt"],m:["omacr","omega","omicron","omid","ominus"],o:["oopf"],p:["opar","operp","oplus"],r:["or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv"],S:["oS"],s:["oscr","oslash","osol"],t:["otilde","otimes","otimesas"],u:["ouml"],v:["ovbar"]},p:{a:["par","para","parallel","parsim","parsl","part"],c:["pcy"],e:["percnt","period","permil","perp","pertenk"],f:["pfr"],h:["phi","phiv","phmmat","phone"],i:["pi","pitchfork","piv"],l:["planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo"],m:["pm"],o:["pointint","popf","pound"],r:["pr","prap","prcue","prE","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnap","prnE","prnsim","prod","profalar","profline","profsurf","prop","propto","prsim","prurel"],s:["pscr","psi"],u:["puncsp"]},P:{a:["PartialD"],c:["Pcy"],f:["Pfr"],h:["Phi"],i:["Pi"],l:["PlusMinus"],o:["Poincareplane","Popf"],r:["Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional"],s:["Pscr","Psi"]},Q:{f:["Qfr"],o:["Qopf"],s:["Qscr"],U:["QUOT"]},q:{f:["qfr"],i:["qint"],o:["qopf"],p:["qprime"],s:["qscr"],u:["quaternions","quatint","quest","questeq","quot"]},r:{A:["rAarr","rArr","rAtail"],a:["race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals"],B:["rBarr"],b:["rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu"],c:["rcaron","rcedil","rceil","rcub","rcy"],d:["rdca","rdldhar","rdquo","rdquor","rdsh"],e:["real","realine","realpart","reals","rect","reg"],f:["rfisht","rfloor","rfr"],H:["rHar"],h:["rhard","rharu","rharul","rho","rhov"],i:["rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq"],l:["rlarr","rlhar","rlm"],m:["rmoust","rmoustache"],n:["rnmid"],o:["roang","roarr","robrk","ropar","ropf","roplus","rotimes"],p:["rpar","rpargt","rppolint"],r:["rrarr"],s:["rsaquo","rscr","rsh","rsqb","rsquo","rsquor"],t:["rthree","rtimes","rtri","rtrie","rtrif","rtriltri"],u:["ruluhar"],x:["rx"]},R:{a:["Racute","Rang","Rarr","Rarrtl"],B:["RBarr"],c:["Rcaron","Rcedil","Rcy"],e:["Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium"],E:["REG"],f:["Rfr"],h:["Rho"],i:["RightAngleBracket","RightArrow","Rightarrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar"],o:["Ropf","RoundImplies"],r:["Rrightarrow"],s:["Rscr","Rsh"],u:["RuleDelayed"]},S:{a:["Sacute"],c:["Sc","Scaron","Scedil","Scirc","Scy"],f:["Sfr"],H:["SHCHcy","SHcy"],h:["ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow"],i:["Sigma"],m:["SmallCircle"],O:["SOFTcy"],o:["Sopf"],q:["Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion"],s:["Sscr"],t:["Star"],u:["Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset"]},s:{a:["sacute"],b:["sbquo"],c:["sc","scap","scaron","sccue","scE","sce","scedil","scirc","scnap","scnE","scnsim","scpolint","scsim","scy"],d:["sdot","sdotb","sdote"],e:["searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext"],f:["sfr","sfrown"],h:["sharp","shchcy","shcy","shortmid","shortparallel","shy"],i:["sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr"],l:["slarr"],m:["smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes"],o:["softcy","sol","solb","solbar","sopf"],p:["spades","spadesuit","spar"],q:["sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf"],r:["srarr"],s:["sscr","ssetmn","ssmile","sstarf"],t:["star","starf","straightepsilon","straightphi","strns"],u:["sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup"],w:["swarhk","swArr","swarr","swarrow","swnwar"],z:["szlig"]},T:{a:["Tab","Tau"],c:["Tcaron","Tcedil","Tcy"],f:["Tfr"],h:["Therefore","Theta","ThickSpace","ThinSpace"],H:["THORN"],i:["Tilde","TildeEqual","TildeFullEqual","TildeTilde"],o:["Topf"],R:["TRADE"],r:["TripleDot"],s:["Tscr","Tstrok"],S:["TScy","TSHcy"]},t:{a:["target","tau"],b:["tbrk"],c:["tcaron","tcedil","tcy"],d:["tdot"],e:["telrec"],f:["tfr"],h:["there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn"],i:["tilde","times","timesb","timesbar","timesd","tint"],o:["toea","top","topbot","topcir","topf","topfork","tosa"],p:["tprime"],r:["trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium"],s:["tscr","tscy","tshcy","tstrok"],w:["twixt","twoheadleftarrow","twoheadrightarrow"]},U:{a:["Uacute","Uarr","Uarrocir"],b:["Ubrcy","Ubreve"],c:["Ucirc","Ucy"],d:["Udblac"],f:["Ufr"],g:["Ugrave"],m:["Umacr"],n:["UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus"],o:["Uogon","Uopf"],p:["UpArrow","Uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","UpEquilibrium","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","UpTee","UpTeeArrow"],r:["Uring"],s:["Uscr"],t:["Utilde"],u:["Uuml"]},u:{a:["uacute","uarr"],A:["uArr"],b:["ubrcy","ubreve"],c:["ucirc","ucy"],d:["udarr","udblac","udhar"],f:["ufisht","ufr"],g:["ugrave"],H:["uHar"],h:["uharl","uharr","uhblk"],l:["ulcorn","ulcorner","ulcrop","ultri"],m:["umacr","uml"],o:["uogon","uopf"],p:["uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows"],r:["urcorn","urcorner","urcrop","uring","urtri"],s:["uscr"],t:["utdot","utilde","utri","utrif"],u:["uuarr","uuml"],w:["uwangle"]},v:{a:["vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright"],A:["vArr"],B:["vBar","vBarv"],c:["vcy"],D:["vDash"],d:["vdash"],e:["vee","veebar","veeeq","vellip","verbar","vert"],f:["vfr"],l:["vltri"],n:["vnsub","vnsup"],o:["vopf"],p:["vprop"],r:["vrtri"],s:["vscr","vsubnE","vsubne","vsupnE","vsupne"],z:["vzigzag"]},V:{b:["Vbar"],c:["Vcy"],D:["VDash"],d:["Vdash","Vdashl"],e:["Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace"],f:["Vfr"],o:["Vopf"],s:["Vscr"],v:["Vvdash"]},W:{c:["Wcirc"],e:["Wedge"],f:["Wfr"],o:["Wopf"],s:["Wscr"]},w:{c:["wcirc"],e:["wedbar","wedge","wedgeq","weierp"],f:["wfr"],o:["wopf"],p:["wp"],r:["wr","wreath"],s:["wscr"]},x:{c:["xcap","xcirc","xcup"],d:["xdtri"],f:["xfr"],h:["xhArr","xharr"],i:["xi"],l:["xlArr","xlarr"],m:["xmap"],n:["xnis"],o:["xodot","xopf","xoplus","xotime"],r:["xrArr","xrarr"],s:["xscr","xsqcup"],u:["xuplus","xutri"],v:["xvee"],w:["xwedge"]},X:{f:["Xfr"],i:["Xi"],o:["Xopf"],s:["Xscr"]},Y:{a:["Yacute"],A:["YAcy"],c:["Ycirc","Ycy"],f:["Yfr"],I:["YIcy"],o:["Yopf"],s:["Yscr"],U:["YUcy"],u:["Yuml"]},y:{a:["yacute","yacy"],c:["ycirc","ycy"],e:["yen"],f:["yfr"],i:["yicy"],o:["yopf"],s:["yscr"],u:["yucy","yuml"]},Z:{a:["Zacute"],c:["Zcaron","Zcy"],d:["Zdot"],e:["ZeroWidthSpace","Zeta"],f:["Zfr"],H:["ZHcy"],o:["Zopf"],s:["Zscr"]},z:{a:["zacute"],c:["zcaron","zcy"],d:["zdot"],e:["zeetrf","zeta"],f:["zfr"],h:["zhcy"],i:["zigrarr"],o:["zopf"],s:["zscr"],w:["zwj","zwnj"]}},y={1:{p:["sup1"]},2:{1:["blk12","frac12"],p:["sup2"]},3:{1:["emsp13","frac13"],2:["frac23"],p:["sup3"]},4:{1:["blk14","emsp14","frac14"],3:["blk34","frac34"],e:["there4"]},5:{1:["frac15"],2:["frac25"],3:["frac35"],4:["frac45"]},6:{1:["frac16"],5:["frac56"]},8:{1:["frac18"],3:["frac38"],5:["frac58"],7:["frac78"]},e:{t:["Aacute","aacute","acute","Cacute","cacute","CloseCurlyDoubleQuote","CloseCurlyQuote","DiacriticalAcute","DiacriticalDoubleAcute","Eacute","eacute","gacute","Iacute","iacute","Lacute","lacute","late","Nacute","nacute","Oacute","oacute","OpenCurlyDoubleQuote","OpenCurlyQuote","Racute","racute","Sacute","sacute","sdote","smte","Uacute","uacute","Yacute","yacute","Zacute","zacute"],v:["Abreve","abreve","Agrave","agrave","Breve","breve","DiacriticalGrave","DownBreve","Egrave","egrave","Gbreve","gbreve","grave","Igrave","igrave","Ograve","ograve","Ubreve","ubreve","Ugrave","ugrave"],p:["andslope","ape","bumpe","csupe","nbumpe","nsqsupe","nsupe","orslope","sqsupe","supe"],g:["ange","barwedge","bigwedge","blacklozenge","curlywedge","doublebarwedge","ge","image","lozenge","nge","nvge","range","Wedge","wedge","xwedge"],l:["angle","blacktriangle","dwangle","exponentiale","female","langle","le","LeftTriangle","male","measuredangle","nle","NotLeftTriangle","NotRightTriangle","nvle","rangle","RightTriangle","SmallCircle","smile","ssmile","triangle","uwangle"],a:["angmsdae"],d:["Atilde","atilde","DiacriticalTilde","divide","EqualTilde","GreaterTilde","Itilde","itilde","LessTilde","NotEqualTilde","NotGreaterTilde","NotLessTilde","NotSucceedsTilde","NotTilde","NotTildeTilde","Ntilde","ntilde","Otilde","otilde","PrecedesTilde","SucceedsTilde","Tilde","tilde","TildeTilde","trade","Utilde","utilde","VerticalTilde"],m:["backprime","bprime","bsime","gsime","lsime","nsime","Prime","prime","qprime","sime","tprime","tritime","xotime"],e:["barvee","bigvee","curlyvee","cuvee","DoubleLeftTee","DoubleRightTee","DownTee","ee","LeftTee","lthree","RightTee","rthree","UpTee","Vee","vee","xvee"],s:["Because","because","maltese","pluse"],r:["blacksquare","cire","dotsquare","EmptySmallSquare","EmptyVerySmallSquare","FilledSmallSquare","FilledVerySmallSquare","incare","npre","pre","Square","square","Therefore","therefore"],n:["bne","Colone","colone","gne","HorizontalLine","imagline","lne","ne","NewLine","oline","phone","Poincareplane","profline","realine","simne","subne","supne","VerticalLine","vsubne","vsupne"],i:["bowtie","die","infintie","ltrie","nltrie","nrtrie","nvltrie","nvrtrie","rtrie","trie"],b:["csube","nsqsube","nsube","sqsube","sube"],c:["HilbertSpace","lbrace","MediumSpace","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NonBreakingSpace","nsce","OverBrace","race","rbrace","sce","ThickSpace","ThinSpace","UnderBrace","VeryThinSpace","ZeroWidthSpace"],k:["lbrke","rbrke"],h:["lmoustache","rmoustache"],u:["nprcue","nsccue","prcue","sccue"],R:["Re"]},c:{a:["ac","angmsdac","dblac","Odblac","odblac","Udblac","udblac"],r:["Acirc","acirc","bigcirc","Ccirc","ccirc","circ","circledcirc","Ecirc","ecirc","eqcirc","Gcirc","gcirc","Hcirc","hcirc","Icirc","icirc","Jcirc","jcirc","nrarrc","Ocirc","ocirc","rarrc","Scirc","scirc","Ucirc","ucirc","Wcirc","wcirc","xcirc","Ycirc","ycirc"],s:["cuesc","nsc","sc"],e:["curlyeqprec","nprec","prec","telrec"],c:["curlyeqsucc","gescc","gtcc","lescc","ltcc","nsucc","succ"],i:["ic","radic"],v:["notinvc","notnivc"],S:["Sc"]},d:{c:["acd"],n:["And","and","andand","capand","Diamond","diamond","pound"],d:["andd","dd"],s:["angmsd","minusd","nisd","timesd"],a:["angmsdad","Gammad","gammad"],b:["angrtvbd"],i:["apid","cirmid","mid","napid","nmid","nshortmid","nsmid","omid","rnmid","shortmid","smid"],e:["Barwed","barwed","cuwed","imped","RuleDelayed"],H:["boxHd"],h:["boxhd","DDotrahd"],o:["coprod","intprod","iprod","period","prod"],g:["langd","rangd"],l:["lbrksld","odsold","rbrksld"],r:["lhard","llhard","lrhard","ord","rhard"]},E:{c:["acE","scE"],p:["apE","bumpE","napE","nsupE","supE"],r:["cirE","prE"],l:["ExponentialE","glE","lE","nlE","simlE"],g:["gE","lgE","ngE","simgE"],n:["gnE","gvnE","isinE","lnE","lvnE","notinE","prnE","scnE","subnE","supnE","vsubnE","vsupnE"],b:["nsubE","subE"],D:["TRADE"]},y:{c:["Acy","acy","Bcy","bcy","CHcy","chcy","Dcy","dcy","DJcy","djcy","DScy","dscy","DZcy","dzcy","Ecy","ecy","Fcy","fcy","Gcy","gcy","GJcy","gjcy","HARDcy","hardcy","Icy","icy","IEcy","iecy","IOcy","iocy","Iukcy","iukcy","Jcy","jcy","Jsercy","jsercy","Jukcy","jukcy","Kcy","kcy","KHcy","khcy","KJcy","kjcy","Lcy","lcy","LJcy","ljcy","Mcy","mcy","Ncy","ncy","NJcy","njcy","Ocy","ocy","Pcy","pcy","Rcy","rcy","Scy","scy","SHCHcy","shchcy","SHcy","shcy","SOFTcy","softcy","Tcy","tcy","TScy","tscy","TSHcy","tshcy","Ubrcy","ubrcy","Ucy","ucy","Vcy","vcy","YAcy","yacy","Ycy","ycy","YIcy","yicy","YUcy","yucy","Zcy","zcy","ZHcy","zhcy"],p:["copy"],t:["cylcty","empty"],h:["shy"]},g:{i:["AElig","aelig","ffilig","fflig","ffllig","filig","fjlig","fllig","IJlig","ijlig","OElig","oelig","szlig"],l:["amalg","lg","ntlg"],n:["ang","Aring","aring","backcong","bcong","cong","eng","Lang","lang","LeftCeiling","loang","nang","ncong","Rang","rang","RightCeiling","ring","roang","sung","Uring","uring","varnothing"],a:["angmsdag","vzigzag"],e:["deg","eg","leg","reg"],G:["Gg","nGg"],g:["gg","ggg"],E:["lEg"],s:["lesg"],m:["lsimg","simg"]},f:{a:["af","angmsdaf","sigmaf"],p:["Aopf","aopf","Bopf","bopf","Copf","copf","Dopf","dopf","Eopf","eopf","Fopf","fopf","Gopf","gopf","Hopf","hopf","Iopf","iopf","Jopf","jopf","Kopf","kopf","Lopf","lopf","Mopf","mopf","Nopf","nopf","Oopf","oopf","Popf","popf","Qopf","qopf","Ropf","ropf","Sopf","sopf","Topf","topf","Uopf","uopf","Vopf","vopf","Wopf","wopf","Xopf","xopf","Yopf","yopf","Zopf","zopf"],i:["dtrif","ltrif","rtrif","utrif"],o:["fnof","imof","orderof","origof"],r:["Fouriertrf","Laplacetrf","Mellintrf","profsurf","squarf","sstarf","starf","zeetrf"],l:["half"],f:["iff"],z:["lozf"],d:["ordf"],u:["squf"]},r:{f:["Afr","afr","Bfr","bfr","Cfr","cfr","Dfr","dfr","Efr","efr","Ffr","ffr","Gfr","gfr","Hfr","hfr","Ifr","ifr","Jfr","jfr","Kfr","kfr","Lfr","lfr","Mfr","mfr","Nfr","nfr","Ofr","ofr","Pfr","pfr","Qfr","qfr","Rfr","rfr","Sfr","sfr","Tfr","tfr","Ufr","ufr","Vfr","vfr","Wfr","wfr","Xfr","xfr","Yfr","yfr","Zfr","zfr"],c:["Amacr","amacr","Ascr","ascr","Bscr","bscr","Cscr","cscr","Dscr","dscr","Emacr","emacr","Escr","escr","Fscr","fscr","Gscr","gscr","Hscr","hscr","Imacr","imacr","Iscr","iscr","Jscr","jscr","Kscr","kscr","Lscr","lscr","macr","Mscr","mscr","Nscr","nscr","Omacr","omacr","Oscr","oscr","Pscr","pscr","Qscr","qscr","Rscr","rscr","Sscr","sscr","Tscr","tscr","Umacr","umacr","Uscr","uscr","Vscr","vscr","Wscr","wscr","Xscr","xscr","Yscr","yscr","Zscr","zscr"],r:["angzarr","crarr","cudarrr","cularr","curarr","Darr","dArr","darr","ddarr","dharr","duarr","dzigrarr","erarr","gtrarr","hArr","harr","hoarr","lAarr","Larr","lArr","larr","lBarr","lbarr","llarr","loarr","lrarr","ltlarr","neArr","nearr","nhArr","nharr","nlArr","nlarr","nrArr","nrarr","nvHarr","nvlArr","nvrArr","nwArr","nwarr","olarr","orarr","rAarr","Rarr","rArr","rarr","RBarr","rBarr","rbarr","rlarr","roarr","rrarr","seArr","searr","simrarr","slarr","srarr","subrarr","suplarr","swArr","swarr","Uarr","uArr","uarr","udarr","uharr","uuarr","vArr","varr","xhArr","xharr","xlArr","xlarr","xrArr","xrarr","zigrarr"],i:["apacir","cir","cirscir","ecir","gtcir","harrcir","ltcir","midcir","ocir","ofcir","olcir","plusacir","pluscir","topcir","Uarrocir"],a:["bigstar","brvbar","dHar","dollar","DoubleVerticalBar","DownArrowBar","DownLeftVectorBar","DownRightVectorBar","duhar","epar","gtlPar","hbar","horbar","ldrdhar","ldrushar","LeftArrowBar","LeftDownVectorBar","LeftTriangleBar","LeftUpVectorBar","LeftVectorBar","lHar","lopar","lowbar","lpar","lrhar","ltrPar","lurdshar","luruhar","nesear","nhpar","NotDoubleVerticalBar","NotLeftTriangleBar","NotRightTriangleBar","NotVerticalBar","npar","nspar","nwnear","ohbar","opar","ovbar","OverBar","par","profalar","rdldhar","rHar","RightArrowBar","RightDownVectorBar","RightTriangleBar","RightUpVectorBar","RightVectorBar","rlhar","ropar","rpar","ruluhar","seswar","solbar","spar","Star","star","swnwar","timesbar","udhar","uHar","UnderBar","UpArrowBar","Vbar","vBar","veebar","Verbar","verbar","VerticalBar","wedbar"],D:["boxDr"],d:["boxdr","mldr","nldr"],U:["boxUr"],u:["boxur","natur"],V:["boxVr"],v:["boxvr"],s:["copysr"],p:["cuepr","npr","pr"],o:["cupor","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownRightTeeVector","DownRightVector","ldquor","LeftDownTeeVector","LeftDownVector","LeftFloor","LeftRightVector","LeftTeeVector","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftVector","lesdotor","lfloor","lsquor","or","oror","rdquor","rfloor","RightDownTeeVector","RightDownVector","RightFloor","RightTeeVector","RightUpDownVector","RightUpTeeVector","RightUpVector","RightVector","rsquor","VerticalSeparator"],e:["Dagger","dagger","ddagger","easter","GreaterGreater","LessEqualGreater","LessGreater","llcorner","lrcorner","marker","NestedGreaterGreater","NotGreater","NotGreaterGreater","NotLessGreater","NotNestedGreaterGreater","order","ulcorner","urcorner"],t:["eqslantgtr","lesseqgtr","lesseqqgtr","lessgtr","ngtr"],O:["Or"],P:["Pr"],w:["wr"]},m:{y:["alefsym","thetasym"],i:["backsim","bsim","eqsim","Esim","esim","gnsim","gsim","gtrsim","larrsim","lesssim","lnsim","lsim","nesim","ngsim","nlsim","nsim","nvsim","parsim","plussim","precnsim","precsim","prnsim","prsim","rarrsim","scnsim","scsim","sim","subsim","succnsim","succsim","supsim","thicksim","thksim"],o:["bottom"],s:["ccupssm"],r:["curarrm","lrm"],a:["diam"],u:["Equilibrium","num","ReverseEquilibrium","ReverseUpEquilibrium","Sum","sum","trpezium","UpEquilibrium"],I:["Im"],h:["ohm"],d:["ordm"],p:["pm"],l:["rlm"]},h:{p:["aleph","angsph"],a:["angmsdah"],s:["Backslash","circleddash","dash","hslash","ldsh","Lsh","lsh","mdash","ndash","nVDash","nVdash","nvDash","nvdash","odash","Oslash","oslash","rdsh","Rsh","rsh","VDash","Vdash","vDash","vdash","Vvdash"],t:["beth","daleth","eth","imath","jmath","wreath"],x:["boxh"],V:["boxVh"],v:["boxvh"],k:["planckh"],i:["upsih"]},a:{h:["Alpha","alpha"],a:["angmsdaa"],t:["Beta","beta","Delta","delta","Eta","eta","iiota","Iota","iota","Theta","theta","vartheta","Zeta","zeta"],l:["Cedilla","gla","nabla"],m:["comma","digamma","Gamma","gamma","InvisibleComma","mcomma","Sigma","sigma","varsigma"],p:["Kappa","kappa","varkappa"],d:["Lambda","lambda"],c:["ldca","rdca"],v:["notinva","notniva"],g:["Omega","omega"],r:["para"],e:["toea"],s:["tosa"]},P:{M:["AMP"]},p:{m:["amp","asymp","bump","comp","HumpDownHump","mp","nbump","NotHumpDownHump"],a:["ap","bigcap","Cap","cap","capcap","cupbrcap","CupCap","cupcap","gap","gnap","lap","lnap","Map","map","multimap","mumap","nap","ncap","NotCupCap","nvap","prap","prnap","rarrap","scap","scnap","sqcap","thkap","xcap","xmap"],u:["bigcup","bigsqcup","bigtriangleup","capbrcup","capcup","csup","Cup","cup","cupcup","leftharpoonup","mapstoup","ncup","nsup","rightharpoonup","sqcup","sqsup","subsup","Sup","sup","supsup","vnsup","xcup","xsqcup"],r:["cularrp","operp","perp","sharp","weierp"],o:["dlcrop","drcrop","prop","top","ulcrop","urcrop","vprop"],s:["emsp","ensp","hairsp","nbsp","numsp","puncsp","thinsp"],i:["hellip","vellip"],l:["larrlp","rarrlp"],c:["mlcp"],h:["smashp"],w:["wp"]},v:{d:["andv"],r:["Barv","orv","vBarv"],y:["bemptyv","cemptyv","demptyv","emptyv","laemptyv","raemptyv"],i:["bnequiv","div","epsiv","equiv","nequiv","niv","odiv","phiv","piv"],x:["boxv"],h:["Dashv","dashv"],k:["forkv","plankv"],s:["isinsv"],n:["isinv"],a:["kappav","sigmav","thetav"],t:["nGtv","nLtv"],o:["rhov"]},b:{a:["angmsdab","Tab"],v:["angrtvb","notinvb","notnivb"],l:["bsolb","solb"],u:["bsolhsub","csub","lcub","nsub","rcub","sqsub","Sub","sub","subsub","supdsub","suphsub","supsub","vnsub"],r:["larrb","rarrb"],q:["lsqb","rsqb"],s:["minusb","plusb","timesb","trisb"],t:["sdotb"]},t:{r:["angrt","imagpart","npart","part","realpart","Sqrt","vangrt","Vert","vert"],s:["angst","ast","circledast","equest","exist","gtquest","iquest","lmoust","lowast","ltquest","midast","nexist","oast","quest","rmoust"],n:["awconint","awint","Cconint","cent","cirfnint","complement","Congruent","Conint","conint","cwconint","cwint","Element","fpartint","geqslant","iiiint","iiint","Int","int","leqslant","ngeqslant","nleqslant","NotCongruent","NotElement","NotReverseElement","npolint","oint","percnt","pointint","qint","quatint","ReverseElement","rppolint","scpolint","tint"],o:["bigodot","bNot","bnot","bot","capdot","Cdot","cdot","CenterDot","centerdot","CircleDot","congdot","ctdot","cupdot","DiacriticalDot","Dot","dot","DotDot","doteqdot","DoubleDot","dtdot","eDDot","Edot","eDot","edot","efDot","egsdot","elsdot","erDot","esdot","Gdot","gdot","gesdot","gtdot","gtrdot","Idot","inodot","isindot","lesdot","lessdot","Lmidot","lmidot","ltdot","mDDot","middot","ncongdot","nedot","Not","not","notindot","odot","quot","sdot","simdot","subdot","subedot","supdot","supedot","tdot","topbot","tridot","TripleDot","utdot","xodot","Zdot","zdot"],f:["blacktriangleleft","circlearrowleft","curvearrowleft","downharpoonleft","looparrowleft","mapstoleft","ntriangleleft","triangleleft","upharpoonleft","vartriangleleft"],h:["blacktriangleright","circlearrowright","curvearrowright","dfisht","downharpoonright","homtht","lfisht","looparrowright","ntriangleright","rfisht","triangleright","ufisht","upharpoonright","vartriangleright"],e:["bullet","caret","emptyset","LeftAngleBracket","LeftDoubleBracket","NotSquareSubset","NotSquareSuperset","NotSubset","NotSuperset","nsubset","nsupset","OverBracket","RightAngleBracket","RightDoubleBracket","sqsubset","sqsupset","SquareSubset","SquareSuperset","Subset","subset","Superset","Supset","supset","target","UnderBracket"],i:["clubsuit","diamondsuit","heartsuit","it","spadesuit"],a:["commat","flat","Hat","lat","phmmat","SuchThat"],c:["Coproduct","Product","rect","sect"],G:["Gt","nGt"],g:["gt","ngt","nvgt","ogt","rpargt"],l:["hamilt","lparlt","lt","malt","nlt","nvlt","olt","submult","supmult"],L:["Lt","nLt"],x:["sext","twixt"],m:["smt"]},n:{o:["Aogon","aogon","ApplyFunction","backepsilon","caron","Ccaron","ccaron","Colon","colon","Dcaron","dcaron","Ecaron","ecaron","ecolon","Eogon","eogon","Epsilon","epsilon","eqcolon","expectation","hercon","Intersection","Iogon","iogon","Lcaron","lcaron","Ncaron","ncaron","ogon","Omicron","omicron","Proportion","Rcaron","rcaron","Scaron","scaron","SquareIntersection","SquareUnion","straightepsilon","Tcaron","tcaron","Union","Uogon","uogon","Upsilon","upsilon","varepsilon","Zcaron","zcaron"],g:["Assign"],e:["between","curren","hyphen","kgreen","yen"],w:["bigtriangledown","blacktriangledown","frown","leftharpoondown","mapstodown","rightharpoondown","sfrown","triangledown"],f:["compfn"],i:["disin","iinfin","in","infin","isin","notin","nvinfin"],r:["dlcorn","drcorn","thorn","ulcorn","urcorn"],a:["lagran"],m:["plusmn","setmn","ssetmn"]},s:{o:["apos","mstpos","napos"],u:["becaus","bigoplus","biguplus","boxminus","boxplus","CircleMinus","CirclePlus","dotminus","dotplus","eplus","loplus","minus","MinusPlus","mnplus","ominus","oplus","plus","PlusMinus","roplus","setminus","simplus","smallsetminus","subplus","supplus","triminus","triplus","UnionPlus","uplus","xoplus","xuplus"],i:["Bernoullis","nis","OverParenthesis","UnderParenthesis","xnis"],e:["bigotimes","boxtimes","CircleTimes","complexes","divideontimes","ges","gesles","Implies","InvisibleTimes","lates","leftthreetimes","les","lesges","lotimes","ltimes","nges","nles","NotPrecedes","Otimes","otimes","Precedes","primes","rightthreetimes","rotimes","RoundImplies","rtimes","smtes","spades","times"],p:["caps","ccaps","ccups","cups","sqcaps","sqcups"],y:["Cayleys"],b:["clubs"],s:["Cross","cross","eqslantless","GreaterEqualLess","GreaterLess","gtreqless","gtreqqless","gtrless","LessLess","NestedLessLess","nless","NotGreaterLess","NotLess","NotLessLess","NotNestedLessLess","olcross"],m:["diams"],w:["downdownarrows","leftleftarrows","leftrightarrows","rightleftarrows","rightrightarrows","upuparrows"],g:["egs"],r:["elinters","integers"],l:["els","equals","models","naturals","rationals","reals"],t:["Exists","hearts","nexists","NotExists"],n:["fltns","isins","leftrightharpoons","quaternions","rightleftharpoons","strns"],f:["larrbfs","larrfs","rarrbfs","rarrfs"],d:["NotSucceeds","Succeeds"],a:["otimesas"]},x:{o:["approx","boxbox","gnapprox","gtrapprox","lessapprox","lnapprox","napprox","precapprox","precnapprox","succapprox","succnapprox","thickapprox"],n:["divonx"],r:["rx"]},q:{e:["approxeq","asympeq","backsimeq","Bumpeq","bumpeq","circeq","coloneq","ddotseq","doteq","fallingdotseq","geq","gneq","leq","lneq","ngeq","nleq","npreceq","nsimeq","nsubseteq","nsucceq","nsupseteq","ntrianglelefteq","ntrianglerighteq","preccurlyeq","preceq","questeq","risingdotseq","simeq","sqsubseteq","sqsupseteq","subseteq","subsetneq","succcurlyeq","succeq","supseteq","supsetneq","trianglelefteq","triangleq","trianglerighteq","varsubsetneq","varsupsetneq","veeeq","wedgeq"],q:["geqq","gneqq","gvertneqq","leqq","lneqq","lvertneqq","ngeqq","nleqq","nsubseteqq","nsupseteqq","precneqq","subseteqq","subsetneqq","succneqq","supseteqq","supsetneqq","varsubsetneqq","varsupsetneqq"]},l:{m:["Auml","auml","Euml","euml","gsiml","Iuml","iuml","Ouml","ouml","siml","uml","Uuml","uuml","Yuml","yuml"],D:["boxDl"],d:["boxdl"],U:["boxUl"],u:["boxul","lharul","rharul"],V:["boxVl"],v:["boxvl"],o:["bsol","dsol","gesdotol","osol","sol","suphsol"],l:["bull","ell","ForAll","forall","hybull","ll"],i:["Ccedil","ccedil","cedil","Gcedil","Kcedil","kcedil","lAtail","latail","Lcedil","lcedil","lceil","leftarrowtail","Ncedil","ncedil","permil","rAtail","ratail","Rcedil","rcedil","rceil","rightarrowtail","Scedil","scedil","Tcedil","tcedil"],a:["ClockwiseContourIntegral","ContourIntegral","CounterClockwiseContourIntegral","DotEqual","DoubleContourIntegral","Equal","GreaterEqual","GreaterFullEqual","GreaterSlantEqual","HumpEqual","intcal","Integral","intercal","LeftTriangleEqual","LessFullEqual","LessSlantEqual","natural","NotEqual","NotGreaterEqual","NotGreaterFullEqual","NotGreaterSlantEqual","NotHumpEqual","NotLeftTriangleEqual","NotLessEqual","NotLessSlantEqual","NotPrecedesEqual","NotPrecedesSlantEqual","NotRightTriangleEqual","NotSquareSubsetEqual","NotSquareSupersetEqual","NotSubsetEqual","NotSucceedsEqual","NotSucceedsSlantEqual","NotSupersetEqual","NotTildeEqual","NotTildeFullEqual","PrecedesEqual","PrecedesSlantEqual","Proportional","real","RightTriangleEqual","SquareSubsetEqual","SquareSupersetEqual","SubsetEqual","SucceedsEqual","SucceedsSlantEqual","SupersetEqual","TildeEqual","TildeFullEqual"],r:["cudarrl","dharl","uharl"],e:["Del","el","gel","gimel","nparallel","nshortparallel","parallel","prurel","shortparallel"],s:["eparsl","eqvparsl","frasl","gesl","nparsl","parsl","smeparsl"],c:["excl","iexcl"],E:["gEl"],g:["gl","ntgl"],p:["larrpl","rarrpl"],t:["larrtl","Rarrtl","rarrtl"],L:["Ll","nLl"],h:["Vdashl"]},k:{r:["bbrk","bbrktbrk","checkmark","fork","lbbrk","lobrk","pitchfork","rbbrk","robrk","tbrk","topfork"],n:["blank","pertenk"],c:["block","check","lbrack","planck","rbrack"],o:["Dstrok","dstrok","Hstrok","hstrok","Lstrok","lstrok","Tstrok","tstrok"],e:["Hacek"],h:["intlarhk","larrhk","nearhk","nwarhk","rarrhk","searhk","swarhk"],l:["lhblk","uhblk"],a:["NoBreak"]},o:{u:["bdquo","laquo","ldquo","lsaquo","lsquo","raquo","rdquo","rsaquo","rsquo","sbquo"],r:["euro","micro","numero"],t:["gesdoto","lesdoto","longmapsto","mapsto","propto","varpropto"],h:["mho","Rho","rho","varrho"],d:["plusdo"],w:["plustwo"],i:["ratio"]},i:{s:["bepsi","epsi","Psi","psi","Upsi","upsi"],m:["bsemi","semi"],h:["Chi","chi","Phi","phi","straightphi","varphi"],r:["dtri","lltri","lrtri","ltri","nltri","nrtri","rtri","rtriltri","ultri","urtri","utri","vltri","vrtri","xdtri","xutri"],i:["ii"],n:["ni","notni"],P:["Pi"],p:["pi","varpi"],X:["Xi"],x:["xi"]},u:{o:["bernou"],H:["boxHu"],h:["boxhu"],l:["lbrkslu","rbrkslu"],r:["lharu","rharu"],d:["minusdu","plusdu"],M:["Mu"],m:["mu"],N:["Nu"],n:["nu"],q:["squ"],a:["Tau","tau"]},w:{o:["bkarow","dbkarow","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleUpArrow","DoubleUpDownArrow","DownArrow","Downarrow","downarrow","DownArrowUpArrow","DownTeeArrow","drbkarow","hksearow","hkswarow","hookleftarrow","hookrightarrow","LeftArrow","Leftarrow","leftarrow","LeftArrowRightArrow","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightsquigarrow","LeftTeeArrow","Lleftarrow","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","LongRightArrow","Longrightarrow","longrightarrow","LowerLeftArrow","LowerRightArrow","nearrow","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nRightarrow","nrightarrow","nwarrow","RightArrow","Rightarrow","rightarrow","RightArrowLeftArrow","rightsquigarrow","RightTeeArrow","Rrightarrow","searrow","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","swarrow","twoheadleftarrow","twoheadrightarrow","UpArrow","Uparrow","uparrow","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpperLeftArrow","UpperRightArrow","UpTeeArrow"],r:["harrw","nrarrw","rarrw"]},L:{D:["boxDL"],d:["boxdL"],U:["boxUL"],u:["boxuL"],V:["boxVL"],v:["boxvL"]},R:{D:["boxDR"],d:["boxdR","circledR"],U:["boxUR"],u:["boxuR"],V:["boxVR"],v:["boxvR"]},H:{x:["boxH"],V:["boxVH"],v:["boxvH"],T:["ETH"]},D:{H:["boxHD"],h:["boxhD"],l:["CapitalDifferentialD","DifferentialD","PartialD"],D:["DD","equivDD"]},U:{H:["boxHU"],h:["boxhU"]},V:{x:["boxV"]},S:{d:["circledS"],o:["oS"]},Y:{P:["COPY"]},G:{N:["ENG"],E:["REG"]},j:{l:["glj"],w:["zwj"],n:["zwnj"]},T:{G:["GT"],L:["LT"],O:["QUOT"]},I:{y:["ImaginaryI"]},z:{o:["loz"]},N:{R:["THORN"]}},v={a:{a:["aacute"],b:["abreve"],c:["ac","acd","ace","acirc","acute","acy"],e:["aelig"],f:["af","afr"],g:["agrave"],l:["alefsym","aleph","alpha"],m:["amacr","amalg","amp"],n:["and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr"],o:["aogon","aopf"],p:["ap","apacir","ape","apid","apos","applyfunction","approx","approxeq"],r:["aring"],s:["ascr","assign","ast","asymp","asympeq"],t:["atilde"],u:["auml"],w:["awconint","awint"]},b:{a:["backcong","backepsilon","backprime","backsim","backsimeq","backslash","barv","barvee","barwed","barwedge"],b:["bbrk","bbrktbrk"],c:["bcong","bcy"],d:["bdquo"],e:["becaus","because","bemptyv","bepsi","bernou","bernoullis","beta","beth","between"],f:["bfr"],i:["bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge"],k:["bkarow"],l:["blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block"],n:["bne","bnequiv","bnot"],o:["bopf","bot","bottom","bowtie","boxbox","boxdl","boxdr","boxh","boxhd","boxhu","boxminus","boxplus","boxtimes","boxul","boxur","boxv","boxvh","boxvl","boxvr"],p:["bprime"],r:["breve","brvbar"],s:["bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub"],u:["bull","bullet","bump","bumpe","bumpeq"]},c:{a:["cacute","cap","capand","capbrcup","capcap","capcup","capdot","capitaldifferentiald","caps","caret","caron","cayleys"],c:["ccaps","ccaron","ccedil","ccirc","cconint","ccups","ccupssm"],d:["cdot"],e:["cedil","cedilla","cemptyv","cent","centerdot"],f:["cfr"],h:["chcy","check","checkmark","chi"],i:["cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledot","circledr","circleds","circleminus","circleplus","circletimes","cire","cirfnint","cirmid","cirscir"],l:["clockwisecontourintegral","closecurlydoublequote","closecurlyquote","clubs","clubsuit"],o:["colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","congruent","conint","contourintegral","copf","coprod","coproduct","copy","copysr","counterclockwisecontourintegral"],r:["crarr","cross"],s:["cscr","csub","csube","csup","csupe"],t:["ctdot"],u:["cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed"],w:["cwconint","cwint"],y:["cylcty"]},d:{a:["dagger","daleth","darr","dash","dashv"],b:["dbkarow","dblac"],c:["dcaron","dcy"],d:["dd","ddagger","ddarr","ddotrahd","ddotseq"],e:["deg","del","delta","demptyv"],f:["dfisht","dfr"],h:["dhar","dharl","dharr"],i:["diacriticalacute","diacriticaldot","diacriticaldoubleacute","diacriticalgrave","diacriticaltilde","diam","diamond","diamondsuit","diams","die","differentiald","digamma","disin","div","divide","divideontimes","divonx"],j:["djcy"],l:["dlcorn","dlcrop"],o:["dollar","dopf","dot","dotdot","doteq","doteqdot","dotequal","dotminus","dotplus","dotsquare","doublebarwedge","doublecontourintegral","doubledot","doubledownarrow","doubleleftarrow","doubleleftrightarrow","doublelefttee","doublelongleftarrow","doublelongleftrightarrow","doublelongrightarrow","doublerightarrow","doublerighttee","doubleuparrow","doubleupdownarrow","doubleverticalbar","downarrow","downarrowbar","downarrowuparrow","downbreve","downdownarrows","downharpoonleft","downharpoonright","downleftrightvector","downleftteevector","downleftvector","downleftvectorbar","downrightteevector","downrightvector","downrightvectorbar","downtee","downteearrow"],r:["drbkarow","drcorn","drcrop"],s:["dscr","dscy","dsol","dstrok"],t:["dtdot","dtri","dtrif"],u:["duarr","duhar"],w:["dwangle"],z:["dzcy","dzigrarr"]},e:{a:["eacute","easter"],c:["ecaron","ecir","ecirc","ecolon","ecy"],d:["eddot","edot"],e:["ee"],f:["efdot","efr"],g:["eg","egrave","egs","egsdot"],l:["el","element","elinters","ell","els","elsdot"],m:["emacr","empty","emptyset","emptysmallsquare","emptyv","emptyverysmallsquare","emsp","emsp13","emsp14"],n:["eng","ensp"],o:["eogon","eopf"],p:["epar","eparsl","eplus","epsi","epsilon","epsiv"],q:["eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equal","equals","equaltilde","equest","equilibrium","equiv","equivdd","eqvparsl"],r:["erarr","erdot"],s:["escr","esdot","esim"],t:["eta","eth"],u:["euml","euro"],x:["excl","exist","exists","expectation","exponentiale"]},f:{a:["fallingdotseq"],c:["fcy"],e:["female"],f:["ffilig","fflig","ffllig","ffr"],i:["filig","filledsmallsquare","filledverysmallsquare"],j:["fjlig"],l:["flat","fllig","fltns"],n:["fnof"],o:["fopf","forall","fork","forkv","fouriertrf"],p:["fpartint"],r:["frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown"],s:["fscr"]},g:{a:["gacute","gamma","gammad","gap"],b:["gbreve"],c:["gcedil","gcirc","gcy"],d:["gdot"],e:["ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles"],f:["gfr"],g:["gg","ggg"],i:["gimel"],j:["gjcy"],l:["gl","gla","gle","glj"],n:["gnap","gnapprox","gne","gneq","gneqq","gnsim"],o:["gopf"],r:["grave","greaterequal","greaterequalless","greaterfullequal","greatergreater","greaterless","greaterslantequal","greatertilde"],s:["gscr","gsim","gsime","gsiml"],t:["gt","gtcc","gtcir","gtdot","gtlpar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim"],v:["gvertneqq","gvne"]},h:{a:["hacek","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hat"],b:["hbar"],c:["hcirc"],e:["hearts","heartsuit","hellip","hercon"],f:["hfr"],i:["hilbertspace"],k:["hksearow","hkswarow"],o:["hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","horizontalline"],s:["hscr","hslash","hstrok"],u:["humpdownhump","humpequal"],y:["hybull","hyphen"]},i:{a:["iacute"],c:["ic","icirc","icy"],d:["idot"],e:["iecy","iexcl"],f:["iff","ifr"],g:["igrave"],i:["ii","iiiint","iiint","iinfin","iiota"],j:["ijlig"],m:["im","imacr","image","imaginaryi","imagline","imagpart","imath","imof","imped","implies"],n:["in","incare","infin","infintie","inodot","int","intcal","integers","integral","intercal","intersection","intlarhk","intprod","invisiblecomma","invisibletimes"],o:["iocy","iogon","iopf","iota"],p:["iprod"],q:["iquest"],s:["iscr","isin","isindot","isine","isins","isinsv","isinv"],t:["it","itilde"],u:["iukcy","iuml"]},j:{c:["jcirc","jcy"],f:["jfr"],m:["jmath"],o:["jopf"],s:["jscr","jsercy"],u:["jukcy"]},k:{a:["kappa","kappav"],c:["kcedil","kcy"],f:["kfr"],g:["kgreen"],h:["khcy"],j:["kjcy"],o:["kopf"],s:["kscr"]},l:{a:["laarr","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laplacetrf","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates"],b:["lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu"],c:["lcaron","lcedil","lceil","lcub","lcy"],d:["ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh"],e:["le","leftanglebracket","leftarrow","leftarrowbar","leftarrowrightarrow","leftarrowtail","leftceiling","leftdoublebracket","leftdownteevector","leftdownvector","leftdownvectorbar","leftfloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftrightvector","lefttee","leftteearrow","leftteevector","leftthreetimes","lefttriangle","lefttrianglebar","lefttriangleequal","leftupdownvector","leftupteevector","leftupvector","leftupvectorbar","leftvector","leftvectorbar","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessequalgreater","lessfullequal","lessgreater","lessgtr","lessless","lesssim","lessslantequal","lesstilde"],f:["lfisht","lfloor","lfr"],g:["lg","lge"],h:["lhar","lhard","lharu","lharul","lhblk"],j:["ljcy"],l:["ll","llarr","llcorner","lleftarrow","llhard","lltri"],m:["lmidot","lmoust","lmoustache"],n:["lnap","lnapprox","lne","lneq","lneqq","lnsim"],o:["loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","lowerleftarrow","lowerrightarrow","loz","lozenge","lozf"],p:["lpar","lparlt"],r:["lrarr","lrcorner","lrhar","lrhard","lrm","lrtri"],s:["lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok"],t:["lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrpar"],u:["lurdshar","luruhar"],v:["lvertneqq","lvne"]},m:{a:["macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker"],c:["mcomma","mcy"],d:["mdash","mddot"],e:["measuredangle","mediumspace","mellintrf"],f:["mfr"],h:["mho"],i:["micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","minusplus"],l:["mlcp","mldr"],n:["mnplus"],o:["models","mopf"],p:["mp"],s:["mscr","mstpos"],u:["mu","multimap","mumap"]},n:{a:["nabla","nacute","nang","nap","nape","napid","napos","napprox","natur","natural","naturals"],b:["nbsp","nbump","nbumpe"],c:["ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy"],d:["ndash"],e:["ne","nearhk","nearr","nearrow","nedot","negativemediumspace","negativethickspace","negativethinspace","negativeverythinspace","nequiv","nesear","nesim","nestedgreatergreater","nestedlessless","newline","nexist","nexists"],f:["nfr"],g:["nge","ngeq","ngeqq","ngeqslant","nges","ngg","ngsim","ngt","ngtr","ngtv"],h:["nharr","nhpar"],i:["ni","nis","nisd","niv"],j:["njcy"],l:["nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nll","nlsim","nlt","nltri","nltrie","nltv"],m:["nmid"],o:["nobreak","nonbreakingspace","nopf","not","notcongruent","notcupcap","notdoubleverticalbar","notelement","notequal","notequaltilde","notexists","notgreater","notgreaterequal","notgreaterfullequal","notgreatergreater","notgreaterless","notgreaterslantequal","notgreatertilde","nothumpdownhump","nothumpequal","notin","notindot","notine","notinva","notinvb","notinvc","notlefttriangle","notlefttrianglebar","notlefttriangleequal","notless","notlessequal","notlessgreater","notlessless","notlessslantequal","notlesstilde","notnestedgreatergreater","notnestedlessless","notni","notniva","notnivb","notnivc","notprecedes","notprecedesequal","notprecedesslantequal","notreverseelement","notrighttriangle","notrighttrianglebar","notrighttriangleequal","notsquaresubset","notsquaresubsetequal","notsquaresuperset","notsquaresupersetequal","notsubset","notsubsetequal","notsucceeds","notsucceedsequal","notsucceedsslantequal","notsucceedstilde","notsuperset","notsupersetequal","nottilde","nottildeequal","nottildefullequal","nottildetilde","notverticalbar"],p:["npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq"],r:["nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie"],s:["nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupe","nsupset","nsupseteq","nsupseteqq"],t:["ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq"],u:["nu","num","numero","numsp"],v:["nvap","nvdash","nvge","nvgt","nvharr","nvinfin","nvlarr","nvle","nvlt","nvltrie","nvrarr","nvrtrie","nvsim"],w:["nwarhk","nwarr","nwarrow","nwnear"]},o:{a:["oacute","oast"],c:["ocir","ocirc","ocy"],d:["odash","odblac","odiv","odot","odsold"],e:["oelig"],f:["ofcir","ofr"],g:["ogon","ograve","ogt"],h:["ohbar","ohm"],i:["oint"],l:["olarr","olcir","olcross","oline","olt"],m:["omacr","omega","omicron","omid","ominus"],o:["oopf"],p:["opar","opencurlydoublequote","opencurlyquote","operp","oplus"],r:["or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv"],s:["os","oscr","oslash","osol"],t:["otilde","otimes","otimesas"],u:["ouml"],v:["ovbar","overbar","overbrace","overbracket","overparenthesis"]},p:{a:["par","para","parallel","parsim","parsl","part","partiald"],c:["pcy"],e:["percnt","period","permil","perp","pertenk"],f:["pfr"],h:["phi","phiv","phmmat","phone"],i:["pi","pitchfork","piv"],l:["planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusminus","plusmn","plussim","plustwo"],m:["pm"],o:["poincareplane","pointint","popf","pound"],r:["pr","prap","prcue","pre","prec","precapprox","preccurlyeq","precedes","precedesequal","precedesslantequal","precedestilde","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnap","prne","prnsim","prod","product","profalar","profline","profsurf","prop","proportion","proportional","propto","prsim","prurel"],s:["pscr","psi"],u:["puncsp"]},q:{f:["qfr"],i:["qint"],o:["qopf"],p:["qprime"],s:["qscr"],u:["quaternions","quatint","quest","questeq","quot"]},r:{a:["raarr","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals"],b:["rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu"],c:["rcaron","rcedil","rceil","rcub","rcy"],d:["rdca","rdldhar","rdquo","rdquor","rdsh"],e:["re","real","realine","realpart","reals","rect","reg","reverseelement","reverseequilibrium","reverseupequilibrium"],f:["rfisht","rfloor","rfr"],h:["rhar","rhard","rharu","rharul","rho","rhov"],i:["rightanglebracket","rightarrow","rightarrowbar","rightarrowleftarrow","rightarrowtail","rightceiling","rightdoublebracket","rightdownteevector","rightdownvector","rightdownvectorbar","rightfloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","righttee","rightteearrow","rightteevector","rightthreetimes","righttriangle","righttrianglebar","righttriangleequal","rightupdownvector","rightupteevector","rightupvector","rightupvectorbar","rightvector","rightvectorbar","ring","risingdotseq"],l:["rlarr","rlhar","rlm"],m:["rmoust","rmoustache"],n:["rnmid"],o:["roang","roarr","robrk","ropar","ropf","roplus","rotimes","roundimplies"],p:["rpar","rpargt","rppolint"],r:["rrarr","rrightarrow"],s:["rsaquo","rscr","rsh","rsqb","rsquo","rsquor"],t:["rthree","rtimes","rtri","rtrie","rtrif","rtriltri"],u:["ruledelayed","ruluhar"],x:["rx"]},s:{a:["sacute"],b:["sbquo"],c:["sc","scap","scaron","sccue","sce","scedil","scirc","scnap","scne","scnsim","scpolint","scsim","scy"],d:["sdot","sdotb","sdote"],e:["searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext"],f:["sfr","sfrown"],h:["sharp","shchcy","shcy","shortdownarrow","shortleftarrow","shortmid","shortparallel","shortrightarrow","shortuparrow","shy"],i:["sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simge","siml","simle","simne","simplus","simrarr"],l:["slarr"],m:["smallcircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes"],o:["softcy","sol","solb","solbar","sopf"],p:["spades","spadesuit","spar"],q:["sqcap","sqcaps","sqcup","sqcups","sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squareintersection","squaresubset","squaresubsetequal","squaresuperset","squaresupersetequal","squareunion","squarf","squf"],r:["srarr"],s:["sscr","ssetmn","ssmile","sstarf"],t:["star","starf","straightepsilon","straightphi","strns"],u:["sub","subdot","sube","subedot","submult","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetequal","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeeds","succeedsequal","succeedsslantequal","succeedstilde","succeq","succnapprox","succneqq","succnsim","succsim","suchthat","sum","sung","sup","sup1","sup2","sup3","supdot","supdsub","supe","supedot","superset","supersetequal","suphsol","suphsub","suplarr","supmult","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup"],w:["swarhk","swarr","swarrow","swnwar"],z:["szlig"]},t:{a:["tab","target","tau"],b:["tbrk"],c:["tcaron","tcedil","tcy"],d:["tdot"],e:["telrec"],f:["tfr"],h:["there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thickspace","thinsp","thinspace","thkap","thksim","thorn"],i:["tilde","tildeequal","tildefullequal","tildetilde","times","timesb","timesbar","timesd","tint"],o:["toea","top","topbot","topcir","topf","topfork","tosa"],p:["tprime"],r:["trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","tripledot","triplus","trisb","tritime","trpezium"],s:["tscr","tscy","tshcy","tstrok"],w:["twixt","twoheadleftarrow","twoheadrightarrow"]},u:{a:["uacute","uarr","uarrocir"],b:["ubrcy","ubreve"],c:["ucirc","ucy"],d:["udarr","udblac","udhar"],f:["ufisht","ufr"],g:["ugrave"],h:["uhar","uharl","uharr","uhblk"],l:["ulcorn","ulcorner","ulcrop","ultri"],m:["umacr","uml"],n:["underbar","underbrace","underbracket","underparenthesis","union","unionplus"],o:["uogon","uopf"],p:["uparrow","uparrowbar","uparrowdownarrow","updownarrow","upequilibrium","upharpoonleft","upharpoonright","uplus","upperleftarrow","upperrightarrow","upsi","upsih","upsilon","uptee","upteearrow","upuparrows"],r:["urcorn","urcorner","urcrop","uring","urtri"],s:["uscr"],t:["utdot","utilde","utri","utrif"],u:["uuarr","uuml"],w:["uwangle"]},v:{a:["vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright"],b:["vbar","vbarv"],c:["vcy"],d:["vdash","vdashl"],e:["vee","veebar","veeeq","vellip","verbar","vert","verticalbar","verticalline","verticalseparator","verticaltilde","verythinspace"],f:["vfr"],l:["vltri"],n:["vnsub","vnsup"],o:["vopf"],p:["vprop"],r:["vrtri"],s:["vscr","vsubne","vsupne"],v:["vvdash"],z:["vzigzag"]},w:{c:["wcirc"],e:["wedbar","wedge","wedgeq","weierp"],f:["wfr"],o:["wopf"],p:["wp"],r:["wr","wreath"],s:["wscr"]},x:{c:["xcap","xcirc","xcup"],d:["xdtri"],f:["xfr"],h:["xharr"],i:["xi"],l:["xlarr"],m:["xmap"],n:["xnis"],o:["xodot","xopf","xoplus","xotime"],r:["xrarr"],s:["xscr","xsqcup"],u:["xuplus","xutri"],v:["xvee"],w:["xwedge"]},y:{a:["yacute","yacy"],c:["ycirc","ycy"],e:["yen"],f:["yfr"],i:["yicy"],o:["yopf"],s:["yscr"],u:["yucy","yuml"]},z:{a:["zacute"],c:["zcaron","zcy"],d:["zdot"],e:["zeetrf","zerowidthspace","zeta"],f:["zfr"],h:["zhcy"],i:["zigrarr"],o:["zopf"],s:["zscr"],w:["zwj","zwnj"]}},q={ac:{addAmpIfSemiPresent:"edge only",addSemiIfAmpPresent:!1},acute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Alpha:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},alpha:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},amp:{addAmpIfSemiPresent:"edge only",addSemiIfAmpPresent:!0},And:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},and:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},ange:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},angle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},angst:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ape:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},approx:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Aring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},aring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Ascr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ascr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Assign:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ast:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},atilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},Backslash:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},barwedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},becaus:{addAmpIfSemiPresent:!0,addSemiIfAmpPresent:"edge only"},Because:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},because:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bepsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Bernoullis:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Beta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},beta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},beth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},between:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},blank:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},block:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bottom:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bowtie:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},breve:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bull:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bullet:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bump:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Cap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},capand:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},caps:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},caret:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},caron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cedil:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Cedilla:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cent:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},check:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},checkmark:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Chi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},chi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cir:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},circ:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},clubs:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},clubsuit:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Colon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},colon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Colone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},colone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},comma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},commat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},comp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},complement:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},complexes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cong:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Congruent:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},conint:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},copf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},coprod:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},COPY:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},copy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Cross:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cross:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Cup:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cup:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cups:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Dagger:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dagger:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},daleth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},darr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dash:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},DD:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dd:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},deg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Del:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Delta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},delta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dharr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},diam:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Diamond:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},diamond:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},diams:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},die:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},digamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},disin:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},div:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},divide:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dollar:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Dot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dsol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dtri:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},easter:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ecir:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ecolon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ecy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},edot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ee:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},efr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},egrave:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},egs:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},el:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ell:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},els:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},empty:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ENG:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},eng:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},epsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Epsilon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},epsilon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Equal:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equest:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Equilibrium:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equiv:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},escr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},esim:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Eta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ETH:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},euro:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},excl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},exist:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Exists:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},expectation:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},female:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},flat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},fork:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},frown:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Gamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gcy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gel:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},geq:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ges:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gesl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gla:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},grave:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},GT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},half:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Hat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},hearts:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},hopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},hyphen:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ic:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},icy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iff:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ii:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},image:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},imped:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},in:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},int:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},integers:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},iocy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iogon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iota:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},isin:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},it:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Kappa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},kappa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},kopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Lambda:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lambda:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},late:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lates:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},le:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},leg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},leq:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},les:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ll:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},lne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},lozenge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lsh:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},LT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ltimes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},male:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},malt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},map:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},marker:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},mid:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},minus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},models:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},mp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},mu:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},nang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},natural:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},naturals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ncy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ngt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ni:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nis:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nles:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nless:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nlt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Not:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},not:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},nsc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nsce:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nu:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},num:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ogt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ohm:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oline:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},olt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Omega:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},omega:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Omicron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},omicron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},opar:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},or:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},order:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oror:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},orv:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},osol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},par:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},para:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},parallel:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},part:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},phi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},phone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Pi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pitchfork:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},plus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pm:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},popf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},pound:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prime:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},primes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prod:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Product:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prop:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Proportion:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Proportional:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},psi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},quest:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},QUOT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},quot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},race:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},range:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ratio:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Re:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},real:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},reals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rect:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},REG:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},reg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rsh:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},scap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sce:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},scy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sdot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sect:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},semi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sharp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},shy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sigma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sigma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sim:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},spades:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},square:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Star:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},star:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sub:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sub:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sube:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sum:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sum:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tab:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},target:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tau:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tau:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},therefore:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Theta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},theta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},THORN:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},thorn:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},times:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tint:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},top:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tosa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},TRADE:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},trade:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},triangle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},trie:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ucy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},uml:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Union:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},uplus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Upsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},upsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},uring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},vee:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Vert:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},vert:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},wedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Wedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},wreath:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Xi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},xi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Ycirc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ycirc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ycy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},yen:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Zacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},zacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Zeta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},zeta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1}};function S(e){if("string"!=typeof e||!e.length||!e.startsWith("&")||!e.endsWith(";"))throw new Error(`all-named-html-entities/decode(): [THROW_ID_01] Input must be an HTML entity with leading ampersand and trailing semicolon, but "${e}" was given`);const r=e.slice(1,e.length-1);return x[r]?x[r]:null}const E=31;function D(e){const r={value:e,hungry:!1,optional:!1};return(r.value.endsWith("?*")||r.value.endsWith("*?"))&&r.value.length>2?(r.value=r.value.slice(0,r.value.length-2),r.optional=!0,r.hungry=!0):r.value.endsWith("?")&&r.value.length>1?(r.value=r.value.slice(0,r.value.length-1),r.optional=!0):r.value.endsWith("*")&&r.value.length>1&&(r.value=r.value.slice(0,r.value.length-1),r.hungry=!0),r}function I(e){return"number"==typeof e}function C(e){return"string"==typeof e}function k(e,r){if("string"!=typeof e||!e.length)return null;if(r&&"number"==typeof r||(r=0),!e[r+1])return null;if(e[r+1]&&e[r+1].trim().length)return r+1;if(e[r+2]&&e[r+2].trim().length)return r+2;for(let t=r+1,a=e.length;t<a;t++)if(e[t].trim().length)return t;return null}function P(e,r){if("string"!=typeof e||!e.length)return null;if(r&&"number"==typeof r||(r=0),r<1)return null;if(e[r-1]&&e[r-1].trim().length)return r-1;if(e[r-2]&&e[r-2].trim().length)return r-2;for(let t=r;t--;)if(e[t]&&e[t].trim().length)return t;return null}function T(e,r,t,a,n){if("string"!=typeof r||!r.length)return null;if(t&&"number"==typeof t||(t=0),"right"===e&&!r[t+1]||"left"===e&&!r[t-1])return null;let o=t;const s=[];let c,i,l,u=0;for(;u<n.length;){if(!C(n[u])||!n[u].length){u++;continue}const{value:t,optional:p,hungry:d}=D(n[u]),m="right"===e?k(r,o):P(r,o);if(!(a.i&&r[m].toLowerCase()===t.toLowerCase()||!a.i&&r[m]===t)){if(p){u++;continue}if(l){u++,l=void 0;continue}return null}{const n="right"===e?k(r,m):P(r,m);d&&(a.i&&r[n].toLowerCase()===t.toLowerCase()||!a.i&&r[n]===t)?l=!0:u++,"right"===e&&m>o+1?s.push([o+1,m]):"left"===e&&m<o-1&&s.unshift([m+1,o]),o=m,"right"===e?(void 0===c&&(c=m),i=m):(void 0===i&&(i=m),c=m)}}return void 0===c?null:{gaps:s,leftmostChar:c,rightmostChar:i}}function L(e,r,...t){if(!t.length)return P(e,r);const a={i:!1};let n;return T("left",e,r,n=g(t[0])?Object.assign({},a,t.shift()):a,Array.from(t).reverse())}function N(e,r,...t){if(!t.length)return k(e,r);const a={i:!1};let n;return T("right",e,r,n=g(t[0])?Object.assign({},a,t.shift()):a,t)}function R(e,r,t,a,n){if("string"!=typeof r||!r.length)return null;if(t&&"number"==typeof t||(t=0),"right"===e&&!r[t+1]||"left"===e&&(I(t)&&t<1||"0"===t))return null;let o=null,s=null;do{null!==(o="right"===e?N(r,I(s)?s:t,...n):L(r,I(s)?s:t,...n))&&(s="right"===e?o.rightmostChar:o.leftmostChar)}while(o);if(null!=s&&"right"===e&&s++,null===s)return null;if("right"===e){if(r[s]&&r[s].trim().length)return s;const e=k(r,s);if(0===a.mode){if(e===s+1)return s;if(!(r.slice(s,e||r.length).trim().length||r.slice(s,e||r.length).includes("\n")||r.slice(s,e||r.length).includes("\r")))return e?e-1:r.length;for(let e=s,t=r.length;e<t;e++)if("\n\r".includes(r[e]))return e}else{if(1===a.mode)return s;if(2===a.mode){const e=r.slice(s);if(e.trim().length||e.includes("\n")||e.includes("\r"))for(let e=s,t=r.length;e<t;e++)if(r[e].trim().length||"\n\r".includes(r[e]))return e;return r.length}}return e||r.length}if(r[s]&&r[s-1]&&r[s-1].trim().length)return s;const c=P(r,s);if(0===a.mode){if(c===s-2)return s;if(r.slice(0,s).trim().length||r.slice(0,s).includes("\n")||r.slice(0,s).includes("\r"))for(let e=s;e--;)if("\n\r".includes(r[e])||r[e].trim().length)return e+1+(r[e].trim().length?1:0);return 0}if(1===a.mode)return s;if(2===a.mode){const e=r.slice(0,s);if(e.trim().length||e.includes("\n")||e.includes("\r"))for(let e=s;e--;)if(r[e].trim().length||"\n\r".includes(r[e]))return e+1;return 0}return null!==c?c+1:0}function B(e,r,...t){if(!t.length||1===t.length&&g(t[0]))return null;const a={mode:0};if(g(t[0])){const n=Object.assign({},a,b(t[0]));if(n.mode){if(C(n.mode)&&"0123".includes(n.mode))n.mode=Number.parseInt(n.mode,10);else if(!I(n.mode))throw new Error(`string-left-right/chompLeft(): [THROW_ID_01] the opts.mode is wrong! It should be 0, 1, 2 or 3. It was given as ${n.mode} (type ${typeof n.mode})`)}else n.mode=0;return R("left",e,r,n,b(t).slice(1))}return C(t[0])?R("left",e,r,a,b(t)):R("left",e,r,a,b(t).slice(1))}function F(e,r,...t){if(!t.length||1===t.length&&g(t[0]))return null;const a={mode:0};if(g(t[0])){const n=Object.assign({},a,b(t[0]));if(n.mode){if(C(n.mode)&&"0123".includes(n.mode))n.mode=Number.parseInt(n.mode,10);else if(!I(n.mode))throw new Error(`string-left-right/chompRight(): [THROW_ID_02] the opts.mode is wrong! It should be 0, 1, 2 or 3. It was given as ${n.mode} (type ${typeof n.mode})`)}else n.mode=0;return R("right",e,r,n,b(t).slice(1))}return C(t[0])?R("right",e,r,a,b(t)):R("right",e,r,a,b(t).slice(1))}const O=Array.isArray;var V={"bad-character-acknowledge":{description:"https://www.fileformat.info/info/unicode/char/0006/index.htm",excerpt:"bad character - acknowledge",scope:"all"},"bad-character-application-program-command":{description:"http://www.fileformat.info/info/unicode/char/009f/index.htm",excerpt:"bad character - application program command",scope:"all"},"bad-character-backspace":{description:"https://www.fileformat.info/info/unicode/char/0008/index.htm",excerpt:"bad character - backspace",scope:"all"},"bad-character-bell":{description:"https://www.fileformat.info/info/unicode/char/0007/index.htm",excerpt:"bad character - bell",scope:"all"},"bad-character-break-permitted-here":{description:"http://www.fileformat.info/info/unicode/char/0082/index.htm",excerpt:"bad character - break permitted here",scope:"all"},"bad-character-cancel":{description:"https://www.fileformat.info/info/unicode/char/0018/index.htm",excerpt:"bad character - cancel",scope:"all"},"bad-character-cancel-character":{description:"http://www.fileformat.info/info/unicode/char/0094/index.htm",excerpt:"bad character - cancel character",scope:"all"},"bad-character-character-tabulation":{description:"https://www.fileformat.info/info/unicode/char/0009/index.htm",excerpt:"bad character - character tabulation",scope:"all"},"bad-character-character-tabulation-set":{description:"http://www.fileformat.info/info/unicode/char/0088/index.htm",excerpt:"bad character - character tabulation set",scope:"all"},"bad-character-character-tabulation-with-justification":{description:"http://www.fileformat.info/info/unicode/char/0089/index.htm",excerpt:"bad character - character tabulation with justification",scope:"all"},"bad-character-control-sequence-introducer":{description:"http://www.fileformat.info/info/unicode/char/009b/index.htm",excerpt:"bad character - control sequence introducer",scope:"all"},"bad-character-data-link-escape":{description:"https://www.fileformat.info/info/unicode/char/0010/index.htm",excerpt:"bad character - data link escape",scope:"all"},"bad-character-delete":{description:"http://www.fileformat.info/info/unicode/char/007f/index.htm",excerpt:"bad character - delete",scope:"all"},"bad-character-device-control-four":{description:"https://www.fileformat.info/info/unicode/char/0014/index.htm",excerpt:"bad character - device control four",scope:"all"},"bad-character-device-control-one":{description:"https://www.fileformat.info/info/unicode/char/0011/index.htm",excerpt:"bad character - device control one",scope:"all"},"bad-character-device-control-string":{description:"http://www.fileformat.info/info/unicode/char/0090/index.htm",excerpt:"bad character - device control string",scope:"all"},"bad-character-device-control-three":{description:"https://www.fileformat.info/info/unicode/char/0013/index.htm",excerpt:"bad character - device control three",scope:"all"},"bad-character-device-control-two":{description:"https://www.fileformat.info/info/unicode/char/0012/index.htm",excerpt:"bad character - device control two",scope:"all"},"bad-character-em-quad":{description:"https://www.fileformat.info/info/unicode/char/2001/index.htm",excerpt:"bad character - em quad",scope:"all"},"bad-character-em-space":{description:"https://www.fileformat.info/info/unicode/char/2001/index.htm",excerpt:"bad character - em space",scope:"all"},"bad-character-en-quad":{description:"https://www.fileformat.info/info/unicode/char/2000/index.htm",excerpt:"bad character - en quad",scope:"all"},"bad-character-en-space":{description:"https://www.fileformat.info/info/unicode/char/2000/index.htm",excerpt:"bad character - en space",scope:"all"},"bad-character-end-of-medium":{description:"https://www.fileformat.info/info/unicode/char/0019/index.htm",excerpt:"bad character - end of medium",scope:"all"},"bad-character-end-of-protected-area":{description:"http://www.fileformat.info/info/unicode/char/0097/index.htm",excerpt:"bad character - end of protected area",scope:"all"},"bad-character-end-of-selected-area":{description:"http://www.fileformat.info/info/unicode/char/0087/index.htm",excerpt:"bad character - end of selected area",scope:"all"},"bad-character-end-of-text":{description:"https://www.fileformat.info/info/unicode/char/0003/index.htm",excerpt:"bad character - end of text (ETX)",scope:"all"},"bad-character-end-of-transmission":{description:"https://www.fileformat.info/info/unicode/char/0004/index.htm",excerpt:"bad character - end of transmission",scope:"all"},"bad-character-end-of-transmission-block":{description:"https://www.fileformat.info/info/unicode/char/0017/index.htm",excerpt:"bad character - end of transmission block",scope:"all"},"bad-character-enquiry":{description:"https://www.fileformat.info/info/unicode/char/0005/index.htm",excerpt:"bad character - enquiry",scope:"all"},"bad-character-escape":{description:"https://www.fileformat.info/info/unicode/char/001b/index.htm",excerpt:"bad character - escape",scope:"all"},"bad-character-figure-space":{description:"https://www.fileformat.info/info/unicode/char/2007/index.htm",excerpt:"bad character - figure space",scope:"all"},"bad-character-form-feed":{description:"https://www.fileformat.info/info/unicode/char/000c/index.htm",excerpt:"bad character - form feed",scope:"all"},"bad-character-four-per-em-space":{description:"https://www.fileformat.info/info/unicode/char/2005/index.htm",excerpt:"bad character - four-per-em space",scope:"all"},"bad-character-generic":{description:"This character is invalid",excerpt:"bad character",scope:"all"},"bad-character-grave-accent":{description:"https://www.fileformat.info/info/unicode/char/0060/index.htm",excerpt:"bad character - grave accent",scope:"html"},"bad-character-hair-space":{description:"https://www.fileformat.info/info/unicode/char/200a/index.htm",excerpt:"bad character - hair space",scope:"all"},"bad-character-high-octet-preset":{description:"http://www.fileformat.info/info/unicode/char/0081/index.htm",excerpt:"bad character - high octet preset",scope:"all"},"bad-character-ideographic-space":{description:"https://www.fileformat.info/info/unicode/char/3000/index.htm",excerpt:"bad character - ideographic space",scope:"all"},"bad-character-index":{description:"http://www.fileformat.info/info/unicode/char/0084/index.htm",excerpt:"bad character - index",scope:"all"},"bad-character-information-separator-four":{description:"https://www.fileformat.info/info/unicode/char/001c/index.htm",excerpt:"bad character - information separator four",scope:"all"},"bad-character-information-separator-one":{description:"https://www.fileformat.info/info/unicode/char/001f/index.htm",excerpt:"bad character - information separator one",scope:"all"},"bad-character-information-separator-three":{description:"https://www.fileformat.info/info/unicode/char/001d/index.htm",excerpt:"bad character - information separator three",scope:"all"},"bad-character-information-separator-two":{description:"https://www.fileformat.info/info/unicode/char/001e/index.htm",excerpt:"bad character - information separator two",scope:"all"},"bad-character-line-separator":{description:"https://www.fileformat.info/info/unicode/char/2028/index.htm",excerpt:"bad character - line separator",scope:"all"},"bad-character-line-tabulation":{description:"https://www.fileformat.info/info/unicode/char/000b/index.htm",excerpt:"bad character - line tabulation",scope:"all"},"bad-character-line-tabulation-set":{description:"http://www.fileformat.info/info/unicode/char/008a/index.htm",excerpt:"bad character - line tabulation set",scope:"all"},"bad-character-medium-mathematical-space":{description:"https://www.fileformat.info/info/unicode/char/205f/index.htm",excerpt:"bad character - medium mathematical space",scope:"all"},"bad-character-message-waiting":{description:"http://www.fileformat.info/info/unicode/char/0095/index.htm",excerpt:"bad character - message waiting",scope:"all"},"bad-character-narrow-no-break-space":{description:"https://www.fileformat.info/info/unicode/char/202f/index.htm",excerpt:"bad character - narrow no-break space",scope:"all"},"bad-character-negative-acknowledge":{description:"https://www.fileformat.info/info/unicode/char/0015/index.htm",excerpt:"bad character - negative acknowledge",scope:"all"},"bad-character-next-line":{description:"http://www.fileformat.info/info/unicode/char/0085/index.htm",excerpt:"bad character - next line",scope:"all"},"bad-character-no-break-here":{description:"http://www.fileformat.info/info/unicode/char/0083/index.htm",excerpt:"bad character - no break here",scope:"all"},"bad-character-null":{description:"https://www.fileformat.info/info/unicode/char/0000/index.htm",excerpt:"bad character - null",scope:"all"},"bad-character-ogham-space-mark":{description:"https://www.fileformat.info/info/unicode/char/1680/index.htm",excerpt:"bad character - ogham space mark",scope:"all"},"bad-character-operating-system-command":{description:"http://www.fileformat.info/info/unicode/char/009d/index.htm",excerpt:"bad character - operating system command",scope:"all"},"bad-character-padding":{description:"http://www.fileformat.info/info/unicode/char/0080/index.htm",excerpt:"bad character - padding",scope:"all"},"bad-character-paragraph-separator":{description:"https://www.fileformat.info/info/unicode/char/2029/index.htm",excerpt:"bad character - paragraph separator",scope:"all"},"bad-character-partial-line-backward":{description:"http://www.fileformat.info/info/unicode/char/008c/index.htm",excerpt:"bad character - partial line backward",scope:"all"},"bad-character-partial-line-forward":{description:"http://www.fileformat.info/info/unicode/char/008b/index.htm",excerpt:"bad character - partial line forward",scope:"all"},"bad-character-private-message":{description:"http://www.fileformat.info/info/unicode/char/009e/index.htm",excerpt:"bad character - private message",scope:"all"},"bad-character-private-use-1":{description:"http://www.fileformat.info/info/unicode/char/0091/index.htm",excerpt:"bad character - private use 1",scope:"all"},"bad-character-private-use-2":{description:"http://www.fileformat.info/info/unicode/char/0092/index.htm",excerpt:"bad character - private use 2",scope:"all"},"bad-character-punctuation-space":{description:"https://www.fileformat.info/info/unicode/char/2008/index.htm",excerpt:"bad character - punctuation space",scope:"all"},"bad-character-reverse-line-feed":{description:"http://www.fileformat.info/info/unicode/char/008d/index.htm",excerpt:"bad character - reverse line feed",scope:"all"},"bad-character-set-transmit-state":{description:"http://www.fileformat.info/info/unicode/char/0093/index.htm",excerpt:"bad character - set transmit state",scope:"all"},"bad-character-shift-in":{description:"https://www.fileformat.info/info/unicode/char/000f/index.htm",excerpt:"bad character - shift in",scope:"all"},"bad-character-shift-out":{description:"https://www.fileformat.info/info/unicode/char/000e/index.htm",excerpt:"bad character - shift out",scope:"all"},"bad-character-single-character-intro-introducer":{description:"http://www.fileformat.info/info/unicode/char/009a/index.htm",excerpt:"bad character - single character intro introducer",scope:"all"},"bad-character-single-graphic-character-introducer":{description:"http://www.fileformat.info/info/unicode/char/0099/index.htm",excerpt:"bad character - single graphic character introducer",scope:"all"},"bad-character-single-shift-three":{description:"http://www.fileformat.info/info/unicode/char/008f/index.htm",excerpt:"bad character - single shift three",scope:"all"},"bad-character-single-shift-two":{description:"http://www.fileformat.info/info/unicode/char/008e/index.htm",excerpt:"bad character - single shift two",scope:"all"},"bad-character-six-per-em-space":{description:"https://www.fileformat.info/info/unicode/char/2005/index.htm",excerpt:"bad character - six-per-em space",scope:"all"},"bad-character-start-of-heading":{description:"https://www.fileformat.info/info/unicode/char/0001/index.htm",excerpt:"bad character - start of heading",scope:"all"},"bad-character-start-of-protected-area":{description:"http://www.fileformat.info/info/unicode/char/0096/index.htm",excerpt:"bad character - start of protected area",scope:"all"},"bad-character-start-of-selected-area":{description:"http://www.fileformat.info/info/unicode/char/0086/index.htm",excerpt:"bad character - start of selected area",scope:"all"},"bad-character-start-of-string":{description:"http://www.fileformat.info/info/unicode/char/0098/index.htm",excerpt:"bad character - start of string",scope:"all"},"bad-character-start-of-text":{description:"https://www.fileformat.info/info/unicode/char/0002/index.htm",excerpt:"bad character - start of text",scope:"all"},"bad-character-string-terminator":{description:"http://www.fileformat.info/info/unicode/char/009c/index.htm",excerpt:"bad character - string terminator",scope:"all"},"bad-character-substitute":{description:"https://www.fileformat.info/info/unicode/char/001a/index.htm",excerpt:"bad character - substitute",scope:"all"},"bad-character-synchronous-idle":{description:"https://www.fileformat.info/info/unicode/char/0016/index.htm",excerpt:"bad character - synchronous idle",scope:"all"},"bad-character-thin-space":{description:"https://www.fileformat.info/info/unicode/char/2009/index.htm",excerpt:"bad character - thin space",scope:"all"},"bad-character-three-per-em-space":{description:"https://www.fileformat.info/info/unicode/char/2004/index.htm",excerpt:"bad character - three-per-em space",scope:"all"},"bad-character-unencoded-ampersand":{description:"There is unencoded ampersand",excerpt:"unencoded ampersand",scope:"html"},"bad-character-unencoded-closing-bracket":{description:"There is unencoded closing bracket",excerpt:"unencoded closing bracket",scope:"html"},"bad-character-unencoded-double-quotes":{description:"There is unencoded double quotes",excerpt:"unencoded double quotes",scope:"html"},"bad-character-unencoded-non-breaking-space":{description:"http://www.fileformat.info/info/unicode/char/00a0/index.htm",excerpt:"bad character - unencoded non-breaking space",scope:"all"},"bad-character-unencoded-opening-bracket":{description:"There is unencoded opening bracket",excerpt:"unencoded opening bracket",scope:"html"},"bad-character-zero-width-space":{description:"https://www.fileformat.info/info/unicode/char/200b/index.htm",excerpt:"bad character - zero width space",scope:"all"}},U=["abbr","address","area","article","aside","audio","base","bdi","bdo","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","doctype","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","rb","rp","rt","rtc","ruby","samp","script","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","ul","var","video","wbr","xml"],j={$:{sibling:"$",type:"closing"},"%}":{sibling:["{%","{%-"],type:"closing"},"*|":{sibling:"|*",type:"opening"},"-%}":{sibling:["{%-","{%"],type:"closing"},"{%":{sibling:["%}","-%}"],type:"opening"},"{%-":{sibling:["-%}","%}"],type:"opening"},"|*":{sibling:"*|",type:"closing"}},_={"bad-cdata-tag-malformed":{description:"CDATA opening tag is malformed",excerpt:"malformed CDATA tag",scope:"html"},"bad-named-html-entity-not-email-friendly":{description:"HTML named entity is not email template-friendly, use numeric",excerpt:"should be numeric entity",scope:"html"},"bad-named-html-entity-malformed-nbsp":{description:"HTML named entity &nbsp; (a non-breaking space) is malformed",excerpt:"malformed &nbsp;",scope:"html"},"bad-named-html-entity-missing-semicolon":{description:"HTML named entity is missing a semicolon",excerpt:"missing semicolon on a named HTML entity",scope:"html"},"bad-named-html-entity-multiple-encoding":{description:"HTML named entity was encoded multiple times, causing repeated amp;",excerpt:"repeated amp; because of over-encoding",scope:"html"},"esp-line-break-within-templating-tag":{description:"There should be no line breaks within ESP template tags",excerpt:"line break should be removed",scope:"all",unfixable:!0},"esp-more-closing-parentheses-than-opening":{description:"There are more closing parentheses than opening-ones",excerpt:"too many closing parentheses",scope:"all",unfixable:!0},"esp-more-opening-parentheses-than-closing":{description:"There are more opening parentheses than closing-ones",excerpt:"too many opening parentheses",scope:"all",unfixable:!0},"file-empty":{description:"the contents are empty",excerpt:"the contents are empty",scope:"all"},"file-missing-ending":{description:"the ending part of the contents is missing",excerpt:"ending part is missing",scope:"all"},"file-mixed-line-endings-file-is-CR-mainly":{description:"mixed line endings detected, majority EOL's are CR",excerpt:"mixed line endings detected, majority EOL's are CR",scope:"all"},"file-mixed-line-endings-file-is-CRLF-mainly":{description:"mixed line endings detected, majority EOL's are CRLF",excerpt:"mixed line endings detected, majority EOL's are CRLF",scope:"all"},"file-mixed-line-endings-file-is-LF-mainly":{description:"mixed line endings detected, majority EOL's are LF",excerpt:"mixed line endings detected, majority EOL's are LF",scope:"all"},"file-wrong-type-line-ending-CR":{description:"Carriage Return (ASCII #13) line ending detected",excerpt:"Carriage Return line ending",scope:"all"},"file-wrong-type-line-ending-CRLF":{description:"CRLF (Carriage Return + Line Feed) line ending detected",excerpt:"CRLF line ending",scope:"all"},"file-wrong-type-line-ending-LF":{description:"Line Feed (ASCII #10) line ending detected",excerpt:"Line Feed line ending",scope:"all"},"html-comment-missing-dash":{description:"The dash in the comment is missing",excerpt:"missing dash",scope:"html"},"html-comment-missing-exclamation-mark":{description:"The exclamation mark in the HTML comment is missing",excerpt:"missing exclamation mark",scope:"html"},"html-comment-redundant-dash":{description:"There are too many dashes in HTML comment",excerpt:"redundant dash",scope:"html"},"html-comment-spaces":{description:"There should be no spaces between HTML comment characters",excerpt:"rogue spaces",scope:"html"},"tag-attribute-closing-quotation-mark-missing":{description:"The closing quotation mark is missing",excerpt:"the closing quotation mark is missing",scope:"html"},"tag-attribute-left-double-quotation-mark":{description:"There's a left double quotation mark, https://www.fileformat.info/info/unicode/char/201C/index.htm",excerpt:"a left double quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-left-single-quotation-mark":{description:"There's a left single quotation mark, https://www.fileformat.info/info/unicode/char/2018/index.htm",excerpt:"a left single quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-mismatching-quotes-is-double":{description:"attribute's opening quote is single, but closing-one is double",excerpt:"there should be a single quote here instead",scope:"html"},"tag-attribute-mismatching-quotes-is-single":{description:"attribute's opening quote is double, but closing-one is single",excerpt:"there should be a double quote here instead",scope:"html"},"tag-attribute-missing-equal":{description:"The equal is missing between attribute's name and quotes",excerpt:"missing equal character",scope:"html"},"tag-attribute-opening-quotation-mark-missing":{description:"The opening quotation mark is missing",excerpt:"the opening quotation mark is missing",scope:"html"},"tag-attribute-quote-and-onwards-missing":{description:"One of the attributes ends with an equal sign, there are no quotes on it",excerpt:"attributes ends with an equal sign, there are no quotes on it",scope:"html"},"tag-attribute-repeated-equal":{description:"The equal after attribute's name is repeated",excerpt:"repeated equal character",scope:"html"},"tag-attribute-right-double-quotation-mark":{description:"There's a right double quotation mark, https://www.fileformat.info/info/unicode/char/201d/index.htm",excerpt:"a right double quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-right-single-quotation-mark":{description:"There's a right single quotation mark, https://www.fileformat.info/info/unicode/char/2019/index.htm",excerpt:"a right single quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-space-between-equals-and-opening-quotes":{description:"There's a space between attribute's equal sign and opening quotes",excerpt:"space between attribute's equal sign and opening quotes",scope:"html"},"tag-attribute-space-between-name-and-equals":{description:"There's a space between attribute's name and equal sign",excerpt:"space between attribute's name and equal sign",scope:"html"},"tag-duplicate-closing-slash":{description:"Tag's closing slash is repeated",excerpt:"repeated tag's closing slash",scope:"html"},"tag-closing-left-slash":{description:"Tag's closing slash is wrong, it's left not right",excerpt:"should be right slash",scope:"html"},"tag-excessive-whitespace-inside-tag":{description:"There's an excessive whitespace inside the tag",excerpt:"space between attribute's name and equal sign",scope:"html"},"tag-generic-error":{description:"Something is wrong here",excerpt:"something is wrong here",scope:"html"},"tag-missing-closing-bracket":{description:"Tag's closing bracket is missing",excerpt:"missing closing bracket",scope:"html"},"tag-missing-space-before-attribute":{description:"The space before attribute's name is missing",excerpt:"missing space",scope:"html"},"tag-name-lowercase":{description:"Normally all tags are in lowercase",excerpt:"tag name contains uppercase characters",scope:"html"},"tag-space-after-opening-bracket":{description:"Many browsers, including Chrome will not consider this a tag",excerpt:"space between opening bracket and tag name",scope:"html"},"tag-stray-character":{description:"This chunk seems to be astray and can be deleted",excerpt:"delete this",scope:"html"},"tag-stray-quotes":{description:"These quotes can be deleted",excerpt:"delete this",scope:"html"},"tag-whitespace-closing-slash-and-bracket":{description:"There's a whitespace between closing slash and closing bracket",excerpt:"whitespace between slash and closing bracket",scope:"html"}};function H(e){return"string"==typeof e?e.length>0?[e]:[]:e}var G=function(e,r){if(r){if("object"!=typeof r)throw new TypeError(String(r)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in r){if("boolean"!=typeof r.includeZero)throw new TypeError(String(r.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(r.includeZero&&0===e)return!0}}return Number.isSafeInteger(e)&&e>=1},z=h(function(e,r){(r=e.exports=function(e){return e+r.suffix(+e)}).suffix=function(e){return e%=100,1===Math.floor(e/10)?"th":e%10==1?"st":e%10==2?"nd":e%10==3?"rd":"th"}}),Q=(z.suffix,h(function(e,r){var t,a,n,o,s,c,i,l,u,p,d,m,g,h,b,x,A,w,y,v;e.exports=(t="function"==typeof Promise,a="object"==typeof self?self:f,n="undefined"!=typeof Symbol,o="undefined"!=typeof Map,s="undefined"!=typeof Set,c="undefined"!=typeof WeakMap,i="undefined"!=typeof WeakSet,l="undefined"!=typeof DataView,u=n&&void 0!==Symbol.iterator,p=n&&void 0!==Symbol.toStringTag,d=s&&"function"==typeof Set.prototype.entries,m=o&&"function"==typeof Map.prototype.entries,g=d&&Object.getPrototypeOf((new Set).entries()),h=m&&Object.getPrototypeOf((new Map).entries()),b=u&&"function"==typeof Array.prototype[Symbol.iterator],x=b&&Object.getPrototypeOf([][Symbol.iterator]()),A=u&&"function"==typeof String.prototype[Symbol.iterator],w=A&&Object.getPrototypeOf(""[Symbol.iterator]()),y=8,v=-1,function(e){var r=typeof e;if("object"!==r)return r;if(null===e)return"null";if(e===a)return"global";if(Array.isArray(e)&&(!1===p||!(Symbol.toStringTag in e)))return"Array";if("object"==typeof window&&null!==window){if("object"==typeof window.location&&e===window.location)return"Location";if("object"==typeof window.document&&e===window.document)return"Document";if("object"==typeof window.navigator){if("object"==typeof window.navigator.mimeTypes&&e===window.navigator.mimeTypes)return"MimeTypeArray";if("object"==typeof window.navigator.plugins&&e===window.navigator.plugins)return"PluginArray"}if(("function"==typeof window.HTMLElement||"object"==typeof window.HTMLElement)&&e instanceof window.HTMLElement){if("BLOCKQUOTE"===e.tagName)return"HTMLQuoteElement";if("TD"===e.tagName)return"HTMLTableDataCellElement";if("TH"===e.tagName)return"HTMLTableHeaderCellElement"}}var n=p&&e[Symbol.toStringTag];if("string"==typeof n)return n;var u=Object.getPrototypeOf(e);return u===RegExp.prototype?"RegExp":u===Date.prototype?"Date":t&&u===Promise.prototype?"Promise":s&&u===Set.prototype?"Set":o&&u===Map.prototype?"Map":i&&u===WeakSet.prototype?"WeakSet":c&&u===WeakMap.prototype?"WeakMap":l&&u===DataView.prototype?"DataView":o&&u===h?"Map Iterator":s&&u===g?"Set Iterator":b&&u===x?"Array Iterator":A&&u===w?"String Iterator":null===u?"Object":Object.prototype.toString.call(e).slice(y,v)})}));function J(e,r,t){if(r!=r)return function(e,r,t,a){for(var n=e.length,o=t+(a?1:-1);a?o--:++o<n;)if(r(e[o],o,e))return o;return-1}(e,$,t);for(var a=t-1,n=e.length;++a<n;)if(e[a]===r)return a;return-1}function M(e,r,t,a){for(var n=t-1,o=e.length;++n<o;)if(a(e[n],r))return n;return-1}function $(e){return e!=e}var W=Array.prototype.splice;function Z(e,r,t,a){var n=a?M:J,o=-1,s=r.length,c=e;for(e===r&&(r=function(e,r){var t=-1,a=e.length;r||(r=Array(a));for(;++t<a;)r[t]=e[t];return r}(r)),t&&(c=function(e,r){for(var t=-1,a=e?e.length:0,n=Array(a);++t<a;)n[t]=r(e[t],t,e);return n}(e,function(e){return function(r){return e(r)}}(t)));++o<s;)for(var i=0,l=r[o],u=t?t(l):l;(i=n(c,u,i,a))>-1;)c!==e&&W.call(c,i,1),W.call(e,i,1);return e}var Y=function(e,r){return e&&e.length&&r&&r.length?Z(e,r):e};const K=Array.isArray;function X(e){return"string"==typeof e&&e.length>0&&"."===e[0]?e.slice(1):e}function ee(e){return null!=e}function re(e,r){return function e(r,t,a){const n=b(r);let o,s,c,i,l;if((a=Object.assign({depth:-1,path:""},a)).depth+=1,K(n))for(o=0,s=n.length;o<s;o++){const r=`${a.path}.${o}`;void 0!==n[o]?(a.parent=b(n),a.parentType="array",c=e(t(n[o],void 0,Object.assign({},a,{path:X(r)})),t,Object.assign({},a,{path:X(r)})),Number.isNaN(c)&&o<n.length?(n.splice(o,1),o-=1):n[o]=c):n.splice(o,1)}else if(g(n))for(o=0,s=(i=Object.keys(n)).length;o<s;o++){l=i[o];const r=`${a.path}.${l}`;0===a.depth&&ee(l)&&(a.topmostKey=l),a.parent=b(n),a.parentType="object",c=e(t(l,n[l],Object.assign({},a,{path:X(r)})),t,Object.assign({},a,{path:X(r)})),Number.isNaN(c)?delete n[l]:n[l]=c}return n}(e,r,{})}var te="__lodash_hash_undefined__",ae=9007199254740991,ne="[object Function]",oe="[object GeneratorFunction]",se=/^\[object .+?Constructor\]$/,ce="object"==typeof f&&f&&f.Object===Object&&f,ie="object"==typeof self&&self&&self.Object===Object&&self,le=ce||ie||Function("return this")();function ue(e,r,t){switch(t.length){case 0:return e.call(r);case 1:return e.call(r,t[0]);case 2:return e.call(r,t[0],t[1]);case 3:return e.call(r,t[0],t[1],t[2])}return e.apply(r,t)}function pe(e,r){return!!(e?e.length:0)&&function(e,r,t){if(r!=r)return function(e,r,t,a){var n=e.length,o=t+(a?1:-1);for(;a?o--:++o<n;)if(r(e[o],o,e))return o;return-1}(e,ge,t);var a=t-1,n=e.length;for(;++a<n;)if(e[a]===r)return a;return-1}(e,r,0)>-1}function de(e,r,t){for(var a=-1,n=e?e.length:0;++a<n;)if(t(r,e[a]))return!0;return!1}function me(e,r){for(var t=-1,a=e?e.length:0,n=Array(a);++t<a;)n[t]=r(e[t],t,e);return n}function ge(e){return e!=e}function fe(e){return function(r){return e(r)}}function he(e,r){return e.has(r)}var be,xe=Array.prototype,Ae=Function.prototype,we=Object.prototype,ye=le["__core-js_shared__"],ve=(be=/[^.]+$/.exec(ye&&ye.keys&&ye.keys.IE_PROTO||""))?"Symbol(src)_1."+be:"",qe=Ae.toString,Se=we.hasOwnProperty,Ee=we.toString,De=RegExp("^"+qe.call(Se).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Ie=xe.splice,Ce=Math.max,ke=Math.min,Pe=je(le,"Map"),Te=je(Object,"create");function Le(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function Ne(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function Re(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function Be(e){var r=-1,t=e?e.length:0;for(this.__data__=new Re;++r<t;)this.add(e[r])}function Fe(e,r){for(var t,a,n=e.length;n--;)if((t=e[n][0])===(a=r)||t!=t&&a!=a)return n;return-1}function Oe(e){return!(!He(e)||function(e){return!!ve&&ve in e}(e))&&(_e(e)||function(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}(e)?De:se).test(function(e){if(null!=e){try{return qe.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}function Ve(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=ae}(e.length)&&!_e(e)}(e)}(e)?e:[]}function Ue(e,r){var t,a,n=e.__data__;return("string"==(a=typeof(t=r))||"number"==a||"symbol"==a||"boolean"==a?"__proto__"!==t:null===t)?n["string"==typeof r?"string":"hash"]:n.map}function je(e,r){var t=function(e,r){return null==e?void 0:e[r]}(e,r);return Oe(t)?t:void 0}function _e(e){var r=He(e)?Ee.call(e):"";return r==ne||r==oe}function He(e){var r=typeof e;return!!e&&("object"==r||"function"==r)}Le.prototype.clear=function(){this.__data__=Te?Te(null):{}},Le.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Le.prototype.get=function(e){var r=this.__data__;if(Te){var t=r[e];return t===te?void 0:t}return Se.call(r,e)?r[e]:void 0},Le.prototype.has=function(e){var r=this.__data__;return Te?void 0!==r[e]:Se.call(r,e)},Le.prototype.set=function(e,r){return this.__data__[e]=Te&&void 0===r?te:r,this},Ne.prototype.clear=function(){this.__data__=[]},Ne.prototype.delete=function(e){var r=this.__data__,t=Fe(r,e);return!(t<0||(t==r.length-1?r.pop():Ie.call(r,t,1),0))},Ne.prototype.get=function(e){var r=this.__data__,t=Fe(r,e);return t<0?void 0:r[t][1]},Ne.prototype.has=function(e){return Fe(this.__data__,e)>-1},Ne.prototype.set=function(e,r){var t=this.__data__,a=Fe(t,e);return a<0?t.push([e,r]):t[a][1]=r,this},Re.prototype.clear=function(){this.__data__={hash:new Le,map:new(Pe||Ne),string:new Le}},Re.prototype.delete=function(e){return Ue(this,e).delete(e)},Re.prototype.get=function(e){return Ue(this,e).get(e)},Re.prototype.has=function(e){return Ue(this,e).has(e)},Re.prototype.set=function(e,r){return Ue(this,e).set(e,r),this},Be.prototype.add=Be.prototype.push=function(e){return this.__data__.set(e,te),this},Be.prototype.has=function(e){return this.__data__.has(e)};var Ge=function(e,r){return r=Ce(void 0===r?e.length-1:r,0),function(){for(var t=arguments,a=-1,n=Ce(t.length-r,0),o=Array(n);++a<n;)o[a]=t[r+a];a=-1;for(var s=Array(r+1);++a<r;)s[a]=t[a];return s[r]=o,ue(e,this,s)}}(function(e){var r=me(e,Ve);return r.length&&r[0]===e[0]?function(e,r,t){for(var a=t?de:pe,n=e[0].length,o=e.length,s=o,c=Array(o),i=1/0,l=[];s--;){var u=e[s];s&&r&&(u=me(u,fe(r))),i=ke(u.length,i),c[s]=!t&&(r||n>=120&&u.length>=120)?new Be(s&&u):void 0}u=e[0];var p=-1,d=c[0];e:for(;++p<n&&l.length<i;){var m=u[p],g=r?r(m):m;if(m=t||0!==m?m:0,!(d?he(d,g):a(l,g,t))){for(s=o;--s;){var f=c[s];if(!(f?he(f,g):a(e[s],g,t)))continue e}d&&d.push(g),l.push(m)}}return l}(r):[]}),ze=h(function(e){e.exports=function(){var e=Object.prototype.toString;function r(e,r){return null!=e&&Object.prototype.hasOwnProperty.call(e,r)}function t(e){if(!e)return!0;if(n(e)&&0===e.length)return!0;if("string"!=typeof e){for(var t in e)if(r(e,t))return!1;return!0}return!1}function a(r){return e.call(r)}var n=Array.isArray||function(r){return"[object Array]"===e.call(r)};function o(e){var r=parseInt(e);return r.toString()===e?r:e}function s(e){e=e||{};var s=function(e){return Object.keys(s).reduce(function(r,t){return"create"===t?r:("function"==typeof s[t]&&(r[t]=s[t].bind(s,e)),r)},{})};function c(t,a){return e.includeInheritedProps||"number"==typeof a&&Array.isArray(t)||r(t,a)}function i(e,r){if(c(e,r))return e[r]}function l(e,r,t,a){if("number"==typeof r&&(r=[r]),!r||0===r.length)return e;if("string"==typeof r)return l(e,r.split(".").map(o),t,a);var n=r[0],s=i(e,n);return 1===r.length?(void 0!==s&&a||(e[n]=t),s):(void 0===s&&("number"==typeof r[1]?e[n]=[]:e[n]={}),l(e[n],r.slice(1),t,a))}return s.has=function(t,a){if("number"==typeof a?a=[a]:"string"==typeof a&&(a=a.split(".")),!a||0===a.length)return!!t;for(var s=0;s<a.length;s++){var c=o(a[s]);if(!("number"==typeof c&&n(t)&&c<t.length||(e.includeInheritedProps?c in Object(t):r(t,c))))return!1;t=t[c]}return!0},s.ensureExists=function(e,r,t){return l(e,r,t,!0)},s.set=function(e,r,t,a){return l(e,r,t,a)},s.insert=function(e,r,t,a){var o=s.get(e,r);a=~~a,n(o)||(o=[],s.set(e,r,o)),o.splice(a,0,t)},s.empty=function(e,r){var o,i;if(!t(r)&&null!=e&&(o=s.get(e,r))){if("string"==typeof o)return s.set(e,r,"");if(function(e){return"boolean"==typeof e||"[object Boolean]"===a(e)}(o))return s.set(e,r,!1);if("number"==typeof o)return s.set(e,r,0);if(n(o))o.length=0;else{if(!function(e){return"object"==typeof e&&"[object Object]"===a(e)}(o))return s.set(e,r,null);for(i in o)c(o,i)&&delete o[i]}}},s.push=function(e,r){var t=s.get(e,r);n(t)||(t=[],s.set(e,r,t)),t.push.apply(t,Array.prototype.slice.call(arguments,2))},s.coalesce=function(e,r,t){for(var a,n=0,o=r.length;n<o;n++)if(void 0!==(a=s.get(e,r[n])))return a;return t},s.get=function(e,r,t){if("number"==typeof r&&(r=[r]),!r||0===r.length)return e;if(null==e)return t;if("string"==typeof r)return s.get(e,r.split("."),t);var a=o(r[0]),n=i(e,a);return void 0===n?t:1===r.length?n:s.get(e[a],r.slice(1),t)},s.del=function(e,r){if("number"==typeof r&&(r=[r]),null==e)return e;if(t(r))return e;if("string"==typeof r)return s.del(e,r.split("."));var a=o(r[0]);return c(e,a)?1!==r.length?s.del(e[a],r.slice(1)):(n(e)?e.splice(a,1):delete e[a],e):e},s}var c=s();return c.create=s,c.withInheritedProps=s({includeInheritedProps:!0}),c}()}),Qe=function(e){var r=(e=Math.abs(e))%100;if(r>=10&&r<=20)return"th";var t=e%10;return 1===t?"st":2===t?"nd":3===t?"rd":"th"};function Je(e){if("number"!=typeof e)throw new TypeError("Expected Number, got "+typeof e+" "+e);return Number.isFinite(e)?e+Qe(e):e}Je.indicator=Qe;var Me=Je;const $e=/[|\\{}()[\]^$+*?.-]/g;var We=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace($e,"\\$&")};const Ze=new Map;function Ye(e,r){r={caseSensitive:!1,...r};const t=e+JSON.stringify(r);if(Ze.has(t))return Ze.get(t);const a="!"===e[0];a&&(e=e.slice(1)),e=We(e).replace(/\\\*/g,".*");const n=new RegExp(`^${e}$`,r.caseSensitive?"":"i");return n.negated=a,Ze.set(t,n),n}var Ke=(e,r,t)=>{if(!Array.isArray(e)||!Array.isArray(r))throw new TypeError(`Expected two arrays, got ${typeof e} ${typeof r}`);if(0===r.length)return e;const a="!"===r[0][0];r=r.map(e=>Ye(e,t));const n=[];for(const t of e){let e=a;for(const a of r)a.test(t)&&(e=!a.negated);e&&n.push(t)}return n};function Xe(e,r,t){return function e(r,t,a,n=!0){const o=Object.prototype.hasOwnProperty;function s(e){return null!=e}function c(e){return"Object"===Q(e)}function i(e,r){return r=H(r),Array.from(e).filter(e=>!r.some(r=>Ke.isMatch(e,r,{caseSensitive:!0})))}const l=["any","anything","every","everything","all","whatever","whatevs"],u=Array.isArray;if(!s(r))throw new Error("check-types-mini: [THROW_ID_01] First argument is missing!");const p={ignoreKeys:[],ignorePaths:[],acceptArrays:!1,acceptArraysIgnore:[],enforceStrictKeyset:!0,schema:{},msg:"check-types-mini",optsVarName:"opts"};let d;if(d=s(a)&&c(a)?Object.assign({},p,a):Object.assign({},p),s(d.ignoreKeys)&&d.ignoreKeys?d.ignoreKeys=H(d.ignoreKeys):d.ignoreKeys=[],s(d.ignorePaths)&&d.ignorePaths?d.ignorePaths=H(d.ignorePaths):d.ignorePaths=[],s(d.acceptArraysIgnore)&&d.acceptArraysIgnore?d.acceptArraysIgnore=H(d.acceptArraysIgnore):d.acceptArraysIgnore=[],d.msg="string"==typeof d.msg?d.msg.trim():d.msg,":"===d.msg[d.msg.length-1]&&(d.msg=d.msg.slice(0,d.msg.length-1).trim()),d.schema&&(Object.keys(d.schema).forEach(e=>{if(c(d.schema[e])){const r={};re(d.schema[e],(t,a,n)=>{const o=void 0!==a?a:t;return u(o)||c(o)||(r[`${e}.${n.path}`]=o),o}),delete d.schema[e],d.schema=Object.assign(d.schema,r)}}),Object.keys(d.schema).forEach(e=>{u(d.schema[e])||(d.schema[e]=[d.schema[e]]),d.schema[e]=d.schema[e].map(String).map(e=>e.toLowerCase()).map(e=>e.trim())})),s(t)||(t={}),n&&e(d,p,{enforceStrictKeyset:!1},!1),d.enforceStrictKeyset)if(s(d.schema)&&Object.keys(d.schema).length>0){if(0!==i(Y(Object.keys(r),Object.keys(t).concat(Object.keys(d.schema))),d.ignoreKeys).length){const e=Y(Object.keys(r),Object.keys(t).concat(Object.keys(d.schema)));throw new TypeError(`${d.msg}: ${d.optsVarName}.enforceStrictKeyset is on and the following key${e.length>1?"s":""} ${e.length>1?"are":"is"} not covered by schema and/or reference objects: ${e.join(", ")}`)}}else{if(!(s(t)&&Object.keys(t).length>0))throw new TypeError(`${d.msg}: Both ${d.optsVarName}.schema and reference objects are missing! We don't have anything to match the keys as you requested via opts.enforceStrictKeyset!`);if(0!==i(Y(Object.keys(r),Object.keys(t)),d.ignoreKeys).length){const e=Y(Object.keys(r),Object.keys(t));throw new TypeError(`${d.msg}: The input object has key${e.length>1?"s":""} which ${e.length>1?"are":"is"} not covered by the reference object: ${e.join(", ")}`)}if(0!==i(Y(Object.keys(t),Object.keys(r)),d.ignoreKeys).length){const e=Y(Object.keys(t),Object.keys(r));throw new TypeError(`${d.msg}: The reference object has key${e.length>1?"s":""} which ${e.length>1?"are":"is"} not present in the input object: ${e.join(", ")}`)}}const m=[];re(r,(e,a,n)=>{let s=a,i=e;if("array"===n.parentType&&(i=void 0,s=e),u(m)&&m.length&&m.some(e=>n.path.startsWith(e)))return s;if(i&&d.ignoreKeys.some(e=>Ke.isMatch(i,e)))return s;if(d.ignorePaths.some(e=>Ke.isMatch(n.path,e)))return s;const p=!(!c(s)&&!u(s)&&u(n.parent));let g=!1;c(d.schema)&&o.call(d.schema,ze.get(n.path))&&(g=!0);let f=!1;if(c(t)&&ze.has(t,ze.get(n.path))&&(f=!0),d.enforceStrictKeyset&&p&&!g&&!f)throw new TypeError(`${d.msg}: ${d.optsVarName}.${n.path} is neither covered by reference object (second input argument), nor ${d.optsVarName}.schema! To stop this error, turn off ${d.optsVarName}.enforceStrictKeyset or provide some type reference (2nd argument or ${d.optsVarName}.schema).\n\nDebug info:\n\nobj = ${JSON.stringify(r,null,4)}\n\nref = ${JSON.stringify(t,null,4)}\n\ninnerObj = ${JSON.stringify(n,null,4)}\n\nopts = ${JSON.stringify(d,null,4)}\n\ncurrent = ${JSON.stringify(s,null,4)}\n\n`);if(g){const e=H(d.schema[n.path]).map(String).map(e=>e.toLowerCase());if(ze.set(d.schema,n.path,e),Ge(e,l).length)m.push(n.path);else if(!0!==s&&!1!==s&&!e.includes(Q(s).toLowerCase())||(!0===s||!1===s)&&!e.includes(String(s))&&!e.includes("boolean")){if(!u(s)||!d.acceptArrays)throw new TypeError(`${d.msg}: ${d.optsVarName}.${n.path} was customised to ${"string"!==Q(s)?'"':""}${JSON.stringify(s,null,0)}${"string"!==Q(s)?'"':""} (type: ${Q(s).toLowerCase()}) which is not among the allowed types in schema (which is equal to ${JSON.stringify(e,null,0)})`);for(let r=0,t=s.length;r<t;r++)if(!e.includes(Q(s[r]).toLowerCase()))throw new TypeError(`${d.msg}: ${d.optsVarName}.${n.path}.${r}, the ${Me(r+1)} element (equal to ${JSON.stringify(s[r],null,0)}) is of a type ${Q(s[r]).toLowerCase()}, but only the following are allowed by the ${d.optsVarName}.schema: ${e.join(", ")}`)}}else if(f){const r=ze.get(t,n.path);if(d.acceptArrays&&u(s)&&!d.acceptArraysIgnore.includes(e)){if(!s.every(r=>Q(r).toLowerCase()===Q(t[e]).toLowerCase()))throw new TypeError(`${d.msg}: ${d.optsVarName}.${n.path} was customised to be array, but not all of its elements are ${Q(t[e]).toLowerCase()}-type`)}else if(Q(s)!==Q(r))throw new TypeError(`${d.msg}: ${d.optsVarName}.${n.path} was customised to ${"string"===Q(s).toLowerCase()?"":'"'}${JSON.stringify(s,null,0)}${"string"===Q(s).toLowerCase()?"":'"'} which is not ${Q(r).toLowerCase()} but ${Q(s).toLowerCase()}`)}return s})}(e,r,t)}Ke.isMatch=(e,r,t)=>{const a=Ye(r,t),n=a.test(e);return a.negated?!n:n};const er=Array.isArray;function rr(e,r){if(!er(e))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(0===e.length)return e;const t={strictlyTwoElementsInRangeArrays:!1,progressFn:null},a=Object.assign({},t,r);let n,o;if(Xe(a,t,{msg:"ranges-sort: [THROW_ID_02*]",schema:{progressFn:["function","false","null"]}}),a.strictlyTwoElementsInRangeArrays&&!e.every((e,r)=>2===e.length||(n=r,o=e.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${z(n)} range (${JSON.stringify(e[n],null,4)}) has not two but ${o} elements!`);if(!e.every((e,r)=>!(!G(e[0],{includeZero:!0})||!G(e[1],{includeZero:!0}))||(n=r,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${z(n)} range (${JSON.stringify(e[n],null,4)}) does not consist of only natural numbers!`);const s=e.length*e.length;let c=0;return Array.from(e).sort((e,r)=>(a.progressFn&&(c++,a.progressFn(Math.floor(100*c/s))),e[0]===r[0]?e[1]<r[1]?-1:e[1]>r[1]?1:0:e[0]<r[0]?-1:1))}var tr=h(function(e,r){!function(t){var a=r,n=e&&e.exports==a&&e,o="object"==typeof f&&f;o.global!==o&&o.window!==o||(t=o);var s=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,c=/[\x01-\x7F]/g,i=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,l=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,u={"­":"shy","‌":"zwnj","‍":"zwj","‎":"lrm","⁣":"ic","⁢":"it","⁡":"af","‏":"rlm","​":"ZeroWidthSpace","⁠":"NoBreak","̑":"DownBreve","⃛":"tdot","⃜":"DotDot","\t":"Tab","\n":"NewLine"," ":"puncsp"," ":"MediumSpace"," ":"thinsp"," ":"hairsp"," ":"emsp13"," ":"ensp"," ":"emsp14"," ":"emsp"," ":"numsp"," ":"nbsp","  ":"ThickSpace","‾":"oline",_:"lowbar","‐":"dash","–":"ndash","—":"mdash","―":"horbar",",":"comma",";":"semi","⁏":"bsemi",":":"colon","⩴":"Colone","!":"excl","¡":"iexcl","?":"quest","¿":"iquest",".":"period","‥":"nldr","…":"mldr","·":"middot","'":"apos","‘":"lsquo","’":"rsquo","‚":"sbquo","‹":"lsaquo","›":"rsaquo",'"':"quot","“":"ldquo","”":"rdquo","„":"bdquo","«":"laquo","»":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","⌈":"lceil","⌉":"rceil","⌊":"lfloor","⌋":"rfloor","⦅":"lopar","⦆":"ropar","⦋":"lbrke","⦌":"rbrke","⦍":"lbrkslu","⦎":"rbrksld","⦏":"lbrksld","⦐":"rbrkslu","⦑":"langd","⦒":"rangd","⦓":"lparlt","⦔":"rpargt","⦕":"gtlPar","⦖":"ltrPar","⟦":"lobrk","⟧":"robrk","⟨":"lang","⟩":"rang","⟪":"Lang","⟫":"Rang","⟬":"loang","⟭":"roang","❲":"lbbrk","❳":"rbbrk","‖":"Vert","§":"sect","¶":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","‰":"permil","‱":"pertenk","†":"dagger","‡":"Dagger","•":"bull","⁃":"hybull","′":"prime","″":"Prime","‴":"tprime","⁗":"qprime","‵":"bprime","⁁":"caret","`":"grave","´":"acute","˜":"tilde","^":"Hat","¯":"macr","˘":"breve","˙":"dot","¨":"die","˚":"ring","˝":"dblac","¸":"cedil","˛":"ogon","ˆ":"circ","ˇ":"caron","°":"deg","©":"copy","®":"reg","℗":"copysr","℘":"wp","℞":"rx","℧":"mho","℩":"iiota","←":"larr","↚":"nlarr","→":"rarr","↛":"nrarr","↑":"uarr","↓":"darr","↔":"harr","↮":"nharr","↕":"varr","↖":"nwarr","↗":"nearr","↘":"searr","↙":"swarr","↝":"rarrw","↝̸":"nrarrw","↞":"Larr","↟":"Uarr","↠":"Rarr","↡":"Darr","↢":"larrtl","↣":"rarrtl","↤":"mapstoleft","↥":"mapstoup","↦":"map","↧":"mapstodown","↩":"larrhk","↪":"rarrhk","↫":"larrlp","↬":"rarrlp","↭":"harrw","↰":"lsh","↱":"rsh","↲":"ldsh","↳":"rdsh","↵":"crarr","↶":"cularr","↷":"curarr","↺":"olarr","↻":"orarr","↼":"lharu","↽":"lhard","↾":"uharr","↿":"uharl","⇀":"rharu","⇁":"rhard","⇂":"dharr","⇃":"dharl","⇄":"rlarr","⇅":"udarr","⇆":"lrarr","⇇":"llarr","⇈":"uuarr","⇉":"rrarr","⇊":"ddarr","⇋":"lrhar","⇌":"rlhar","⇐":"lArr","⇍":"nlArr","⇑":"uArr","⇒":"rArr","⇏":"nrArr","⇓":"dArr","⇔":"iff","⇎":"nhArr","⇕":"vArr","⇖":"nwArr","⇗":"neArr","⇘":"seArr","⇙":"swArr","⇚":"lAarr","⇛":"rAarr","⇝":"zigrarr","⇤":"larrb","⇥":"rarrb","⇵":"duarr","⇽":"loarr","⇾":"roarr","⇿":"hoarr","∀":"forall","∁":"comp","∂":"part","∂̸":"npart","∃":"exist","∄":"nexist","∅":"empty","∇":"Del","∈":"in","∉":"notin","∋":"ni","∌":"notni","϶":"bepsi","∏":"prod","∐":"coprod","∑":"sum","+":"plus","±":"pm","÷":"div","×":"times","<":"lt","≮":"nlt","<⃒":"nvlt","=":"equals","≠":"ne","=⃥":"bne","⩵":"Equal",">":"gt","≯":"ngt",">⃒":"nvgt","¬":"not","|":"vert","¦":"brvbar","−":"minus","∓":"mp","∔":"plusdo","⁄":"frasl","∖":"setmn","∗":"lowast","∘":"compfn","√":"Sqrt","∝":"prop","∞":"infin","∟":"angrt","∠":"ang","∠⃒":"nang","∡":"angmsd","∢":"angsph","∣":"mid","∤":"nmid","∥":"par","∦":"npar","∧":"and","∨":"or","∩":"cap","∩︀":"caps","∪":"cup","∪︀":"cups","∫":"int","∬":"Int","∭":"tint","⨌":"qint","∮":"oint","∯":"Conint","∰":"Cconint","∱":"cwint","∲":"cwconint","∳":"awconint","∴":"there4","∵":"becaus","∶":"ratio","∷":"Colon","∸":"minusd","∺":"mDDot","∻":"homtht","∼":"sim","≁":"nsim","∼⃒":"nvsim","∽":"bsim","∽̱":"race","∾":"ac","∾̳":"acE","∿":"acd","≀":"wr","≂":"esim","≂̸":"nesim","≃":"sime","≄":"nsime","≅":"cong","≇":"ncong","≆":"simne","≈":"ap","≉":"nap","≊":"ape","≋":"apid","≋̸":"napid","≌":"bcong","≍":"CupCap","≭":"NotCupCap","≍⃒":"nvap","≎":"bump","≎̸":"nbump","≏":"bumpe","≏̸":"nbumpe","≐":"doteq","≐̸":"nedot","≑":"eDot","≒":"efDot","≓":"erDot","≔":"colone","≕":"ecolon","≖":"ecir","≗":"cire","≙":"wedgeq","≚":"veeeq","≜":"trie","≟":"equest","≡":"equiv","≢":"nequiv","≡⃥":"bnequiv","≤":"le","≰":"nle","≤⃒":"nvle","≥":"ge","≱":"nge","≥⃒":"nvge","≦":"lE","≦̸":"nlE","≧":"gE","≧̸":"ngE","≨︀":"lvnE","≨":"lnE","≩":"gnE","≩︀":"gvnE","≪":"ll","≪̸":"nLtv","≪⃒":"nLt","≫":"gg","≫̸":"nGtv","≫⃒":"nGt","≬":"twixt","≲":"lsim","≴":"nlsim","≳":"gsim","≵":"ngsim","≶":"lg","≸":"ntlg","≷":"gl","≹":"ntgl","≺":"pr","⊀":"npr","≻":"sc","⊁":"nsc","≼":"prcue","⋠":"nprcue","≽":"sccue","⋡":"nsccue","≾":"prsim","≿":"scsim","≿̸":"NotSucceedsTilde","⊂":"sub","⊄":"nsub","⊂⃒":"vnsub","⊃":"sup","⊅":"nsup","⊃⃒":"vnsup","⊆":"sube","⊈":"nsube","⊇":"supe","⊉":"nsupe","⊊︀":"vsubne","⊊":"subne","⊋︀":"vsupne","⊋":"supne","⊍":"cupdot","⊎":"uplus","⊏":"sqsub","⊏̸":"NotSquareSubset","⊐":"sqsup","⊐̸":"NotSquareSuperset","⊑":"sqsube","⋢":"nsqsube","⊒":"sqsupe","⋣":"nsqsupe","⊓":"sqcap","⊓︀":"sqcaps","⊔":"sqcup","⊔︀":"sqcups","⊕":"oplus","⊖":"ominus","⊗":"otimes","⊘":"osol","⊙":"odot","⊚":"ocir","⊛":"oast","⊝":"odash","⊞":"plusb","⊟":"minusb","⊠":"timesb","⊡":"sdotb","⊢":"vdash","⊬":"nvdash","⊣":"dashv","⊤":"top","⊥":"bot","⊧":"models","⊨":"vDash","⊭":"nvDash","⊩":"Vdash","⊮":"nVdash","⊪":"Vvdash","⊫":"VDash","⊯":"nVDash","⊰":"prurel","⊲":"vltri","⋪":"nltri","⊳":"vrtri","⋫":"nrtri","⊴":"ltrie","⋬":"nltrie","⊴⃒":"nvltrie","⊵":"rtrie","⋭":"nrtrie","⊵⃒":"nvrtrie","⊶":"origof","⊷":"imof","⊸":"mumap","⊹":"hercon","⊺":"intcal","⊻":"veebar","⊽":"barvee","⊾":"angrtvb","⊿":"lrtri","⋀":"Wedge","⋁":"Vee","⋂":"xcap","⋃":"xcup","⋄":"diam","⋅":"sdot","⋆":"Star","⋇":"divonx","⋈":"bowtie","⋉":"ltimes","⋊":"rtimes","⋋":"lthree","⋌":"rthree","⋍":"bsime","⋎":"cuvee","⋏":"cuwed","⋐":"Sub","⋑":"Sup","⋒":"Cap","⋓":"Cup","⋔":"fork","⋕":"epar","⋖":"ltdot","⋗":"gtdot","⋘":"Ll","⋘̸":"nLl","⋙":"Gg","⋙̸":"nGg","⋚︀":"lesg","⋚":"leg","⋛":"gel","⋛︀":"gesl","⋞":"cuepr","⋟":"cuesc","⋦":"lnsim","⋧":"gnsim","⋨":"prnsim","⋩":"scnsim","⋮":"vellip","⋯":"ctdot","⋰":"utdot","⋱":"dtdot","⋲":"disin","⋳":"isinsv","⋴":"isins","⋵":"isindot","⋵̸":"notindot","⋶":"notinvc","⋷":"notinvb","⋹":"isinE","⋹̸":"notinE","⋺":"nisd","⋻":"xnis","⋼":"nis","⋽":"notnivc","⋾":"notnivb","⌅":"barwed","⌆":"Barwed","⌌":"drcrop","⌍":"dlcrop","⌎":"urcrop","⌏":"ulcrop","⌐":"bnot","⌒":"profline","⌓":"profsurf","⌕":"telrec","⌖":"target","⌜":"ulcorn","⌝":"urcorn","⌞":"dlcorn","⌟":"drcorn","⌢":"frown","⌣":"smile","⌭":"cylcty","⌮":"profalar","⌶":"topbot","⌽":"ovbar","⌿":"solbar","⍼":"angzarr","⎰":"lmoust","⎱":"rmoust","⎴":"tbrk","⎵":"bbrk","⎶":"bbrktbrk","⏜":"OverParenthesis","⏝":"UnderParenthesis","⏞":"OverBrace","⏟":"UnderBrace","⏢":"trpezium","⏧":"elinters","␣":"blank","─":"boxh","│":"boxv","┌":"boxdr","┐":"boxdl","└":"boxur","┘":"boxul","├":"boxvr","┤":"boxvl","┬":"boxhd","┴":"boxhu","┼":"boxvh","═":"boxH","║":"boxV","╒":"boxdR","╓":"boxDr","╔":"boxDR","╕":"boxdL","╖":"boxDl","╗":"boxDL","╘":"boxuR","╙":"boxUr","╚":"boxUR","╛":"boxuL","╜":"boxUl","╝":"boxUL","╞":"boxvR","╟":"boxVr","╠":"boxVR","╡":"boxvL","╢":"boxVl","╣":"boxVL","╤":"boxHd","╥":"boxhD","╦":"boxHD","╧":"boxHu","╨":"boxhU","╩":"boxHU","╪":"boxvH","╫":"boxVh","╬":"boxVH","▀":"uhblk","▄":"lhblk","█":"block","░":"blk14","▒":"blk12","▓":"blk34","□":"squ","▪":"squf","▫":"EmptyVerySmallSquare","▭":"rect","▮":"marker","▱":"fltns","△":"xutri","▴":"utrif","▵":"utri","▸":"rtrif","▹":"rtri","▽":"xdtri","▾":"dtrif","▿":"dtri","◂":"ltrif","◃":"ltri","◊":"loz","○":"cir","◬":"tridot","◯":"xcirc","◸":"ultri","◹":"urtri","◺":"lltri","◻":"EmptySmallSquare","◼":"FilledSmallSquare","★":"starf","☆":"star","☎":"phone","♀":"female","♂":"male","♠":"spades","♣":"clubs","♥":"hearts","♦":"diams","♪":"sung","✓":"check","✗":"cross","✠":"malt","✶":"sext","❘":"VerticalSeparator","⟈":"bsolhsub","⟉":"suphsol","⟵":"xlarr","⟶":"xrarr","⟷":"xharr","⟸":"xlArr","⟹":"xrArr","⟺":"xhArr","⟼":"xmap","⟿":"dzigrarr","⤂":"nvlArr","⤃":"nvrArr","⤄":"nvHarr","⤅":"Map","⤌":"lbarr","⤍":"rbarr","⤎":"lBarr","⤏":"rBarr","⤐":"RBarr","⤑":"DDotrahd","⤒":"UpArrowBar","⤓":"DownArrowBar","⤖":"Rarrtl","⤙":"latail","⤚":"ratail","⤛":"lAtail","⤜":"rAtail","⤝":"larrfs","⤞":"rarrfs","⤟":"larrbfs","⤠":"rarrbfs","⤣":"nwarhk","⤤":"nearhk","⤥":"searhk","⤦":"swarhk","⤧":"nwnear","⤨":"toea","⤩":"tosa","⤪":"swnwar","⤳":"rarrc","⤳̸":"nrarrc","⤵":"cudarrr","⤶":"ldca","⤷":"rdca","⤸":"cudarrl","⤹":"larrpl","⤼":"curarrm","⤽":"cularrp","⥅":"rarrpl","⥈":"harrcir","⥉":"Uarrocir","⥊":"lurdshar","⥋":"ldrushar","⥎":"LeftRightVector","⥏":"RightUpDownVector","⥐":"DownLeftRightVector","⥑":"LeftUpDownVector","⥒":"LeftVectorBar","⥓":"RightVectorBar","⥔":"RightUpVectorBar","⥕":"RightDownVectorBar","⥖":"DownLeftVectorBar","⥗":"DownRightVectorBar","⥘":"LeftUpVectorBar","⥙":"LeftDownVectorBar","⥚":"LeftTeeVector","⥛":"RightTeeVector","⥜":"RightUpTeeVector","⥝":"RightDownTeeVector","⥞":"DownLeftTeeVector","⥟":"DownRightTeeVector","⥠":"LeftUpTeeVector","⥡":"LeftDownTeeVector","⥢":"lHar","⥣":"uHar","⥤":"rHar","⥥":"dHar","⥦":"luruhar","⥧":"ldrdhar","⥨":"ruluhar","⥩":"rdldhar","⥪":"lharul","⥫":"llhard","⥬":"rharul","⥭":"lrhard","⥮":"udhar","⥯":"duhar","⥰":"RoundImplies","⥱":"erarr","⥲":"simrarr","⥳":"larrsim","⥴":"rarrsim","⥵":"rarrap","⥶":"ltlarr","⥸":"gtrarr","⥹":"subrarr","⥻":"suplarr","⥼":"lfisht","⥽":"rfisht","⥾":"ufisht","⥿":"dfisht","⦚":"vzigzag","⦜":"vangrt","⦝":"angrtvbd","⦤":"ange","⦥":"range","⦦":"dwangle","⦧":"uwangle","⦨":"angmsdaa","⦩":"angmsdab","⦪":"angmsdac","⦫":"angmsdad","⦬":"angmsdae","⦭":"angmsdaf","⦮":"angmsdag","⦯":"angmsdah","⦰":"bemptyv","⦱":"demptyv","⦲":"cemptyv","⦳":"raemptyv","⦴":"laemptyv","⦵":"ohbar","⦶":"omid","⦷":"opar","⦹":"operp","⦻":"olcross","⦼":"odsold","⦾":"olcir","⦿":"ofcir","⧀":"olt","⧁":"ogt","⧂":"cirscir","⧃":"cirE","⧄":"solb","⧅":"bsolb","⧉":"boxbox","⧍":"trisb","⧎":"rtriltri","⧏":"LeftTriangleBar","⧏̸":"NotLeftTriangleBar","⧐":"RightTriangleBar","⧐̸":"NotRightTriangleBar","⧜":"iinfin","⧝":"infintie","⧞":"nvinfin","⧣":"eparsl","⧤":"smeparsl","⧥":"eqvparsl","⧫":"lozf","⧴":"RuleDelayed","⧶":"dsol","⨀":"xodot","⨁":"xoplus","⨂":"xotime","⨄":"xuplus","⨆":"xsqcup","⨍":"fpartint","⨐":"cirfnint","⨑":"awint","⨒":"rppolint","⨓":"scpolint","⨔":"npolint","⨕":"pointint","⨖":"quatint","⨗":"intlarhk","⨢":"pluscir","⨣":"plusacir","⨤":"simplus","⨥":"plusdu","⨦":"plussim","⨧":"plustwo","⨩":"mcomma","⨪":"minusdu","⨭":"loplus","⨮":"roplus","⨯":"Cross","⨰":"timesd","⨱":"timesbar","⨳":"smashp","⨴":"lotimes","⨵":"rotimes","⨶":"otimesas","⨷":"Otimes","⨸":"odiv","⨹":"triplus","⨺":"triminus","⨻":"tritime","⨼":"iprod","⨿":"amalg","⩀":"capdot","⩂":"ncup","⩃":"ncap","⩄":"capand","⩅":"cupor","⩆":"cupcap","⩇":"capcup","⩈":"cupbrcap","⩉":"capbrcup","⩊":"cupcup","⩋":"capcap","⩌":"ccups","⩍":"ccaps","⩐":"ccupssm","⩓":"And","⩔":"Or","⩕":"andand","⩖":"oror","⩗":"orslope","⩘":"andslope","⩚":"andv","⩛":"orv","⩜":"andd","⩝":"ord","⩟":"wedbar","⩦":"sdote","⩪":"simdot","⩭":"congdot","⩭̸":"ncongdot","⩮":"easter","⩯":"apacir","⩰":"apE","⩰̸":"napE","⩱":"eplus","⩲":"pluse","⩳":"Esim","⩷":"eDDot","⩸":"equivDD","⩹":"ltcir","⩺":"gtcir","⩻":"ltquest","⩼":"gtquest","⩽":"les","⩽̸":"nles","⩾":"ges","⩾̸":"nges","⩿":"lesdot","⪀":"gesdot","⪁":"lesdoto","⪂":"gesdoto","⪃":"lesdotor","⪄":"gesdotol","⪅":"lap","⪆":"gap","⪇":"lne","⪈":"gne","⪉":"lnap","⪊":"gnap","⪋":"lEg","⪌":"gEl","⪍":"lsime","⪎":"gsime","⪏":"lsimg","⪐":"gsiml","⪑":"lgE","⪒":"glE","⪓":"lesges","⪔":"gesles","⪕":"els","⪖":"egs","⪗":"elsdot","⪘":"egsdot","⪙":"el","⪚":"eg","⪝":"siml","⪞":"simg","⪟":"simlE","⪠":"simgE","⪡":"LessLess","⪡̸":"NotNestedLessLess","⪢":"GreaterGreater","⪢̸":"NotNestedGreaterGreater","⪤":"glj","⪥":"gla","⪦":"ltcc","⪧":"gtcc","⪨":"lescc","⪩":"gescc","⪪":"smt","⪫":"lat","⪬":"smte","⪬︀":"smtes","⪭":"late","⪭︀":"lates","⪮":"bumpE","⪯":"pre","⪯̸":"npre","⪰":"sce","⪰̸":"nsce","⪳":"prE","⪴":"scE","⪵":"prnE","⪶":"scnE","⪷":"prap","⪸":"scap","⪹":"prnap","⪺":"scnap","⪻":"Pr","⪼":"Sc","⪽":"subdot","⪾":"supdot","⪿":"subplus","⫀":"supplus","⫁":"submult","⫂":"supmult","⫃":"subedot","⫄":"supedot","⫅":"subE","⫅̸":"nsubE","⫆":"supE","⫆̸":"nsupE","⫇":"subsim","⫈":"supsim","⫋︀":"vsubnE","⫋":"subnE","⫌︀":"vsupnE","⫌":"supnE","⫏":"csub","⫐":"csup","⫑":"csube","⫒":"csupe","⫓":"subsup","⫔":"supsub","⫕":"subsub","⫖":"supsup","⫗":"suphsub","⫘":"supdsub","⫙":"forkv","⫚":"topfork","⫛":"mlcp","⫤":"Dashv","⫦":"Vdashl","⫧":"Barv","⫨":"vBar","⫩":"vBarv","⫫":"Vbar","⫬":"Not","⫭":"bNot","⫮":"rnmid","⫯":"cirmid","⫰":"midcir","⫱":"topcir","⫲":"nhpar","⫳":"parsim","⫽":"parsl","⫽⃥":"nparsl","♭":"flat","♮":"natur","♯":"sharp","¤":"curren","¢":"cent",$:"dollar","£":"pound","¥":"yen","€":"euro","¹":"sup1","½":"half","⅓":"frac13","¼":"frac14","⅕":"frac15","⅙":"frac16","⅛":"frac18","²":"sup2","⅔":"frac23","⅖":"frac25","³":"sup3","¾":"frac34","⅗":"frac35","⅜":"frac38","⅘":"frac45","⅚":"frac56","⅝":"frac58","⅞":"frac78","𝒶":"ascr","𝕒":"aopf","𝔞":"afr","𝔸":"Aopf","𝔄":"Afr","𝒜":"Ascr","ª":"ordf","á":"aacute","Á":"Aacute","à":"agrave","À":"Agrave","ă":"abreve","Ă":"Abreve","â":"acirc","Â":"Acirc","å":"aring","Å":"angst","ä":"auml","Ä":"Auml","ã":"atilde","Ã":"Atilde","ą":"aogon","Ą":"Aogon","ā":"amacr","Ā":"Amacr","æ":"aelig","Æ":"AElig","𝒷":"bscr","𝕓":"bopf","𝔟":"bfr","𝔹":"Bopf","ℬ":"Bscr","𝔅":"Bfr","𝔠":"cfr","𝒸":"cscr","𝕔":"copf","ℭ":"Cfr","𝒞":"Cscr","ℂ":"Copf","ć":"cacute","Ć":"Cacute","ĉ":"ccirc","Ĉ":"Ccirc","č":"ccaron","Č":"Ccaron","ċ":"cdot","Ċ":"Cdot","ç":"ccedil","Ç":"Ccedil","℅":"incare","𝔡":"dfr","ⅆ":"dd","𝕕":"dopf","𝒹":"dscr","𝒟":"Dscr","𝔇":"Dfr","ⅅ":"DD","𝔻":"Dopf","ď":"dcaron","Ď":"Dcaron","đ":"dstrok","Đ":"Dstrok","ð":"eth","Ð":"ETH","ⅇ":"ee","ℯ":"escr","𝔢":"efr","𝕖":"eopf","ℰ":"Escr","𝔈":"Efr","𝔼":"Eopf","é":"eacute","É":"Eacute","è":"egrave","È":"Egrave","ê":"ecirc","Ê":"Ecirc","ě":"ecaron","Ě":"Ecaron","ë":"euml","Ë":"Euml","ė":"edot","Ė":"Edot","ę":"eogon","Ę":"Eogon","ē":"emacr","Ē":"Emacr","𝔣":"ffr","𝕗":"fopf","𝒻":"fscr","𝔉":"Ffr","𝔽":"Fopf","ℱ":"Fscr","ﬀ":"fflig","ﬃ":"ffilig","ﬄ":"ffllig","ﬁ":"filig",fj:"fjlig","ﬂ":"fllig","ƒ":"fnof","ℊ":"gscr","𝕘":"gopf","𝔤":"gfr","𝒢":"Gscr","𝔾":"Gopf","𝔊":"Gfr","ǵ":"gacute","ğ":"gbreve","Ğ":"Gbreve","ĝ":"gcirc","Ĝ":"Gcirc","ġ":"gdot","Ġ":"Gdot","Ģ":"Gcedil","𝔥":"hfr","ℎ":"planckh","𝒽":"hscr","𝕙":"hopf","ℋ":"Hscr","ℌ":"Hfr","ℍ":"Hopf","ĥ":"hcirc","Ĥ":"Hcirc","ℏ":"hbar","ħ":"hstrok","Ħ":"Hstrok","𝕚":"iopf","𝔦":"ifr","𝒾":"iscr","ⅈ":"ii","𝕀":"Iopf","ℐ":"Iscr","ℑ":"Im","í":"iacute","Í":"Iacute","ì":"igrave","Ì":"Igrave","î":"icirc","Î":"Icirc","ï":"iuml","Ï":"Iuml","ĩ":"itilde","Ĩ":"Itilde","İ":"Idot","į":"iogon","Į":"Iogon","ī":"imacr","Ī":"Imacr","ĳ":"ijlig","Ĳ":"IJlig","ı":"imath","𝒿":"jscr","𝕛":"jopf","𝔧":"jfr","𝒥":"Jscr","𝔍":"Jfr","𝕁":"Jopf","ĵ":"jcirc","Ĵ":"Jcirc","ȷ":"jmath","𝕜":"kopf","𝓀":"kscr","𝔨":"kfr","𝒦":"Kscr","𝕂":"Kopf","𝔎":"Kfr","ķ":"kcedil","Ķ":"Kcedil","𝔩":"lfr","𝓁":"lscr","ℓ":"ell","𝕝":"lopf","ℒ":"Lscr","𝔏":"Lfr","𝕃":"Lopf","ĺ":"lacute","Ĺ":"Lacute","ľ":"lcaron","Ľ":"Lcaron","ļ":"lcedil","Ļ":"Lcedil","ł":"lstrok","Ł":"Lstrok","ŀ":"lmidot","Ŀ":"Lmidot","𝔪":"mfr","𝕞":"mopf","𝓂":"mscr","𝔐":"Mfr","𝕄":"Mopf","ℳ":"Mscr","𝔫":"nfr","𝕟":"nopf","𝓃":"nscr","ℕ":"Nopf","𝒩":"Nscr","𝔑":"Nfr","ń":"nacute","Ń":"Nacute","ň":"ncaron","Ň":"Ncaron","ñ":"ntilde","Ñ":"Ntilde","ņ":"ncedil","Ņ":"Ncedil","№":"numero","ŋ":"eng","Ŋ":"ENG","𝕠":"oopf","𝔬":"ofr","ℴ":"oscr","𝒪":"Oscr","𝔒":"Ofr","𝕆":"Oopf","º":"ordm","ó":"oacute","Ó":"Oacute","ò":"ograve","Ò":"Ograve","ô":"ocirc","Ô":"Ocirc","ö":"ouml","Ö":"Ouml","ő":"odblac","Ő":"Odblac","õ":"otilde","Õ":"Otilde","ø":"oslash","Ø":"Oslash","ō":"omacr","Ō":"Omacr","œ":"oelig","Œ":"OElig","𝔭":"pfr","𝓅":"pscr","𝕡":"popf","ℙ":"Popf","𝔓":"Pfr","𝒫":"Pscr","𝕢":"qopf","𝔮":"qfr","𝓆":"qscr","𝒬":"Qscr","𝔔":"Qfr","ℚ":"Qopf","ĸ":"kgreen","𝔯":"rfr","𝕣":"ropf","𝓇":"rscr","ℛ":"Rscr","ℜ":"Re","ℝ":"Ropf","ŕ":"racute","Ŕ":"Racute","ř":"rcaron","Ř":"Rcaron","ŗ":"rcedil","Ŗ":"Rcedil","𝕤":"sopf","𝓈":"sscr","𝔰":"sfr","𝕊":"Sopf","𝔖":"Sfr","𝒮":"Sscr","Ⓢ":"oS","ś":"sacute","Ś":"Sacute","ŝ":"scirc","Ŝ":"Scirc","š":"scaron","Š":"Scaron","ş":"scedil","Ş":"Scedil","ß":"szlig","𝔱":"tfr","𝓉":"tscr","𝕥":"topf","𝒯":"Tscr","𝔗":"Tfr","𝕋":"Topf","ť":"tcaron","Ť":"Tcaron","ţ":"tcedil","Ţ":"Tcedil","™":"trade","ŧ":"tstrok","Ŧ":"Tstrok","𝓊":"uscr","𝕦":"uopf","𝔲":"ufr","𝕌":"Uopf","𝔘":"Ufr","𝒰":"Uscr","ú":"uacute","Ú":"Uacute","ù":"ugrave","Ù":"Ugrave","ŭ":"ubreve","Ŭ":"Ubreve","û":"ucirc","Û":"Ucirc","ů":"uring","Ů":"Uring","ü":"uuml","Ü":"Uuml","ű":"udblac","Ű":"Udblac","ũ":"utilde","Ũ":"Utilde","ų":"uogon","Ų":"Uogon","ū":"umacr","Ū":"Umacr","𝔳":"vfr","𝕧":"vopf","𝓋":"vscr","𝔙":"Vfr","𝕍":"Vopf","𝒱":"Vscr","𝕨":"wopf","𝓌":"wscr","𝔴":"wfr","𝒲":"Wscr","𝕎":"Wopf","𝔚":"Wfr","ŵ":"wcirc","Ŵ":"Wcirc","𝔵":"xfr","𝓍":"xscr","𝕩":"xopf","𝕏":"Xopf","𝔛":"Xfr","𝒳":"Xscr","𝔶":"yfr","𝓎":"yscr","𝕪":"yopf","𝒴":"Yscr","𝔜":"Yfr","𝕐":"Yopf","ý":"yacute","Ý":"Yacute","ŷ":"ycirc","Ŷ":"Ycirc","ÿ":"yuml","Ÿ":"Yuml","𝓏":"zscr","𝔷":"zfr","𝕫":"zopf","ℨ":"Zfr","ℤ":"Zopf","𝒵":"Zscr","ź":"zacute","Ź":"Zacute","ž":"zcaron","Ž":"Zcaron","ż":"zdot","Ż":"Zdot","Ƶ":"imped","þ":"thorn","Þ":"THORN","ŉ":"napos","α":"alpha","Α":"Alpha","β":"beta","Β":"Beta","γ":"gamma","Γ":"Gamma","δ":"delta","Δ":"Delta","ε":"epsi","ϵ":"epsiv","Ε":"Epsilon","ϝ":"gammad","Ϝ":"Gammad","ζ":"zeta","Ζ":"Zeta","η":"eta","Η":"Eta","θ":"theta","ϑ":"thetav","Θ":"Theta","ι":"iota","Ι":"Iota","κ":"kappa","ϰ":"kappav","Κ":"Kappa","λ":"lambda","Λ":"Lambda","μ":"mu","µ":"micro","Μ":"Mu","ν":"nu","Ν":"Nu","ξ":"xi","Ξ":"Xi","ο":"omicron","Ο":"Omicron","π":"pi","ϖ":"piv","Π":"Pi","ρ":"rho","ϱ":"rhov","Ρ":"Rho","σ":"sigma","Σ":"Sigma","ς":"sigmaf","τ":"tau","Τ":"Tau","υ":"upsi","Υ":"Upsilon","ϒ":"Upsi","φ":"phi","ϕ":"phiv","Φ":"Phi","χ":"chi","Χ":"Chi","ψ":"psi","Ψ":"Psi","ω":"omega","Ω":"ohm","а":"acy","А":"Acy","б":"bcy","Б":"Bcy","в":"vcy","В":"Vcy","г":"gcy","Г":"Gcy","ѓ":"gjcy","Ѓ":"GJcy","д":"dcy","Д":"Dcy","ђ":"djcy","Ђ":"DJcy","е":"iecy","Е":"IEcy","ё":"iocy","Ё":"IOcy","є":"jukcy","Є":"Jukcy","ж":"zhcy","Ж":"ZHcy","з":"zcy","З":"Zcy","ѕ":"dscy","Ѕ":"DScy","и":"icy","И":"Icy","і":"iukcy","І":"Iukcy","ї":"yicy","Ї":"YIcy","й":"jcy","Й":"Jcy","ј":"jsercy","Ј":"Jsercy","к":"kcy","К":"Kcy","ќ":"kjcy","Ќ":"KJcy","л":"lcy","Л":"Lcy","љ":"ljcy","Љ":"LJcy","м":"mcy","М":"Mcy","н":"ncy","Н":"Ncy","њ":"njcy","Њ":"NJcy","о":"ocy","О":"Ocy","п":"pcy","П":"Pcy","р":"rcy","Р":"Rcy","с":"scy","С":"Scy","т":"tcy","Т":"Tcy","ћ":"tshcy","Ћ":"TSHcy","у":"ucy","У":"Ucy","ў":"ubrcy","Ў":"Ubrcy","ф":"fcy","Ф":"Fcy","х":"khcy","Х":"KHcy","ц":"tscy","Ц":"TScy","ч":"chcy","Ч":"CHcy","џ":"dzcy","Џ":"DZcy","ш":"shcy","Ш":"SHcy","щ":"shchcy","Щ":"SHCHcy","ъ":"hardcy","Ъ":"HARDcy","ы":"ycy","Ы":"Ycy","ь":"softcy","Ь":"SOFTcy","э":"ecy","Э":"Ecy","ю":"yucy","Ю":"YUcy","я":"yacy","Я":"YAcy","ℵ":"aleph","ℶ":"beth","ℷ":"gimel","ℸ":"daleth"},p=/["&'<>`]/g,d={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"},m=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,g=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,h=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,b={aacute:"á",Aacute:"Á",abreve:"ă",Abreve:"Ă",ac:"∾",acd:"∿",acE:"∾̳",acirc:"â",Acirc:"Â",acute:"´",acy:"а",Acy:"А",aelig:"æ",AElig:"Æ",af:"⁡",afr:"𝔞",Afr:"𝔄",agrave:"à",Agrave:"À",alefsym:"ℵ",aleph:"ℵ",alpha:"α",Alpha:"Α",amacr:"ā",Amacr:"Ā",amalg:"⨿",amp:"&",AMP:"&",and:"∧",And:"⩓",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",aogon:"ą",Aogon:"Ą",aopf:"𝕒",Aopf:"𝔸",ap:"≈",apacir:"⩯",ape:"≊",apE:"⩰",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",aring:"å",Aring:"Å",ascr:"𝒶",Ascr:"𝒜",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",bcy:"б",Bcy:"Б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",beta:"β",Beta:"Β",beth:"ℶ",between:"≬",bfr:"𝔟",Bfr:"𝔅",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bnot:"⌐",bNot:"⫭",bopf:"𝕓",Bopf:"𝔹",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxhD:"╥",boxHd:"╤",boxHD:"╦",boxhu:"┴",boxhU:"╨",boxHu:"╧",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpe:"≏",bumpE:"⪮",bumpeq:"≏",Bumpeq:"≎",cacute:"ć",Cacute:"Ć",cap:"∩",Cap:"⋒",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",ccaron:"č",Ccaron:"Č",ccedil:"ç",Ccedil:"Ç",ccirc:"ĉ",Ccirc:"Ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",cdot:"ċ",Cdot:"Ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",chcy:"ч",CHcy:"Ч",check:"✓",checkmark:"✓",chi:"χ",Chi:"Χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cire:"≗",cirE:"⧃",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",colone:"≔",Colone:"⩴",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",cscr:"𝒸",Cscr:"𝒞",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cup:"∪",Cup:"⋓",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",dArr:"⇓",Darr:"↡",dash:"‐",dashv:"⊣",Dashv:"⫤",dbkarow:"⤏",dblac:"˝",dcaron:"ď",Dcaron:"Ď",dcy:"д",Dcy:"Д",dd:"ⅆ",DD:"ⅅ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",delta:"δ",Delta:"Δ",demptyv:"⦱",dfisht:"⥿",dfr:"𝔡",Dfr:"𝔇",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",djcy:"ђ",DJcy:"Ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",dopf:"𝕕",Dopf:"𝔻",dot:"˙",Dot:"¨",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",downarrow:"↓",Downarrow:"⇓",DownArrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",dscr:"𝒹",Dscr:"𝒟",dscy:"ѕ",DScy:"Ѕ",dsol:"⧶",dstrok:"đ",Dstrok:"Đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",dzcy:"џ",DZcy:"Џ",dzigrarr:"⟿",eacute:"é",Eacute:"É",easter:"⩮",ecaron:"ě",Ecaron:"Ě",ecir:"≖",ecirc:"ê",Ecirc:"Ê",ecolon:"≕",ecy:"э",Ecy:"Э",eDDot:"⩷",edot:"ė",eDot:"≑",Edot:"Ė",ee:"ⅇ",efDot:"≒",efr:"𝔢",Efr:"𝔈",eg:"⪚",egrave:"è",Egrave:"È",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",emacr:"ē",Emacr:"Ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",eng:"ŋ",ENG:"Ŋ",ensp:" ",eogon:"ę",Eogon:"Ę",eopf:"𝕖",Eopf:"𝔼",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",epsilon:"ε",Epsilon:"Ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",esim:"≂",Esim:"⩳",eta:"η",Eta:"Η",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",fcy:"ф",Fcy:"Ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",ffr:"𝔣",Ffr:"𝔉",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",fopf:"𝕗",Fopf:"𝔽",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",gamma:"γ",Gamma:"Γ",gammad:"ϝ",Gammad:"Ϝ",gap:"⪆",gbreve:"ğ",Gbreve:"Ğ",Gcedil:"Ģ",gcirc:"ĝ",Gcirc:"Ĝ",gcy:"г",Gcy:"Г",gdot:"ġ",Gdot:"Ġ",ge:"≥",gE:"≧",gel:"⋛",gEl:"⪌",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",gfr:"𝔤",Gfr:"𝔊",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",gjcy:"ѓ",GJcy:"Ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",gopf:"𝕘",Gopf:"𝔾",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",gscr:"ℊ",Gscr:"𝒢",gsim:"≳",gsime:"⪎",gsiml:"⪐",gt:">",Gt:"≫",GT:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",hardcy:"ъ",HARDcy:"Ъ",harr:"↔",hArr:"⇔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",hcirc:"ĥ",Hcirc:"Ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",hstrok:"ħ",Hstrok:"Ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",iacute:"í",Iacute:"Í",ic:"⁣",icirc:"î",Icirc:"Î",icy:"и",Icy:"И",Idot:"İ",iecy:"е",IEcy:"Е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",igrave:"ì",Igrave:"Ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",ijlig:"ĳ",IJlig:"Ĳ",Im:"ℑ",imacr:"ī",Imacr:"Ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",int:"∫",Int:"∬",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",iocy:"ё",IOcy:"Ё",iogon:"į",Iogon:"Į",iopf:"𝕚",Iopf:"𝕀",iota:"ι",Iota:"Ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",itilde:"ĩ",Itilde:"Ĩ",iukcy:"і",Iukcy:"І",iuml:"ï",Iuml:"Ï",jcirc:"ĵ",Jcirc:"Ĵ",jcy:"й",Jcy:"Й",jfr:"𝔧",Jfr:"𝔍",jmath:"ȷ",jopf:"𝕛",Jopf:"𝕁",jscr:"𝒿",Jscr:"𝒥",jsercy:"ј",Jsercy:"Ј",jukcy:"є",Jukcy:"Є",kappa:"κ",Kappa:"Κ",kappav:"ϰ",kcedil:"ķ",Kcedil:"Ķ",kcy:"к",Kcy:"К",kfr:"𝔨",Kfr:"𝔎",kgreen:"ĸ",khcy:"х",KHcy:"Х",kjcy:"ќ",KJcy:"Ќ",kopf:"𝕜",Kopf:"𝕂",kscr:"𝓀",Kscr:"𝒦",lAarr:"⇚",lacute:"ĺ",Lacute:"Ĺ",laemptyv:"⦴",lagran:"ℒ",lambda:"λ",Lambda:"Λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larr:"←",lArr:"⇐",Larr:"↞",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",latail:"⤙",lAtail:"⤛",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",lcaron:"ľ",Lcaron:"Ľ",lcedil:"ļ",Lcedil:"Ļ",lceil:"⌈",lcub:"{",lcy:"л",Lcy:"Л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",leftarrow:"←",Leftarrow:"⇐",LeftArrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",Leftrightarrow:"⇔",LeftRightArrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",leg:"⋚",lEg:"⪋",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",lfr:"𝔩",Lfr:"𝔏",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",ljcy:"љ",LJcy:"Љ",ll:"≪",Ll:"⋘",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",lmidot:"ŀ",Lmidot:"Ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",Longleftarrow:"⟸",LongLeftArrow:"⟵",longleftrightarrow:"⟷",Longleftrightarrow:"⟺",LongLeftRightArrow:"⟷",longmapsto:"⟼",longrightarrow:"⟶",Longrightarrow:"⟹",LongRightArrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",lopf:"𝕝",Lopf:"𝕃",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",lstrok:"ł",Lstrok:"Ł",lt:"<",Lt:"≪",LT:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",map:"↦",Map:"⤅",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",mcy:"м",Mcy:"М",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",mfr:"𝔪",Mfr:"𝔐",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",mopf:"𝕞",Mopf:"𝕄",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",mu:"μ",Mu:"Μ",multimap:"⊸",mumap:"⊸",nabla:"∇",nacute:"ń",Nacute:"Ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",ncaron:"ň",Ncaron:"Ň",ncedil:"ņ",Ncedil:"Ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",ncy:"н",Ncy:"Н",ndash:"–",ne:"≠",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",nfr:"𝔫",Nfr:"𝔑",nge:"≱",ngE:"≧̸",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",ngt:"≯",nGt:"≫⃒",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",njcy:"њ",NJcy:"Њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nle:"≰",nlE:"≦̸",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nlt:"≮",nLt:"≪⃒",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",not:"¬",Not:"⫬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrarr:"↛",nrArr:"⇏",nrarrc:"⤳̸",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",nscr:"𝓃",Nscr:"𝒩",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsube:"⊈",nsubE:"⫅̸",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupe:"⊉",nsupE:"⫆̸",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",ntilde:"ñ",Ntilde:"Ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",nu:"ν",Nu:"Ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",oacute:"ó",Oacute:"Ó",oast:"⊛",ocir:"⊚",ocirc:"ô",Ocirc:"Ô",ocy:"о",Ocy:"О",odash:"⊝",odblac:"ő",Odblac:"Ő",odiv:"⨸",odot:"⊙",odsold:"⦼",oelig:"œ",OElig:"Œ",ofcir:"⦿",ofr:"𝔬",Ofr:"𝔒",ogon:"˛",ograve:"ò",Ograve:"Ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",omacr:"ō",Omacr:"Ō",omega:"ω",Omega:"Ω",omicron:"ο",Omicron:"Ο",omid:"⦶",ominus:"⊖",oopf:"𝕠",Oopf:"𝕆",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",or:"∨",Or:"⩔",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",oscr:"ℴ",Oscr:"𝒪",oslash:"ø",Oslash:"Ø",osol:"⊘",otilde:"õ",Otilde:"Õ",otimes:"⊗",Otimes:"⨷",otimesas:"⨶",ouml:"ö",Ouml:"Ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",pcy:"п",Pcy:"П",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",pfr:"𝔭",Pfr:"𝔓",phi:"φ",Phi:"Φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",pi:"π",Pi:"Π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",pr:"≺",Pr:"⪻",prap:"⪷",prcue:"≼",pre:"⪯",prE:"⪳",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",pscr:"𝓅",Pscr:"𝒫",psi:"ψ",Psi:"Ψ",puncsp:" ",qfr:"𝔮",Qfr:"𝔔",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",qscr:"𝓆",Qscr:"𝒬",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',QUOT:'"',rAarr:"⇛",race:"∽̱",racute:"ŕ",Racute:"Ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarr:"→",rArr:"⇒",Rarr:"↠",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",rarrtl:"↣",Rarrtl:"⤖",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",rcaron:"ř",Rcaron:"Ř",rcedil:"ŗ",Rcedil:"Ŗ",rceil:"⌉",rcub:"}",rcy:"р",Rcy:"Р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",rho:"ρ",Rho:"Ρ",rhov:"ϱ",RightAngleBracket:"⟩",rightarrow:"→",Rightarrow:"⇒",RightArrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",sacute:"ś",Sacute:"Ś",sbquo:"‚",sc:"≻",Sc:"⪼",scap:"⪸",scaron:"š",Scaron:"Š",sccue:"≽",sce:"⪰",scE:"⪴",scedil:"ş",Scedil:"Ş",scirc:"ŝ",Scirc:"Ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",scy:"с",Scy:"С",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",sfr:"𝔰",Sfr:"𝔖",sfrown:"⌢",sharp:"♯",shchcy:"щ",SHCHcy:"Щ",shcy:"ш",SHcy:"Ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",sigma:"σ",Sigma:"Σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",softcy:"ь",SOFTcy:"Ь",sol:"/",solb:"⧄",solbar:"⌿",sopf:"𝕤",Sopf:"𝕊",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",sscr:"𝓈",Sscr:"𝒮",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",star:"☆",Star:"⋆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",sube:"⊆",subE:"⫅",subedot:"⫃",submult:"⫁",subne:"⊊",subnE:"⫋",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup:"⊃",Sup:"⋑",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supe:"⊇",supE:"⫆",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supne:"⊋",supnE:"⫌",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",tau:"τ",Tau:"Τ",tbrk:"⎴",tcaron:"ť",Tcaron:"Ť",tcedil:"ţ",Tcedil:"Ţ",tcy:"т",Tcy:"Т",tdot:"⃛",telrec:"⌕",tfr:"𝔱",Tfr:"𝔗",there4:"∴",therefore:"∴",Therefore:"∴",theta:"θ",Theta:"Θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",thorn:"þ",THORN:"Þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",topf:"𝕥",Topf:"𝕋",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",tscr:"𝓉",Tscr:"𝒯",tscy:"ц",TScy:"Ц",tshcy:"ћ",TSHcy:"Ћ",tstrok:"ŧ",Tstrok:"Ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",uacute:"ú",Uacute:"Ú",uarr:"↑",uArr:"⇑",Uarr:"↟",Uarrocir:"⥉",ubrcy:"ў",Ubrcy:"Ў",ubreve:"ŭ",Ubreve:"Ŭ",ucirc:"û",Ucirc:"Û",ucy:"у",Ucy:"У",udarr:"⇅",udblac:"ű",Udblac:"Ű",udhar:"⥮",ufisht:"⥾",ufr:"𝔲",Ufr:"𝔘",ugrave:"ù",Ugrave:"Ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",umacr:"ū",Umacr:"Ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",uogon:"ų",Uogon:"Ų",uopf:"𝕦",Uopf:"𝕌",uparrow:"↑",Uparrow:"⇑",UpArrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",updownarrow:"↕",Updownarrow:"⇕",UpDownArrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",upsilon:"υ",Upsilon:"Υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",uring:"ů",Uring:"Ů",urtri:"◹",uscr:"𝓊",Uscr:"𝒰",utdot:"⋰",utilde:"ũ",Utilde:"Ũ",utri:"▵",utrif:"▴",uuarr:"⇈",uuml:"ü",Uuml:"Ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",vcy:"в",Vcy:"В",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",vee:"∨",Vee:"⋁",veebar:"⊻",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",vfr:"𝔳",Vfr:"𝔙",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",vopf:"𝕧",Vopf:"𝕍",vprop:"∝",vrtri:"⊳",vscr:"𝓋",Vscr:"𝒱",vsubne:"⊊︀",vsubnE:"⫋︀",vsupne:"⊋︀",vsupnE:"⫌︀",Vvdash:"⊪",vzigzag:"⦚",wcirc:"ŵ",Wcirc:"Ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",wfr:"𝔴",Wfr:"𝔚",wopf:"𝕨",Wopf:"𝕎",wp:"℘",wr:"≀",wreath:"≀",wscr:"𝓌",Wscr:"𝒲",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",xfr:"𝔵",Xfr:"𝔛",xharr:"⟷",xhArr:"⟺",xi:"ξ",Xi:"Ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",xopf:"𝕩",Xopf:"𝕏",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",xscr:"𝓍",Xscr:"𝒳",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",yacute:"ý",Yacute:"Ý",yacy:"я",YAcy:"Я",ycirc:"ŷ",Ycirc:"Ŷ",ycy:"ы",Ycy:"Ы",yen:"¥",yfr:"𝔶",Yfr:"𝔜",yicy:"ї",YIcy:"Ї",yopf:"𝕪",Yopf:"𝕐",yscr:"𝓎",Yscr:"𝒴",yucy:"ю",YUcy:"Ю",yuml:"ÿ",Yuml:"Ÿ",zacute:"ź",Zacute:"Ź",zcaron:"ž",Zcaron:"Ž",zcy:"з",Zcy:"З",zdot:"ż",Zdot:"Ż",zeetrf:"ℨ",ZeroWidthSpace:"​",zeta:"ζ",Zeta:"Ζ",zfr:"𝔷",Zfr:"ℨ",zhcy:"ж",ZHcy:"Ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",zscr:"𝓏",Zscr:"𝒵",zwj:"‍",zwnj:"‌"},x={aacute:"á",Aacute:"Á",acirc:"â",Acirc:"Â",acute:"´",aelig:"æ",AElig:"Æ",agrave:"à",Agrave:"À",amp:"&",AMP:"&",aring:"å",Aring:"Å",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",brvbar:"¦",ccedil:"ç",Ccedil:"Ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",eacute:"é",Eacute:"É",ecirc:"ê",Ecirc:"Ê",egrave:"è",Egrave:"È",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",iacute:"í",Iacute:"Í",icirc:"î",Icirc:"Î",iexcl:"¡",igrave:"ì",Igrave:"Ì",iquest:"¿",iuml:"ï",Iuml:"Ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",ntilde:"ñ",Ntilde:"Ñ",oacute:"ó",Oacute:"Ó",ocirc:"ô",Ocirc:"Ô",ograve:"ò",Ograve:"Ò",ordf:"ª",ordm:"º",oslash:"ø",Oslash:"Ø",otilde:"õ",Otilde:"Õ",ouml:"ö",Ouml:"Ö",para:"¶",plusmn:"±",pound:"£",quot:'"',QUOT:'"',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",thorn:"þ",THORN:"Þ",times:"×",uacute:"ú",Uacute:"Ú",ucirc:"û",Ucirc:"Û",ugrave:"ù",Ugrave:"Ù",uml:"¨",uuml:"ü",Uuml:"Ü",yacute:"ý",Yacute:"Ý",yen:"¥",yuml:"ÿ"},A={0:"�",128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"},w=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],y=String.fromCharCode,v={}.hasOwnProperty,q=function(e,r){return v.call(e,r)},S=function(e,r){if(!e)return r;var t,a={};for(t in r)a[t]=q(e,t)?e[t]:r[t];return a},E=function(e,r){var t="";return e>=55296&&e<=57343||e>1114111?(r&&C("character reference outside the permissible Unicode range"),"�"):q(A,e)?(r&&C("disallowed character reference"),A[e]):(r&&function(e,r){for(var t=-1,a=e.length;++t<a;)if(e[t]==r)return!0;return!1}(w,e)&&C("disallowed character reference"),e>65535&&(t+=y((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=y(e))},D=function(e){return"&#x"+e.toString(16).toUpperCase()+";"},I=function(e){return"&#"+e+";"},C=function(e){throw Error("Parse error: "+e)},k=function(e,r){(r=S(r,k.options)).strict&&g.test(e)&&C("forbidden code point");var t=r.encodeEverything,a=r.useNamedReferences,n=r.allowUnsafeSymbols,o=r.decimal?I:D,d=function(e){return o(e.charCodeAt(0))};return t?(e=e.replace(c,function(e){return a&&q(u,e)?"&"+u[e]+";":d(e)}),a&&(e=e.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),a&&(e=e.replace(l,function(e){return"&"+u[e]+";"}))):a?(n||(e=e.replace(p,function(e){return"&"+u[e]+";"})),e=(e=e.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;")).replace(l,function(e){return"&"+u[e]+";"})):n||(e=e.replace(p,d)),e.replace(s,function(e){var r=e.charCodeAt(0),t=e.charCodeAt(1);return o(1024*(r-55296)+t-56320+65536)}).replace(i,d)};k.options={allowUnsafeSymbols:!1,encodeEverything:!1,strict:!1,useNamedReferences:!1,decimal:!1};var P=function(e,r){var t=(r=S(r,P.options)).strict;return t&&m.test(e)&&C("malformed character reference"),e.replace(h,function(e,a,n,o,s,c,i,l,u){var p,d,m,g,f,h;return a?b[f=a]:n?(f=n,(h=o)&&r.isAttributeValue?(t&&"="==h&&C("`&` did not start a character reference"),e):(t&&C("named character reference was not terminated by a semicolon"),x[f]+(h||""))):s?(m=s,d=c,t&&!d&&C("character reference was not terminated by a semicolon"),p=parseInt(m,10),E(p,t)):i?(g=i,d=l,t&&!d&&C("character reference was not terminated by a semicolon"),p=parseInt(g,16),E(p,t)):(t&&C("named character reference was not terminated by a semicolon"),e)})};P.options={isAttributeValue:!1,strict:!1};var T={version:"1.2.0",encode:k,decode:P,escape:function(e){return e.replace(p,function(e){return d[e]})},unescape:P};if(a&&!a.nodeType)if(n)n.exports=T;else for(var L in T)q(T,L)&&(a[L]=T[L]);else t.he=T}(f)}),ar={AMP:"#x26",Abreve:"#x102",Acy:"#x410",Afr:"#x1D504",Amacr:"#x100",And:"#x2A53",Aogon:"#x104",Aopf:"#x1D538",ApplyFunction:"#x2061",Ascr:"#x1D49C",Assign:"#x2254",Backslash:"#x2216",Barv:"#x2AE7",Barwed:"#x2306",Bcy:"#x411",Because:"#x2235",Bernoullis:"#x212C",Bfr:"#x1D505",Bopf:"#x1D539",Breve:"#x2D8",Bscr:"#x212C",Bumpeq:"#x224E",CHcy:"#x427",COPY:"#xA9",Cacute:"#x106",Cap:"#x22D2",CapitalDifferentialD:"#x2145",Cayleys:"#x212D",Ccaron:"#x10C",Ccirc:"#x108",Cconint:"#x2230",Cdot:"#x10A",Cedilla:"#xB8",CenterDot:"#xB7",Cfr:"#x212D",CircleDot:"#x2299",CircleMinus:"#x2296",CirclePlus:"#x2295",CircleTimes:"#x2297",ClockwiseContourIntegral:"#x2232",CloseCurlyDoubleQuote:"#x201D",CloseCurlyQuote:"#x2019",Colon:"#x2237",Colone:"#x2A74",Congruent:"#x2261",Conint:"#x222F",ContourIntegral:"#x222E",Copf:"#x2102",Coproduct:"#x2210",CounterClockwiseContourIntegral:"#x2233",Cross:"#x2A2F",Cscr:"#x1D49E",Cup:"#x22D3",CupCap:"#x224D",DD:"#x2145",DDotrahd:"#x2911",DJcy:"#x402",DScy:"#x405",DZcy:"#x40F",Darr:"#x21A1",Dashv:"#x2AE4",Dcaron:"#x10E",Dcy:"#x414",Del:"#x2207",Dfr:"#x1D507",DiacriticalAcute:"#xB4",DiacriticalDot:"#x2D9",DiacriticalDoubleAcute:"#x2DD",DiacriticalGrave:"#x60",DiacriticalTilde:"#x2DC",Diamond:"#x22C4",DifferentialD:"#x2146",Dopf:"#x1D53B",Dot:"#xA8",DotDot:"#x20DC",DotEqual:"#x2250",DoubleContourIntegral:"#x222F",DoubleDot:"#xA8",DoubleDownArrow:"#x21D3",DoubleLeftArrow:"#x21D0",DoubleLeftRightArrow:"#x21D4",DoubleLeftTee:"#x2AE4",DoubleLongLeftArrow:"#x27F8",DoubleLongLeftRightArrow:"#x27FA",DoubleLongRightArrow:"#x27F9",DoubleRightArrow:"#x21D2",DoubleRightTee:"#x22A8",DoubleUpArrow:"#x21D1",DoubleUpDownArrow:"#x21D5",DoubleVerticalBar:"#x2225",DownArrow:"#x2193",DownArrowBar:"#x2913",DownArrowUpArrow:"#x21F5",DownBreve:"#x311",DownLeftRightVector:"#x2950",DownLeftTeeVector:"#x295E",DownLeftVector:"#x21BD",DownLeftVectorBar:"#x2956",DownRightTeeVector:"#x295F",DownRightVector:"#x21C1",DownRightVectorBar:"#x2957",DownTee:"#x22A4",DownTeeArrow:"#x21A7",Downarrow:"#x21D3",Dscr:"#x1D49F",Dstrok:"#x110",ENG:"#x14A",Ecaron:"#x11A",Ecy:"#x42D",Edot:"#x116",Efr:"#x1D508",Element:"#x2208",Emacr:"#x112",EmptySmallSquare:"#x25FB",EmptyVerySmallSquare:"#x25AB",Eogon:"#x118",Eopf:"#x1D53C",Equal:"#x2A75",EqualTilde:"#x2242",Equilibrium:"#x21CC",Escr:"#x2130",Esim:"#x2A73",Exists:"#x2203",ExponentialE:"#x2147",Fcy:"#x424",Ffr:"#x1D509",FilledSmallSquare:"#x25FC",FilledVerySmallSquare:"#x25AA",Fopf:"#x1D53D",ForAll:"#x2200",Fouriertrf:"#x2131",Fscr:"#x2131",GJcy:"#x403",GT:"#x3E",Gammad:"#x3DC",Gbreve:"#x11E",Gcedil:"#x122",Gcirc:"#x11C",Gcy:"#x413",Gdot:"#x120",Gfr:"#x1D50A",Gg:"#x22D9",Gopf:"#x1D53E",GreaterEqual:"#x2265",GreaterEqualLess:"#x22DB",GreaterFullEqual:"#x2267",GreaterGreater:"#x2AA2",GreaterLess:"#x2277",GreaterSlantEqual:"#x2A7E",GreaterTilde:"#x2273",Gscr:"#x1D4A2",Gt:"#x226B",HARDcy:"#x42A",Hacek:"#x2C7",Hcirc:"#x124",Hfr:"#x210C",HilbertSpace:"#x210B",Hopf:"#x210D",HorizontalLine:"#x2500",Hscr:"#x210B",Hstrok:"#x126",HumpDownHump:"#x224E",HumpEqual:"#x224F",IEcy:"#x415",IJlig:"#x132",IOcy:"#x401",Icy:"#x418",Idot:"#x130",Ifr:"#x2111",Im:"#x2111",Imacr:"#x12A",ImaginaryI:"#x2148",Implies:"#x21D2",Int:"#x222C",Integral:"#x222B",Intersection:"#x22C2",InvisibleComma:"#x2063",InvisibleTimes:"#x2062",Iogon:"#x12E",Iopf:"#x1D540",Iscr:"#x2110",Itilde:"#x128",Iukcy:"#x406",Jcirc:"#x134",Jcy:"#x419",Jfr:"#x1D50D",Jopf:"#x1D541",Jscr:"#x1D4A5",Jsercy:"#x408",Jukcy:"#x404",KHcy:"#x425",KJcy:"#x40C",Kcedil:"#x136",Kcy:"#x41A",Kfr:"#x1D50E",Kopf:"#x1D542",Kscr:"#x1D4A6",LJcy:"#x409",LT:"#x3C",Lacute:"#x139",Lang:"#x27EA",Laplacetrf:"#x2112",Larr:"#x219E",Lcaron:"#x13D",Lcedil:"#x13B",Lcy:"#x41B",LeftAngleBracket:"#x27E8",LeftArrow:"#x2190",LeftArrowBar:"#x21E4",LeftArrowRightArrow:"#x21C6",LeftCeiling:"#x2308",LeftDoubleBracket:"#x27E6",LeftDownTeeVector:"#x2961",LeftDownVector:"#x21C3",LeftDownVectorBar:"#x2959",LeftFloor:"#x230A",LeftRightArrow:"#x2194",LeftRightVector:"#x294E",LeftTee:"#x22A3",LeftTeeArrow:"#x21A4",LeftTeeVector:"#x295A",LeftTriangle:"#x22B2",LeftTriangleBar:"#x29CF",LeftTriangleEqual:"#x22B4",LeftUpDownVector:"#x2951",LeftUpTeeVector:"#x2960",LeftUpVector:"#x21BF",LeftUpVectorBar:"#x2958",LeftVector:"#x21BC",LeftVectorBar:"#x2952",Leftarrow:"#x21D0",Leftrightarrow:"#x21D4",LessEqualGreater:"#x22DA",LessFullEqual:"#x2266",LessGreater:"#x2276",LessLess:"#x2AA1",LessSlantEqual:"#x2A7D",LessTilde:"#x2272",Lfr:"#x1D50F",Ll:"#x22D8",Lleftarrow:"#x21DA",Lmidot:"#x13F",LongLeftArrow:"#x27F5",LongLeftRightArrow:"#x27F7",LongRightArrow:"#x27F6",Longleftarrow:"#x27F8",Longleftrightarrow:"#x27FA",Longrightarrow:"#x27F9",Lopf:"#x1D543",LowerLeftArrow:"#x2199",LowerRightArrow:"#x2198",Lscr:"#x2112",Lsh:"#x21B0",Lstrok:"#x141",Lt:"#x226A",Map:"#x2905",Mcy:"#x41C",MediumSpace:"#x205F",Mellintrf:"#x2133",Mfr:"#x1D510",MinusPlus:"#x2213",Mopf:"#x1D544",Mscr:"#x2133",NJcy:"#x40A",Nacute:"#x143",Ncaron:"#x147",Ncedil:"#x145",Ncy:"#x41D",NegativeMediumSpace:"#x200B",NegativeThickSpace:"#x200B",NegativeThinSpace:"#x200B",NegativeVeryThinSpace:"#x200B",NestedGreaterGreater:"#x226B",NestedLessLess:"#x226A",Nfr:"#x1D511",NoBreak:"#x2060",NonBreakingSpace:"#xA0",Nopf:"#x2115",Not:"#x2AEC",NotCongruent:"#x2262",NotCupCap:"#x226D",NotDoubleVerticalBar:"#x2226",NotElement:"#x2209",NotEqual:"#x2260",NotEqualTilde:"#x2242;&#x338",NotExists:"#x2204",NotGreater:"#x226F",NotGreaterEqual:"#x2271",NotGreaterFullEqual:"#x2267;&#x338",NotGreaterGreater:"#x226B;&#x338",NotGreaterLess:"#x2279",NotGreaterSlantEqual:"#x2A7E;&#x338",NotGreaterTilde:"#x2275",NotHumpDownHump:"#x224E;&#x338",NotHumpEqual:"#x224F;&#x338",NotLeftTriangle:"#x22EA",NotLeftTriangleBar:"#x29CF;&#x338",NotLeftTriangleEqual:"#x22EC",NotLess:"#x226E",NotLessEqual:"#x2270",NotLessGreater:"#x2278",NotLessLess:"#x226A;&#x338",NotLessSlantEqual:"#x2A7D;&#x338",NotLessTilde:"#x2274",NotNestedGreaterGreater:"#x2AA2;&#x338",NotNestedLessLess:"#x2AA1;&#x338",NotPrecedes:"#x2280",NotPrecedesEqual:"#x2AAF;&#x338",NotPrecedesSlantEqual:"#x22E0",NotReverseElement:"#x220C",NotRightTriangle:"#x22EB",NotRightTriangleBar:"#x29D0;&#x338",NotRightTriangleEqual:"#x22ED",NotSquareSubset:"#x228F;&#x338",NotSquareSubsetEqual:"#x22E2",NotSquareSuperset:"#x2290;&#x338",NotSquareSupersetEqual:"#x22E3",NotSubset:"#x2282;&#x20D2",NotSubsetEqual:"#x2288",NotSucceeds:"#x2281",NotSucceedsEqual:"#x2AB0;&#x338",NotSucceedsSlantEqual:"#x22E1",NotSucceedsTilde:"#x227F;&#x338",NotSuperset:"#x2283;&#x20D2",NotSupersetEqual:"#x2289",NotTilde:"#x2241",NotTildeEqual:"#x2244",NotTildeFullEqual:"#x2247",NotTildeTilde:"#x2249",NotVerticalBar:"#x2224",Nscr:"#x1D4A9",Ocy:"#x41E",Odblac:"#x150",Ofr:"#x1D512",Omacr:"#x14C",Oopf:"#x1D546",OpenCurlyDoubleQuote:"#x201C",OpenCurlyQuote:"#x2018",Or:"#x2A54",Oscr:"#x1D4AA",Otimes:"#x2A37",OverBar:"#x203E",OverBrace:"#x23DE",OverBracket:"#x23B4",OverParenthesis:"#x23DC",PartialD:"#x2202",Pcy:"#x41F",Pfr:"#x1D513",PlusMinus:"#xB1",Poincareplane:"#x210C",Popf:"#x2119",Pr:"#x2ABB",Precedes:"#x227A",PrecedesEqual:"#x2AAF",PrecedesSlantEqual:"#x227C",PrecedesTilde:"#x227E",Product:"#x220F",Proportion:"#x2237",Proportional:"#x221D",Pscr:"#x1D4AB",QUOT:"#x22",Qfr:"#x1D514",Qopf:"#x211A",Qscr:"#x1D4AC",RBarr:"#x2910",REG:"#xAE",Racute:"#x154",Rang:"#x27EB",Rarr:"#x21A0",Rarrtl:"#x2916",Rcaron:"#x158",Rcedil:"#x156",Rcy:"#x420",Re:"#x211C",ReverseElement:"#x220B",ReverseEquilibrium:"#x21CB",ReverseUpEquilibrium:"#x296F",Rfr:"#x211C",RightAngleBracket:"#x27E9",RightArrow:"#x2192",RightArrowBar:"#x21E5",RightArrowLeftArrow:"#x21C4",RightCeiling:"#x2309",RightDoubleBracket:"#x27E7",RightDownTeeVector:"#x295D",RightDownVector:"#x21C2",RightDownVectorBar:"#x2955",RightFloor:"#x230B",RightTee:"#x22A2",RightTeeArrow:"#x21A6",RightTeeVector:"#x295B",RightTriangle:"#x22B3",RightTriangleBar:"#x29D0",RightTriangleEqual:"#x22B5",RightUpDownVector:"#x294F",RightUpTeeVector:"#x295C",RightUpVector:"#x21BE",RightUpVectorBar:"#x2954",RightVector:"#x21C0",RightVectorBar:"#x2953",Rightarrow:"#x21D2",Ropf:"#x211D",RoundImplies:"#x2970",Rrightarrow:"#x21DB",Rscr:"#x211B",Rsh:"#x21B1",RuleDelayed:"#x29F4",SHCHcy:"#x429",SHcy:"#x428",SOFTcy:"#x42C",Sacute:"#x15A",Sc:"#x2ABC",Scedil:"#x15E",Scirc:"#x15C",Scy:"#x421",Sfr:"#x1D516",ShortDownArrow:"#x2193",ShortLeftArrow:"#x2190",ShortRightArrow:"#x2192",ShortUpArrow:"#x2191",SmallCircle:"#x2218",Sopf:"#x1D54A",Sqrt:"#x221A",Square:"#x25A1",SquareIntersection:"#x2293",SquareSubset:"#x228F",SquareSubsetEqual:"#x2291",SquareSuperset:"#x2290",SquareSupersetEqual:"#x2292",SquareUnion:"#x2294",Sscr:"#x1D4AE",Star:"#x22C6",Sub:"#x22D0",Subset:"#x22D0",SubsetEqual:"#x2286",Succeeds:"#x227B",SucceedsEqual:"#x2AB0",SucceedsSlantEqual:"#x227D",SucceedsTilde:"#x227F",SuchThat:"#x220B",Sum:"#x2211",Sup:"#x22D1",Superset:"#x2283",SupersetEqual:"#x2287",Supset:"#x22D1",TRADE:"#x2122",TSHcy:"#x40B",TScy:"#x426",Tab:"#x9",Tcaron:"#x164",Tcedil:"#x162",Tcy:"#x422",Tfr:"#x1D517",Therefore:"#x2234",ThickSpace:"#x205F;&#x200A",ThinSpace:"#x2009",Tilde:"#x223C",TildeEqual:"#x2243",TildeFullEqual:"#x2245",TildeTilde:"#x2248",Topf:"#x1D54B",TripleDot:"#x20DB",Tscr:"#x1D4AF",Tstrok:"#x166",Uarr:"#x219F",Uarrocir:"#x2949",Ubrcy:"#x40E",Ubreve:"#x16C",Ucy:"#x423",Udblac:"#x170",Ufr:"#x1D518",Umacr:"#x16A",UnderBrace:"#x23DF",UnderBracket:"#x23B5",UnderParenthesis:"#x23DD",Union:"#x22C3",UnionPlus:"#x228E",Uogon:"#x172",Uopf:"#x1D54C",UpArrow:"#x2191",UpArrowBar:"#x2912",UpArrowDownArrow:"#x21C5",UpDownArrow:"#x2195",UpEquilibrium:"#x296E",UpTee:"#x22A5",UpTeeArrow:"#x21A5",Uparrow:"#x21D1",Updownarrow:"#x21D5",UpperLeftArrow:"#x2196",UpperRightArrow:"#x2197",Upsi:"#x3D2",Uring:"#x16E",Uscr:"#x1D4B0",Utilde:"#x168",VDash:"#x22AB",Vbar:"#x2AEB",Vcy:"#x412",Vdash:"#x22A9",Vdashl:"#x2AE6",Vee:"#x22C1",Verbar:"#x2016",Vert:"#x2016",VerticalBar:"#x2223",VerticalSeparator:"#x2758",VerticalTilde:"#x2240",VeryThinSpace:"#x200A",Vfr:"#x1D519",Vopf:"#x1D54D",Vscr:"#x1D4B1",Vvdash:"#x22AA",Wcirc:"#x174",Wedge:"#x22C0",Wfr:"#x1D51A",Wopf:"#x1D54E",Wscr:"#x1D4B2",Xfr:"#x1D51B",Xopf:"#x1D54F",Xscr:"#x1D4B3",YAcy:"#x42F",YIcy:"#x407",YUcy:"#x42E",Ycirc:"#x176",Ycy:"#x42B",Yfr:"#x1D51C",Yopf:"#x1D550",Yscr:"#x1D4B4",ZHcy:"#x416",Zacute:"#x179",Zcaron:"#x17D",Zcy:"#x417",Zdot:"#x17B",ZeroWidthSpace:"#x200B",Zfr:"#x2128",Zopf:"#x2124",Zscr:"#x1D4B5",abreve:"#x103",ac:"#x223E",acE:"#x223E;&#x333",acd:"#x223F",acy:"#x430",af:"#x2061",afr:"#x1D51E",aleph:"#x2135",amacr:"#x101",amalg:"#x2A3F",andand:"#x2A55",andd:"#x2A5C",andslope:"#x2A58",andv:"#x2A5A",ange:"#x29A4",angle:"#x2220",angmsd:"#x2221",angmsdaa:"#x29A8",angmsdab:"#x29A9",angmsdac:"#x29AA",angmsdad:"#x29AB",angmsdae:"#x29AC",angmsdaf:"#x29AD",angmsdag:"#x29AE",angmsdah:"#x29AF",angrt:"#x221F",angrtvb:"#x22BE",angrtvbd:"#x299D",angsph:"#x2222",angst:"#xC5",angzarr:"#x237C",aogon:"#x105",aopf:"#x1D552",ap:"#x2248",apE:"#x2A70",apacir:"#x2A6F",ape:"#x224A",apid:"#x224B",approx:"#x2248",approxeq:"#x224A",ascr:"#x1D4B6",asympeq:"#x224D",awconint:"#x2233",awint:"#x2A11",bNot:"#x2AED",backcong:"#x224C",backepsilon:"#x3F6",backprime:"#x2035",backsim:"#x223D",backsimeq:"#x22CD",barvee:"#x22BD",barwed:"#x2305",barwedge:"#x2305",bbrk:"#x23B5",bbrktbrk:"#x23B6",bcong:"#x224C",bcy:"#x431",becaus:"#x2235",because:"#x2235",bemptyv:"#x29B0",bepsi:"#x3F6",bernou:"#x212C",beth:"#x2136",between:"#x226C",bfr:"#x1D51F",bigcap:"#x22C2",bigcirc:"#x25EF",bigcup:"#x22C3",bigodot:"#x2A00",bigoplus:"#x2A01",bigotimes:"#x2A02",bigsqcup:"#x2A06",bigstar:"#x2605",bigtriangledown:"#x25BD",bigtriangleup:"#x25B3",biguplus:"#x2A04",bigvee:"#x22C1",bigwedge:"#x22C0",bkarow:"#x290D",blacklozenge:"#x29EB",blacksquare:"#x25AA",blacktriangle:"#x25B4",blacktriangledown:"#x25BE",blacktriangleleft:"#x25C2",blacktriangleright:"#x25B8",blank:"#x2423",blk12:"#x2592",blk14:"#x2591",blk34:"#x2593",block:"#x2588",bne:"=&#x20E5",bnequiv:"#x2261;&#x20E5",bnot:"#x2310",bopf:"#x1D553",bot:"#x22A5",bottom:"#x22A5",bowtie:"#x22C8",boxDL:"#x2557",boxDR:"#x2554",boxDl:"#x2556",boxDr:"#x2553",boxH:"#x2550",boxHD:"#x2566",boxHU:"#x2569",boxHd:"#x2564",boxHu:"#x2567",boxUL:"#x255D",boxUR:"#x255A",boxUl:"#x255C",boxUr:"#x2559",boxV:"#x2551",boxVH:"#x256C",boxVL:"#x2563",boxVR:"#x2560",boxVh:"#x256B",boxVl:"#x2562",boxVr:"#x255F",boxbox:"#x29C9",boxdL:"#x2555",boxdR:"#x2552",boxdl:"#x2510",boxdr:"#x250C",boxh:"#x2500",boxhD:"#x2565",boxhU:"#x2568",boxhd:"#x252C",boxhu:"#x2534",boxminus:"#x229F",boxplus:"#x229E",boxtimes:"#x22A0",boxuL:"#x255B",boxuR:"#x2558",boxul:"#x2518",boxur:"#x2514",boxv:"#x2502",boxvH:"#x256A",boxvL:"#x2561",boxvR:"#x255E",boxvh:"#x253C",boxvl:"#x2524",boxvr:"#x251C",bprime:"#x2035",breve:"#x2D8",bscr:"#x1D4B7",bsemi:"#x204F",bsim:"#x223D",bsime:"#x22CD",bsolb:"#x29C5",bsolhsub:"#x27C8",bullet:"#x2022",bump:"#x224E",bumpE:"#x2AAE",bumpe:"#x224F",bumpeq:"#x224F",cacute:"#x107",capand:"#x2A44",capbrcup:"#x2A49",capcap:"#x2A4B",capcup:"#x2A47",capdot:"#x2A40",caps:"#x2229;&#xFE00",caret:"#x2041",caron:"#x2C7",ccaps:"#x2A4D",ccaron:"#x10D",ccirc:"#x109",ccups:"#x2A4C",ccupssm:"#x2A50",cdot:"#x10B",cemptyv:"#x29B2",centerdot:"#xB7",cfr:"#x1D520",chcy:"#x447",check:"#x2713",checkmark:"#x2713",cir:"#x25CB",cirE:"#x29C3",circeq:"#x2257",circlearrowleft:"#x21BA",circlearrowright:"#x21BB",circledR:"#xAE",circledS:"#x24C8",circledast:"#x229B",circledcirc:"#x229A",circleddash:"#x229D",cire:"#x2257",cirfnint:"#x2A10",cirmid:"#x2AEF",cirscir:"#x29C2",clubsuit:"#x2663",colone:"#x2254",coloneq:"#x2254",comp:"#x2201",compfn:"#x2218",complement:"#x2201",complexes:"#x2102",congdot:"#x2A6D",conint:"#x222E",copf:"#x1D554",coprod:"#x2210",copysr:"#x2117",cross:"#x2717",cscr:"#x1D4B8",csub:"#x2ACF",csube:"#x2AD1",csup:"#x2AD0",csupe:"#x2AD2",ctdot:"#x22EF",cudarrl:"#x2938",cudarrr:"#x2935",cuepr:"#x22DE",cuesc:"#x22DF",cularr:"#x21B6",cularrp:"#x293D",cupbrcap:"#x2A48",cupcap:"#x2A46",cupcup:"#x2A4A",cupdot:"#x228D",cupor:"#x2A45",cups:"#x222A;&#xFE00",curarr:"#x21B7",curarrm:"#x293C",curlyeqprec:"#x22DE",curlyeqsucc:"#x22DF",curlyvee:"#x22CE",curlywedge:"#x22CF",curvearrowleft:"#x21B6",curvearrowright:"#x21B7",cuvee:"#x22CE",cuwed:"#x22CF",cwconint:"#x2232",cwint:"#x2231",cylcty:"#x232D",dHar:"#x2965",daleth:"#x2138",dash:"#x2010",dashv:"#x22A3",dbkarow:"#x290F",dblac:"#x2DD",dcaron:"#x10F",dcy:"#x434",dd:"#x2146",ddagger:"#x2021",ddarr:"#x21CA",ddotseq:"#x2A77",demptyv:"#x29B1",dfisht:"#x297F",dfr:"#x1D521",dharl:"#x21C3",dharr:"#x21C2",diam:"#x22C4",diamond:"#x22C4",diamondsuit:"#x2666",die:"#xA8",digamma:"#x3DD",disin:"#x22F2",div:"#xF7",divideontimes:"#x22C7",divonx:"#x22C7",djcy:"#x452",dlcorn:"#x231E",dlcrop:"#x230D",dopf:"#x1D555",dot:"#x2D9",doteq:"#x2250",doteqdot:"#x2251",dotminus:"#x2238",dotplus:"#x2214",dotsquare:"#x22A1",doublebarwedge:"#x2306",downarrow:"#x2193",downdownarrows:"#x21CA",downharpoonleft:"#x21C3",downharpoonright:"#x21C2",drbkarow:"#x2910",drcorn:"#x231F",drcrop:"#x230C",dscr:"#x1D4B9",dscy:"#x455",dsol:"#x29F6",dstrok:"#x111",dtdot:"#x22F1",dtri:"#x25BF",dtrif:"#x25BE",duarr:"#x21F5",duhar:"#x296F",dwangle:"#x29A6",dzcy:"#x45F",dzigrarr:"#x27FF",eDDot:"#x2A77",eDot:"#x2251",easter:"#x2A6E",ecaron:"#x11B",ecir:"#x2256",ecolon:"#x2255",ecy:"#x44D",edot:"#x117",ee:"#x2147",efDot:"#x2252",efr:"#x1D522",eg:"#x2A9A",egs:"#x2A96",egsdot:"#x2A98",el:"#x2A99",elinters:"#x23E7",ell:"#x2113",els:"#x2A95",elsdot:"#x2A97",emacr:"#x113",emptyset:"#x2205",emptyv:"#x2205",emsp13:"#x2004",emsp14:"#x2005",eng:"#x14B",eogon:"#x119",eopf:"#x1D556",epar:"#x22D5",eparsl:"#x29E3",eplus:"#x2A71",epsi:"#x3B5",epsiv:"#x3F5",eqcirc:"#x2256",eqcolon:"#x2255",eqsim:"#x2242",eqslantgtr:"#x2A96",eqslantless:"#x2A95",equest:"#x225F",equivDD:"#x2A78",eqvparsl:"#x29E5",erDot:"#x2253",erarr:"#x2971",escr:"#x212F",esdot:"#x2250",esim:"#x2242",expectation:"#x2130",exponentiale:"#x2147",fallingdotseq:"#x2252",fcy:"#x444",female:"#x2640",ffilig:"#xFB03",fflig:"#xFB00",ffllig:"#xFB04",ffr:"#x1D523",filig:"#xFB01",flat:"#x266D",fllig:"#xFB02",fltns:"#x25B1",fopf:"#x1D557",fork:"#x22D4",forkv:"#x2AD9",fpartint:"#x2A0D",frac13:"#x2153",frac15:"#x2155",frac16:"#x2159",frac18:"#x215B",frac23:"#x2154",frac25:"#x2156",frac35:"#x2157",frac38:"#x215C",frac45:"#x2158",frac56:"#x215A",frac58:"#x215D",frac78:"#x215E",frown:"#x2322",fscr:"#x1D4BB",gE:"#x2267",gEl:"#x2A8C",gacute:"#x1F5",gammad:"#x3DD",gap:"#x2A86",gbreve:"#x11F",gcirc:"#x11D",gcy:"#x433",gdot:"#x121",gel:"#x22DB",geq:"#x2265",geqq:"#x2267",geqslant:"#x2A7E",ges:"#x2A7E",gescc:"#x2AA9",gesdot:"#x2A80",gesdoto:"#x2A82",gesdotol:"#x2A84",gesl:"#x22DB;&#xFE00",gesles:"#x2A94",gfr:"#x1D524",gg:"#x226B",ggg:"#x22D9",gimel:"#x2137",gjcy:"#x453",gl:"#x2277",glE:"#x2A92",gla:"#x2AA5",glj:"#x2AA4",gnE:"#x2269",gnap:"#x2A8A",gnapprox:"#x2A8A",gne:"#x2A88",gneq:"#x2A88",gneqq:"#x2269",gnsim:"#x22E7",gopf:"#x1D558",grave:"#x60",gscr:"#x210A",gsim:"#x2273",gsime:"#x2A8E",gsiml:"#x2A90",gtcc:"#x2AA7",gtcir:"#x2A7A",gtdot:"#x22D7",gtlPar:"#x2995",gtquest:"#x2A7C",gtrapprox:"#x2A86",gtrarr:"#x2978",gtrdot:"#x22D7",gtreqless:"#x22DB",gtreqqless:"#x2A8C",gtrless:"#x2277",gtrsim:"#x2273",gvertneqq:"#x2269;&#xFE00",gvnE:"#x2269;&#xFE00",hairsp:"#x200A",half:"#xBD",hamilt:"#x210B",hardcy:"#x44A",harrcir:"#x2948",harrw:"#x21AD",hbar:"#x210F",hcirc:"#x125",heartsuit:"#x2665",hercon:"#x22B9",hfr:"#x1D525",hksearow:"#x2925",hkswarow:"#x2926",hoarr:"#x21FF",homtht:"#x223B",hookleftarrow:"#x21A9",hookrightarrow:"#x21AA",hopf:"#x1D559",horbar:"#x2015",hscr:"#x1D4BD",hslash:"#x210F",hstrok:"#x127",hybull:"#x2043",hyphen:"#x2010",ic:"#x2063",icy:"#x438",iecy:"#x435",iff:"#x21D4",ifr:"#x1D526",ii:"#x2148",iiiint:"#x2A0C",iiint:"#x222D",iinfin:"#x29DC",iiota:"#x2129",ijlig:"#x133",imacr:"#x12B",imagline:"#x2110",imagpart:"#x2111",imath:"#x131",imof:"#x22B7",imped:"#x1B5",in:"#x2208",incare:"#x2105",infintie:"#x29DD",inodot:"#x131",intcal:"#x22BA",integers:"#x2124",intercal:"#x22BA",intlarhk:"#x2A17",intprod:"#x2A3C",iocy:"#x451",iogon:"#x12F",iopf:"#x1D55A",iprod:"#x2A3C",iscr:"#x1D4BE",isinE:"#x22F9",isindot:"#x22F5",isins:"#x22F4",isinsv:"#x22F3",isinv:"#x2208",it:"#x2062",itilde:"#x129",iukcy:"#x456",jcirc:"#x135",jcy:"#x439",jfr:"#x1D527",jmath:"#x237",jopf:"#x1D55B",jscr:"#x1D4BF",jsercy:"#x458",jukcy:"#x454",kappav:"#x3F0",kcedil:"#x137",kcy:"#x43A",kfr:"#x1D528",kgreen:"#x138",khcy:"#x445",kjcy:"#x45C",kopf:"#x1D55C",kscr:"#x1D4C0",lAarr:"#x21DA",lAtail:"#x291B",lBarr:"#x290E",lE:"#x2266",lEg:"#x2A8B",lHar:"#x2962",lacute:"#x13A",laemptyv:"#x29B4",lagran:"#x2112",langd:"#x2991",langle:"#x27E8",lap:"#x2A85",larrb:"#x21E4",larrbfs:"#x291F",larrfs:"#x291D",larrhk:"#x21A9",larrlp:"#x21AB",larrpl:"#x2939",larrsim:"#x2973",larrtl:"#x21A2",lat:"#x2AAB",latail:"#x2919",late:"#x2AAD",lates:"#x2AAD;&#xFE00",lbarr:"#x290C",lbbrk:"#x2772",lbrace:"{",lbrack:"[",lbrke:"#x298B",lbrksld:"#x298F",lbrkslu:"#x298D",lcaron:"#x13E",lcedil:"#x13C",lcub:"{",lcy:"#x43B",ldca:"#x2936",ldquor:"#x201E",ldrdhar:"#x2967",ldrushar:"#x294B",ldsh:"#x21B2",leftarrow:"#x2190",leftarrowtail:"#x21A2",leftharpoondown:"#x21BD",leftharpoonup:"#x21BC",leftleftarrows:"#x21C7",leftrightarrow:"#x2194",leftrightarrows:"#x21C6",leftrightharpoons:"#x21CB",leftrightsquigarrow:"#x21AD",leftthreetimes:"#x22CB",leg:"#x22DA",leq:"#x2264",leqq:"#x2266",leqslant:"#x2A7D",les:"#x2A7D",lescc:"#x2AA8",lesdot:"#x2A7F",lesdoto:"#x2A81",lesdotor:"#x2A83",lesg:"#x22DA;&#xFE00",lesges:"#x2A93",lessapprox:"#x2A85",lessdot:"#x22D6",lesseqgtr:"#x22DA",lesseqqgtr:"#x2A8B",lessgtr:"#x2276",lesssim:"#x2272",lfisht:"#x297C",lfr:"#x1D529",lg:"#x2276",lgE:"#x2A91",lhard:"#x21BD",lharu:"#x21BC",lharul:"#x296A",lhblk:"#x2584",ljcy:"#x459",ll:"#x226A",llarr:"#x21C7",llcorner:"#x231E",llhard:"#x296B",lltri:"#x25FA",lmidot:"#x140",lmoust:"#x23B0",lmoustache:"#x23B0",lnE:"#x2268",lnap:"#x2A89",lnapprox:"#x2A89",lne:"#x2A87",lneq:"#x2A87",lneqq:"#x2268",lnsim:"#x22E6",loang:"#x27EC",loarr:"#x21FD",lobrk:"#x27E6",longleftarrow:"#x27F5",longleftrightarrow:"#x27F7",longmapsto:"#x27FC",longrightarrow:"#x27F6",looparrowleft:"#x21AB",looparrowright:"#x21AC",lopar:"#x2985",lopf:"#x1D55D",loplus:"#x2A2D",lotimes:"#x2A34",lozenge:"#x25CA",lozf:"#x29EB",lparlt:"#x2993",lrarr:"#x21C6",lrcorner:"#x231F",lrhar:"#x21CB",lrhard:"#x296D",lrtri:"#x22BF",lscr:"#x1D4C1",lsh:"#x21B0",lsim:"#x2272",lsime:"#x2A8D",lsimg:"#x2A8F",lsquor:"#x201A",lstrok:"#x142",ltcc:"#x2AA6",ltcir:"#x2A79",ltdot:"#x22D6",lthree:"#x22CB",ltimes:"#x22C9",ltlarr:"#x2976",ltquest:"#x2A7B",ltrPar:"#x2996",ltri:"#x25C3",ltrie:"#x22B4",ltrif:"#x25C2",lurdshar:"#x294A",luruhar:"#x2966",lvertneqq:"#x2268;&#xFE00",lvnE:"#x2268;&#xFE00",mDDot:"#x223A",male:"#x2642",malt:"#x2720",maltese:"#x2720",map:"#x21A6",mapsto:"#x21A6",mapstodown:"#x21A7",mapstoleft:"#x21A4",mapstoup:"#x21A5",marker:"#x25AE",mcomma:"#x2A29",mcy:"#x43C",measuredangle:"#x2221",mfr:"#x1D52A",mho:"#x2127",mid:"#x2223",midcir:"#x2AF0",minusb:"#x229F",minusd:"#x2238",minusdu:"#x2A2A",mlcp:"#x2ADB",mldr:"hellip",mnplus:"#x2213",models:"#x22A7",mopf:"#x1D55E",mp:"#x2213",mscr:"#x1D4C2",mstpos:"#x223E",multimap:"#x22B8",mumap:"#x22B8",nGg:"#x22D9;&#x338",nGt:"#x226B;&#x20D2",nGtv:"#x226B;&#x338",nLeftarrow:"#x21CD",nLeftrightarrow:"#x21CE",nLl:"#x22D8;&#x338",nLt:"#x226A;&#x20D2",nLtv:"#x226A;&#x338",nRightarrow:"#x21CF",nVDash:"#x22AF",nVdash:"#x22AE",nacute:"#x144",nang:"#x2220;&#x20D2",nap:"#x2249",napE:"#x2A70;&#x338",napid:"#x224B;&#x338",napos:"#x149",napprox:"#x2249",natur:"#x266E",natural:"#x266E",naturals:"#x2115",nbump:"#x224E;&#x338",nbumpe:"#x224F;&#x338",ncap:"#x2A43",ncaron:"#x148",ncedil:"#x146",ncong:"#x2247",ncongdot:"#x2A6D;&#x338",ncup:"#x2A42",ncy:"#x43D",neArr:"#x21D7",nearhk:"#x2924",nearr:"#x2197",nearrow:"#x2197",nedot:"#x2250;&#x338",nequiv:"#x2262",nesear:"#x2928",nesim:"#x2242;&#x338",nexist:"#x2204",nexists:"#x2204",nfr:"#x1D52B",ngE:"#x2267;&#x338",nge:"#x2271",ngeq:"#x2271",ngeqq:"#x2267;&#x338",ngeqslant:"#x2A7E;&#x338",nges:"#x2A7E;&#x338",ngsim:"#x2275",ngt:"#x226F",ngtr:"#x226F",nhArr:"#x21CE",nharr:"#x21AE",nhpar:"#x2AF2",nis:"#x22FC",nisd:"#x22FA",niv:"#x220B",njcy:"#x45A",nlArr:"#x21CD",nlE:"#x2266;&#x338",nlarr:"#x219A",nldr:"#x2025",nle:"#x2270",nleftarrow:"#x219A",nleftrightarrow:"#x21AE",nleq:"#x2270",nleqq:"#x2266;&#x338",nleqslant:"#x2A7D;&#x338",nles:"#x2A7D;&#x338",nless:"#x226E",nlsim:"#x2274",nlt:"#x226E",nltri:"#x22EA",nltrie:"#x22EC",nmid:"#x2224",nopf:"#x1D55F",notinE:"#x22F9;&#x338",notindot:"#x22F5;&#x338",notinva:"#x2209",notinvb:"#x22F7",notinvc:"#x22F6",notni:"#x220C",notniva:"#x220C",notnivb:"#x22FE",notnivc:"#x22FD",npar:"#x2226",nparallel:"#x2226",nparsl:"#x2AFD;&#x20E5",npart:"#x2202;&#x338",npolint:"#x2A14",npr:"#x2280",nprcue:"#x22E0",npre:"#x2AAF;&#x338",nprec:"#x2280",npreceq:"#x2AAF;&#x338",nrArr:"#x21CF",nrarr:"#x219B",nrarrc:"#x2933;&#x338",nrarrw:"#x219D;&#x338",nrightarrow:"#x219B",nrtri:"#x22EB",nrtrie:"#x22ED",nsc:"#x2281",nsccue:"#x22E1",nsce:"#x2AB0;&#x338",nscr:"#x1D4C3",nshortmid:"#x2224",nshortparallel:"#x2226",nsim:"#x2241",nsime:"#x2244",nsimeq:"#x2244",nsmid:"#x2224",nspar:"#x2226",nsqsube:"#x22E2",nsqsupe:"#x22E3",nsubE:"#x2AC5;&#x338",nsube:"#x2288",nsubset:"#x2282;&#x20D2",nsubseteq:"#x2288",nsubseteqq:"#x2AC5;&#x338",nsucc:"#x2281",nsucceq:"#x2AB0;&#x338",nsup:"#x2285",nsupE:"#x2AC6;&#x338",nsupe:"#x2289",nsupset:"#x2283;&#x20D2",nsupseteq:"#x2289",nsupseteqq:"#x2AC6;&#x338",ntgl:"#x2279",ntlg:"#x2278",ntriangleleft:"#x22EA",ntrianglelefteq:"#x22EC",ntriangleright:"#x22EB",ntrianglerighteq:"#x22ED",numero:"#x2116",numsp:"#x2007",nvDash:"#x22AD",nvHarr:"#x2904",nvap:"#x224D;&#x20D2",nvdash:"#x22AC",nvge:"#x2265;&#x20D2",nvgt:"#x3E;&#x20D2",nvinfin:"#x29DE",nvlArr:"#x2902",nvle:"#x2264;&#x20D2",nvlt:"#x3C;&#x20D2",nvltrie:"#x22B4;&#x20D2",nvrArr:"#x2903",nvrtrie:"#x22B5;&#x20D2",nvsim:"#x223C;&#x20D2",nwArr:"#x21D6",nwarhk:"#x2923",nwarr:"#x2196",nwarrow:"#x2196",nwnear:"#x2927",oS:"#x24C8",oast:"#x229B",ocir:"#x229A",ocy:"#x43E",odash:"#x229D",odblac:"#x151",odiv:"#x2A38",odot:"#x2299",odsold:"#x29BC",ofcir:"#x29BF",ofr:"#x1D52C",ogon:"#x2DB",ogt:"#x29C1",ohbar:"#x29B5",ohm:"#x3A9",oint:"#x222E",olarr:"#x21BA",olcir:"#x29BE",olcross:"#x29BB",olt:"#x29C0",omacr:"#x14D",omid:"#x29B6",ominus:"#x2296",oopf:"#x1D560",opar:"#x29B7",operp:"#x29B9",orarr:"#x21BB",ord:"#x2A5D",order:"#x2134",orderof:"#x2134",origof:"#x22B6",oror:"#x2A56",orslope:"#x2A57",orv:"#x2A5B",oscr:"#x2134",osol:"#x2298",otimesas:"#x2A36",ovbar:"#x233D",par:"#x2225",parallel:"#x2225",parsim:"#x2AF3",parsl:"#x2AFD",pcy:"#x43F",pertenk:"#x2031",pfr:"#x1D52D",phiv:"#x3D5",phmmat:"#x2133",phone:"#x260E",pitchfork:"#x22D4",planck:"#x210F",planckh:"#x210E",plankv:"#x210F",plusacir:"#x2A23",plusb:"#x229E",pluscir:"#x2A22",plusdo:"#x2214",plusdu:"#x2A25",pluse:"#x2A72",plussim:"#x2A26",plustwo:"#x2A27",pm:"#xB1",pointint:"#x2A15",popf:"#x1D561",pr:"#x227A",prE:"#x2AB3",prap:"#x2AB7",prcue:"#x227C",pre:"#x2AAF",prec:"#x227A",precapprox:"#x2AB7",preccurlyeq:"#x227C",preceq:"#x2AAF",precnapprox:"#x2AB9",precneqq:"#x2AB5",precnsim:"#x22E8",precsim:"#x227E",primes:"#x2119",prnE:"#x2AB5",prnap:"#x2AB9",prnsim:"#x22E8",profalar:"#x232E",profline:"#x2312",profsurf:"#x2313",propto:"#x221D",prsim:"#x227E",prurel:"#x22B0",pscr:"#x1D4C5",puncsp:"#x2008",qfr:"#x1D52E",qint:"#x2A0C",qopf:"#x1D562",qprime:"#x2057",qscr:"#x1D4C6",quaternions:"#x210D",quatint:"#x2A16",questeq:"#x225F",rAarr:"#x21DB",rAtail:"#x291C",rBarr:"#x290F",rHar:"#x2964",race:"#x223D;&#x331",racute:"#x155",raemptyv:"#x29B3",rangd:"#x2992",range:"#x29A5",rangle:"#x27E9",rarrap:"#x2975",rarrb:"#x21E5",rarrbfs:"#x2920",rarrc:"#x2933",rarrfs:"#x291E",rarrhk:"#x21AA",rarrlp:"#x21AC",rarrpl:"#x2945",rarrsim:"#x2974",rarrtl:"#x21A3",rarrw:"#x219D",ratail:"#x291A",ratio:"#x2236",rationals:"#x211A",rbarr:"#x290D",rbbrk:"#x2773",rbrke:"#x298C",rbrksld:"#x298E",rbrkslu:"#x2990",rcaron:"#x159",rcedil:"#x157",rcy:"#x440",rdca:"#x2937",rdldhar:"#x2969",rdquor:"#x201D",rdsh:"#x21B3",realine:"#x211B",realpart:"#x211C",reals:"#x211D",rect:"#x25AD",rfisht:"#x297D",rfr:"#x1D52F",rhard:"#x21C1",rharu:"#x21C0",rharul:"#x296C",rhov:"#x3F1",rightarrow:"#x2192",rightarrowtail:"#x21A3",rightharpoondown:"#x21C1",rightharpoonup:"#x21C0",rightleftarrows:"#x21C4",rightleftharpoons:"#x21CC",rightrightarrows:"#x21C9",rightsquigarrow:"#x219D",rightthreetimes:"#x22CC",ring:"#x2DA",risingdotseq:"#x2253",rlarr:"#x21C4",rlhar:"#x21CC",rmoust:"#x23B1",rmoustache:"#x23B1",rnmid:"#x2AEE",roang:"#x27ED",roarr:"#x21FE",robrk:"#x27E7",ropar:"#x2986",ropf:"#x1D563",roplus:"#x2A2E",rotimes:"#x2A35",rpargt:"#x2994",rppolint:"#x2A12",rrarr:"#x21C9",rscr:"#x1D4C7",rsh:"#x21B1",rsquor:"#x2019",rthree:"#x22CC",rtimes:"#x22CA",rtri:"#x25B9",rtrie:"#x22B5",rtrif:"#x25B8",rtriltri:"#x29CE",ruluhar:"#x2968",rx:"#x211E",sacute:"#x15B",sc:"#x227B",scE:"#x2AB4",scap:"#x2AB8",sccue:"#x227D",sce:"#x2AB0",scedil:"#x15F",scirc:"#x15D",scnE:"#x2AB6",scnap:"#x2ABA",scnsim:"#x22E9",scpolint:"#x2A13",scsim:"#x227F",scy:"#x441",sdotb:"#x22A1",sdote:"#x2A66",seArr:"#x21D8",searhk:"#x2925",searr:"#x2198",searrow:"#x2198",seswar:"#x2929",setminus:"#x2216",setmn:"#x2216",sext:"#x2736",sfr:"#x1D530",sfrown:"#x2322",sharp:"#x266F",shchcy:"#x449",shcy:"#x448",shortmid:"#x2223",shortparallel:"#x2225",sigmav:"#x3C2",simdot:"#x2A6A",sime:"#x2243",simeq:"#x2243",simg:"#x2A9E",simgE:"#x2AA0",siml:"#x2A9D",simlE:"#x2A9F",simne:"#x2246",simplus:"#x2A24",simrarr:"#x2972",slarr:"#x2190",smallsetminus:"#x2216",smashp:"#x2A33",smeparsl:"#x29E4",smid:"#x2223",smile:"#x2323",smt:"#x2AAA",smte:"#x2AAC",smtes:"#x2AAC;&#xFE00",softcy:"#x44C",solb:"#x29C4",solbar:"#x233F",sopf:"#x1D564",spadesuit:"#x2660",spar:"#x2225",sqcap:"#x2293",sqcaps:"#x2293;&#xFE00",sqcup:"#x2294",sqcups:"#x2294;&#xFE00",sqsub:"#x228F",sqsube:"#x2291",sqsubset:"#x228F",sqsubseteq:"#x2291",sqsup:"#x2290",sqsupe:"#x2292",sqsupset:"#x2290",sqsupseteq:"#x2292",squ:"#x25A1",square:"#x25A1",squarf:"#x25AA",squf:"#x25AA",srarr:"#x2192",sscr:"#x1D4C8",ssetmn:"#x2216",ssmile:"#x2323",sstarf:"#x22C6",star:"#x2606",starf:"#x2605",straightepsilon:"#x3F5",straightphi:"#x3D5",strns:"#xAF",subE:"#x2AC5",subdot:"#x2ABD",subedot:"#x2AC3",submult:"#x2AC1",subnE:"#x2ACB",subne:"#x228A",subplus:"#x2ABF",subrarr:"#x2979",subset:"#x2282",subseteq:"#x2286",subseteqq:"#x2AC5",subsetneq:"#x228A",subsetneqq:"#x2ACB",subsim:"#x2AC7",subsub:"#x2AD5",subsup:"#x2AD3",succ:"#x227B",succapprox:"#x2AB8",succcurlyeq:"#x227D",succeq:"#x2AB0",succnapprox:"#x2ABA",succneqq:"#x2AB6",succnsim:"#x22E9",succsim:"#x227F",sung:"#x266A",supE:"#x2AC6",supdot:"#x2ABE",supdsub:"#x2AD8",supedot:"#x2AC4",suphsol:"#x27C9",suphsub:"#x2AD7",suplarr:"#x297B",supmult:"#x2AC2",supnE:"#x2ACC",supne:"#x228B",supplus:"#x2AC0",supset:"#x2283",supseteq:"#x2287",supseteqq:"#x2AC6",supsetneq:"#x228B",supsetneqq:"#x2ACC",supsim:"#x2AC8",supsub:"#x2AD4",supsup:"#x2AD6",swArr:"#x21D9",swarhk:"#x2926",swarr:"#x2199",swarrow:"#x2199",swnwar:"#x292A",target:"#x2316",tbrk:"#x23B4",tcaron:"#x165",tcedil:"#x163",tcy:"#x442",tdot:"#x20DB",telrec:"#x2315",tfr:"#x1D531",therefore:"#x2234",thetav:"#x3D1",thickapprox:"#x2248",thicksim:"#x223C",thkap:"#x2248",thksim:"#x223C",timesb:"#x22A0",timesbar:"#x2A31",timesd:"#x2A30",tint:"#x222D",toea:"#x2928",top:"#x22A4",topbot:"#x2336",topcir:"#x2AF1",topf:"#x1D565",topfork:"#x2ADA",tosa:"#x2929",tprime:"#x2034",triangle:"#x25B5",triangledown:"#x25BF",triangleleft:"#x25C3",trianglelefteq:"#x22B4",triangleq:"#x225C",triangleright:"#x25B9",trianglerighteq:"#x22B5",tridot:"#x25EC",trie:"#x225C",triminus:"#x2A3A",triplus:"#x2A39",trisb:"#x29CD",tritime:"#x2A3B",trpezium:"#x23E2",tscr:"#x1D4C9",tscy:"#x446",tshcy:"#x45B",tstrok:"#x167",twixt:"#x226C",twoheadleftarrow:"#x219E",twoheadrightarrow:"#x21A0",uHar:"#x2963",ubrcy:"#x45E",ubreve:"#x16D",ucy:"#x443",udarr:"#x21C5",udblac:"#x171",udhar:"#x296E",ufisht:"#x297E",ufr:"#x1D532",uharl:"#x21BF",uharr:"#x21BE",uhblk:"#x2580",ulcorn:"#x231C",ulcorner:"#x231C",ulcrop:"#x230F",ultri:"#x25F8",umacr:"#x16B",uogon:"#x173",uopf:"#x1D566",uparrow:"#x2191",updownarrow:"#x2195",upharpoonleft:"#x21BF",upharpoonright:"#x21BE",uplus:"#x228E",upsi:"#x3C5",upuparrows:"#x21C8",urcorn:"#x231D",urcorner:"#x231D",urcrop:"#x230E",uring:"#x16F",urtri:"#x25F9",uscr:"#x1D4CA",utdot:"#x22F0",utilde:"#x169",utri:"#x25B5",utrif:"#x25B4",uuarr:"#x21C8",uwangle:"#x29A7",vArr:"#x21D5",vBar:"#x2AE8",vBarv:"#x2AE9",vDash:"#x22A8",vangrt:"#x299C",varepsilon:"#x3F5",varkappa:"#x3F0",varnothing:"#x2205",varphi:"#x3D5",varpi:"#x3D6",varpropto:"#x221D",varr:"#x2195",varrho:"#x3F1",varsigma:"#x3C2",varsubsetneq:"#x228A;&#xFE00",varsubsetneqq:"#x2ACB;&#xFE00",varsupsetneq:"#x228B;&#xFE00",varsupsetneqq:"#x2ACC;&#xFE00",vartheta:"#x3D1",vartriangleleft:"#x22B2",vartriangleright:"#x22B3",vcy:"#x432",vdash:"#x22A2",vee:"#x2228",veebar:"#x22BB",veeeq:"#x225A",vellip:"#x22EE",vfr:"#x1D533",vltri:"#x22B2",vnsub:"#x2282;&#x20D2",vnsup:"#x2283;&#x20D2",vopf:"#x1D567",vprop:"#x221D",vrtri:"#x22B3",vscr:"#x1D4CB",vsubnE:"#x2ACB;&#xFE00",vsubne:"#x228A;&#xFE00",vsupnE:"#x2ACC;&#xFE00",vsupne:"#x228B;&#xFE00",vzigzag:"#x299A",wcirc:"#x175",wedbar:"#x2A5F",wedge:"#x2227",wedgeq:"#x2259",wfr:"#x1D534",wopf:"#x1D568",wp:"#x2118",wr:"#x2240",wreath:"#x2240",wscr:"#x1D4CC",xcap:"#x22C2",xcirc:"#x25EF",xcup:"#x22C3",xdtri:"#x25BD",xfr:"#x1D535",xhArr:"#x27FA",xharr:"#x27F7",xlArr:"#x27F8",xlarr:"#x27F5",xmap:"#x27FC",xnis:"#x22FB",xodot:"#x2A00",xopf:"#x1D569",xoplus:"#x2A01",xotime:"#x2A02",xrArr:"#x27F9",xrarr:"#x27F6",xscr:"#x1D4CD",xsqcup:"#x2A06",xuplus:"#x2A04",xutri:"#x25B3",xvee:"#x22C1",xwedge:"#x22C0",yacy:"#x44F",ycirc:"#x177",ycy:"#x44B",yfr:"#x1D536",yicy:"#x457",yopf:"#x1D56A",yscr:"#x1D4CE",yucy:"#x44E",zacute:"#x17A",zcaron:"#x17E",zcy:"#x437",zdot:"#x17C",zeetrf:"#x2128",zfr:"#x1D537",zhcy:"#x436",zigrarr:"#x21DD",zopf:"#x1D56B",zscr:"#x1D4CF"},nr=Array.isArray,or=["null","start-of-heading","start-of-text","end-of-text","end-of-transmission","enquiry","acknowledge","bell","backspace","character-tabulation","line-feed","line-tabulation","form-feed","carriage-return","shift-out","shift-in","data-link-escape","device-control-one","device-control-two","device-control-three","device-control-four","negative-acknowledge","synchronous-idle","end-of-transmission-block","cancel","end-of-medium","substitute","escape","information-separator-four","information-separator-three","information-separator-two","information-separator-one","space","exclamation-mark"],sr=["delete","padding","high-octet-preset","break-permitted-here","no-break-here","index","next-line","start-of-selected-area","end-of-selected-area","character-tabulation-set","character-tabulation-with-justification","line-tabulation-set","partial-line-forward","partial-line-backward","reverse-line-feed","single-shift-two","single-shift-three","device-control-string","private-use-1","private-use-2","set-transmit-state","cancel-character","message-waiting","start-of-protected-area","end-of-protected-area","start-of-string","single-graphic-character-introducer","single-character-intro-introducer","control-sequence-introducer","string-terminator","operating-system-command","private-message","application-program-command"];function cr(e){return!"\"'><=".includes(e)}function ir(e){return function(e){var t=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;"function"==typeof t&&(t=[t]),"function"==typeof a&&(a=[a]),"function"==typeof n&&(n=[n]);for(var o=!1,s=function(r,s){if(console.log("0133 str[".concat(r,"] = ").concat(e[r])),a.some(function(t){return t(e[r],r)})){if(!n)return console.log("0139 util/onlyTheseLeadToThat: ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(31,"m","return ".concat(r),"[",39,"m"))),{v:r};o=r}return null!==n&&o&&n.some(function(t){return t(e[r],r)})?(console.log("0154 util/onlyTheseLeadToThat: ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(31,"m","return ".concat(o),"[",39,"m"))),{v:o}):t.some(function(t){return t(e[r],r)})||a.some(function(t){return t(e[r],r)})?void 0:(console.log("0165 util/onlyTheseLeadToThat: ".concat("[".concat(31,"m","██","[",39,"m")," return ","[".concat(31,"m","false","[",39,"m"))),{v:!1})},c=0,i=e.length;c<i;c++){var l=s(c);if("object"===r(l))return l.v}}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,cr,function(e){return"="===e})}function lr(e){return"\"'`‘’“”".includes(e)}function ur(e){if("string"!=typeof e||e.length>1)throw new Error("emlint/util/isTagChar(): input is not a single string character!");return!"><=".includes(e)}function pr(e){return dr(e)&&e.charCodeAt(0)>96&&e.charCodeAt(0)<123}function dr(e){return"string"==typeof e}function mr(e){return"number"==typeof e}function gr(e){return dr(e)&&1===e.length&&(e.charCodeAt(0)>64&&e.charCodeAt(0)<91||e.charCodeAt(0)>96&&e.charCodeAt(0)<123)}function fr(e){return pr(e)||":"===e}function hr(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return r.reduce(function(e,r,t,a){return 0===t&&"string"==typeof r?"[".concat(32,"m",r.toUpperCase(),"[",39,"m"):t%2!=0?"".concat(e," [",33,"m").concat(r,"[",39,"m"):"".concat(e," = ").concat(JSON.stringify(r,null,4)).concat(a[t+1]?";":"")},"")}function br(e,t,a){if(console.log("\n\n\n\n\n"),console.log("0320 withinTagInnerspace() called, idx = ".concat(t)),"number"!=typeof t){if(null!=t)throw new Error("emlint/util.js/withinTagInnerspace(): second argument is of a type ".concat(r(t)));t=0}for(var n={at:null,last:!1,precedes:!1,within:!1},o=!0,s=!1,c=!1,i=!1,l=!1,u=!1,p=!1,d=!1,m=!1,g=!1,f=!1,h=!1,b=!1,x=!1,A=!1,w=!1,y=!1,v=!1,q=t,S=e.length;q<S;q++){var E=e[q].charCodeAt(0);if(console.log("".concat("[".concat(null!=a?35:36,"m","=","[",39,"m[").concat(null!=a?33:34,"m","=","[",39,"m").repeat(15)," [",31,"m","str[ ".concat(q," ] = ").concat(e[q].trim().length?e[q]:JSON.stringify(e[q],null,0)),"[",39,"m ","[".concat(90,"m#",E,"[",39,"m")," ").concat("[".concat(null!=a?35:36,"m","=","[",39,"m[").concat(null!=a?33:34,"m","=","[",39,"m").repeat(15)).concat(null!=a?" RECURSION":"")),e[q].trim().length||n.last&&(n.precedes=!0),e[q],e[q],e[q],lr(e[q])?(null===n.at?(n.within=!0,n.at=q):e[q]!==e[n.at]&&q!==a||(n.within=!1),n.last=!0):n.last?(n.precedes=!0,n.last=!1):n.precedes=!1,n.at&&!n.within&&n.precedes&&e[q]!==e[n.at]&&(n.at=null),!n.within&&o&&"/"===e[q]&&">".includes(e[k(e,q)]))return console.log("0559 ".concat("[".concat(32,"m","██ R1","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0;if(n.within||!o||">"!==e[q]||u)if(u&&!p&&e[q].trim().length&&!ur(e[q]))"<"===e[q]?(p=!0,console.log("0623 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r3_2",p)))):(u=!1,console.log("0632 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r3_1",u))));else if(p&&!d&&e[q].trim().length)fr(e[q])||"/"===e[q]?(d=!0,console.log("0646 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r3_3",d)))):(u=!1,p=!1,console.log("0656 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r3_1",u,"r3_2",p))));else if(d&&!m&&e[q].trim().length&&!fr(e[q])){if("<>".includes(e[q])||"/"===e[q]&&"<>".includes(k(e,q)))return console.log("0681 ".concat("[".concat(32,"m","██ R3","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0;"='\"".includes(e[q])&&(u=!1,p=!1,d=!1,console.log("0694 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r3_1",u,"r3_2",p,"r3_3",d))))}else if(!d||m||e[q].trim().length){if(m&&!g&&e[q].trim().length)cr(e[q])?(g=!0,console.log("0725 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r3_5",g)))):(u=!1,p=!1,d=!1,m=!1,console.log("0737 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r3_1",u,"r3_2",p,"r3_3",d,"r3_4",m))));else if(g&&(!e[q].trim().length||"="===e[q]||lr(e[q])))return console.log("0757 ".concat("[".concat(32,"m","██ R3","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0}else m=!0,console.log("0711 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r3_4",m)));else{if(u=!0,console.log("0579 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r3_1",u))),!e[q+1]||!k(e,q)||!e.slice(q).includes("'")&&!e.slice(q).includes('"'))return console.log("0598 EOF detected ".concat("[".concat(32,"m","██ R3.2","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0;if("<"===e[k(e,q)])return console.log("0608 ".concat("[".concat(32,"m","██ R3.3","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0}if(n.within||!o||!cr(e[q])||s||"="===e[P(e,q)]&&!ir(e,q)){if(!c&&s&&e[q].trim().length&&!cr(e[q]))if("="===e[q])c=!0,console.log("0806 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r2_2",c)));else if(">"===e[q]||"/"===e[q]&&">"===e[k(e,q)]){var D=q;if("/"===e[q]&&(D=e[k(e,q)]),!k(e,D))return console.log("0838 ".concat("[".concat(32,"m","██ R2.1","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0;u=!0,s=!1,console.log("0828 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r2_1",s,"r3_1",u)))}else s=!1,console.log("0849 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r2_1",s)));else if(!i&&c&&e[q].trim().length)"'\"".includes(e[q])?(i=!0,console.log("0863 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r2_3",i)))):(s=!1,c=!1,console.log("0873 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r2_1",s,"r2_2",c))));else if(i&&lr(e[q]))e[q]===e[n.at]?(l=!0,console.log("0889 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r2_4",l)))):null!=a&&a===q?(console.log("0899 recursion, this is the index the future indicated"),dr(e[n.at])&&"\"'".includes(e[n.at])&&"\"'".includes(e[q])?(l=!0,console.log("0921 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r2_4",l)))):dr(e[n.at])&&"‘’".includes(e[n.at])&&"‘’".includes(e[q])?(l=!0,console.log("0935 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r2_4",l)))):dr(e[n.at])&&"“”".includes(e[n.at])&&"“”".includes(e[q])&&(l=!0,console.log("0949 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r2_4",l))))):null==a&&br(e,null,q)&&(console.log("                        ██"),console.log("                        ██"),console.log("                        ██"),console.log("                        ██"),console.log("  OUTSIDE OF RECURSION, WITHIN MAIN LOOP AGAIN"),console.log("                        ██"),console.log("                        ██"),console.log("                        ██"),console.log("                        ██"),console.log("0971 not a recursion, but result from one came positive"),n.within&&(n.within=!1),l=!0,console.log("0982 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r2_4",l))));else if(l&&!n.within&&e[q].trim().length&&"/"!==e[q]){if(">"===e[q])return console.log("0996 ".concat("[".concat(32,"m","██ R2/1","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0;if(cr(e[q]))return console.log("1005 ".concat("[".concat(32,"m","██ R2/2","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0}}else s=!0,console.log("0787 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r2_1",s)));if(n.within||!o||f||!cr(e[q])||"="===e[P(e,q)]&&!ir(e,q)){if(f&&e[q].trim().length&&(!cr(e[q])||"/"===e[q])){if("/"===e[q]&&">"===e[k(e,q)])return console.log("1045 ".concat("[".concat(32,"m","██ R4","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0;f=!1,console.log("1055 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r4_1",f)))}}else f=!0,console.log("1028 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r4_1",f)));if(o&&!n.within&&!h&&e[q].trim().length&&cr(e[q])?(h=!0,console.log("1077 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r5_1",h)))):h&&!b&&e[q].trim().length&&!cr(e[q])?"="===e[q]?(b=!0,console.log("1095 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r5_2",b)))):(h=!1,console.log("1104 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r5_1",h)))):b&&!x&&e[q].trim().length?">"===e[q]?(x=!0,console.log("1118 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r5_3",x)))):(h=!1,b=!1,console.log("1128 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r5_1",h,"r5_2",b)))):x&&e[q].trim().length&&!ur(e[q])&&("<"===e[q]?(p=!0,console.log("1145 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r3_2",p)))):(h=!1,b=!1,x=!1,console.log("1156 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r5_1",h,"r5_2",b,"r5_3",x))))),n.within||A||!cr(e[q])&&e[q].trim().length||cr(e[q-1])||"="===e[q-1]||(A=!0,console.log("1195 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r6_1",A)))),n.within||!A||w||!e[q].trim().length||cr(e[q])){if(!y&&w&&e[q].trim().length)lr(e[q])?(y=!0,console.log("1237 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r6_3",y)))):(A=!1,w=!1,console.log("1247 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r6_1",A,"r6_2",w))));else if(y&&lr(e[q])){if(e[q]===e[n.at])return console.log("1263 ".concat("[".concat(32,"m","██ R6/1","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0;if(e[q+1]&&"/>".includes(e[k(e,q)]))return console.log("1276 ".concat("[".concat(32,"m","██ R6/1","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0}}else"="===e[q]?(w=!0,console.log("1214 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r6_2",w)))):(A=!1,console.log("1223 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r6_1",A))));if(o&&e[q].trim().length&&cr(e[q])&&!v&&(v=!0,console.log("1300 ".concat("[".concat(32,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("set","r7_1",v)))),v&&!e[q].trim().length&&e[q+1]&&cr(e[q+1])&&(console.log("1323 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r7_1",v))),v=!1),!n.within&&e[q].trim().length&&!cr(e[q])&&v){if("="===e[q])return console.log("1351 ".concat("[".concat(32,"m","██ R7/1","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("return","true"))),console.log("\n\n\n\n\n\n"),!0;v=!1,console.log("1362 ".concat("[".concat(31,"m","██","[",39,"m")," ","[".concat(90,"m","withinTagInnerspace()","[",39,"m")," ",hr("reset","r7_1",v)))}o&&e[q].trim().length&&(o=!1)}return console.log("1491 withinTagInnerspace(): FIN. RETURN FALSE."),console.log("\n\n\n\n\n\n"),!1}function xr(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;console.log("1507 util/tagOnTheRight() called, ".concat("[".concat(33,"m","idx","[",39,"m")," = ","[".concat(31,"m",r,"[",39,"m"))),console.log("1509 tagOnTheRight() called, idx = ".concat(r));var t=r?e.slice(r):e,a=!1;/^<\s*\w+\s*\/?\s*>/g.test(t)?(console.log("1528 util/tagOnTheRight(): ".concat("[".concat(31,"m","R1","[",39,"m")," passed")),a=!0):/^<\s*\w+\s+\w+\s*=\s*['"]/g.test(t)?(console.log("1533 util/tagOnTheRight(): ".concat("[".concat(31,"m","R2","[",39,"m")," passed")),a=!0):/^<\s*\/?\s*\w+\s*\/?\s*>/g.test(t)?(console.log("1538 util/tagOnTheRight(): ".concat("[".concat(31,"m","R3","[",39,"m")," passed")),a=!0):/^<\s*\w+(?:\s*\w+)*\s*\w+=['"]/g.test(t)&&(console.log("1543 util/tagOnTheRight(): ".concat("[".concat(31,"m","R4","[",39,"m")," passed")),a=!0);var n=dr(e)&&r<e.length&&a;return console.log("1549 util/tagOnTheRight(): return ".concat("[".concat(36,"m",n,"[",39,"m"))),n}var Ar=Array.isArray,wr=function e(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;console.log("".concat("[".concat(32,"m","\n██","[",39,"m")," util/attributeOnTheRight() ","[".concat(32,"m","██\n","[",39,"m"))),console.log("closingQuoteAt = ".concat(JSON.stringify(a,null,4)));var n=r[t];if("'"!==n&&'"'!==n)throw new Error("1 emlint/util/attributeOnTheRight(): first character is not a single/double quote!\nstartingQuoteVal = ".concat(JSON.stringify(n,null,0),"\nstr = ").concat(JSON.stringify(r,null,4),"\nidx = ").concat(JSON.stringify(t,null,0)));for(var o=!1,s=null,c=null,i=null,l=null,u=t,p=r.length;u<p;u++){var d=r[u].charCodeAt(0);if(console.log("[".concat(null===a?36:32,"m","===============================","[",39,"m [").concat(null===a?34:31,"m","str[ ".concat(u," ] = ").concat(r[u].trim().length?r[u]:JSON.stringify(r[u],null,0)),"[",39,"m ","[".concat(90,"m#",d,"[",39,"m")," [").concat(null===a?36:32,"m","===============================","[",39,"m")),(u===a&&u>t||null===a&&u>t&&r[u]===n)&&(a=u,console.log("1642 (util/attributeOnTheRight) ".concat(hr("set","closingQuoteAt",a))),o||(o=!0,console.log("1651 (util/attributeOnTheRight) ".concat(hr("set","closingQuoteMatched",o))))),">"===r[u]&&(s=u,console.log("1663 (util/attributeOnTheRight) ".concat(hr("set","lastClosingBracket",s)))),"<"===r[u]&&(c=u,console.log("1673 (util/attributeOnTheRight) ".concat(hr("set","lastOpeningBracket",c)))),"="===r[u]&&(l=u,console.log("1683 (util/attributeOnTheRight) ".concat(hr("set","lastEqual",l)))),"'"!==r[u]&&'"'!==r[u]||(i=u,console.log("1689 (util/attributeOnTheRight) ".concat(hr("set","lastSomeQuote",i)))),"="===r[u]&&("'"===r[u+1]||'"'===r[u+1]))if(console.log("1705 (util/attributeOnTheRight) within pattern check: equal-quote"),o){if(!s||s<a)return console.log("1713 (util/attributeOnTheRight) ".concat(hr("return","closingQuoteAt",a))),a}else{if(a)return console.log("1728 (util/attributeOnTheRight) STOP",'recursive check ends, it\'s actually messed up. We are already within a recursion. Return "false".'),!1;if(console.log("1735 (util/attributeOnTheRight) ".concat(hr(" ███████████████████████████████████████ correction!\n","true"))),0!==i&&r[u+1]!==i&&e(r,t,i))return console.log("1750 (util/attributeOnTheRight) CORRECTION #1 PASSED - so it was mismatching quote"),console.log("1753 (util/attributeOnTheRight) ".concat(hr("return","lastSomeQuote",i))),i;if(e(r,u+1))return console.log("1769 (util/attributeOnTheRight) CORRECTION #2 PASSED - healthy attributes follow"),console.log("1772 (util/attributeOnTheRight) ".concat(hr("return","false"))),!1}if(o&&s&&s>o)return console.log("1786 (util/attributeOnTheRight) ".concat(hr("return","closingQuoteAt",a))),a;if(o&&null===s&&null===c&&(null===i||i&&a>=i)&&null===l)return console.log("1810 (util/attributeOnTheRight) ".concat(hr("return","closingQuoteAt",a))),a;r[u+1]||console.log('1833 (util) "EOL reached"'),console.log(o?"closingQuoteMatched":"")}if(i&&null===a&&(console.log("1851 (util) last chance, run correction 3"),console.log("".concat("[".concat(33,"m","lastSomeQuote","[",39,"m")," = ",JSON.stringify(i,null,4))),e(r,t,i)))return console.log("1863 (util) CORRECTION #3 PASSED - mismatched quotes confirmed"),console.log("1865 (util) ".concat(hr("return",!0))),i;return console.log("1870 (util) ".concat(hr("bottom - return","false"))),!1},yr=br,vr=pr,qr=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;console.log("1893 util/findClosingQuote() called, ".concat("[".concat(33,"m","idx","[",39,"m")," = ","[".concat(31,"m",r,"[",39,"m")));for(var t=null,a=null,n="\"'".includes(e[r])?e[r]:null,o=null,s=r,c=e.length;s<c;s++){var i=e[s].charCodeAt(0);if(console.log("[".concat(36,"m","===============================","[",39,"m [",34,"m","str[ ".concat(s," ] = ").concat(e[s].trim().length?e[s]:JSON.stringify(e[s],null,0)),"[",39,"m ","[".concat(90,"m#",i,"[",39,"m")," [",36,"m","===============================","[",39,"m")),34===i||39===i){if(e[s]===n&&s>r)return console.log("1924 (util/findClosingQuote) quick ending, ".concat(s," is the matching quote")),s;if(t=s,a=s,console.log("1932 (util/findClosingQuote) ".concat(hr("set","lastNonWhitespaceCharWasQuoteAt",t))),s>r&&("'"===e[s]||'"'===e[s])&&br(e,s+1))return console.log("1946 (util/findClosingQuote) ".concat(hr("return",s))),s;if(console.log("1949 (util/findClosingQuote) didn't pass"),xr(e,s+1))return console.log("1953 [".concat(35,"m","██","[",39,"m (util/findClosingQuote) tag on the right - return i=",s)),s;console.log("1958 [".concat(35,"m","██","[",39,"m (util/findClosingQuote) NOT tag on the right"))}else if(e[s].trim().length)if(console.log("1964 (util/findClosingQuote)"),">"===e[s]){if(o=s,null!==t){console.log("1971 (util/findClosingQuote) ".concat(hr("!","suitable candidate found")));var l=br(e,s);if(console.log("1980 (util/findClosingQuote) withinTagInnerspace() result: ".concat(l)),l)return t===r?(console.log("2003 (util/findClosingQuote) ".concat(hr("return","lastNonWhitespaceCharWasQuoteAt + 1",t+1))),t+1):(console.log("2012 (util/findClosingQuote) ".concat(hr("return","lastNonWhitespaceCharWasQuoteAt",t))),t)}}else if("="===e[s]){var u=k(e,s);if(console.log("2033 (util/findClosingQuote) ".concat(hr("set","whatFollowsEq",u))),u&&lr(e[u])){if(console.log("2041 (util/findClosingQuote)"),console.log("2043 (util/findClosingQuote) ".concat(hr("log","lastNonWhitespaceCharWasQuoteAt",t,"lastQuoteAt",a,"idx",r))),a&&a!==r&&br(e,a+1))return console.log("2062 (util/findClosingQuote) ".concat(hr("return","lastQuoteAt + 1",a+1))),a+1;if(!a||a===r){console.log("2070 we don't have lastQuoteAt");var p=e[s-1].trim().length?s-1:P(e,s),d=void 0;console.log("2090 ".concat("[".concat(33,"m","startingPoint","[",39,"m")," = ",JSON.stringify(p,null,4),"; idx=").concat(r));for(var m=p;m--;){if(console.log("2098 [".concat(36,"m","str[".concat(m,"] = ").concat(e[m]),"[",39,"m")),!e[m].trim().length){d=P(e,m)+1,console.log("2103 [".concat(36,"m","break","[",39,"m res=",d));break}if(m===r){d=r+1,console.log("2109 [".concat(36,"m","break","[",39,"m res=",d));break}}return console.log("2115 ".concat("[".concat(33,"m","RETURN","[",39,"m"),": ",JSON.stringify(d,null,4))),d}console.log("2125 ${`[${31}m${`recursive cycle didn't pass`}[${39}m`}")}else if(e[s+1].trim().length){console.log(""),console.log("2131 it's not the expected quote but ".concat(e[u]," at index ").concat(u));for(var g=void 0,f=s;f--;)if(console.log("2142 [".concat(36,"m","str[".concat(f,"] = ").concat(e[f]),"[",39,"m")),!e[f].trim().length){g=P(e,f),console.log("2147 (util/findClosingQuote) ".concat(hr("set","temp",g),", then BREAK"));break}return lr(g)?(console.log("2158 (util/findClosingQuote) ".concat(hr("return","temp",g))),g):(console.log("2163 (util/findClosingQuote) ".concat(hr("return","temp + 1",g+1))),g+1)}}else if("/"!==e[s]){if("<"===e[s]&&xr(e,s)&&(console.log("2174 ██ tag on the right"),null!==o))return console.log("2177 (util/findClosingQuote) ".concat(hr("return","lastClosingBracketAt",o))),o;null!==t&&(t=null,console.log("2191 (util/findClosingQuote) ".concat(hr("set","lastNonWhitespaceCharWasQuoteAt",t))))}console.log("2203 (util/findClosingQuote) ".concat(hr("END","lastNonWhitespaceCharWasQuoteAt",t)))}return null},Sr=xr,Er=gr,Dr=lr,Ir=function(e,r){return"<"===e[r]?{name:"bad-character-unencoded-opening-bracket",position:[[r,r+1,"&lt;"]]}:">"===e[r]?{name:"bad-character-unencoded-closing-bracket",position:[[r,r+1,"&gt;"]]}:'"'===e[r]?{name:"bad-character-unencoded-double-quotes",position:[[r,r+1,"&quot;"]]}:"`"===e[r]?{name:"bad-character-grave-accent",position:[[r,r+1,"&#x60;"]]}:"£"===e[r]?{name:"bad-character-unencoded-pound",position:[[r,r+1,"&pound;"]]}:"€"===e[r]?{name:"bad-character-unencoded-euro",position:[[r,r+1,"&euro;"]]}:"¢"===e[r]?{name:"bad-character-unencoded-cent",position:[[r,r+1,"&cent;"]]}:null},Cr=function(e,r,t){if(mr(r.startAt)&&mr(r.endAt)){var a=e.slice(r.startAt,r.endAt).match(/\(/g),n=e.slice(r.startAt,r.endAt).match(/\)/g);(nr(a)&&nr(n)&&a.length!==n.length||nr(a)&&!nr(n)||!nr(a)&&nr(n))&&(nr(a)&&nr(n)&&a.length>n.length||nr(a)&&a.length&&!nr(n)?(t({name:"esp-more-opening-parentheses-than-closing",position:[[r.startAt,r.endAt]]}),console.log("2310 util.js: ".concat(hr("push","esp-more-opening-parentheses-than-closing","".concat("[[".concat(r.startAt,", ").concat(r.endAt,"]]")))))):(nr(a)&&nr(n)&&a.length<n.length||nr(n)&&n.length&&!nr(a))&&(t({name:"esp-more-closing-parentheses-than-opening",position:[[r.startAt,r.endAt]]}),console.log("2327 util.js: ".concat(hr("push","esp-more-closing-parentheses-than-opening","".concat("[[".concat(r.startAt,", ").concat(r.endAt,"]]")))))))}},kr=function(e){if("html"===(arguments.length>1&&void 0!==arguments[1]?arguments[1]:"html")){var t=tr.encode(e,{useNamedReferences:!0});return"string"==typeof t&&t.length&&t.startsWith("&")&&t.endsWith(";")&&"object"===r(ar)&&Object.prototype.hasOwnProperty.call(ar,t.slice(1,t.length-1))&&(t="&".concat(ar[t.slice(1,t.length-1)],";"),console.log('2358 util.js "'.concat(t.slice(1,t.length-1),'" is email-pattern positive, we\'ll turn it into "').concat(ar[t.slice(1,t.length-1)],'" instead'))),t}},Pr=dr,Tr=function(e){if(dr(e)&&e.length)return e.replace(/\{/g,"}").replace(/\(/g,")")},Lr=hr;e.lint=function(e,n){if(!Pr(e))throw new Error("emlint: [THROW_ID_01] the first input argument must be a string. It was given as:\n".concat(JSON.stringify(e,null,4)," (type ").concat(r(e),")"));var o,s,c={rules:{},style:{line_endings_CR_LF_CRLF:null}};if(n){if(!g(n))throw new Error("emlint: [THROW_ID_02] the second input argument must be a plain object. It was given as:\n".concat(JSON.stringify(n,null,4)," (type ").concat(r(n),")"));if((o=Object.assign({},c,n)).style&&Pr(o.style.line_endings_CR_LF_CRLF))if("cr"===o.style.line_endings_CR_LF_CRLF.toLowerCase())"CR"!==o.style.line_endings_CR_LF_CRLF&&o.style.line_endings_CR_LF_CRLF;else if("lf"===o.style.line_endings_CR_LF_CRLF.toLowerCase())"LF"!==o.style.line_endings_CR_LF_CRLF&&o.style.line_endings_CR_LF_CRLF;else{if("crlf"!==o.style.line_endings_CR_LF_CRLF.toLowerCase())throw new Error('emlint: [THROW_ID_04] opts.style.line_endings_CR_LF_CRLF should be either falsey or string "CR" or "LF" or "CRLF". It was given as:\n'.concat(JSON.stringify(o.style.line_endings_CR_LF_CRLF,null,4)," (type is string)"));"CRLF"!==o.style.line_endings_CR_LF_CRLF&&o.style.line_endings_CR_LF_CRLF}}else o=b(c);console.log("0120 USING ".concat("[".concat(33,"m","opts","[",39,"m")," = ",JSON.stringify(o,null,4))),o.style&&Pr(o.style.line_endings_CR_LF_CRLF)&&(s="cr"===o.style.line_endings_CR_LF_CRLF.toLowerCase()?"\r":"crlf"===o.style.line_endings_CR_LF_CRLF.toLowerCase()?"\r\n":"\n");var i,l,u=null,p=null,d=[],m={tagStartAt:null,tagEndAt:null,tagNameStartAt:null,tagNameEndAt:null,tagName:null,recognised:null,closing:null,comment:!1,pureHTML:!0,attributes:[],esp:[]};function f(){i=b(m)}f();var h,D={attrStartAt:null,attrEndAt:null,attrNameStartAt:null,attrNameEndAt:null,attrName:null,attrValue:null,attrValueStartAt:null,attrValueEndAt:null,attrEqualAt:null,attrOpeningQuote:{pos:null,val:null},attrClosingQuote:{pos:null,val:null},recognised:null,pureHTML:!0};function I(){l=b(D)}I();var C={headStartAt:null,headEndAt:null,headVal:null,tailStartAt:null,tailEndAt:null,tailVal:null,startAt:null,endAt:null,recognised:null,type:null};function T(){h=b(C)}T();var R,G={startAt:null,includesLinebreaks:!1,lastLinebreakAt:null};function z(){R=b(G)}z();var Q=[],J=[],M={issues:[],applicableRules:{}};function $(e,r){"raw"!==r&&"tag"!==r?(M.applicableRules[e.name]=!0,console.log("0302 ".concat("[".concat(32,"m","SET","[",39,"m")," ","[".concat(33,"m","retObj.applicableRules.".concat(e.name),"[",39,"m")," = ",M.applicableRules[e.name]))):console.log("0307 didn't put \"".concat(e.name,'" in applicableRules')),Object.prototype.hasOwnProperty.call(o.rules,e.name)&&!o.rules[e.name]||(console.log("0315 opts.rules[".concat(e.name,"] = ").concat(o.rules[e.name])),"raw"===r?(console.log("0318 PUSH to rawIssueStaging"),J.push(e)):"tag"===r?(console.log("0322 PUSH to tagIssueStaging"),Q.push(e)):(console.log("0326 PUSH to retObj.issues"),M.issues.push(e)))}function W(e,r){$({name:"bad-character-unencoded-opening-bracket",position:[[e,r,"&lt;"]]},"raw"),console.log("0342 ".concat(Lr("push raw","bad-character-unencoded-opening-bracket","".concat("[[".concat(e,", ").concat(r,', "&lt;"]]')))))}Object.keys(_).concat(Object.keys(V)).sort().forEach(function(e){M.applicableRules[e]=!1});var Z={cr:[],lf:[],crlf:[]},Y=null,K=null;0===e.length&&($({name:"file-empty",position:[[0,0]]}),console.log("0397 ".concat(Lr("push","file-empty"))));for(var X=function(r,n){null!==h.headVal&&r===h.headEndAt&&null===u&&(u=!0,p="esp",console.log("0441 ".concat(Lr("set","doNothingUntil",u,"doNothingUntilReason",p))));var c,m,g,x,A=e[r].charCodeAt(0);if(console.log("[".concat(36,"m","===============================","[",39,"m [",35,"m","str[ ".concat(r," ] = ").concat(e[r].trim().length?e[r]:JSON.stringify(e[r],null,0)),"[",39,"m ","[".concat(90,"m#",A,"[",39,"m")," [",36,"m","===============================","[",39,"m ","[".concat(31,"m",u&&u!==r?"██ doNothingUntil ".concat(u," (reason: ").concat(p,")"):"","[",39,"m"))),u&&!0!==u&&r>=u&&(u=null,console.log("0466 ".concat(Lr("RESET","doNothingUntil",u))),p=null),console.log("0473 ".concat("[".concat(90,"m","above CDATA clauses","[",39,"m"))),e[r+4]&&"c"===e[r].toLowerCase()&&N(e,r,{i:!0},"d*","a*","t*","a*","[?*","]?","[?*")&&("<![".includes(e[P(e,r)])||e[r-1]&&!"<![".includes(e[r-1])&&"["===e[r-2]&&"!"===e[r-3]&&"<"===e[r-4]&&(!e[r-5]||e[r-5].trim().length&&!"<![".includes(e[r-5]))||e[r-1]&&!"<![".includes(e[r-1])&&"!"===e[r-2]&&"<"===e[r-3]&&(!e[r-4]||e[r-4].trim().length&&!"<![".includes(e[r-4])))&&null===L(e,r,"&","l","t",";","!","[")){console.log("0505 [".concat(90,"m","within CDATA clauses","[",39,"m"));var w=k(e,N(e,r,{i:!0},"d*","a*","t*","a*","[?*","]?","[?*").rightmostChar)-1;console.log("0526 ".concat("[".concat(33,"m","rightSideOfCdataOpening","[",39,"m")," = ",JSON.stringify(w,null,4)));var y=B(e,r,"<?*","!?*","[?*","]?*");return console.log("0535 ".concat("[".concat(33,"m","leftChomp","[",39,"m")," = ",JSON.stringify(y,null,4))),("<![".includes(e[r-1])||"["!==e[r-2]||"!"!==e[r-3]||"<"!==e[r-4]||e[r-5]&&"<![".includes(e[r-5]))&&("["!==e[r-1]||"<![".includes(e[r-2])||"!"!==e[r-3]||"<"!==e[r-4]||e[r-5]&&"<![".includes(e[r-5]))&&("["!==e[r-1]||"!"!==e[r-2]||"<![".includes(e[r-3])||"<"!==e[r-4]||e[r-5]&&"<![".includes(e[r-5]))?("<![".includes(e[r-1])||"!"!==e[r-2]||"<"!==e[r-3]||e[r-4]&&"<![".includes(e[r-4]))&&("["!==e[r-1]||"<![".includes(e[r-2])||"<"!==e[r-3]||e[r-4]&&"<![".includes(e[r-4]))||(console.log("0601 OLD ".concat("[".concat(33,"m","leftChomp","[",39,"m")," was ",y,", becomes ").concat(Math.min(y,r-3))),y=Math.min(y,r-3)):(console.log("0582 OLD ".concat("[".concat(33,"m","leftChomp","[",39,"m")," was ",y,", becomes ").concat(Math.min(y,r-4))),y=Math.min(y,r-4)),"<![CDATA["!==e.slice(y,w+1)&&($({name:"bad-cdata-tag-malformed",position:[[y,w+1,"<![CDATA["]]}),console.log("0615 ".concat(Lr("push","bad-cdata-tag-malformed","".concat("[[".concat(y,", ").concat(w+1,', "<![CDATA["]]')))))),u=!0,p="cdata",console.log("0627 ".concat(Lr("set","doNothingUntil",u,"doNothingUntilReason",p))),J.length&&(console.log("0639 let's process all ".concat(J.length," raw character issues at staging")),J.forEach(function(e){e.position[0][0]<y?($(e),console.log("0644 ".concat(Lr("push","issueObj",e)))):console.log("0646 discarding ".concat(JSON.stringify(e,null,4)))}),J=[],console.log("0650 ".concat(Lr("reset","doNothingUntil",u)))),console.log("0654 ".concat(Lr("set","i",r,"then continue"))),ee=r=w,"continue"}if(!0===u&&"cdata"===p&&"[]".includes(e[r])){var v=F(e,r,"[?*","]?*","[?*","]?*",">");console.log("0666 ".concat("[".concat(31,"m","██","[",39,"m")," temp = ",v)),"]"===e[r]&&e[r+1]&&e[r+1].trim().length&&!">]".includes(e[r+1])&&"]"===e[r+2]&&">"===e[r+3]||"]"===e[r]&&"]"===e[r+1]&&e[r+2]&&e[r+2].trim().length&&!">]".includes(e[r+2])&&">"===e[r+3]?(console.log("0685 OLD ".concat("[".concat(33,"m","temp","[",39,"m")," was ",v,", becomes ").concat(Math.min(v||r+4,r+4))),v=Math.max(v||r+4,r+4)):"]"===e[r]&&e[r+1]&&e[r+1].trim().length&&!">]".includes(e[r+1])&&">"===e[r+2]&&(console.log("0700 OLD ".concat("[".concat(33,"m","temp","[",39,"m")," was ",v,", becomes ").concat(Math.min(v||r+3,r+3))),v=Math.max(v||r+3,r+3)),v&&("]]>"!==e.slice(r,v)&&($({name:"bad-cdata-tag-malformed",position:[[r,v,"]]>"]]}),console.log("0715 ".concat(Lr("push","bad-cdata-tag-malformed","".concat("[[".concat(r,", ").concat(v,', "]]>"]]')))))),u=r+3,console.log("0723 ".concat(Lr("set","doNothingUntil",u))))}if((null===u||null!==u&&"script tag"!==p||"script tag"===p&&("\\"!==e[r-1]||"\\"===e[r-2]))&&(null===Y&&"\"'`".includes(e[r])?(Y=r,console.log("0742 ".concat(Lr("set","withinQuotes",Y)))):null===Y||e[Y]!==e[r]||K&&K!==r||(console.log("0748 withinQuotes was ".concat(Y,", resetting to null")),Y=null,K=null,console.log("0751 ".concat(Lr("set","withinQuotes",Y))))),K&&K===r&&(Y=null,K=null,console.log("0759 ".concat(Lr("reset","withinQuotes",Y,"withinQuotesEndAt",K)))),!u&&null!==i.tagNameStartAt&&null===i.tagNameEndAt&&!gr(e[r])&&(console.log("0798 not a latin letter, thus we assume tag name ends here"),i.tagNameEndAt=r,i.tagName=e.slice(i.tagNameStartAt,r),i.recognised=U.includes(i.tagName.toLowerCase()),console.log("0803 ".concat(Lr("set","logTag.tagNameEndAt",i.tagNameEndAt,"logTag.tagName",i.tagName,"logTag.recognised",i.recognised))),Dr(e[r])||"="===e[r])){var q;console.log("0816 stray quote clauses");var S=r+1;if(e[r+1].trim().length)if(Dr(e[r+1])||"="===e[r+1]){console.log("[".concat(36,"m","0825 traverse forward","[",39,"m"));for(var E=r+1;E<n;E++)if(console.log("[".concat(36,"m","0828 str[".concat(E,"] = str[y]"),"[",39,"m")),!Dr(e[E])&&"="!==e[E]){e[E].trim().length&&(q=!0,S=E);break}}else q=!0;q?($({name:"tag-stray-character",position:[[r,S," "]]}),console.log("0850 ".concat(Lr("push","tag-stray-character","".concat("[[".concat(r,", ").concat(S,', " "]]')))))):($({name:"tag-stray-character",position:[[r,S]]}),console.log("0862 ".concat(Lr("push","tag-stray-character","".concat("[[".concat(r,", ").concat(S,"]]"))))))}if(u&&"esp"===p&&h.tailStartAt&&null===h.tailEndAt&&!"{}%-$_()*|".includes(e[r+1])&&(console.log("0884 ".concat("[".concat(90,"m","within tail closing clauses","[",39,"m"))),u=r+1),u&&"esp"===p&&h.headVal&&null===h.tailStartAt)if(console.log("0900 ".concat("[".concat(90,"m","within ESP tag tail opening clauses","[",39,"m"))),h.recognised&&H(j[h.headVal].sibling).some(function(a){if(N.apply(void 0,[e,r].concat(t(a.split("")))))return c=a,ee=r,!0})){console.log("0912 recognised tail openings");var D=N.apply(void 0,[e,r].concat(t(c.split(""))));h.tailStartAt=D.leftmostChar,h.tailEndAt=D.rightmostChar+1,h.tailVal=e.slice(h.tailStartAt,h.tailEndAt),h.endAt=h.tailEndAt,u=h.endAt,console.log("0928 ".concat(Lr("SET","logEspTag.tailStartAt",h.tailStartAt,"logEspTag.tailEndAt",h.tailEndAt,"logEspTag.tailVal",h.tailVal,"logEspTag.endAt",h.endAt,"doNothingUntil",u))),Cr(e,h,$),T()}else Tr(h.headVal).includes(e[r])&&(console.log("0948 unrecognised tail openings"),"{}%-$_()*|".includes(e[k(e,r)])||h.headVal.includes(e[r])||Tr(h.headVal).includes(e[r])?(h.tailStartAt=r,console.log("0962 ".concat(Lr("SET","logEspTag.tailStartAt",h.tailStartAt)))):(console.log("".concat("[".concat(33,"m","logEspTag.headVal","[",39,"m")," = ",JSON.stringify(h.headVal,null,4))),console.log("logEspTag.headVal.includes(".concat(e[r],") = ").concat(h.headVal.includes(e[r])))));if(!(null!==h.headStartAt&&null===h.headEndAt&&r>h.headStartAt&&e[r+1])||e[r+1].trim().length&&"{}%-$_()*|".includes(e[r+1])||h.recognised&&"opening"!==j[h.headVal].type||"--"!==e.slice(h.headStartAt,r+1)&&(h.headEndAt=r+1,h.headVal=e.slice(h.headStartAt,r+1),h.recognised=Object.prototype.hasOwnProperty.call(j,h.headVal),console.log("1008 ".concat(Lr("SET","logEspTag.headEndAt",h.headEndAt,"logEspTag.headVal",h.headVal,"logEspTag.recognised",h.recognised)))),i.comment||null!==h.startAt||null!==h.headStartAt||!"{}%-$_()*|".includes(e[r])||!e[r+1]||L(e,r,"<","!")||u&&!0!==u||("{}%-$_()*|".includes(e[r+1])?(h.headStartAt=r,h.startAt=r,h.type="tag-based",console.log("1047 ".concat(Lr("SET","logEspTag.headStartAt",h.headStartAt,"logEspTag.startAt",h.startAt)))):"$".includes(e[r])&&vr(e[r+1])&&(h.headStartAt=r,h.startAt=r,h.headEndAt=r+1,h.headVal=e[r],h.type="function-based",h.recognised=Object.prototype.hasOwnProperty.call(j,e[r]),console.log("1072 ".concat(Lr("SET","logEspTag.headStartAt",h.headStartAt,"logEspTag.headEndAt",h.headEndAt,"logEspTag.startAt",h.startAt,"logEspTag.headVal",h.headVal,"logEspTag.recognised",h.recognised)))),null!==h.headStartAt&&null!==R.startAt&&R.startAt<r-1&&!R.includesLinebreaks&&($({name:"tag-excessive-whitespace-inside-tag",position:[[R.startAt+1,r]]}),console.log("1101 ".concat(Lr("push","tag-excessive-whitespace-inside-tag","".concat("[[".concat(R.startAt+1,", ").concat(r,"]]"))))))),!u&&null!==i.tagNameEndAt){if(console.log("1122 ".concat("[".concat(90,"m","above catching the ending of an attribute's name","[",39,"m"))),null===l.attrNameStartAt||null!==l.attrNameEndAt||null!==l.attrName||gr(e[r])||":"===e[r]&&gr(e[r+1])||(l.attrNameEndAt=r,l.attrName=e.slice(l.attrNameStartAt,l.attrNameEndAt),console.log("1138 ".concat(Lr("SET","logAttr.attrNameEndAt",l.attrNameEndAt,"logAttr.attrName",l.attrName))),"="!==e[r]&&("="===e[k(e,r)]?console.log("1153 equal to the right though"):console.log("1156 not equal, so terminate attr"))),console.log("1162 ".concat("[".concat(90,"m","above catching what follows the attribute's name","[",39,"m"))),null!==l.attrNameEndAt&&null===l.attrEqualAt&&r>=l.attrNameEndAt&&e[r].trim().length){var C;if("'"!==e[r]&&'"'!==e[r]||(C=wr(e,r)),console.log("1176 ".concat("[".concat(90,"m","inside catch what follows the attribute's name","[",39,"m"))),"="===e[r]){if(l.attrEqualAt=r,console.log("1181 ".concat(Lr("SET","logAttr.attrEqualAt",l.attrEqualAt))),e[r+1]){var O=k(e,r);if("="===e[O]){console.log("1200 REPEATED EQUAL DETECTED");var V=r+1,_=O+1;for(u=_,p="repeated equals",console.log("1211 ".concat(Lr("set","doNothingUntil",u))),console.log("1215 SET ".concat("[".concat(36,"m",'nextEqualStartAt = "'.concat(V,'"; nextEqualEndAt = "').concat(_,';"'),"[",39,"m")));V&&_;){console.log("       ".concat("[".concat(35,"m","*","[",39,"m"))),$({name:"tag-attribute-repeated-equal",position:[[V,_]]}),console.log("1224 ".concat(Lr("push","tag-attribute-repeated-equal","".concat("[[".concat(V,", ").concat(_,"]]")))));var G=k(e,_-1);console.log("1232 ".concat(Lr("set","temp",G))),"="===e[G]?(console.log("1235 ".concat("[".concat(36,"m",'yes, there\'s "=" on the right',"[",39,"m"))),V=_,_=G+1,console.log("1240 SET ".concat("[".concat(36,"m",'nextEqualStartAt = "'.concat(V,'"; nextEqualEndAt = "').concat(_,';"'),"[",39,"m"))),u=_,p="already processed equals",console.log("1248 ".concat(Lr("set","doNothingUntil",u)))):(V=null,console.log("1253 ".concat(Lr("set","nextEqualStartAt",V))))}console.log("       ".concat("[".concat(35,"m","*","[",39,"m")))}}}else C?(console.log("1265 quoted attribute's value on the right, equal is indeed missing"),$({name:"tag-attribute-missing-equal",position:[[r,r,"="]]}),console.log("1273 ".concat(Lr("push","tag-attribute-missing-equal","".concat("[[".concat(r,", ").concat(r,', "="]]'))))),l.attrEqualAt=r,console.log("1282 ".concat(Lr("SET","logAttr.attrEqualAt",l.attrEqualAt))),l.attrValueStartAt=r+1,console.log("1287 ".concat(Lr("SET","logAttr.attrValueStartAt",l.attrValueStartAt))),l.attrValueEndAt=C,console.log("1296 ".concat(Lr("SET","logAttr.attrValueEndAt",l.attrValueEndAt))),l.attrOpeningQuote.pos=r,l.attrOpeningQuote.val=e[r],l.attrClosingQuote.pos=C,l.attrClosingQuote.val=e[C],console.log("1308 ".concat(Lr("SET","logAttr.attrOpeningQuote",l.attrOpeningQuote,"logAttr.attrClosingQuote",l.attrClosingQuote))),l.attrValue=e.slice(r+1,C),console.log("1319 ".concat(Lr("SET","logAttr.attrValue",l.attrValue)))):(i.attributes.push(b(l)),console.log("1332 ".concat(Lr("PUSH, then RESET","logAttr"))),I());null!==R.startAt&&("="===e[r]?($({name:"tag-attribute-space-between-name-and-equals",position:[[R.startAt,r]]}),console.log("1347 ".concat(Lr("push","tag-attribute-space-between-name-and-equals","".concat("[[".concat(R.startAt,", ").concat(r,"]]"))))),z()):gr(e[r])&&(i.attributes.push(b(l)),console.log("1360 ".concat(Lr("PUSH, then RESET","logAttr"))),I(),null!==R.startAt&&(" "===e[R.startAt]?(R.startAt+1<r&&($({name:"tag-excessive-whitespace-inside-tag",position:[[R.startAt+1,r]]}),console.log("1375 ".concat(Lr("push","tag-excessive-whitespace-inside-tag","".concat("[[".concat(R.startAt+1,", ").concat(r,"]]")))))),console.log("1382 dead end of excessive whitespace check")):($({name:"tag-excessive-whitespace-inside-tag",position:[[R.startAt,r," "]]}),console.log("1390 ".concat(Lr("push","tag-excessive-whitespace-inside-tag","".concat("[[".concat(R.startAt,", ").concat(r,', " "]]')))))))))}if(console.log("1405 ".concat("[".concat(90,"m","above catching the begining of an attribute's name","[",39,"m"))),null===l.attrStartAt&&gr(e[r])&&(console.log("1410 ".concat("[".concat(90,"m","inside catching the begining of an attribute's name","[",39,"m"))),l.attrStartAt=r,l.attrNameStartAt=r,console.log("1415 ".concat(Lr("SET","logAttr.attrStartAt",l.attrStartAt,"logAttr.attrNameStartAt",l.attrNameStartAt))),null!==R.startAt&&R.startAt<r-1&&(" "===e[R.startAt]?($({name:"tag-excessive-whitespace-inside-tag",position:[[R.startAt+1,r]]}),console.log("1437 ".concat(Lr("push","tag-excessive-whitespace-inside-tag","".concat("[[".concat(R.startAt+1,", ").concat(r,"]]")))))):($({name:"tag-excessive-whitespace-inside-tag",position:[[R.startAt,r," "]]}),console.log("1450 ".concat(Lr("push","tag-excessive-whitespace-inside-tag","".concat("[[".concat(R.startAt,", ").concat(r,', " "]]'))))))),e[r-1]&&Dr(e[r-1])))for(var X=r-1;X--;)if(!Dr(e[X])){e[X].trim().length||($({name:"tag-stray-character",position:[[X+1,r]]}),console.log("1471 ".concat(Lr("push","tag-stray-character","".concat(JSON.stringify([[X+1,r]],null,0))))));break}if(console.log("1486 ".concat("[".concat(90,"m","above catching what follows attribute's equal","[",39,"m"))),null!==l.attrEqualAt&&null===l.attrOpeningQuote.pos)if(console.log("1494 ".concat("[".concat(90,"m","inside catching what follows attribute's equal","[",39,"m"))),l.attrEqualAt<r&&e[r].trim().length){if(console.log("1497"),34===A||39===A){R.startAt&&R.startAt<r&&($({name:"tag-attribute-space-between-equals-and-opening-quotes",position:[[R.startAt,r]]}),console.log("1508 ".concat(Lr("push","tag-attribute-space-between-equals-and-opening-quotes","".concat(JSON.stringify([[R.startAt,r]],null,0)))))),z(),l.attrOpeningQuote.pos=r,l.attrOpeningQuote.val=e[r];var re=qr(e,r);if(console.log("1522 ".concat(Lr("set","closingQuotePeek",re))),re){if(e[re]!==e[r])if("'"===e[re]||'"'===e[re]){var te='"'===e[re],ae="tag-attribute-mismatching-quotes-is-".concat(te?"double":"single");$({name:ae,position:[[re,re+1,"".concat(te?"'":'"')]]}),console.log("1553 ".concat(Lr("push",ae,"".concat("[[".concat(re,", ").concat(re+1,", ").concat(te?"'":'"',"]]")))))}else{var ne=e[re-1].trim().length?re:P(e,re)+1;console.log("1576 ".concat(Lr("set","fromPositionToInsertAt",ne)));var oe=re;console.log("1584 ".concat(Lr("set","toPositionToInsertAt",oe))),"/"===e[P(e,re)]&&(console.log("1592 SLASH ON THE LEFT"),(oe=P(e,re))+1<re&&($({name:"tag-whitespace-closing-slash-and-bracket",position:[[oe+1,re]]}),console.log("1601 ".concat(Lr("push","tag-whitespace-closing-slash-and-bracket","".concat("[[".concat(oe+1,", ").concat(re,"]]")))))),ne=P(e,oe)+1,console.log("1614 ".concat(Lr("set","toPositionToInsertAt",oe,"fromPositionToInsertAt",ne)))),$({name:"tag-attribute-closing-quotation-mark-missing",position:[[ne,oe,"".concat(e[r]).concat("")]]}),console.log("1635 ".concat(Lr("push","tag-attribute-closing-quotation-mark-missing","".concat("[[".concat(re,", ").concat(re,", ","".concat(e[r]).concat(""),"]]")))))}l.attrClosingQuote.pos=re,l.attrClosingQuote.val=e[r],l.attrValue=e.slice(r+1,re),l.attrValueStartAt=r+1,l.attrValueEndAt=re,l.attrEndAt=re,console.log("1651 ".concat(Lr("set","logAttr.attrClosingQuote",l.attrClosingQuote,"logAttr.attrValue",l.attrValue,"logAttr.attrValueStartAt",l.attrValueStartAt,"logAttr.attrValueEndAt",l.attrValueEndAt,"logAttr.attrEndAt",l.attrEndAt)));for(var se=r+1;se<re;se++){var ce=Ir(e,se);ce&&(Q.push(ce),console.log("1677 ".concat(Lr("push tagIssueStaging","newIssue",ce))))}if(J.length&&console.log("1686 ".concat("[".concat(31,"m","██","[",39,"m")," raw stage present: ",JSON.stringify(J,null,4))),!l.attrNameStartAt||!e[l.attrNameStartAt-1].trim().length||o.rules&&!1===o.rules["tag-stray-character"]||M.issues.some(function(e){return ee=r,("tag-stray-quotes"===e.name||"tag-stray-character"===e.name)&&e.position[0][1]===l.attrNameStartAt})||($({name:"tag-missing-space-before-attribute",position:[[l.attrNameStartAt,l.attrNameStartAt," "]]}),console.log("1719 ".concat(Lr("push","tag-missing-space-before-attribute","".concat("[[".concat(l.attrNameStartAt,", ").concat(l.attrNameStartAt,', " "]]')))))),i.attributes.push(b(l)),console.log("1729 ".concat(Lr("PUSH, then RESET","logAttr"))),e[re].trim().length){var ie=re-(Dr(e[re])?0:1)+1;ie>r&&(u=ie,p="closing quote looked up"),console.log("1745 ".concat(Lr("set","doNothingUntil",u,"doNothingUntilReason",p)))}else{var le=P(e,re)+1;le>r&&(u=le,p="closing quote looked up"),console.log("1762 ".concat(Lr("set","doNothingUntil",u,"doNothingUntilReason",p)))}return null!==Y&&(K=l.attrClosingQuote.pos),console.log("1775 ".concat(Lr("set","doNothingUntil",u,"withinQuotesEndAt",K))),I(),r===n-1&&null!==i.tagStartAt&&(null!==l.attrEqualAt&&null!==l.attrOpeningQuote.pos||i.attributes.some(function(e){return null!==e.attrEqualAt&&null!==e.attrOpeningQuote.pos}))&&($({name:"tag-missing-closing-bracket",position:[[r+1,r+1,">"]]}),console.log("1805 ".concat(Lr("push","tag-missing-closing-bracket","".concat("[[".concat(r+1,", ").concat(r+1,', ">"]]')))))),console.log("1813 ".concat(Lr("continue"))),ee=r,"continue"}}else if(8220===A||8221===A){l.attrOpeningQuote.pos=r,l.attrOpeningQuote.val='"',console.log("1824 ".concat(Lr("set","logAttr.attrOpeningQuote",l.attrOpeningQuote)));var ue=8220===A?"tag-attribute-left-double-quotation-mark":"tag-attribute-right-double-quotation-mark";$({name:ue,position:[[r,r+1,'"']]}),console.log("1841 ".concat(Lr("push",ue,"".concat("[[".concat(r,", ").concat(r+1,", '\"']]"))))),l.attrValueStartAt=r+1,console.log("1846 ".concat(Lr("set","logAttr.attrValueStartAt",l.attrValueStartAt))),Y=r,console.log("1855 ".concat(Lr("set","withinQuotes",Y)))}else{if(8216!==A&&8217!==A){if(yr(e,r)){console.log("2402 [".concat(33,"m","██","[",39,"m - withinTagInnerspace() ","[".concat(32,"m","true","[",39,"m")));var pe=l.attrStartAt,de=k(e,r);if(console.log("2416 ".concat(Lr("set","start",pe,"temp",de))),"/"===e[r]&&de&&">"===e[de]||">"===e[r])for(var me=l.attrStartAt;me--;)if(e[me].trim().length){pe=me+1;break}return $({name:"tag-attribute-quote-and-onwards-missing",position:[[pe,r]]}),console.log("2435 ".concat(Lr("push","tag-attribute-quote-and-onwards-missing","".concat("[[".concat(pe,", ").concat(r,"]]"))))),console.log("2442 ".concat(Lr("reset","logWhitespace"))),z(),console.log("2444 ".concat(Lr("reset","logAttr"))),I(),console.log("2449 ".concat(Lr("offset the index","i--; then continue"))),ee=--r,"continue"}console.log("1898 [".concat(33,"m","██","[",39,"m - withinTagInnerspace() ","[".concat(32,"m","false","[",39,"m")));var ge=qr(e,r);console.log("1904 ███████████████████████████████████████"),console.log("1906 ".concat(Lr("set","closingQuotePeek",ge)));var fe=Dr(e[ge])?e[ge]:'"';$({name:"tag-attribute-opening-quotation-mark-missing",position:[[P(e,r)+1,r,fe]]}),console.log("1919 ".concat(Lr("push","tag-attribute-opening-quotation-mark-missing","".concat("[[".concat(P(e,r)+1,", ").concat(r,", ").concat(fe,"]]"))))),l.attrOpeningQuote={pos:r,val:fe},l.attrValueStartAt=r,console.log("1933 mark opening quote: ".concat(Lr("set","logAttr.attrOpeningQuote",l.attrOpeningQuote,"logAttr.attrValueStartAt",l.attrValueStartAt))),Y=r,console.log("1943 ".concat(Lr("set","withinQuotes",Y))),console.log("1948 traverse forward\n\n\n");for(var he,be=null,xe=null,Ae=r;Ae<n;Ae++){if(console.log("1975 [".concat(36,"m","str[".concat(Ae,'] = "').concat(e[Ae],'"'),"[",39,"m")),">"===e[Ae]&&("/"!==e[P(e,Ae)]&&yr(e,Ae)||"/"===e[P(e,Ae)])){var we=P(e,Ae);be=Ae,console.log("1985 ".concat(Lr("set","leftAt",we,"closingBracketIsAt",be))),xe=Ae,"/"===e[we]&&(xe=we,console.log("1997 ".concat(Lr("set","innerTagEndsAt",xe))))}if(null!==xe&&"=<".includes(e[Ae])){console.log("2009 [".concat(36,"m",'break ("'.concat(e[Ae],'" is a bad character)'),"[",39,"m"));break}}console.log("2015 ".concat(Lr("set","closingBracketIsAt",be,"innerTagEndsAt",xe))),he=r<xe?e.slice(r,xe):"",console.log("2031 ".concat(Lr("set","innerTagContents",he)));var ye,ve=xe;if(he.includes("=")){console.log("2046 inner tag contents include an equal character");var qe=he.split("=")[0];if(console.log("2059 ".concat(Lr("set","temp1",qe))),qe.split("").some(function(e){return!e.trim().length})){console.log("2064 traverse backwards to find beginning of the attr on the right\n\n\n");for(var Se=r+qe.length;Se--;){if(console.log("2068 [".concat(35,"m","str[".concat(Se,"] = ").concat(e[Se]),"[",39,"m")),!e[Se].trim().length){ye=Se+1,console.log("2073 ".concat(Lr("set","attributeOnTheRightBeginsAt",ye,"then BREAK")));break}if(Se===r)break}console.log("\n\n\n"),console.log("2090 ".concat(Lr("log","attributeOnTheRightBeginsAt",ye)));var Ee=P(e,ye);Dr(Ee)||(ve=Ee+1)}}else console.log("2106 inner tag contents don't include an equal character");var De=null,Ie=null,Ce=null,ke=!1;console.log("\n\n\n\n\n\n"),console.log("2122 ".concat("[".concat(31,"m","TRAVERSE BACKWARDS","[",39,"m"),"; startingPoint=",ve));for(var Pe=ve;Pe--;Pe>r){if(console.log("2127 ".concat("[".concat(36,"m","str[".concat(Pe,"] = ").concat(e[Pe]),"[",39,"m"))),"="===e[Pe]){console.log("2131 ".concat(Lr("break")));break}if(null===De&&e[Pe].trim().length&&(De=Pe+1,console.log("2139 ".concat(Lr("set","caughtAttrEnd",De))),ke&&(Ce=De,console.log("2146 ".concat(Lr("set","finalClosingQuotesShouldBeAt",Ce))),ke=!1,console.log("2155 ".concat(Lr("set","boolAttrFound",ke))))),!e[Pe].trim().length&&De){if(Ie=Pe+1,console.log("2163 ".concat("[".concat(35,"m","ATTR","[",39,"m"),": ",e.slice(Ie,De)," (").concat(Ie,"-").concat(De,")")),"="===e[k(e,De)]){var Te=P(e,Ie);Dr(e[Te])||(ye=k(e,Te+1),console.log("2180 ".concat(Lr("set","attributeOnTheRightBeginsAt",ye))));break}if(!a.includes(e.slice(Ie,De))){console.log("2203 ".concat(Lr("break")));break}ke=!0,console.log("2199 ".concat(Lr("set","boolAttrFound",ke))),De=null,Ie=null,console.log("2212 ".concat(Lr("reset","caughtAttrEnd",De,"caughtAttrStart",Ie)))}}if(console.log("2223 ".concat("[".concat(31,"m","TRAVERSE ENDED","[",39,"m"))),console.log("2232 ".concat(Lr("log","finalClosingQuotesShouldBeAt",Ce,"attributeOnTheRightBeginsAt",ye))),!Ce&&ye&&(Ce=P(e,ye)+1,console.log("2246 ".concat(Lr("log","attributeOnTheRightBeginsAt",ye))),console.log("2253 ".concat(Lr("set","finalClosingQuotesShouldBeAt",Ce)))),console.log("2262 ██ ".concat(Lr("log","caughtAttrEnd",De,"left(str, caughtAttrEnd)",P(e,De)))),De&&l.attrOpeningQuote&&!Ce&&e[P(e,De)]!==l.attrOpeningQuote.val&&(Ce=De,console.log("2279 ".concat(Lr("set","finalClosingQuotesShouldBeAt",Ce)))),console.log("2288 ".concat("[".concat(32,"m","██"," [",39,"m")," ","[".concat(33,"m","finalClosingQuotesShouldBeAt","[",39,"m")," = ",JSON.stringify(Ce,null,4))),Ce?($({name:"tag-attribute-closing-quotation-mark-missing",position:[[Ce,Ce,l.attrOpeningQuote.val]]}),console.log("2310 ".concat(Lr("push","tag-attribute-closing-quotation-mark-missing","".concat("[[".concat(Ce,", ").concat(Ce,", ").concat(l.attrOpeningQuote.val,"]]"))))),l.attrClosingQuote.pos=Ce,l.attrValueEndAt=Ce,l.attrEndAt=Ce+1):(l.attrClosingQuote.pos=P(e,De),l.attrValueEndAt=l.attrClosingQuote.pos,l.attrEndAt=De),l.attrClosingQuote.val=l.attrOpeningQuote.val,l.attrValue=e.slice(l.attrOpeningQuote.pos,l.attrClosingQuote.pos),console.log("2336 ".concat(Lr("set","logAttr.attrClosingQuote.pos",l.attrClosingQuote.pos,"logAttr.attrClosingQuote.val",l.attrClosingQuote.val,"logAttr.attrValueEndAt",l.attrValueEndAt,"logAttr.attrEndAt",l.attrEndAt,"logAttr.attrValue",l.attrValue))),l.attrValueStartAt<l.attrValueEndAt)for(var Le=l.attrValueStartAt;Le<l.attrValueEndAt;Le++){console.log("2359 [".concat(36,"m","str[".concat(Le,"] = ").concat(e[Le]),"[",39,"m"));var Ne=Ir(e,Le);Ne&&($(Ne),console.log("2365 ".concat(Lr("push","unencoded character",Ne))))}return u||(u=l.attrClosingQuote.pos,p="missing opening quotes",R.startAt=null,console.log("2378 ".concat(Lr("set","doNothingUntil",u,"logWhitespace.startAt",R.startAt)))),console.log("2389 ".concat(Lr("about to push","logAttr",l))),i.attributes.push(b(l)),console.log("2392 ".concat(Lr("PUSH, then RESET","logAttr","then CONTINUE"))),I(),ee=r,"continue"}l.attrOpeningQuote.pos=r,l.attrOpeningQuote.val="'",console.log("1864 ".concat(Lr("set","logAttr.attrOpeningQuote",l.attrOpeningQuote)));var Re=8216===A?"tag-attribute-left-single-quotation-mark":"tag-attribute-right-single-quotation-mark";$({name:Re,position:[[r,r+1,"'"]]}),console.log("1881 ".concat(Lr("push",Re,"".concat("[[".concat(r,", ").concat(r+1,", '\"']]"))))),l.attrValueStartAt=r+1,console.log("1886 ".concat(Lr("set","logAttr.attrValueStartAt",l.attrValueStartAt))),Y=r,console.log("1895 ".concat(Lr("set","withinQuotes",Y)))}console.log("2456 ".concat(Lr("SET","logAttr.attrOpeningQuote.pos",l.attrOpeningQuote.pos,"logAttr.attrOpeningQuote.val",l.attrOpeningQuote.val))),null!==R.startAt&&("'"===e[r]||'"'===e[r]?($({name:"tag-attribute-space-between-equals-and-opening-quotes",position:[[R.startAt,r]]}),console.log("2474 ".concat(Lr("push","tag-attribute-space-between-equals-and-opening-quotes","".concat("[[".concat(R.startAt,", ").concat(r,"]]")))))):yr(e,r+1)&&($({name:"tag-attribute-quote-and-onwards-missing",position:[[l.attrStartAt,r]]}),console.log("2489 ".concat(Lr("push","tag-attribute-quote-and-onwards-missing","".concat("[[".concat(l.attrStartAt,", ").concat(r,"]]"))))),console.log("2495 ".concat(Lr("reset","logAttr"))),I()))}else if(!e[r+1]||!k(e,r))return console.log("2500"),$({name:"file-missing-ending",position:[[r+1,r+1]]}),console.log("2506 ".concat(Lr("push","file-missing-ending","".concat("[[".concat(r+1,", ").concat(r+1,"]]"))))),console.log("2512 then CONTINUE"),ee=r,"continue";if(console.log("2518 ".concat("[".concat(90,"m","above catching closing quote (single or double)","[",39,"m"))),null!==l.attrEqualAt&&null!==l.attrOpeningQuote.pos&&(null===l.attrClosingQuote.pos||r===l.attrClosingQuote.pos)&&r>l.attrOpeningQuote.pos&&Dr(e[r]))if(console.log("2530 ".concat("[".concat(90,"m","inside catching closing quote (single or double)","[",39,"m"))),34===A||39===A){var Be="tag-attribute-mismatching-quotes-is-".concat(34===A?"double":"single");e[r]===l.attrOpeningQuote.val||M.issues.length&&M.issues.some(function(e){return ee=r,e.name===Be&&1===e.position.length&&e.position[0][0]===r&&e.position[0][1]===r+1})?console.log("2566 ".concat("[".concat(31,"m","didn't push an issue","[",39,"m"))):($({name:Be,position:[[r,r+1,"".concat(34===A?"'":'"')]]}),console.log("2558 ".concat(Lr("push",Be,"".concat("[[".concat(r,", ").concat(r+1,", ").concat(34===A?"'":'"',"]]")))))),l.attrClosingQuote.pos=r,l.attrClosingQuote.val=e[r],console.log("2577 ".concat(Lr("SET","logAttr.attrClosingQuote.pos",l.attrClosingQuote.pos,"logAttr.attrClosingQuote.val",l.attrClosingQuote.val))),null===l.attrValue&&(l.attrOpeningQuote.pos&&l.attrClosingQuote.pos&&l.attrOpeningQuote.pos+1<l.attrClosingQuote.pos?l.attrValue=e.slice(l.attrValueStartAt,r):l.attrValue="",console.log("2602 ".concat(Lr("SET","logAttr.attrValue",l.attrValue)))),l.attrEndAt=r,l.attrValueEndAt=r,console.log("2610 ".concat(Lr("SET","logAttr.attrEndAt",l.attrEndAt,"logAttr.attrValueEndAt",l.attrValueEndAt))),Y&&(Y=null,console.log("2622 ".concat(Lr("SET","withinQuotes",Y)))),i.attributes.push(b(l)),console.log("2627 ".concat(Lr("PUSH, then RESET","logAttr"))),I()}else if(!Pr(l.attrOpeningQuote.val)||8220!==A&&8221!==A){if(Pr(l.attrOpeningQuote.val)&&(8216===A||8217===A)&&(null!==k(e,r)&&(">"===e[k(e,r)]||"/"===e[k(e,r)])||yr(e,r+1))){var Fe=8216===A?"tag-attribute-left-single-quotation-mark":"tag-attribute-right-single-quotation-mark";$({name:Fe,position:[[r,r+1,"'"]]}),console.log("2685 ".concat(Lr("push",Fe,"".concat("[[".concat(r,", ").concat(r+1,', "\'"]]'))))),l.attrEndAt=r,l.attrClosingQuote.pos=r,l.attrClosingQuote.val="'",console.log("2693 ".concat(Lr("SET","logAttr.attrEndAt",l.attrEndAt,"logAttr.attrClosingQuote",l.attrClosingQuote))),Y=null,K=null,console.log("2706 ".concat(Lr("reset","withinQuotes & withinQuotesEndAt"))),i.attributes.push(b(l)),console.log("2711 ".concat(Lr("PUSH, then RESET","logAttr"))),I()}}else{var Oe=8220===A?"tag-attribute-left-double-quotation-mark":"tag-attribute-right-double-quotation-mark";$({name:Oe,position:[[r,r+1,'"']]}),console.log("2645 ".concat(Lr("push",Oe,"".concat("[[".concat(r,", ").concat(r+1,", '\"']]"))))),l.attrEndAt=r,l.attrClosingQuote.pos=r,l.attrClosingQuote.val='"',console.log("2653 ".concat(Lr("SET","logAttr.attrEndAt",l.attrEndAt,"logAttr.attrClosingQuote",l.attrClosingQuote))),i.attributes.push(b(l)),console.log("2664 ".concat(Lr("PUSH, then RESET","logAttr"))),I()}console.log("2719 ".concat("[".concat(90,"m","error clauses","[",39,"m"))),l.attrOpeningQuote.val&&l.attrOpeningQuote.pos<r&&null===l.attrClosingQuote.pos&&("/"===e[r]&&k(e,r)&&">"===e[k(e,r)]||">"===e[r])&&(console.log("2730 inside error catch clauses"),$({name:"tag-attribute-closing-quotation-mark-missing",position:[[r,r,l.attrOpeningQuote.val]]}),console.log("2737 ".concat(Lr("push","tag-attribute-closing-quotation-mark-missing","".concat("[[".concat(r,", ").concat(r,", ").concat(l.attrOpeningQuote.val,"]]"))))),l.attrClosingQuote.pos=r,l.attrClosingQuote.val=l.attrOpeningQuote.val,console.log("2747 ".concat(Lr("set","logAttr.attrClosingQuote",l.attrClosingQuote))),i.attributes.push(b(l)),console.log("2755 ".concat(Lr("PUSH, then RESET","logAttr"))),I())}if(A<32){var Ve="bad-character-".concat(or[A]);if(9===A)u||($({name:Ve,position:[[r,r+1,"  "]]}),console.log('2784 PUSH "'.concat(Ve,'", [[').concat(r,", ").concat(r+1,', "  "]]')));else if(13===A)Pr(e[r+1])&&10===e[r+1].charCodeAt(0)?(u||(o.style&&o.style.line_endings_CR_LF_CRLF&&"CRLF"!==o.style.line_endings_CR_LF_CRLF?($({name:"file-wrong-type-line-ending-CRLF",position:[[r,r+2,s]]}),console.log("2805 ".concat(Lr("push","file-wrong-type-line-ending-CRLF","".concat("[[".concat(r,", ").concat(r+2,", ").concat(JSON.stringify(s,null,0),"]]")))))):(Z.crlf.push([r,r+2]),console.log("2819 ".concat(Lr("logLineEndings.crlf push","[".concat(r,", ").concat(r+2,"]")))))),null!==h.headStartAt&&($({name:"esp-line-break-within-templating-tag",position:[[r,r+2]]}),console.log("2831 ".concat(Lr("push","esp-line-break-within-templating-tag","".concat("[[".concat(r,", ").concat(r+2,"]]"))))))):(u||(o.style&&o.style.line_endings_CR_LF_CRLF&&"CR"!==o.style.line_endings_CR_LF_CRLF?($({name:"file-wrong-type-line-ending-CR",position:[[r,r+1,s]]}),console.log("2852 ".concat(Lr("push","file-wrong-type-line-ending-CR","".concat("[[".concat(r,", ").concat(r+1,", ").concat(JSON.stringify(s,null,0),"]]")))))):(Z.cr.push([r,r+1]),console.log("2866 ".concat(Lr("logLineEndings.cr push","[".concat(r,", ").concat(r+1,"]")))))),null!==h.headStartAt&&($({name:"esp-line-break-within-templating-tag",position:[[r,r+1]]}),console.log("2878 ".concat(Lr("push","esp-line-break-within-templating-tag","".concat("[[".concat(r,", ").concat(r+1,"]]")))))));else if(10===A)Pr(e[r-1])&&13===e[r-1].charCodeAt(0)||(u||(o.style&&o.style.line_endings_CR_LF_CRLF&&"LF"!==o.style.line_endings_CR_LF_CRLF?($({name:"file-wrong-type-line-ending-LF",position:[[r,r+1,s]]}),console.log("2903 ".concat(Lr("push","file-wrong-type-line-ending-LF","".concat("[[".concat(r,", ").concat(r+1,", ").concat(JSON.stringify(s,null,0),"]]")))))):(Z.lf.push([r,r+1]),console.log("2917 ".concat(Lr("logLineEndings.lf push","[".concat(r,", ").concat(r+1,"]")))))),null!==h.headStartAt&&(console.log("2925 ISSUE WILL BE RAISED BECAUSE logEspTag.headStartAt = ".concat(h.headStartAt)),$({name:"esp-line-break-within-templating-tag",position:[[r,r+1]]}),console.log("2932 ".concat(Lr("push","esp-line-break-within-templating-tag","".concat("[[".concat(r,", ").concat(r+1,"]]")))))));else if(!u){var Ue,je=P(e,r),_e=k(e,r);if(je<r-1&&(_e>r+1||null===_e&&e[r+1]&&"\n"!==e[r+1]&&"\r"!==e[r+1]&&!e[r+1].trim().length)){var He=e.slice(je+1,_e);Ue=He.includes("\n")||He.includes("\r")?o.style&&o.style.line_endings_CR_LF_CRLF?o.style.line_endings_CR_LF_CRLF:"\n":" "}console.log("2972 ".concat(Lr("log","addThis",Ue))),Ue?($({name:Ve,position:[[je+1,_e,Ue]]}),console.log("2986 ".concat(Lr("push",Ve,"".concat("[[".concat(je+1,", ").concat(_e,", ").concat(Ue,"]]")))))):($({name:Ve,position:[[r,r+1]]}),console.log("2998 ".concat(Lr("push",Ve,"".concat("[[".concat(r,", ").concat(r+1,"]]"))))))}}else if(!u&&A>126&&A<160){var Ge="bad-character-".concat(sr[A-127]);$({name:Ge,position:[[r,r+1]]}),console.log("3009 ".concat(Lr("push",Ge,"".concat("[[".concat(r,", ").concat(r+1,"]]")))))}else if(u||38!==A)if(u||60!==A)if(u||62!==A)if(u||160!==A)if(u||5760!==A)if(u||8192!==A)if(u||8193!==A)if(u||8194!==A)if(u||8195!==A)if(u||8196!==A)if(u||8197!==A)if(u||8198!==A)if(u||8199!==A)if(u||8200!==A)if(u||8201!==A)if(u||8202!==A)if(u||8203!==A)if(u||8232!==A)if(u||8233!==A)if(u||8239!==A)if(u||8287!==A)if(u||12288!==A){if(!u&&Ir(e,r)){console.log("3359 ".concat("[".concat(90,"m","it's a raw character which should be encoded","[",39,"m")));var ze=Ir(e,r);$(ze,"raw"),console.log("3363 ".concat(Lr("push to raw stage","newIssue",ze)))}else if(!u&&A>=888&&A<=8591)console.log("3365"),(888===A||889===A||A>=896&&A<=899||907===A||909===A||930===A||1328===A||1367===A||1368===A||1419===A||1419===A||1420===A||1424===A||A>=1480&&A<=1487||A>=1515&&A<=1519||A>=1525&&A<=1535||1565===A||1806===A||1867===A||1868===A||A>=1970&&A<=1983||A>=2043&&A<=2047||2094===A||2095===A||2111===A||2140===A||2141===A||2143===A||A>=2155&&A<=2207||2229===A||A>=2238&&A<=2258||2436===A||2445===A||2446===A||2449===A||2450===A||2473===A||2481===A||2483===A||2484===A||2485===A||2490===A||2491===A||2501===A||2502===A||2505===A||2506===A||A>=2511&&A<=2518||A>=2520&&A<=2523||2526===A||A>=8384&&A<=8399||A>=8433&&A<=8447||8588===A||8589===A||8590===A||8591===A)&&($({name:"bad-character-generic",position:[[r,r+1]]}),console.log("3436 ".concat(Lr("push","bad-character-generic","".concat("[[".concat(r,", ").concat(r+1,"]]"))))));else if(A>=128&&!u){console.log("3440 ".concat("[".concat(31,"m","██","[",39,"m")," caught a character outside ASCII!"));var Qe=kr(e.slice(r,r+1));$({name:"bad-character-unencoded-char-outside-ascii",position:[[r,r+1,Qe]]}),console.log("3449 ".concat(Lr("push","bad-character-unencoded-char-outside-ascii","".concat("[[".concat(r,", ").concat(r+1,', "').concat(Qe,'"]]')))))}}else{var Je="bad-character-ideographic-space";$({name:Je,position:[[r,r+1," "]]}),console.log("3355 ".concat(Lr("push",Je,"".concat("[[".concat(r,", ").concat(r+1,', "\\n"]]')))))}else{var Me="bad-character-medium-mathematical-space";$({name:Me,position:[[r,r+1," "]]}),console.log("3344 ".concat(Lr("push",Me,"".concat("[[".concat(r,", ").concat(r+1,', "\\n"]]')))))}else{var $e="bad-character-narrow-no-break-space";$({name:$e,position:[[r,r+1," "]]}),console.log("3333 ".concat(Lr("push",$e,"".concat("[[".concat(r,", ").concat(r+1,', "\\n"]]')))))}else{var We="bad-character-paragraph-separator";$({name:We,position:[[r,r+1,"\n"]]}),console.log("3322 ".concat(Lr("push",We,"".concat("[[".concat(r,", ").concat(r+1,', "\\n"]]')))))}else{var Ze="bad-character-line-separator";$({name:Ze,position:[[r,r+1,"\n"]]}),console.log("3311 ".concat(Lr("push",Ze,"".concat("[[".concat(r,", ").concat(r+1,', "\\n"]]')))))}else{var Ye="bad-character-zero-width-space";$({name:Ye,position:[[r,r+1]]}),console.log("3301 ".concat(Lr("push",Ye,"".concat("[[".concat(r,", ").concat(r+1,"]]")))))}else{var Ke="bad-character-hair-space";$({name:Ke,position:[[r,r+1," "]]}),console.log("3291 ".concat(Lr("push",Ke,"".concat("[[".concat(r,", ").concat(r+1,', " "]]')))))}else{var Xe="bad-character-thin-space";$({name:Xe,position:[[r,r+1," "]]}),console.log("3282 ".concat(Lr("push",Xe,"".concat("[[".concat(r,", ").concat(r+1,', " "]]')))))}else{var er="bad-character-punctuation-space";$({name:er,position:[[r,r+1," "]]}),console.log("3273 ".concat(Lr("push",er,"".concat("[[".concat(r,", ").concat(r+1,', " "]]')))))}else{var rr="bad-character-figure-space";$({name:rr,position:[[r,r+1," "]]}),console.log("3264 ".concat(Lr("push",rr,"".concat("[[".concat(r,", ").concat(r+1,', " "]]')))))}else{var tr="bad-character-six-per-em-space";$({name:tr,position:[[r,r+1," "]]}),console.log("3255 ".concat(Lr("push",tr,"".concat("[[".concat(r,", ").concat(r+1,', " "]]')))))}else{var ar="bad-character-four-per-em-space";$({name:ar,position:[[r,r+1," "]]}),console.log("3246 ".concat(Lr("push",ar,"".concat("[[".concat(r,", ").concat(r+1,', " "]]')))))}else{var nr="bad-character-three-per-em-space";$({name:nr,position:[[r,r+1," "]]}),console.log("3237 ".concat(Lr("push",nr,"".concat("[[".concat(r,", ").concat(r+1,', " "]]')))))}else{var cr="bad-character-em-space";$({name:cr,position:[[r,r+1," "]]}),console.log("3228 ".concat(Lr("push",cr,"".concat("[[".concat(r,", ").concat(r+1,', " "]]')))))}else{var ir="bad-character-en-space";$({name:ir,position:[[r,r+1," "]]}),console.log("3219 ".concat(Lr("push",ir,"".concat("[[".concat(r,", ").concat(r+1,', " "]]')))))}else $({name:"bad-character-em-quad",position:[[r,r+1," "]]}),console.log("3210 ".concat(Lr("push","bad-character-em-quad","".concat("[[".concat(r,", ").concat(r+1,', " "]]')))));else{var lr="bad-character-en-quad";$({name:lr,position:[[r,r+1," "]]}),console.log("3201 ".concat(Lr("push",lr,"".concat("[[".concat(r,", ").concat(r+1,', " "]]')))))}else{var ur="bad-character-ogham-space-mark";$({name:ur,position:[[r,r+1," "]]}),console.log("3192 ".concat(Lr("push",ur,"".concat("[[".concat(r,", ").concat(r+1,', " "]]')))))}else{var pr="bad-character-unencoded-non-breaking-space";$({name:pr,position:[[r,r+1,"&nbsp;"]]}),console.log("3182 ".concat(Lr("push",pr,"".concat("[[".concat(r,", ").concat(r+1,', "&nbsp;"]]')))))}else{console.log("3160 ".concat("[".concat(90,"m",'within closing raw bracket ">" clauses',"[",39,"m")));var mr=P(e,r);if("-"===e[mr]){var fr=P(e,mr);e[fr]}else console.log("3169 submitClosingBracket(".concat(r,", ").concat(r+1,")")),$({name:"bad-character-unencoded-closing-bracket",position:[[m=r,g=r+1,"&gt;"]]},"raw"),console.log("0358 ".concat(Lr("push raw","bad-character-unencoded-closing-bracket","".concat("[[".concat(m,", ").concat(g,', "&gt;"]]')))))}else{console.log("3033 ".concat("[".concat(90,"m",'within opening raw bracket "<" clauses',"[",39,"m")));var hr=k(e,r);if(hr){var br=k(e,hr);if("!"===e[hr]){hr>r+1&&"["!==e[k(e,hr)]&&($({name:"html-comment-spaces",position:[[r+1,hr]]}),console.log("3050 ".concat(Lr("push","html-comment-spaces","".concat("[[".concat(r+1,", ").concat(hr,"]]"))))));var xr=k(e,br);if("-"===e[br]){br>hr+1&&($({name:"html-comment-spaces",position:[[hr+1,br]]}),console.log("3067 ".concat(Lr("push","html-comment-spaces","".concat("[[".concat(hr+1,", ").concat(br,"]]"))))));var Ar=k(e,xr);if("-"===e[xr]&&(i.comment=!0,console.log("3081 ".concat(Lr("set","logTag.comment","".concat(i.comment)))),xr>br+1&&($({name:"html-comment-spaces",position:[[br+1,xr]]}),console.log("3091 ".concat(Lr("push","html-comment-spaces","".concat("[[".concat(br+1,", ").concat(xr,"]]"))))))),"-"===e[Ar]){console.log("3102 ".concat("[".concat(36,"m","======= do-while loop =======","[",39,"m")));var Nr,Rr=Ar;do{Nr=k(e,Rr),console.log("3110 ".concat("[".concat(36,"m","SET charOnTheRightAt = ".concat(Nr),"[",39,"m"))),"-"===e[Nr]&&(Rr=Nr,console.log("3115 ".concat("[".concat(36,"m","SET endingOfTheSequence = ".concat(Rr),"[",39,"m"))))}while("-"===e[Nr]);var Br=k(e,Rr);$({name:"html-comment-redundant-dash",position:[[xr+1,Br]]}),console.log("3126 ".concat(Lr("push","html-comment-redundant-dash","".concat("[[".concat(xr+1,", ").concat(Br,"]]"))))),u=Br,p="repeated HTML comment dashes",console.log("3136 ".concat(Lr("set","doNothingUntil",u,"doNothingUntilReason",p)))}}}else"-"===e[hr]||(console.log("3150 submitOpeningBracket(".concat(r,", ").concat(r+1,")")),W(r,r+1))}else console.log("3155 submitOpeningBracket(".concat(r,", ").concat(r+1,")")),W(r,r+1)}else console.log("3012 raw ampersand clauses"),Er(e[k(e,r)])?(d.push(r),console.log("3016 ".concat(Lr("stage","ampersandStage",d)))):($({name:"bad-character-unencoded-ampersand",position:[[r,r+1,"&amp;"]]}),console.log("3024 ".concat(Lr("push","bad-character-unencoded-ampersand","".concat("[[".concat(r,", ").concat(r+1,', "&amp;"]]'))))));if(!u&&null!==R.startAt&&e[r].trim().length&&(console.log("3467 ".concat("[".concat(90,"m","inside whitespace chunks ending clauses","[",39,"m"))),null!==i.tagNameStartAt&&null===l.attrStartAt&&(!l.attrClosingQuote.pos||l.attrClosingQuote.pos<=r)&&(">"===e[r]||"/"===e[r]&&"<>".includes(e[k(e,r)])))){console.log("3476");var Fr="tag-excessive-whitespace-inside-tag";"/"===e[R.startAt-1]&&(Fr="tag-whitespace-closing-slash-and-bracket"),$({name:Fr,position:[[R.startAt,r]]}),console.log("3489 ".concat(Lr("push",Fr,"".concat("[[".concat(R.startAt,", ").concat(r,"]]")))))}if(u||e[r].trim().length||null!==R.startAt||(R.startAt=r,console.log("3502 ".concat(Lr("set","logWhitespace.startAt",R.startAt)))),(!u&&"\n"===e[r]||"\r"===e[r])&&(null===R.startAt||R.includesLinebreaks||(R.includesLinebreaks=!0,console.log("3511 ".concat(Lr("set","logWhitespace.includesLinebreaks",R.includesLinebreaks)))),R.lastLinebreakAt=r,console.log("3520 ".concat(Lr("set","logWhitespace.lastLinebreakAt",R.lastLinebreakAt)))),!u&&null!==i.tagStartAt&&null===i.tagNameStartAt&&gr(e[r])&&i.tagStartAt<r&&(console.log("3536 within catching the start of the tag name clauses"),i.tagNameStartAt=r,console.log("3539 ".concat(Lr("set","logTag.tagNameStartAt",i.tagNameStartAt))),null===i.closing&&(i.closing=!1,console.log("3544 ".concat(Lr("set","logTag.closing",i.closing)))),i.tagStartAt<r-1&&null!==R.startAt&&(Q.push({name:"tag-space-after-opening-bracket",position:[[i.tagStartAt+1,r]]}),console.log("3554 ".concat(Lr("stage","tag-space-after-opening-bracket","".concat("[[".concat(i.tagStartAt+1,", ").concat(r,"]]"))))))),!u&&null!==i.tagNameStartAt&&null===i.tagNameEndAt&&dr(x=e[r])&&1===x.length&&x.charCodeAt(0)>64&&x.charCodeAt(0)<91&&!e.slice(i.tagNameStartAt).toLowerCase().startsWith("doctype")&&($({name:"tag-name-lowercase",position:[[r,r+1,e[r].toLowerCase()]]}),console.log("3579 ".concat(Lr("push","tag-name-lowercase","".concat("[[".concat(r,", ").concat(r+1,", ").concat(JSON.stringify(e[r].toLowerCase(),null,4),"]]")))))),u||"/"!==e[r]||null===i.tagStartAt||null!==i.tagNameStartAt||null===i.closing&&(i.closing=!0),!u&&"<"===e[r])if(console.log("3610 ".concat("[".concat(90,"m","within catching the beginning of a tag clauses","[",39,"m"))),null===i.tagStartAt)i.tagStartAt=r,console.log("3616 ".concat(Lr("set","logTag.tagStartAt",i.tagStartAt)));else if(Sr(e,r))if(console.log("3622 ".concat("[".concat(32,"m","██","[",39,"m")," new tag starts")),null!==i.tagStartAt&&(i.attributes.length&&i.attributes.some(function(e){return null!==e.attrEqualAt&&null!==e.attrOpeningQuote.pos})||Pr(i.tagName)&&U.includes(i.tagName)&&k(e,i.tagNameEndAt-1)===r)){console.log("3648 TAG ON THE LEFT, WE CAN ADD CLOSING BRACKET (IF MISSING)");var Or=P(e,r);console.log("3662 ".concat(Lr("set","lastNonWhitespaceOnLeft",Or))),">"===e[Or]?(i.tagEndAt=Or+1,console.log("3675 ".concat(Lr("set","logTag.tagEndAt",i.tagEndAt)))):($({name:"tag-missing-closing-bracket",position:[[Or+1,r,">"]]}),console.log("3685 ".concat(Lr("push","tag-missing-closing-bracket","".concat("[[".concat(Or+1,", ").concat(r,', ">"]]')))))),J.length&&(console.log("3695 let's process all ".concat(J.length," raw character issues at staging")),J.forEach(function(e){e.position[0][0]<i.tagStartAt?($(e),console.log("3700 ".concat(Lr("push","issueObj",e)))):console.log("3703 discarding ".concat(JSON.stringify(e,null,4)))})),function(e){console.log("0047 pingTag(): ".concat(JSON.stringify(e,null,4)))}(b(i)),f(),I(),J=[],console.log("3717 ".concat(Lr("reset","logTag & logAttr && rawIssueStaging"))),i.tagStartAt=r,console.log("3723 ".concat(Lr("set","logTag.tagStartAt",i.tagStartAt)))}else console.log("3726 NOT TAG ON THE LEFT, WE CAN ADD ENCODE BRACKETS"),J.length&&(console.log("3731 ".concat(Lr("processing","rawIssueStaging",J))),console.log("3734 ".concat(Lr("log","logTag.tagStartAt",i.tagStartAt))),console.log("3737 ".concat("[".concat(31,"m",JSON.stringify(l,null,4),"[",39,"m"))),J.forEach(function(e){e.position[0][0]<r?($(e),console.log("3750 ".concat(Lr("push","issueObj",e)))):(console.log(""),console.log("3754 ".concat("[".concat(31,"m","not pushed","[",39,"m")," ","[".concat(33,"m","issueObj","[",39,"m")," = ",JSON.stringify(e,null,4),"\nbecause ","[".concat(33,"m","issueObj.position[0][0]","[",39,"m"),"=").concat(e.position[0][0]," not < ","[".concat(33,"m","logTag.tagStartAt","[",39,"m"),"=").concat(i.tagStartAt)))}),console.log("3766 wipe rawIssueStaging"),J=[]),Q.length&&(console.log("3772 ".concat(Lr("wipe","tagIssueStaging"))),Q=[]);if(!u&&null!==i.tagStartAt&&(!l.attrClosingQuote||l.attrClosingQuote.pos<r))if(62===A)console.log("3791 within catching a closing bracket of a tag, >, clauses"),Q.length&&(Q.forEach(function(e){console.log('3796 submit "'.concat(e,'" from staging')),$(e)}),Q=[]),J.length&&(console.log("3804 ".concat(Lr("processing","rawIssueStaging",J))),console.log("".concat("[".concat(33,"m","logTag","[",39,"m")," = ",JSON.stringify(i,null,4))),J.forEach(function(e){e.position[0][0]<i.tagStartAt||i.attributes.some(function(t){return ee=r,t.attrValueStartAt<e.position[0][0]&&t.attrValueEndAt>e.position[0][0]})&&!M.issues.some(function(t){return ee=r,t.position[0][0]===e.position[0][0]&&t.position[0][1]===e.position[0][1]})?($(e),console.log("3830 ".concat(Lr("push","issueObj",e)))):(console.log(""),console.log("3834 ".concat("[".concat(31,"m","not pushed","[",39,"m")," ","[".concat(33,"m","issueObj","[",39,"m")," = ",JSON.stringify(e,null,4),"\nbecause ","[".concat(33,"m","issueObj.position[0][0]","[",39,"m"),"=").concat(e.position[0][0]," not < ","[".concat(33,"m","logTag.tagStartAt","[",39,"m"),"=").concat(i.tagStartAt)))}),console.log("3846 wipe rawIssueStaging"),J=[]),"script"===i.tagName&&(u=!0,p="script tag",console.log("3856 ".concat(Lr("set","doNothingUntil",u),", then reset logTag and rawIssueStaging"))),f(),I(),console.log("3867 ".concat(Lr("reset","logTag & logAttr")));else if(47===A){console.log("3874 ".concat("[".concat(90,"m","inside RIGHT SLASH clauses","[",39,"m")));var Vr=F(e,r,{mode:1},"\\?*","/*","\\?*");if(console.log("3889 ".concat("[".concat(33,"m","chompedSlashes","[",39,"m")," = ",JSON.stringify(Vr,null,4))),">"===e[Vr]||e[Vr]&&!e[Vr].trim().length&&">"===e[k(e,Vr)]){null!==R.startAt&&($({name:"tag-excessive-whitespace-inside-tag",position:[[R.startAt,r]]}),console.log("3908 ".concat(Lr("push","tag-excessive-whitespace-inside-tag","".concat("[[".concat(R.startAt,", ").concat(r,"]]"))),"; then reset whitespace")),z());var Ur=e.slice(r+1,Vr).includes("\\")?"tag-closing-left-slash":"tag-duplicate-closing-slash";$({name:Ur,position:[[r+1,Vr]]}),console.log("3929 ".concat(Lr("push",Ur,"".concat("[[".concat(r+1,", ").concat(Vr,"]]"))))),u=Vr,p="repeated slash",console.log("3938 ".concat(Lr("set","doNothingUntil",u,"doNothingUntilReason",p)))}}else if(92===A){console.log("3950 ".concat("[".concat(90,"m","inside LEFT SLASH clauses","[",39,"m")));var jr=F(e,r,{mode:1},"/?*","\\*","/?*");console.log("3961 ".concat("[".concat(33,"m","chompedSlashes","[",39,"m")," = ",JSON.stringify(jr,null,4))),">"===e[jr]||e[jr]&&!e[jr].trim().length&&">"===e[k(e,jr)]?(console.log("3974 there's a closing bracket at ".concat(k(e,jr))),$({name:"tag-closing-left-slash",position:[[r,jr,"/"]]}),console.log("3986 ".concat(Lr("push","tag-closing-left-slash","".concat("[[".concat(r,", ").concat(jr,', "/"]]'))))),u=jr,p="repeated slash",console.log("3995 ".concat(Lr("set","doNothingUntil",u,"doNothingUntilReason",p)))):null===jr&&">"===e[k(e,r)]&&(console.log("4004"),$({name:"tag-closing-left-slash",position:[[r,r+1,"/"]]}),console.log("4012 ".concat(Lr("push","tag-closing-left-slash","".concat("[[".concat(r,", ").concat(r+1,', "/"]]')))))),null!==R.startAt&&($({name:"tag-excessive-whitespace-inside-tag",position:[[R.startAt,r]]}),console.log("4030 ".concat(Lr("push","tag-excessive-whitespace-inside-tag","".concat("[[".concat(R.startAt,", ").concat(r,"]]"))),"; then reset whitespace")),z())}if(u&&"script tag"===p&&"t"===e[r]&&"p"===e[r-1]&&"i"===e[r-2]&&"r"===e[r-3]&&"c"===e[r-4]&&"s"===e[r-5]&&null===Y){var _r=k(e,r),Hr=P(e,r-5);if(console.log("4081 ".concat(Lr("set","charOnTheRight",_r,"charOnTheLeft",Hr,"str[charOnTheRight]",e[_r],"str[charOnTheLeft]",e[Hr]))),"/"===e[Hr]){var Gr=P(e,Hr);console.log("4098 ".concat(Lr("set","charFurtherOnTheLeft",Gr,"str[charFurtherOnTheLeft]",e[Gr])))}else"<"===e[Hr]&&console.log("4108 opening <script> tag!");u=_r+1,console.log("4112 ".concat(Lr("set","doNothingUntil",u)))}!u&&null!==R.startAt&&e[r].trim().length&&(z(),console.log("4122 ".concat(Lr("reset","logWhitespace")))),e[r+1]||(console.log("4128"),J.length&&(console.log("4131"),null!==i.tagStartAt&&i.attributes.some(function(e){return null!==e.attrEqualAt&&null!==e.attrOpeningQuote})?(console.log("4142"),J.forEach(function(e){e.position[0][0]<i.tagStartAt?($(e),console.log("4147 ".concat(Lr("push","issueObj",e)))):console.log("\n1519 ".concat("[".concat(31,"m","not pushed","[",39,"m")," ","[".concat(33,"m","issueObj","[",39,"m")," = ",JSON.stringify(e,null,4),"\nbecause ","[".concat(33,"m","issueObj.position[0][0]","[",39,"m"),"=").concat(e.position[0][0]," not < ","[".concat(33,"m","logTag.tagStartAt","[",39,"m"),"=").concat(i.tagStartAt))}),console.log("4162 wipe rawIssueStaging"),J=[],$({name:"tag-missing-closing-bracket",position:[[R.startAt?R.startAt:r+1,r+1,">"]]}),console.log("4177 ".concat(Lr("push","tag-missing-closing-bracket","".concat("[[".concat(R.startAt?R.startAt:r+1,", ").concat(r+1,', ">"]]')))))):M.issues.some(function(e){return"file-missing-ending"===e.name})||(J.forEach(function(e){$(e),console.log("4196 ".concat("[".concat(32,"m","SUBMIT","[",39,"m")," ",JSON.stringify(e,null,0)))}),console.log("4204 wipe ".concat("[".concat(33,"m","rawIssueStaging","[",39,"m"))),J=[])));var zr={logTag:!0,logAttr:!1,logEspTag:!0,logWhitespace:!0,logLineEndings:!1,retObj:!1,retObj_mini:!0,tagIssueStaging:!1,rawIssueStaging:!1,withinQuotes:!1},Qr=b(M);Object.keys(Qr.applicableRules).forEach(function(e){Qr.applicableRules[e]||delete Qr.applicableRules[e]}),console.log("".concat(Object.keys(zr).some(function(e){return zr[e]})?"".concat("[".concat(31,"m","█ ","[",39,"m")):"").concat(zr.logTag&&null!=i.tagStartAt?"".concat("[".concat(33,"m","logTag","[",39,"m")," ",JSON.stringify(i,null,4),"; "):"").concat(zr.logAttr&&null!=l.attrStartAt?"".concat("[".concat(33,"m","logAttr","[",39,"m")," ",JSON.stringify(l,null,4),"; "):"").concat(zr.logEspTag&&null!=h.headStartAt?"".concat("[".concat(33,"m","logEspTag","[",39,"m")," ",JSON.stringify(h,null,4),"; "):"").concat(zr.logWhitespace&&null!=R.startAt?"".concat("[".concat(33,"m","logWhitespace","[",39,"m")," ",JSON.stringify(R,null,0),"; "):"").concat(zr.logLineEndings?"".concat("[".concat(33,"m","logLineEndings","[",39,"m")," ",JSON.stringify(Z,null,0),"; "):"").concat(zr.retObj?"".concat("[".concat(33,"m","retObj","[",39,"m")," ",JSON.stringify(M,null,4),"; "):"").concat(zr.retObj_mini?"".concat("[".concat(33,"m","retObj_mini","[",39,"m")," ",JSON.stringify(Qr,null,4),"; "):"").concat(zr.tagIssueStaging&&Q.length?"\n".concat("[".concat(33,"m","tagIssueStaging","[",39,"m")," ",JSON.stringify(Q,null,4),"; "):"").concat(zr.rawIssueStaging&&J.length?"\n".concat("[".concat(33,"m","rawIssueStaging","[",39,"m")," ",JSON.stringify(J,null,4),"; "):"").concat(zr.withinQuotes&&Y?"\n".concat("[".concat(33,"m","withinQuotes","[",39,"m")," ",JSON.stringify(Y,null,4),"; ","[".concat(33,"m","withinQuotesEndAt","[",39,"m")," = ").concat(K,"; "):"")),ee=r},ee=0,re=e.length;ee<re;ee++)X(ee,re);o.style&&o.style.line_endings_CR_LF_CRLF||!(Z.cr.length&&Z.lf.length||Z.lf.length&&Z.crlf.length||Z.cr.length&&Z.crlf.length)||(Z.cr.length>Z.crlf.length&&Z.cr.length>Z.lf.length?(console.log("4370 CR clearly prevalent"),Z.crlf.length&&Z.crlf.forEach(function(e){$({name:"file-mixed-line-endings-file-is-CR-mainly",position:[[e[0],e[1],"\r"]]})}),Z.lf.length&&Z.lf.forEach(function(e){$({name:"file-mixed-line-endings-file-is-CR-mainly",position:[[e[0],e[1],"\r"]]})})):Z.lf.length>Z.crlf.length&&Z.lf.length>Z.cr.length?(console.log("4392 LF clearly prevalent"),Z.crlf.length&&Z.crlf.forEach(function(e){$({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})}),Z.cr.length&&Z.cr.forEach(function(e){$({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})})):Z.crlf.length>Z.lf.length&&Z.crlf.length>Z.cr.length?(console.log("4414 CRLF clearly prevalent"),Z.cr.length&&Z.cr.forEach(function(e){$({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})}),Z.lf.length&&Z.lf.forEach(function(e){$({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})})):Z.crlf.length===Z.lf.length&&Z.lf.length===Z.cr.length?(console.log("4436 same amount of each type of EOL"),Z.crlf.forEach(function(e){$({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})}),Z.cr.forEach(function(e){$({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})})):Z.cr.length===Z.crlf.length&&Z.cr.length>Z.lf.length?(console.log("4455 CR & CRLF are prevalent over LF"),Z.cr.length&&Z.cr.forEach(function(e){$({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})}),Z.lf.length&&Z.lf.forEach(function(e){$({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})})):(Z.lf.length===Z.crlf.length&&Z.lf.length>Z.cr.length||Z.cr.length===Z.lf.length&&Z.cr.length>Z.crlf.length)&&(console.log("4480 LF && CRLF are prevalent over CR or CR & LF are prevalent over CRLF"),Z.cr.length&&Z.cr.forEach(function(e){$({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})}),Z.crlf.length&&Z.crlf.forEach(function(e){$({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})})));var te=function(e,r){function t(e,r,t){let a=0,n=0,s=0,i=0,l=0,u="",p="";for(let d=r;d<t;d++)e[d].trim().length?p+=e[d]:l++,o(e[d])?a++:c(e[d])?(n++,u+=String(e[d])):"#"===e[d]?i++:s++;let d=!1;return!a&&n>s?d="deci":(n||a)&&("#"===p[0]&&"x"===p[1].toLowerCase()&&(c(p[2])||o(p[2]))||"x"===p[0].toLowerCase()&&n&&!s)&&(d="hexi"),{probablyNumeric:d,lettersCount:a,numbersCount:n,numbersValue:u,hashesCount:i,othersCount:s,charTrimmed:p,whitespaceCount:l}}function a(e){return!("string"==typeof e&&1===e.length&&e.toUpperCase()!==e.toLowerCase())}function n(e){return"string"==typeof e}function o(e){return"string"==typeof e&&(e.charCodeAt(0)>96&&e.charCodeAt(0)<123||e.charCodeAt(0)>64&&e.charCodeAt(0)<91)}function s(e){return n(e)&&1===e.length&&(e.charCodeAt(0)>96&&e.charCodeAt(0)<123||e.charCodeAt(0)>47&&e.charCodeAt(0)<58||e.charCodeAt(0)>64&&e.charCodeAt(0)<91||35===e.charCodeAt(0))}function c(e){return n(e)&&e.charCodeAt(0)>47&&e.charCodeAt(0)<58}function i(e,r,t){for(let a=r;a<t;a++)if(e[a].trim().length&&!"nbsp".includes(e[a].toLowerCase()))return!1;return!0}function l(e){return O(e)&&e.length?1===e.length?e[0]:e.reduce((e,r)=>r.tempEnt.length>e.tempEnt.length?r:e):e}function u(r){let t;return O(r)&&r.length&&((t=Array.from(r)).length>1&&t.some(r=>";"===e[k(e,r.tempRes.rightmostChar)])&&t.some(r=>";"!==e[k(e,r.tempRes.rightmostChar)])&&(t=t.filter(r=>";"===e[k(e,r.tempRes.rightmostChar)])),!t.every(e=>!(e&&e.tempRes&&e.tempRes.gaps&&O(e.tempRes.gaps)&&e.tempRes.gaps.length))&&!t.every(e=>e&&e.tempRes&&e.tempRes.gaps&&O(e.tempRes.gaps)&&e.tempRes.gaps.length))?l(t.filter(e=>!e.tempRes.gaps||!O(e.tempRes.gaps)||!e.tempRes.gaps.length)):l(r)}if("string"!=typeof e)throw new Error(`string-fix-broken-named-entities: [THROW_ID_01] the first input argument must be string! It was given as:\n${JSON.stringify(e,null,4)} (${typeof e}-type)`);const p={decode:!1,cb:({rangeFrom:e,rangeTo:r,rangeValEncoded:t,rangeValDecoded:a})=>a||t?[e,r,d.decode?a:t]:[e,r],progressFn:null};let d;if(null!=r){if(!g(r))throw new Error(`string-fix-broken-named-entities: [THROW_ID_02] the second input argument must be a plain object! I was given as:\n${JSON.stringify(r,null,4)} (${typeof r}-type)`);d=Object.assign({},p,r)}else d=p;if(d.cb&&"function"!=typeof d.cb)throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_03] opts.cb must be a function (or falsey)! Currently it's: ${typeof d.cb}, equal to: ${JSON.stringify(d.cb,null,4)}`);if(d.entityCatcherCb&&"function"!=typeof d.entityCatcherCb)throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_03] opts.entityCatcherCb must be a function (or falsey)! Currently it's: ${typeof d.entityCatcherCb}, equal to: ${JSON.stringify(d.entityCatcherCb,null,4)}`);if(d.progressFn&&"function"!=typeof d.progressFn)throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_04] opts.progressFn must be a function (or falsey)! Currently it's: ${typeof d.progressFn}, equal to: ${JSON.stringify(d.progressFn,null,4)}`);let m=!1;const f={nameStartsAt:null,ampersandNecessary:null,patience:1,matchedN:null,matchedB:null,matchedS:null,matchedP:null,matchedSemicol:null};let h=b(f);const D=()=>{h=b(f)},I=[];let C,T,R,F,V,U;const j=e.length+1;let _=0,H=null,G=null,z=null;e:for(let r=0;r<j;r++){if(d.progressFn&&(V=Math.floor(_/j*100))!==U&&(U=V,d.progressFn(V)),H){if(!(!0!==H&&r>=H)){_++;continue}H=null}if(R=(null!==h.matchedN?1:0)+(null!==h.matchedB?1:0)+(null!==h.matchedS?1:0)+(null!==h.matchedP?1:0),F=[h.matchedN,h.matchedB,h.matchedS,h.matchedP].filter(e=>null!==e),C=Math.min(...F),T=Math.max(...F),!(null!==h.nameStartsAt&&R>2&&(null!==h.matchedSemicol||!h.ampersandNecessary||a(e[h.nameStartsAt-1])&&a(e[r])||(a(e[h.nameStartsAt-1])||a(e[r]))&&T-C<=4||null!==h.matchedN&&null!==h.matchedB&&null!==h.matchedS&&null!==h.matchedP&&h.matchedN+1===h.matchedB&&h.matchedB+1===h.matchedS&&h.matchedS+1===h.matchedP)&&(!e[r]||null!==h.matchedN&&null!==h.matchedB&&null!==h.matchedS&&null!==h.matchedP&&e[r]!==e[r-1]||"n"!==e[r].toLowerCase()&&"b"!==e[r].toLowerCase()&&"s"!==e[r].toLowerCase()&&"p"!==e[r].toLowerCase()||";"===e[P(e,r)])&&";"!==e[r])||void 0!==e[r+1]&&";"===e[k(e,r)]||null===h.matchedB&&("n"===e[C].toLowerCase()&&e[P(e,C)]&&"e"===e[P(e,C)].toLowerCase()||null!==h.matchedN&&N(e,h.matchedN,{i:!0},"s","u","p")||"c"===e[k(e,h.matchedN)].toLowerCase())||null!==h.matchedB&&!i(e,C,T+1)&&e[C]&&e[T]&&"n"===e[C].toLowerCase()&&"b"===e[T].toLowerCase())if(e[r]&&";"===e[r-1]&&!L(e,r-1,"a","m","p")&&";"!==e[r]&&R>0)D(),_++;else{if(null!==G&&(!e[r]||e[r].trim().length&&!s(e[r]))){if(r>G+1&&"&nbsp;"!==e.slice(G-1,r+1)){const a=e.slice(G,r),o=P(e,G),s=o?P(e,o):"";if("&"!==e[o]||e[r]&&";"===e[r]){if("&"!==e[o]&&"&"!==e[s]&&";"===e[r]){const t=P(e,r),a=t?P(e,t):null;if(null!==a&&Object.prototype.hasOwnProperty.call(y,e[t])&&Object.prototype.hasOwnProperty.call(y[e[t]],e[a])){let o,s,c=y[e[t]][e[a]].reduce((t,a)=>{const n=L(e,r,...a.split(""));return!n||"nbsp"===a||"block"===a&&":"===e[P(e,G)]?t:t.concat([{tempEnt:a,tempRes:n}])},[]);if((c=u(c))&&({tempEnt:o,tempRes:s}=c),o&&(!Object.keys(q).includes(o)||!0===q[o].addAmpIfSemiPresent||q[o].addAmpIfSemiPresent&&(!s.leftmostChar||n(e[s.leftmostChar-1])&&!e[s.leftmostChar-1].trim().length))){const e=S(`&${o};`);I.push({ruleName:`bad-named-html-entity-malformed-${o}`,entityName:o,rangeFrom:s.leftmostChar,rangeTo:r+1,rangeValEncoded:`&${o};`,rangeValDecoded:e})}}else null!==z&&(I.push({ruleName:"bad-malformed-numeric-character-entity",entityName:null,rangeFrom:z,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null}),z=null)}else if("&"===e[o]&&";"===e[r]){if(e.slice(o+1,r).trim().length>1){const s=t(e,o+1,r);if(s.probablyNumeric){if(s.probablyNumeric&&"#"===s.charTrimmed[0]&&!s.whitespaceCount&&(!s.lettersCount&&s.numbersCount>0&&!s.othersCount||(s.numbersCount||s.lettersCount)&&"x"===s.charTrimmed[1]&&!s.othersCount)){const e=String.fromCharCode(parseInt(s.charTrimmed.slice("deci"===s.probablyNumeric?1:2),"deci"===s.probablyNumeric?10:16));"deci"===s.probablyNumeric&&parseInt(s.numbersValue,10)>918015?I.push({ruleName:"bad-malformed-numeric-character-entity",entityName:null,rangeFrom:o,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null}):d.decode&&I.push({ruleName:"encoded-numeric-html-entity-reference",entityName:s.charTrimmed,rangeFrom:o,rangeTo:r+1,rangeValEncoded:`&${s.charTrimmed};`,rangeValDecoded:e})}else I.push({ruleName:"bad-malformed-numeric-character-entity",entityName:null,rangeFrom:o,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null});d.entityCatcherCb&&d.entityCatcherCb(o,r+1)}else{const t=G,c=G?k(e,G):null;let i;if(Object.prototype.hasOwnProperty.call(A,s.charTrimmed.toLowerCase())){i=s.charTrimmed;const e=S(`&${A[s.charTrimmed.toLowerCase()]};`);I.push({ruleName:`bad-named-html-entity-malformed-${A[s.charTrimmed.toLowerCase()]}`,entityName:A[s.charTrimmed.toLowerCase()],rangeFrom:o,rangeTo:r+1,rangeValEncoded:`&${A[s.charTrimmed.toLowerCase()]};`,rangeValDecoded:e})}else if(Object.prototype.hasOwnProperty.call(v,e[t].toLowerCase())&&Object.prototype.hasOwnProperty.call(v[e[t].toLowerCase()],e[c].toLowerCase())){let l,p,m=v[e[t].toLowerCase()][e[c].toLowerCase()].reduce((r,t)=>{const a=N(e,G-1,{i:!0},...t.split(""));return a&&"nbsp"!==t?r.concat([{tempEnt:t,tempRes:a}]):r},[]);if((m=u(m))&&({tempEnt:i,tempRes:l}=m),i){let t=!1;const c=l.leftmostChar,u=k(e,c);if(Object.keys(q).includes(a)&&n(e[c-1])&&!e[c-1].trim().length&&!0!==q[a].addAmpIfSemiPresent){G=null;continue}if(Object.prototype.hasOwnProperty.call(w,e[c])&&Object.prototype.hasOwnProperty.call(w[e[c]],e[u])&&w[e[c]][e[u]].includes(s.charTrimmed))p=s.charTrimmed,r-o-1===i.length?d.decode&&(t="encoded-html-entity"):t="bad-named-html-entity-malformed";else{t="bad-named-html-entity-malformed";const e=Object.keys(x).filter(e=>s.charTrimmed.toLowerCase().startsWith(e.toLowerCase()));if(1===e.length)p=e[0];else{const a=e.reduce((e,r)=>e.length&&r.length!==e[0].length?r.length>e[0].length?[r]:e:e.concat([r]),[]);if(1===a.length)p=a[0];else{const e=a.map(e=>{let r=0;for(let t=0,a=e.length;t<a;t++)e[t]!==s.charTrimmed[t]&&r++;return r});e.filter(r=>r===Math.min(...e)).length>1&&(I.push({ruleName:"bad-named-html-entity-unrecognised",entityName:null,rangeFrom:o,rangeTo:l.rightmostChar+1===r?r+1:l.rightmostChar+1,rangeValEncoded:null,rangeValDecoded:null}),t=!1),p=a[e.indexOf(Math.min(...e))]}}}let m=l.rightmostChar+1===r?r+1:l.rightmostChar+1;if(t){const r=S(`&${p};`);e[m]&&";"!==e[m]&&!e[m].trim().length&&";"===e[k(e,m)]&&(m=k(e,m)+1),I.push({ruleName:`${t}-${p}`,entityName:p,rangeFrom:o,rangeTo:m,rangeValEncoded:`&${p};`,rangeValDecoded:r})}d.entityCatcherCb&&d.entityCatcherCb(o,m)}}i||"&nbsp;"!==s.charTrimmed.toLowerCase()&&(I.push({ruleName:"bad-named-html-entity-unrecognised",entityName:null,rangeFrom:o,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null}),d.entityCatcherCb&&d.entityCatcherCb(o,r+1))}}}else if("&"===e[s]&&";"===e[r]&&r-s<E){const a=t(e,s+1,r);I.push({ruleName:`${a.probablyNumeric?"bad-malformed-numeric-character-entity":"bad-named-html-entity-unrecognised"}`,entityName:null,rangeFrom:s,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null})}}else{const r=G,t=G?k(e,G):null;if(Object.prototype.hasOwnProperty.call(w,e[r])&&Object.prototype.hasOwnProperty.call(w[e[r]],e[t])){let a,n,s=w[e[r]][e[t]].reduce((r,t)=>{const a=N(e,G-1,...t.split(""));return a&&"nbsp"!==t?r.concat([{tempEnt:t,tempRes:a}]):r},[]);if((s=u(s))&&({tempEnt:a,tempRes:n}=s),a&&(!Object.keys(q).includes(a)||!e[n.rightmostChar+1]||["&"].includes(e[n.rightmostChar+1])||(!0===q[a].addSemiIfAmpPresent||q[a].addSemiIfAmpPresent&&(!e[n.rightmostChar+1]||!e[n.rightmostChar+1].trim().length))&&"&"===e[n.leftmostChar-1])){const e=S(`&${a};`);I.push({ruleName:`bad-named-html-entity-malformed-${a}`,entityName:a,rangeFrom:o,rangeTo:n.rightmostChar+1,rangeValEncoded:`&${a};`,rangeValDecoded:e})}}}}G=null}if(null===G&&s(e[r])&&e[r+1]&&(G=r),"a"===e[r]){const t=N(e,r,"m","p",";");if(t){let a=t.rightmostChar+1;const n=N(e,t.rightmostChar,"a","m","p",";");if(n){let r;a=n.rightmostChar+1;do{(r=N(e,a-1,"a","m","p",";"))&&(a=r.rightmostChar+1)}while(r)}const o=k(e,a-1),s=o?k(e,o):null;let c;if(s&&Object.prototype.hasOwnProperty.call(w,e[o])&&Object.prototype.hasOwnProperty.call(w[e[o]],e[s])&&w[e[o]][e[s]].some(r=>{if(N(e,a-1,...r.slice("")))return c=r,!0})){H=o+c.length+1;const t=P(e,r);if("&"===e[t])I.push({ruleName:"bad-named-html-entity-multiple-encoding",entityName:c,rangeFrom:t,rangeTo:H,rangeValEncoded:`&${c};`,rangeValDecoded:S(`&${c};`)});else if(t){const t=r,a="";e[r-1],d.cb&&I.push({ruleName:"bad-named-html-entity-multiple-encoding",entityName:c,rangeFrom:t,rangeTo:H,rangeValEncoded:`${a}&${c};`,rangeValDecoded:`${a}${S(`&${c};`)}`})}}}}if("&"===e[r]&&(h.nameStartsAt&&h.nameStartsAt<r&&(h.matchedN||h.matchedB||h.matchedS||h.matchedP)&&D(),null===h.nameStartsAt&&null===h.ampersandNecessary&&(h.nameStartsAt=r,h.ampersandNecessary=!1)),e[r]&&"n"===e[r].toLowerCase()){if(e[r-1]&&"i"===e[r-1].toLowerCase()&&e[r+1]&&"s"===e[r+1].toLowerCase()){D(),_++;continue e}null===h.matchedN&&(h.matchedN=r),null===h.nameStartsAt&&(h.nameStartsAt=r,null!==h.ampersandNecessary||m?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0)}if(e[r]&&"b"===e[r].toLowerCase())if(null!==h.nameStartsAt)null===h.matchedB&&(h.matchedB=r);else{if(!h.patience){D(),_++;continue e}h.patience--,h.nameStartsAt=r,h.matchedB=r,null!==h.ampersandNecessary||m?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0}if(e[r]&&"s"===e[r].toLowerCase())if(null!==h.nameStartsAt)null===h.matchedS&&(h.matchedS=r);else{if(!h.patience){D(),_++;continue e}h.patience--,h.nameStartsAt=r,h.matchedS=r,null!==h.ampersandNecessary||m?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0}if(e[r]&&"p"===e[r].toLowerCase())if(L(e,r,"t","h","i","n","s"))D();else if(null!==h.nameStartsAt)null===h.matchedP&&(h.matchedP=r);else{if(!h.patience){D(),_++;continue e}h.patience--,h.nameStartsAt=r,h.matchedP=r,null!==h.ampersandNecessary||m?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0}if(";"===e[r]&&null!==h.nameStartsAt&&(h.matchedSemicol=r,(!h.matchedN||h.matchedB||h.matchedS||h.matchedP)&&(h.matchedN||!h.matchedB||h.matchedS||h.matchedP)&&(h.matchedN||h.matchedB||!h.matchedS||h.matchedP)&&(h.matchedN||h.matchedB||h.matchedS||!h.matchedP)||D()),"#"!==e[r]||!k(e,r)||"x"!==e[k(e,r)].toLowerCase()||e[r-1]&&P(e,r)&&"&"===e[P(e,r)]||c(e[k(e,k(e,r))])&&(z=r),m&&(m=!1,h.nameStartsAt&&(h.matchedN||h.matchedB||h.matchedS||h.matchedP)&&(h.ampersandNecessary=!1)),null!==h.nameStartsAt&&r>h.nameStartsAt&&e[r]&&"n"!==e[r].toLowerCase()&&"b"!==e[r].toLowerCase()&&"s"!==e[r].toLowerCase()&&"p"!==e[r].toLowerCase()&&"&"!==e[r]&&";"!==e[r]&&" "!==e[r]){if(!h.patience){D(),_++;continue e}h.patience=h.patience-1}_++}else{const t=B(e,h.nameStartsAt,"&?","a","m","p",";?"),a=t||h.nameStartsAt;d.entityCatcherCb&&d.entityCatcherCb(a,r),"&nbsp;"!==e.slice(a,r)?I.push({ruleName:"bad-named-html-entity-malformed-nbsp",entityName:"nbsp",rangeFrom:a,rangeTo:r,rangeValEncoded:"&nbsp;",rangeValDecoded:" "}):d.decode&&I.push({ruleName:"encoded-html-entity-nbsp",entityName:"nbsp",rangeFrom:a,rangeTo:r,rangeValEncoded:"&nbsp;",rangeValDecoded:" "}),D(),_++}}return I.length?I.filter((e,r)=>I.every((t,a)=>r===a||!(e.rangeFrom>=t.rangeFrom&&e.rangeTo<t.rangeTo))).filter((e,r,t)=>"bad-named-html-entity-unrecognised"!==e.ruleName||!t.some((t,a)=>r!==a&&t.rangeFrom<=e.rangeFrom&&t.rangeTo===e.rangeTo)).map(d.cb):[]}(e,{cb:function(e){return{name:e.ruleName,position:[null!=e.rangeValEncoded?[e.rangeFrom,e.rangeTo,e.rangeValEncoded]:[e.rangeFrom,e.rangeTo]]}}});return console.log("4540 [".concat(33,"m","█","[",39,"m[",31,"m","█","[",39,"m[",34,"m","█","[",39,"m ",Lr("log","htmlEntityFixes",te))),Ar(te)&&te.length&&(M.issues=M.issues.filter(function(e){return console.log("".concat("[".concat(36,"m","3851 filtering issueObj=".concat(JSON.stringify(e,null,4)),"[",39,"m"))),"bad-character-unencoded-ampersand"!==e.name||te.every(function(r){return e.position[0][0]!==r.position[0][0]})}).concat(te||[]).filter(function(e){return!o.rules||!1!==o.rules[e.name]})),M.issues.some(function(e){return"bad-character-unencoded-ampersand"===e.name})||(M.applicableRules["bad-character-unencoded-ampersand"]=!1,console.log('4576 SET retObj.applicableRules["bad-character-unencoded-ampersand"] = false')),console.log("4581 ".concat("[".concat(33,"m","htmlEntityFixes","[",39,"m")," = ",JSON.stringify(te,null,4))),Ar(te)&&te.length&&te.forEach(function(e){console.log("4590 ".concat("[".concat(33,"m","issueObj","[",39,"m")," = ",JSON.stringify(e,null,4))),M.applicableRules[e.name]||(M.applicableRules[e.name]=!0,console.log("4599 retObj.applicableRules[issueObj.name] = ".concat(M.applicableRules[e.name])))}),console.log("4629 BEFORE FIX:"),console.log("4630 ".concat(Lr("log","retObj.issues",M.issues))),M.fix=Ar(M.issues)&&M.issues.length?function(e,r){function t(e){return"string"==typeof e}if(!Array.isArray(e))return e;const a={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let n;if(r){if(!g(r))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(r,null,4)} (type ${typeof r})`);if((n=Object.assign({},a,r)).progressFn&&g(n.progressFn)&&!Object.keys(n.progressFn).length)n.progressFn=null;else if(n.progressFn&&"function"!=typeof n.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof n.progressFn}", equal to ${JSON.stringify(n.progressFn,null,4)}`);if(n.mergeType&&1!==n.mergeType&&2!==n.mergeType)if(t(n.mergeType)&&"1"===n.mergeType.trim())n.mergeType=1;else{if(!t(n.mergeType)||"2"!==n.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof n.mergeType}", equal to ${JSON.stringify(n.mergeType,null,4)}`);n.mergeType=2}if("boolean"!=typeof n.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof n.joinRangesThatTouchEdges}", equal to ${JSON.stringify(n.joinRangesThatTouchEdges,null,4)}`)}else n=b(a);const o=b(e).filter(e=>void 0!==e[2]||e[0]!==e[1]);let s,c,i;const l=(s=n.progressFn?rr(o,{progressFn:e=>{(i=Math.floor(e/5))!==c&&(c=i,n.progressFn(i))}}):rr(o)).length-1;for(let e=l;e>0;e--)n.progressFn&&(i=Math.floor(78*(1-e/l))+21)!==c&&i>c&&(c=i,n.progressFn(i)),(s[e][0]<=s[e-1][0]||!n.joinRangesThatTouchEdges&&s[e][0]<s[e-1][1]||n.joinRangesThatTouchEdges&&s[e][0]<=s[e-1][1])&&(s[e-1][0]=Math.min(s[e][0],s[e-1][0]),s[e-1][1]=Math.max(s[e][1],s[e-1][1]),void 0!==s[e][2]&&(s[e-1][0]>=s[e][0]||s[e-1][1]<=s[e][1])&&null!==s[e-1][2]&&(null===s[e][2]&&null!==s[e-1][2]?s[e-1][2]=null:void 0!==s[e-1][2]?2===n.mergeType&&s[e-1][0]===s[e][0]?s[e-1][2]=s[e][2]:s[e-1][2]+=s[e][2]:s[e-1][2]=s[e][2]),s.splice(e,1),e=s.length);return s}(M.issues.filter(function(e){return console.log("4638 errorsRules[".concat(e.name,"] = ").concat((_[e.name],4))),console.log("4645 errorsRules[issueObj.name].unfixable = ".concat(_[e.name]?_[e.name].unfixable:_[e.name])),!_[e.name]||!_[e.name].unfixable}).reduce(function(e,r){return e.concat(r.position)},[])):null,console.log("4661 ".concat(Lr("log","retObj.fix",M.fix))),M},e.version="1.6.1",Object.defineProperty(e,"__esModule",{value:!0})});
