/**
 * emlint
 * Pluggable email template code linter
 * Version: 2.2.0
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/emlint
 */

!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e=e||self).emlint={})}(this,(function(e){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function t(e,r){for(var t=0;t<r.length;t++){var a=r[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function a(e){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function n(e,r){return(n=Object.setPrototypeOf||function(e,r){return e.__proto__=r,e})(e,r)}function i(e,r){return!r||"object"!=typeof r&&"function"!=typeof r?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):r}function o(e){return function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var s=function(e,r){if(r){if("object"!=typeof r)throw new TypeError(String(r)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in r){if("boolean"!=typeof r.includeZero)throw new TypeError(String(r.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(r.includeZero&&0===e)return!0}}return Number.isSafeInteger(e)&&e>=1},c="[object Object]";var l,d,u=Function.prototype,m=Object.prototype,p=u.toString,f=m.hasOwnProperty,h=p.call(Object),g=m.toString,b=(l=Object.getPrototypeOf,d=Object,function(e){return l(d(e))});var A=function(e){if(!function(e){return!!e&&"object"==typeof e}(e)||g.call(e)!=c||function(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}(e))return!1;var r=b(e);if(null===r)return!0;var t=f.call(r,"constructor")&&r.constructor;return"function"==typeof t&&t instanceof t&&p.call(t)==h},y="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};var S="[object AsyncFunction]",v="[object Function]",I="[object GeneratorFunction]",w="[object Null]",q="[object Proxy]",P="[object Undefined]",x="object"==typeof y&&y&&y.Object===Object&&y,E="object"==typeof self&&self&&self.Object===Object&&self,T=x||E||Function("return this")(),C=Object.prototype,k=C.hasOwnProperty,N=C.toString,L=T.Symbol,R=L?L.toStringTag:void 0;function D(e){return null==e?void 0===e?P:w:R&&R in Object(e)?function(e){var r=k.call(e,R),t=e[R];try{e[R]=void 0;var a=!0}catch(e){}var n=N.call(e);a&&(r?e[R]=t:delete e[R]);return n}(e):function(e){return N.call(e)}(e)}var O=function(e){if(!function(e){var r=typeof e;return null!=e&&("object"==r||"function"==r)}(e))return!1;var r=D(e);return r==v||r==I||r==S||r==q};function B(e){if("string"==typeof e)return 0!==e.length&&(e.charCodeAt(0)>=55296&&e.charCodeAt(0)<=56319);if(void 0===e)return!1;throw new TypeError(`string-character-is-astral-surrogate/isHighSurrogate(): the input is not string but ${typeof e}`)}function j(e){if("string"==typeof e)return 0!==e.length&&(e.charCodeAt(0)>=56320&&e.charCodeAt(0)<=57343);if(void 0===e)return!1;throw new TypeError(`string-character-is-astral-surrogate/isLowSurrogate(): the input is not string but ${typeof e}`)}const F=Array.isArray;function V(e){return null!=e}function U(e){return"string"==typeof e}function H(e){return"string"==typeof e&&(e.charCodeAt(0)>=55296&&e.charCodeAt(0)<=57343)}function _(e,r,t,a,n){const i="function"==typeof t?t():t;if(r>=e.length&&n&&"EOL"===i)return i;if(!(r<=e.length)){if(a.relaxedApi)return!1;throw new Error(`string-match-left-right/marchForward(): [THROW_ID_102] second argument, fromIndexInclusive is ${r} beyond the input string length, ${e.length}.`)}{let o=n?1:t.length;for(let n=r,i=e.length;n<i;n++){let r=e[n];if(B(e[n])&&j(e[n+1])&&(r=e[n]+e[n+1]),j(e[n])&&B(e[n-1])&&(r=e[n-1]+e[n]),a.trimBeforeMatching&&""===e[n].trim())continue;if(!a.i&&a.trimCharsBeforeMatching.includes(r)||a.i&&a.trimCharsBeforeMatching.map(e=>e.toLowerCase()).includes(r.toLowerCase())){2===r.length&&(n+=1);continue}let i=t[t.length-o];if(B(i)&&V(t[t.length-o+1])&&j(t[t.length-o+1])&&(i=t[t.length-o]+t[t.length-o+1]),!(!a.i&&r===i||a.i&&r.toLowerCase()===i.toLowerCase()))return!1;if((o-=r.length)<1){let a=n-t.length+r.length;return a>=0&&j(e[a])&&V(e[a-1])&&B(e[a-1])&&(a-=1),a>=0?a:0}2===r.length&&B(e[n])&&(n+=1)}if(o>0)return!(!n||"EOL"!==i)}}function z(e,r,t,a,n){const i="function"==typeof t?t():t;if(r<0&&n&&"EOL"===i)return i;if(r>=e.length){if(a.relaxedApi)return!1;throw new Error(`string-match-left-right/marchBackward(): [THROW_ID_203] second argument, starting index, should not be beyond the last character of the input string! Currently the first argument's last character's index is ${e.length} but the second argument is beyond it:\n${JSON.stringify(r,null,4)}`)}let o=n?1:t.length;for(let i=r+1;i--;){if(a.trimBeforeMatching&&""===e[i].trim()){if(0===i&&n&&"EOL"===t)return!0;continue}let r=e[i];if(j(e[i])&&B(e[i-1])?r=e[i-1]+e[i]:B(e[i])&&j(e[i+1])&&(r=e[i]+e[i+1]),!a.i&&a.trimCharsBeforeMatching.includes(r)||a.i&&a.trimCharsBeforeMatching.map(e=>e.toLowerCase()).includes(r.toLowerCase())){if(2===r.length&&(i-=1),n&&"EOL"===t&&0===i)return!0;continue}let s=t[o-1];if(j(s)&&(s=`${t[o-2]}${t[o-1]}`,o-=1,i-=1),!(!a.i&&r===s||a.i&&r.toLowerCase()===s.toLowerCase()))return!1;if((o-=1)<1)return i>=0?i:0}return o>0?!(!n||"EOL"!==i):void 0}function G(e,r,t,a){return function(e,r,t,a,n){const i=Object.assign({},{i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],relaxedApi:!1},n);var o;let c,l,d,u;if(i.trimCharsBeforeMatching="string"==typeof(o=i.trimCharsBeforeMatching)?o.length>0?[o]:[]:o,i.trimCharsBeforeMatching=i.trimCharsBeforeMatching.map(e=>U(e)?e:String(e)),i.trimCharsBeforeMatching.some((e,r)=>e.length>1&&!H(e)&&(c=r,l=e,!0)))throw new Error(`string-match-left-right/${e}(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index ${c} is longer than 1 character, ${l.length} (equals to ${l}). Please split it into separate characters and put into array as separate elements.`);if(!U(r)){if(i.relaxedApi)return!1;throw new Error(`string-match-left-right/${e}(): [THROW_ID_01] the first argument should be a string. Currently it's of a type: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`)}if(0===r.length){if(i.relaxedApi)return!1;throw new Error(`string-match-left-right/${e}(): [THROW_ID_02] the first argument should be a non-empty string. Currently it's empty!`)}if(!s(t,{includeZero:!0})){if(i.relaxedApi)return!1;throw new Error(`string-match-left-right/${e}(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: ${typeof t}, equal to:\n${JSON.stringify(t,null,4)}`)}if(U(a))d=[a];else if(F(a))d=a;else if(V(a)){if(!O(a))throw new Error(`string-match-left-right/${e}(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's ${typeof a}, equal to:\n${JSON.stringify(a,null,4)}`);(d=[]).push(a)}else d=a;if(V(n)&&!A(n))throw new Error(`string-match-left-right/${e}(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type "${typeof n}", and equal to:\n${JSON.stringify(n,null,4)}`);if(!V(d)||!F(d)||F(d)&&!d.length||F(d)&&1===d.length&&U(d[0])&&0===d[0].trim().length){if("function"==typeof i.cb){let a,n=t;if("matchRight"===e&&B(r[t])&&j(r[t+1])&&(n+=1),"matchLeftIncl"!==e&&"matchRight"!==e||(n+=1),e.startsWith("matchLeft"))for(let e=n;e--;){if(j(r[e])&&B(r[e-1]))continue;let t=r[e];if(B(r[e])&&j(r[e+1])&&(t=r[e]+r[e+1]),(!i.trimBeforeMatching||i.trimBeforeMatching&&void 0!==t&&""!==t.trim())&&(0===i.trimCharsBeforeMatching.length||void 0!==t&&!i.trimCharsBeforeMatching.includes(t))){a=e;break}j(r[e-1])&&B(r[e-2])&&(e-=1)}else if(e.startsWith("matchRight"))for(let e=n;e<r.length;e++){let t=r[e];if(B(r[e])&&j(r[e+1])&&(t=r[e]+r[e+1]),(!i.trimBeforeMatching||i.trimBeforeMatching&&""!==t.trim())&&(0===i.trimCharsBeforeMatching.length||!i.trimCharsBeforeMatching.includes(t))){a=e;break}B(r[e])&&j(r[e+1])&&(e+=1)}if(void 0===a)return!1;let o=r[a];B(r[a])&&j(r[a+1])&&(o=r[a]+r[a+1]),j(r[a])&&B(r[a-1])&&(o=r[a-1]+r[a],a-=1);let s,c=a+1;return B(r[a])&&j(r[a+1])&&(c+=1),c&&c>0&&(s=r.slice(0,c)),e.startsWith("matchLeft")?i.cb(o,s,a):(a&&a>0&&(s=r.slice(a)),i.cb(o,s,a))}let a="";throw V(n)||(a=" More so, the whole options object, the fourth input argument, is missing!"),new Error(`string-match-left-right/${e}(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!${a}`)}if(e.startsWith("matchLeft")){for(let a=0,n=d.length;a<n;a++){u="function"==typeof d[a];const n=d[a];let o=t;"matchLeft"===e&&(H(r[a-1])&&H(r[a-2])?o-=2:o-=1);const s=z(r,o,n,i,u);if(s&&u&&"function"==typeof n&&"EOL"===n())return!(!n()||i.cb&&!i.cb(l,m,c))&&n();let c,l,m="";if(V(s)&&s>0&&(l=r[c=s-1],m=r.slice(0,s)),j(r[c])&&V(r[c-1])&&B(r[c-1])&&(l=r[(c-=1)-1]+r[c]),B(r[c])&&V(r[c+1])&&j(r[c+1])&&(l=r[c]+r[c+1],m=r.slice(0,c+2)),!1!==s&&(!i.cb||i.cb(l,m,c)))return n}return!1}for(let a=0,n=d.length;a<n;a++){u="function"==typeof d[a];const n=d[a];let o=t+("matchRight"===e?1:0);"matchRight"===e&&B(r[o-1])&&j(r[o])&&(o+=1);const s=_(r,o,n,i,u);if(s&&u&&"function"==typeof n&&"EOL"===n()){let e,r,t;return!(!n()||i.cb&&!i.cb(e,r,t))&&n()}let c,l,m;if(V(s)&&V(r[s+n.length-1])&&(l=r[c=s+n.length],B(r[c])&&j(r[c+1])&&(l=r[c]+r[c+1])),V(c)&&c>=0&&(m=r.slice(c)),!1!==s&&(!i.cb||i.cb(l,m,c)))return n}return!1}("matchRight",e,r,t,a)}var M=function(e,r){return e(r={exports:{}},r.exports),r.exports}((function(e,r){var t=200,a="__lodash_hash_undefined__",n=9007199254740991,i="[object Arguments]",o="[object Boolean]",s="[object Date]",c="[object Function]",l="[object GeneratorFunction]",d="[object Map]",u="[object Number]",m="[object Object]",p="[object RegExp]",f="[object Set]",h="[object String]",g="[object Symbol]",b="[object ArrayBuffer]",A="[object DataView]",S="[object Float32Array]",v="[object Float64Array]",I="[object Int8Array]",w="[object Int16Array]",q="[object Int32Array]",P="[object Uint8Array]",x="[object Uint8ClampedArray]",E="[object Uint16Array]",T="[object Uint32Array]",C=/\w*$/,k=/^\[object .+?Constructor\]$/,N=/^(?:0|[1-9]\d*)$/,L={};L[i]=L["[object Array]"]=L[b]=L[A]=L[o]=L[s]=L[S]=L[v]=L[I]=L[w]=L[q]=L[d]=L[u]=L[m]=L[p]=L[f]=L[h]=L[g]=L[P]=L[x]=L[E]=L[T]=!0,L["[object Error]"]=L[c]=L["[object WeakMap]"]=!1;var R="object"==typeof y&&y&&y.Object===Object&&y,D="object"==typeof self&&self&&self.Object===Object&&self,O=R||D||Function("return this")(),B=r&&!r.nodeType&&r,j=B&&e&&!e.nodeType&&e,F=j&&j.exports===B;function V(e,r){return e.set(r[0],r[1]),e}function U(e,r){return e.add(r),e}function H(e,r,t,a){var n=-1,i=e?e.length:0;for(a&&i&&(t=e[++n]);++n<i;)t=r(t,e[n],n,e);return t}function _(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}function z(e){var r=-1,t=Array(e.size);return e.forEach((function(e,a){t[++r]=[a,e]})),t}function G(e,r){return function(t){return e(r(t))}}function M(e){var r=-1,t=Array(e.size);return e.forEach((function(e){t[++r]=e})),t}var $,W=Array.prototype,J=Function.prototype,Z=Object.prototype,Y=O["__core-js_shared__"],K=($=/[^.]+$/.exec(Y&&Y.keys&&Y.keys.IE_PROTO||""))?"Symbol(src)_1."+$:"",Q=J.toString,X=Z.hasOwnProperty,ee=Z.toString,re=RegExp("^"+Q.call(X).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),te=F?O.Buffer:void 0,ae=O.Symbol,ne=O.Uint8Array,ie=G(Object.getPrototypeOf,Object),oe=Object.create,se=Z.propertyIsEnumerable,ce=W.splice,le=Object.getOwnPropertySymbols,de=te?te.isBuffer:void 0,ue=G(Object.keys,Object),me=je(O,"DataView"),pe=je(O,"Map"),fe=je(O,"Promise"),he=je(O,"Set"),ge=je(O,"WeakMap"),be=je(Object,"create"),Ae=_e(me),ye=_e(pe),Se=_e(fe),ve=_e(he),Ie=_e(ge),we=ae?ae.prototype:void 0,qe=we?we.valueOf:void 0;function Pe(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function xe(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function Ee(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function Te(e){this.__data__=new xe(e)}function Ce(e,r){var t=Ge(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Me(e)}(e)&&X.call(e,"callee")&&(!se.call(e,"callee")||ee.call(e)==i)}(e)?function(e,r){for(var t=-1,a=Array(e);++t<e;)a[t]=r(t);return a}(e.length,String):[],a=t.length,n=!!a;for(var o in e)!r&&!X.call(e,o)||n&&("length"==o||Ue(o,a))||t.push(o);return t}function ke(e,r,t){var a=e[r];X.call(e,r)&&ze(a,t)&&(void 0!==t||r in e)||(e[r]=t)}function Ne(e,r){for(var t=e.length;t--;)if(ze(e[t][0],r))return t;return-1}function Le(e,r,t,a,n,y,k){var N;if(a&&(N=y?a(e,n,y,k):a(e)),void 0!==N)return N;if(!Je(e))return e;var R=Ge(e);if(R){if(N=function(e){var r=e.length,t=e.constructor(r);r&&"string"==typeof e[0]&&X.call(e,"index")&&(t.index=e.index,t.input=e.input);return t}(e),!r)return function(e,r){var t=-1,a=e.length;r||(r=Array(a));for(;++t<a;)r[t]=e[t];return r}(e,N)}else{var D=Ve(e),O=D==c||D==l;if($e(e))return function(e,r){if(r)return e.slice();var t=new e.constructor(e.length);return e.copy(t),t}(e,r);if(D==m||D==i||O&&!y){if(_(e))return y?e:{};if(N=function(e){return"function"!=typeof e.constructor||He(e)?{}:(r=ie(e),Je(r)?oe(r):{});var r}(O?{}:e),!r)return function(e,r){return Oe(e,Fe(e),r)}(e,function(e,r){return e&&Oe(r,Ze(r),e)}(N,e))}else{if(!L[D])return y?e:{};N=function(e,r,t,a){var n=e.constructor;switch(r){case b:return De(e);case o:case s:return new n(+e);case A:return function(e,r){var t=r?De(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.byteLength)}(e,a);case S:case v:case I:case w:case q:case P:case x:case E:case T:return function(e,r){var t=r?De(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.length)}(e,a);case d:return function(e,r,t){return H(r?t(z(e),!0):z(e),V,new e.constructor)}(e,a,t);case u:case h:return new n(e);case p:return(l=new(c=e).constructor(c.source,C.exec(c))).lastIndex=c.lastIndex,l;case f:return function(e,r,t){return H(r?t(M(e),!0):M(e),U,new e.constructor)}(e,a,t);case g:return i=e,qe?Object(qe.call(i)):{}}var i;var c,l}(e,D,Le,r)}}k||(k=new Te);var B=k.get(e);if(B)return B;if(k.set(e,N),!R)var j=t?function(e){return function(e,r,t){var a=r(e);return Ge(e)?a:function(e,r){for(var t=-1,a=r.length,n=e.length;++t<a;)e[n+t]=r[t];return e}(a,t(e))}(e,Ze,Fe)}(e):Ze(e);return function(e,r){for(var t=-1,a=e?e.length:0;++t<a&&!1!==r(e[t],t,e););}(j||e,(function(n,i){j&&(n=e[i=n]),ke(N,i,Le(n,r,t,a,i,e,k))})),N}function Re(e){return!(!Je(e)||function(e){return!!K&&K in e}(e))&&(We(e)||_(e)?re:k).test(_e(e))}function De(e){var r=new e.constructor(e.byteLength);return new ne(r).set(new ne(e)),r}function Oe(e,r,t,a){t||(t={});for(var n=-1,i=r.length;++n<i;){var o=r[n],s=a?a(t[o],e[o],o,t,e):void 0;ke(t,o,void 0===s?e[o]:s)}return t}function Be(e,r){var t,a,n=e.__data__;return("string"==(a=typeof(t=r))||"number"==a||"symbol"==a||"boolean"==a?"__proto__"!==t:null===t)?n["string"==typeof r?"string":"hash"]:n.map}function je(e,r){var t=function(e,r){return null==e?void 0:e[r]}(e,r);return Re(t)?t:void 0}Pe.prototype.clear=function(){this.__data__=be?be(null):{}},Pe.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Pe.prototype.get=function(e){var r=this.__data__;if(be){var t=r[e];return t===a?void 0:t}return X.call(r,e)?r[e]:void 0},Pe.prototype.has=function(e){var r=this.__data__;return be?void 0!==r[e]:X.call(r,e)},Pe.prototype.set=function(e,r){return this.__data__[e]=be&&void 0===r?a:r,this},xe.prototype.clear=function(){this.__data__=[]},xe.prototype.delete=function(e){var r=this.__data__,t=Ne(r,e);return!(t<0)&&(t==r.length-1?r.pop():ce.call(r,t,1),!0)},xe.prototype.get=function(e){var r=this.__data__,t=Ne(r,e);return t<0?void 0:r[t][1]},xe.prototype.has=function(e){return Ne(this.__data__,e)>-1},xe.prototype.set=function(e,r){var t=this.__data__,a=Ne(t,e);return a<0?t.push([e,r]):t[a][1]=r,this},Ee.prototype.clear=function(){this.__data__={hash:new Pe,map:new(pe||xe),string:new Pe}},Ee.prototype.delete=function(e){return Be(this,e).delete(e)},Ee.prototype.get=function(e){return Be(this,e).get(e)},Ee.prototype.has=function(e){return Be(this,e).has(e)},Ee.prototype.set=function(e,r){return Be(this,e).set(e,r),this},Te.prototype.clear=function(){this.__data__=new xe},Te.prototype.delete=function(e){return this.__data__.delete(e)},Te.prototype.get=function(e){return this.__data__.get(e)},Te.prototype.has=function(e){return this.__data__.has(e)},Te.prototype.set=function(e,r){var a=this.__data__;if(a instanceof xe){var n=a.__data__;if(!pe||n.length<t-1)return n.push([e,r]),this;a=this.__data__=new Ee(n)}return a.set(e,r),this};var Fe=le?G(le,Object):function(){return[]},Ve=function(e){return ee.call(e)};function Ue(e,r){return!!(r=null==r?n:r)&&("number"==typeof e||N.test(e))&&e>-1&&e%1==0&&e<r}function He(e){var r=e&&e.constructor;return e===("function"==typeof r&&r.prototype||Z)}function _e(e){if(null!=e){try{return Q.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function ze(e,r){return e===r||e!=e&&r!=r}(me&&Ve(new me(new ArrayBuffer(1)))!=A||pe&&Ve(new pe)!=d||fe&&"[object Promise]"!=Ve(fe.resolve())||he&&Ve(new he)!=f||ge&&"[object WeakMap]"!=Ve(new ge))&&(Ve=function(e){var r=ee.call(e),t=r==m?e.constructor:void 0,a=t?_e(t):void 0;if(a)switch(a){case Ae:return A;case ye:return d;case Se:return"[object Promise]";case ve:return f;case Ie:return"[object WeakMap]"}return r});var Ge=Array.isArray;function Me(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=n}(e.length)&&!We(e)}var $e=de||function(){return!1};function We(e){var r=Je(e)?ee.call(e):"";return r==c||r==l}function Je(e){var r=typeof e;return!!e&&("object"==r||"function"==r)}function Ze(e){return Me(e)?Ce(e):function(e){if(!He(e))return ue(e);var r=[];for(var t in Object(e))X.call(e,t)&&"constructor"!=t&&r.push(t);return r}(e)}e.exports=function(e){return Le(e,!0,!0)}}));function $(e){const r={value:e,hungry:!1,optional:!1};return(r.value.endsWith("?*")||r.value.endsWith("*?"))&&r.value.length>2?(r.value=r.value.slice(0,r.value.length-2),r.optional=!0,r.hungry=!0):r.value.endsWith("?")&&r.value.length>1?(r.value=r.value.slice(0,r.value.length-1),r.optional=!0):r.value.endsWith("*")&&r.value.length>1&&(r.value=r.value.slice(0,r.value.length-1),r.hungry=!0),r}function W(e){return"number"==typeof e}function J(e){return"string"==typeof e}function Z(e,r){return function(e,r,t){if("string"!=typeof e||!e.length)return null;if(r&&"number"==typeof r||(r=0),!e[r+1])return null;if(e[r+1]&&(!t&&e[r+1].trim().length||t&&(e[r+1].trim().length||"\n\r".includes(e[r+1]))))return r+1;if(e[r+2]&&(!t&&e[r+2].trim().length||t&&(e[r+2].trim().length||"\n\r".includes(e[r+2]))))return r+2;for(let a=r+1,n=e.length;a<n;a++)if(e[a]&&(!t&&e[a].trim().length||t&&(e[a].trim().length||"\n\r".includes(e[a]))))return a;return null}(e,r,!1)}function Y(e,r){return function(e,r,t){if("string"!=typeof e||!e.length)return null;if(r&&"number"==typeof r||(r=0),r<1)return null;if(e[r-1]&&(!t&&e[r-1].trim().length||t&&(e[r-1].trim().length||"\n\r".includes(e[r-1]))))return r-1;if(e[r-2]&&(!t&&e[r-2].trim().length||t&&(e[r-2].trim().length||"\n\r".includes(e[r-2]))))return r-2;for(let a=r;a--;)if(e[a]&&(!t&&e[a].trim().length||t&&(e[a].trim().length||"\n\r".includes(e[a]))))return a;return null}(e,r,!1)}function K(e,r,t,a,n){if("string"!=typeof r||!r.length)return null;if(t&&"number"==typeof t||(t=0),"right"===e&&!r[t+1]||"left"===e&&!r[t-1])return null;let i=t;const o=[];let s,c,l,d=0;for(;d<n.length;){if(!J(n[d])||!n[d].length){d++;continue}const{value:t,optional:u,hungry:m}=$(n[d]),p="right"===e?Z(r,i):Y(r,i);if(!(a.i&&r[p].toLowerCase()===t.toLowerCase()||!a.i&&r[p]===t)){if(u){d++;continue}if(l){d++,l=void 0;continue}return null}{const n="right"===e?Z(r,p):Y(r,p);m&&(a.i&&r[n].toLowerCase()===t.toLowerCase()||!a.i&&r[n]===t)?l=!0:d++,"right"===e&&p>i+1?o.push([i+1,p]):"left"===e&&p<i-1&&o.unshift([p+1,i]),i=p,"right"===e?(void 0===s&&(s=p),c=p):(void 0===c&&(c=p),s=p)}}return void 0===s?null:{gaps:o,leftmostChar:s,rightmostChar:c}}function Q(e,r,...t){if(!t.length)return Y(e,r);const a={i:!1};let n;return K("left",e,r,n=A(t[0])?Object.assign({},a,t.shift()):a,Array.from(t).reverse())}function X(e,r,...t){if(!t.length)return Z(e,r);const a={i:!1};let n;return K("right",e,r,n=A(t[0])?Object.assign({},a,t.shift()):a,t)}function ee(e,r,t,a,n){if("string"!=typeof r||!r.length)return null;if(t&&"number"==typeof t||(t=0),"right"===e&&!r[t+1]||"left"===e&&(W(t)&&t<1||"0"===t))return null;let i=null,o=null;do{null!==(i="right"===e?X(r,W(o)?o:t,...n):Q(r,W(o)?o:t,...n))&&(o="right"===e?i.rightmostChar:i.leftmostChar)}while(i);if(null!=o&&"right"===e&&o++,null===o)return null;if("right"===e){if(r[o]&&r[o].trim().length)return o;const e=Z(r,o);if(0===a.mode){if(e===o+1)return o;if(!(r.slice(o,e||r.length).trim().length||r.slice(o,e||r.length).includes("\n")||r.slice(o,e||r.length).includes("\r")))return e?e-1:r.length;for(let e=o,t=r.length;e<t;e++)if("\n\r".includes(r[e]))return e}else{if(1===a.mode)return o;if(2===a.mode){const e=r.slice(o);if(e.trim().length||e.includes("\n")||e.includes("\r"))for(let e=o,t=r.length;e<t;e++)if(r[e].trim().length||"\n\r".includes(r[e]))return e;return r.length}}return e||r.length}if(r[o]&&r[o-1]&&r[o-1].trim().length)return o;const s=Y(r,o);if(0===a.mode){if(s===o-2)return o;if(r.slice(0,o).trim().length||r.slice(0,o).includes("\n")||r.slice(0,o).includes("\r"))for(let e=o;e--;)if("\n\r".includes(r[e])||r[e].trim().length)return e+1+(r[e].trim().length?1:0);return 0}if(1===a.mode)return o;if(2===a.mode){const e=r.slice(0,o);if(e.trim().length||e.includes("\n")||e.includes("\r"))for(let e=o;e--;)if(r[e].trim().length||"\n\r".includes(r[e]))return e+1;return 0}return null!==s?s+1:0}function re(e,r,...t){if(!t.length||1===t.length&&A(t[0]))return null;const a={mode:0};if(A(t[0])){const n=Object.assign({},a,M(t[0]));if(n.mode){if(J(n.mode)&&"0123".includes(n.mode))n.mode=Number.parseInt(n.mode,10);else if(!W(n.mode))throw new Error(`string-left-right/chompLeft(): [THROW_ID_01] the opts.mode is wrong! It should be 0, 1, 2 or 3. It was given as ${n.mode} (type ${typeof n.mode})`)}else n.mode=0;return ee("left",e,r,n,M(t).slice(1))}return J(t[0])?ee("left",e,r,a,M(t)):ee("left",e,r,a,M(t).slice(1))}const te="\\",ae=["a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdi","bdo","big","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","dir","div","dl","doctype","dt","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1","h1 - h6","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noframes","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rb","rp","rt","rtc","ruby","s","samp","script","section","select","slot","small","source","span","strike","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","tt","u","ul","var","video","wbr","xml"];function ne(e){return void 0===e||e.toUpperCase()===e.toLowerCase()&&!"0123456789".includes(e)}function ie(e,r=0){const t=r?e.slice(r):e;let a=!1;return/^<[\\ \t\r\n/]*\w+[\\ \t\r\n/]*>/g.test(t)?a=!0:/^<\s*\w+\s+\w+\s*=\s*['"]/g.test(t)?a=!0:/^<\s*\/?\s*\w+\s*\/?\s*>/g.test(t)?a=!0:/^<[\\ \t\r\n/]*\w+(?:\s*\w+)*\s*\w+=['"]/g.test(t)?a=!0:"<"===e[r]&&e[r+1]&&(!ne(e[r+1])&&G(e,r,ae,{cb:ne,i:!0,trimCharsBeforeMatching:["/",te,"!"," ","\t","\n","\r"]})||ne(e[r+1])&&G(e,r,ae,{cb:(r,t,a)=>(void 0===r||r.toUpperCase()===r.toLowerCase()&&!"0123456789".includes(r))&&("/"===e[Z(e,a-1)]||">"===e[Z(e,a-1)]),i:!0,trimCharsBeforeMatching:["/",te,"!"," ","\t","\n","\r"]}))&&(a=!0),"string"==typeof e&&r<e.length&&a}const oe=["a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdi","bdo","bgsound","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","command","content","data","datalist","dd","del","details","dfn","dialog","dir","div","dl","dt","element","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h6","head","header","hgroup","hr","html","i","iframe","image","img","input","ins","isindex","kbd","keygen","label","legend","li","link","listing","main","map","mark","marquee","menu","menuitem","meta","meter","multicol","nav","nextid","nobr","noembed","noframes","noscript","object","ol","optgroup","option","output","p","param","picture","plaintext","pre","progress","q","rb","rp","rt","rtc","ruby","s","samp","script","section","select","shadow","slot","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","tt","u","ul","var","video","wbr","xmp"];function se(e){return"string"==typeof e}function ce(e){return"number"==typeof e}function le(e){return se(e)&&1===e.length&&(e.charCodeAt(0)>64&&e.charCodeAt(0)<91||e.charCodeAt(0)>96&&e.charCodeAt(0)<123)}function de(e){let r="";for(let t=0,a=e.length;t<a;t++)r="{"===e[t]?`}${r}`:"("===e[t]?`)${r}`:`${e[t]}${r}`;return r}const ue={reportProgressFunc:null,reportProgressFuncFrom:0,reportProgressFuncTo:100},me=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"],pe="{}%-$_()*|";var fe=(e,r,t)=>{const a=t=>Object.defineProperty(e,r,{value:t,enumerable:!0,writable:!0});return Object.defineProperty(e,r,{configurable:!0,enumerable:!0,get(){const e=t();return a(e),e},set(e){a(e)}}),e},he=["bad-character-acknowledge","bad-character-activate-arabic-form-shaping","bad-character-activate-symmetric-swapping","bad-character-application-program-command","bad-character-backspace","bad-character-bell","bad-character-break-permitted-here","bad-character-cancel","bad-character-cancel-character","bad-character-character-tabulation","bad-character-character-tabulation-set","bad-character-character-tabulation-with-justification","bad-character-control-0080","bad-character-control-0081","bad-character-control-0084","bad-character-control-0099","bad-character-control-sequence-introducer","bad-character-data-link-escape","bad-character-delete","bad-character-device-control-four","bad-character-device-control-one","bad-character-device-control-string","bad-character-device-control-three","bad-character-device-control-two","bad-character-em-quad","bad-character-em-space","bad-character-en-quad","bad-character-en-space","bad-character-end-of-medium","bad-character-end-of-protected-area","bad-character-end-of-selected-area","bad-character-end-of-text","bad-character-end-of-transmission","bad-character-end-of-transmission-block","bad-character-enquiry","bad-character-escape","bad-character-figure-space","bad-character-first-strong-isolate","bad-character-form-feed","bad-character-four-per-em-space","bad-character-function-application","bad-character-hair-space","bad-character-ideographic-space","bad-character-information-separator-four","bad-character-information-separator-one","bad-character-information-separator-three","bad-character-information-separator-two","bad-character-inhibit-arabic-form-shaping","bad-character-inhibit-symmetric-swapping","bad-character-interlinear-annotation-anchor","bad-character-interlinear-annotation-separator","bad-character-interlinear-annotation-terminator","bad-character-invisible-plus","bad-character-invisible-separator","bad-character-invisible-times","bad-character-left-to-right-embedding","bad-character-left-to-right-isolate","bad-character-left-to-right-mark","bad-character-left-to-right-override","bad-character-line-separator","bad-character-line-tabulation","bad-character-line-tabulation-set","bad-character-medium-mathematical-space","bad-character-message-waiting","bad-character-narrow-no-break-space","bad-character-national-digit-shapes","bad-character-negative-acknowledge","bad-character-next-line","bad-character-no-break-here","bad-character-nominal-digit-shapes","bad-character-non-breaking-space","bad-character-null","bad-character-ogham-space-mark","bad-character-operating-system-command","bad-character-paragraph-separator","bad-character-partial-line-backward","bad-character-partial-line-forward","bad-character-pop-directional-formatting","bad-character-pop-directional-isolate","bad-character-private-message","bad-character-private-use-1","bad-character-private-use-2","bad-character-punctuation-space","bad-character-reverse-line-feed","bad-character-right-to-left-embedding","bad-character-right-to-left-isolate","bad-character-right-to-left-mark","bad-character-right-to-left-override","bad-character-set-transmit-state","bad-character-shift-in","bad-character-shift-out","bad-character-single-character-introducer","bad-character-single-shift-three","bad-character-single-shift-two","bad-character-six-per-em-space","bad-character-soft-hyphen","bad-character-start-of-heading","bad-character-start-of-protected-area","bad-character-start-of-selected-area","bad-character-start-of-string","bad-character-start-of-text","bad-character-string-terminator","bad-character-substitute","bad-character-synchronous-idle","bad-character-thin-space","bad-character-three-per-em-space","bad-character-word-joiner","bad-character-zero-width-joiner","bad-character-zero-width-no-break-space","bad-character-zero-width-non-joiner","bad-character-zero-width-space"],ge=["tag-closing-backslash","tag-space-after-opening-bracket","tag-space-before-closing-slash","tag-space-between-slash-and-bracket","tag-void-slash"],be=["bad-malformed-numeric-character-entity","bad-named-html-entity-malformed-nbsp","bad-named-html-entity-multiple-encoding","bad-named-html-entity-unrecognised"];const Ae=/[|\\{}()[\]^$+*?.-]/g;var ye=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(Ae,"\\$&")};const Se=new Map;function ve(e,r){r={caseSensitive:!1,...r};const t=e+JSON.stringify(r);if(Se.has(t))return Se.get(t);const a="!"===e[0];a&&(e=e.slice(1)),e=ye(e).replace(/\\\*/g,".*");const n=new RegExp(`^${e}$`,r.caseSensitive?"":"i");return n.negated=a,Se.set(t,n),n}var Ie=(e,r,t)=>{if(!Array.isArray(e)||!Array.isArray(r))throw new TypeError(`Expected two arrays, got ${typeof e} ${typeof r}`);if(0===r.length)return e;const a="!"===r[0][0];r=r.map(e=>ve(e,t));const n=[];for(const t of e){let e=a;for(const a of r)a.test(t)&&(e=!a.negated);e&&n.push(t)}return n};function we(e){return{character:function(r){var t=r.chr,a=r.i;0===t.charCodeAt(0)&&e.report({ruleId:"bad-character-null",message:"Bad character - NULL.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function qe(e){return{character:function(r){var t=r.chr,a=r.i;1===t.charCodeAt(0)&&e.report({ruleId:"bad-character-start-of-heading",message:"Bad character - START OF HEADING.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Pe(e){return{character:function(r){var t=r.chr,a=r.i;2===t.charCodeAt(0)&&e.report({ruleId:"bad-character-start-of-text",message:"Bad character - START OF TEXT.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function xe(e){return{character:function(r){var t=r.chr,a=r.i;3===t.charCodeAt(0)&&e.report({ruleId:"bad-character-end-of-text",message:"Bad character - END OF TEXT.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1,"\n"]]}})}}}function Ee(e){return{character:function(r){var t=r.chr,a=r.i;4===t.charCodeAt(0)&&e.report({ruleId:"bad-character-end-of-transmission",message:"Bad character - END OF TRANSMISSION.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Te(e){return{character:function(r){var t=r.chr,a=r.i;5===t.charCodeAt(0)&&e.report({ruleId:"bad-character-enquiry",message:"Bad character - ENQUIRY.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Ce(e){return{character:function(r){var t=r.chr,a=r.i;6===t.charCodeAt(0)&&e.report({ruleId:"bad-character-acknowledge",message:"Bad character - ACKNOWLEDGE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function ke(e){return{character:function(r){var t=r.chr,a=r.i;7===t.charCodeAt(0)&&e.report({ruleId:"bad-character-bell",message:"Bad character - BELL.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Ne(e){return{character:function(r){var t=r.chr,a=r.i;8===t.charCodeAt(0)&&e.report({ruleId:"bad-character-backspace",message:"Bad character - BACKSPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Le(e){return{character:function(r){var t=r.chr,a=r.i;9===t.charCodeAt(0)&&e.report({ruleId:"bad-character-character-tabulation",message:"Bad character - TABULATION.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Re(e){return{character:function(r){var t=r.chr,a=r.i;11===t.charCodeAt(0)&&e.report({ruleId:"bad-character-line-tabulation",message:"Bad character - LINE TABULATION.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function De(e){return{character:function(r){var t=r.chr,a=r.i;12===t.charCodeAt(0)&&e.report({ruleId:"bad-character-form-feed",message:"Bad character - FORM FEED.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Oe(e){return{character:function(r){var t=r.chr,a=r.i;14===t.charCodeAt(0)&&e.report({ruleId:"bad-character-shift-out",message:"Bad character - SHIFT OUT.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Be(e){return{character:function(r){var t=r.chr,a=r.i;15===t.charCodeAt(0)&&e.report({ruleId:"bad-character-shift-in",message:"Bad character - SHIFT IN.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function je(e){return{character:function(r){var t=r.chr,a=r.i;16===t.charCodeAt(0)&&e.report({ruleId:"bad-character-data-link-escape",message:"Bad character - DATA LINK ESCAPE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Fe(e){return{character:function(r){var t=r.chr,a=r.i;17===t.charCodeAt(0)&&e.report({ruleId:"bad-character-device-control-one",message:"Bad character - DEVICE CONTROL ONE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Ve(e){return{character:function(r){var t=r.chr,a=r.i;18===t.charCodeAt(0)&&e.report({ruleId:"bad-character-device-control-two",message:"Bad character - DEVICE CONTROL TWO.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Ue(e){return{character:function(r){var t=r.chr,a=r.i;19===t.charCodeAt(0)&&e.report({ruleId:"bad-character-device-control-three",message:"Bad character - DEVICE CONTROL THREE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function He(e){return{character:function(r){var t=r.chr,a=r.i;20===t.charCodeAt(0)&&e.report({ruleId:"bad-character-device-control-four",message:"Bad character - DEVICE CONTROL FOUR.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function _e(e){return{character:function(r){var t=r.chr,a=r.i;21===t.charCodeAt(0)&&e.report({ruleId:"bad-character-negative-acknowledge",message:"Bad character - NEGATIVE ACKNOWLEDGE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function ze(e){return{character:function(r){var t=r.chr,a=r.i;22===t.charCodeAt(0)&&e.report({ruleId:"bad-character-synchronous-idle",message:"Bad character - SYNCHRONOUS IDLE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Ge(e){return{character:function(r){var t=r.chr,a=r.i;23===t.charCodeAt(0)&&e.report({ruleId:"bad-character-end-of-transmission-block",message:"Bad character - END OF TRANSMISSION BLOCK.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Me(e){return{character:function(r){var t=r.chr,a=r.i;24===t.charCodeAt(0)&&e.report({ruleId:"bad-character-cancel",message:"Bad character - CANCEL.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function $e(e){return{character:function(r){var t=r.chr,a=r.i;25===t.charCodeAt(0)&&e.report({ruleId:"bad-character-end-of-medium",message:"Bad character - END OF MEDIUM.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function We(e){return{character:function(r){var t=r.chr,a=r.i;26===t.charCodeAt(0)&&e.report({ruleId:"bad-character-substitute",message:"Bad character - SUBSTITUTE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Je(e){return{character:function(r){var t=r.chr,a=r.i;27===t.charCodeAt(0)&&e.report({ruleId:"bad-character-escape",message:"Bad character - ESCAPE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Ze(e){return{character:function(r){var t=r.chr,a=r.i;28===t.charCodeAt(0)&&e.report({ruleId:"bad-character-information-separator-four",message:"Bad character - INFORMATION SEPARATOR FOUR.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Ye(e){return{character:function(r){var t=r.chr,a=r.i;29===t.charCodeAt(0)&&e.report({ruleId:"bad-character-information-separator-three",message:"Bad character - INFORMATION SEPARATOR THREE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Ke(e){return{character:function(r){var t=r.chr,a=r.i;30===t.charCodeAt(0)&&e.report({ruleId:"bad-character-information-separator-two",message:"Bad character - INFORMATION SEPARATOR TWO.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Qe(e){return{character:function(r){var t=r.chr,a=r.i;31===t.charCodeAt(0)&&e.report({ruleId:"bad-character-information-separator-one",message:"Bad character - INFORMATION SEPARATOR ONE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Xe(e){return{character:function(r){var t=r.chr,a=r.i;127===t.charCodeAt(0)&&e.report({ruleId:"bad-character-delete",message:"Bad character - DELETE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function er(e){return{character:function(r){var t=r.chr,a=r.i;128===t.charCodeAt(0)&&e.report({ruleId:"bad-character-control-0080",message:"Bad character - CONTROL.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function rr(e){return{character:function(r){var t=r.chr,a=r.i;129===t.charCodeAt(0)&&e.report({ruleId:"bad-character-control-0081",message:"Bad character - CONTROL.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function tr(e){return{character:function(r){var t=r.chr,a=r.i;130===t.charCodeAt(0)&&e.report({ruleId:"bad-character-break-permitted-here",message:"Bad character - BREAK PERMITTED HERE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function ar(e){return{character:function(r){var t=r.chr,a=r.i;131===t.charCodeAt(0)&&e.report({ruleId:"bad-character-no-break-here",message:"Bad character - NO BREAK HERE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function nr(e){return{character:function(r){var t=r.chr,a=r.i;132===t.charCodeAt(0)&&e.report({ruleId:"bad-character-control-0084",message:"Bad character - CONTROL.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function ir(e){return{character:function(r){var t=r.chr,a=r.i;133===t.charCodeAt(0)&&e.report({ruleId:"bad-character-next-line",message:"Bad character - NEXT LINE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function or(e){return{character:function(r){var t=r.chr,a=r.i;134===t.charCodeAt(0)&&e.report({ruleId:"bad-character-start-of-selected-area",message:"Bad character - START OF SELECTED AREA.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function sr(e){return{character:function(r){var t=r.chr,a=r.i;135===t.charCodeAt(0)&&e.report({ruleId:"bad-character-end-of-selected-area",message:"Bad character - END OF SELECTED AREA.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function cr(e){return{character:function(r){var t=r.chr,a=r.i;136===t.charCodeAt(0)&&e.report({ruleId:"bad-character-character-tabulation-set",message:"Bad character - CHARACTER TABULATION SET.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function lr(e){return{character:function(r){var t=r.chr,a=r.i;137===t.charCodeAt(0)&&e.report({ruleId:"bad-character-character-tabulation-with-justification",message:"Bad character - CHARACTER TABULATION WITH JUSTIFICATION.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function dr(e){return{character:function(r){var t=r.chr,a=r.i;138===t.charCodeAt(0)&&e.report({ruleId:"bad-character-line-tabulation-set",message:"Bad character - LINE TABULATION SET.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function ur(e){return{character:function(r){var t=r.chr,a=r.i;139===t.charCodeAt(0)&&e.report({ruleId:"bad-character-partial-line-forward",message:"Bad character - PARTIAL LINE FORWARD.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function mr(e){return{character:function(r){var t=r.chr,a=r.i;140===t.charCodeAt(0)&&e.report({ruleId:"bad-character-partial-line-backward",message:"Bad character - PARTIAL LINE BACKWARD.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function pr(e){return{character:function(r){var t=r.chr,a=r.i;141===t.charCodeAt(0)&&e.report({ruleId:"bad-character-reverse-line-feed",message:"Bad character - REVERSE LINE FEED.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function fr(e){return{character:function(r){var t=r.chr,a=r.i;142===t.charCodeAt(0)&&e.report({ruleId:"bad-character-single-shift-two",message:"Bad character - SINGLE SHIFT TWO.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function hr(e){return{character:function(r){var t=r.chr,a=r.i;143===t.charCodeAt(0)&&e.report({ruleId:"bad-character-single-shift-three",message:"Bad character - SINGLE SHIFT THREE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function gr(e){return{character:function(r){var t=r.chr,a=r.i;144===t.charCodeAt(0)&&e.report({ruleId:"bad-character-device-control-string",message:"Bad character - DEVICE CONTROL STRING.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function br(e){return{character:function(r){var t=r.chr,a=r.i;145===t.charCodeAt(0)&&e.report({ruleId:"bad-character-private-use-1",message:"Bad character - PRIVATE USE ONE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Ar(e){return{character:function(r){var t=r.chr,a=r.i;146===t.charCodeAt(0)&&e.report({ruleId:"bad-character-private-use-2",message:"Bad character - PRIVATE USE TWO.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function yr(e){return{character:function(r){var t=r.chr,a=r.i;147===t.charCodeAt(0)&&e.report({ruleId:"bad-character-set-transmit-state",message:"Bad character - SET TRANSMIT STATE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Sr(e){return{character:function(r){var t=r.chr,a=r.i;148===t.charCodeAt(0)&&e.report({ruleId:"bad-character-cancel-character",message:"Bad character - CANCEL CHARACTER.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function vr(e){return{character:function(r){var t=r.chr,a=r.i;149===t.charCodeAt(0)&&e.report({ruleId:"bad-character-message-waiting",message:"Bad character - MESSAGE WAITING.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Ir(e){return{character:function(r){var t=r.chr,a=r.i;150===t.charCodeAt(0)&&e.report({ruleId:"bad-character-start-of-protected-area",message:"Bad character - START OF PROTECTED AREA.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function wr(e){return{character:function(r){var t=r.chr,a=r.i;151===t.charCodeAt(0)&&e.report({ruleId:"bad-character-end-of-protected-area",message:"Bad character - END OF PROTECTED AREA.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function qr(e){return{character:function(r){var t=r.chr,a=r.i;152===t.charCodeAt(0)&&e.report({ruleId:"bad-character-start-of-string",message:"Bad character - START OF STRING.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Pr(e){return{character:function(r){var t=r.chr,a=r.i;153===t.charCodeAt(0)&&e.report({ruleId:"bad-character-control-0099",message:"Bad character - CONTROL.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function xr(e){return{character:function(r){var t=r.chr,a=r.i;154===t.charCodeAt(0)&&e.report({ruleId:"bad-character-single-character-introducer",message:"Bad character - SINGLE CHARACTER INTRODUCER.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Er(e){return{character:function(r){var t=r.chr,a=r.i;155===t.charCodeAt(0)&&e.report({ruleId:"bad-character-control-sequence-introducer",message:"Bad character - CONTROL SEQUENCE INTRODUCER.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Tr(e){return{character:function(r){var t=r.chr,a=r.i;156===t.charCodeAt(0)&&e.report({ruleId:"bad-character-string-terminator",message:"Bad character - STRING TERMINATOR.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Cr(e){return{character:function(r){var t=r.chr,a=r.i;157===t.charCodeAt(0)&&e.report({ruleId:"bad-character-operating-system-command",message:"Bad character - OPERATING SYSTEM COMMAND.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function kr(e){return{character:function(r){var t=r.chr,a=r.i;158===t.charCodeAt(0)&&e.report({ruleId:"bad-character-private-message",message:"Bad character - PRIVATE MESSAGE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Nr(e){return{character:function(r){var t=r.chr,a=r.i;159===t.charCodeAt(0)&&e.report({ruleId:"bad-character-application-program-command",message:"Bad character - APPLICATION PROGRAM COMMAND.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Lr(e){return{character:function(r){var t=r.chr,a=r.i;173===t.charCodeAt(0)&&e.report({ruleId:"bad-character-soft-hyphen",message:"Bad character - SOFT HYPHEN.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Rr(e){return{character:function(r){var t=r.chr,a=r.i;160===t.charCodeAt(0)&&e.report({ruleId:"bad-character-non-breaking-space",message:"Bad character - NON-BREAKING SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Dr(e){return{character:function(r){var t=r.chr,a=r.i;5760===t.charCodeAt(0)&&e.report({ruleId:"bad-character-ogham-space-mark",message:"Bad character - OGHAM SPACE MARK.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Or(e){return{character:function(r){var t=r.chr,a=r.i;8192===t.charCodeAt(0)&&e.report({ruleId:"bad-character-en-quad",message:"Bad character - EN QUAD.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Br(e){return{character:function(r){var t=r.chr,a=r.i;8193===t.charCodeAt(0)&&e.report({ruleId:"bad-character-em-quad",message:"Bad character - EM QUAD.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function jr(e){return{character:function(r){var t=r.chr,a=r.i;8194===t.charCodeAt(0)&&e.report({ruleId:"bad-character-en-space",message:"Bad character - EN SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Fr(e){return{character:function(r){var t=r.chr,a=r.i;8195===t.charCodeAt(0)&&e.report({ruleId:"bad-character-em-space",message:"Bad character - EM SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Vr(e){return{character:function(r){var t=r.chr,a=r.i;8196===t.charCodeAt(0)&&e.report({ruleId:"bad-character-three-per-em-space",message:"Bad character - THREE-PER-EM SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Ur(e){return{character:function(r){var t=r.chr,a=r.i;8197===t.charCodeAt(0)&&e.report({ruleId:"bad-character-four-per-em-space",message:"Bad character - FOUR-PER-EM SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Hr(e){return{character:function(r){var t=r.chr,a=r.i;8198===t.charCodeAt(0)&&e.report({ruleId:"bad-character-six-per-em-space",message:"Bad character - SIX-PER-EM SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function _r(e){return{character:function(r){var t=r.chr,a=r.i;8199===t.charCodeAt(0)&&e.report({ruleId:"bad-character-figure-space",message:"Bad character - FIGURE SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function zr(e){return{character:function(r){var t=r.chr,a=r.i;8200===t.charCodeAt(0)&&e.report({ruleId:"bad-character-punctuation-space",message:"Bad character - PUNCTUATION SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Gr(e){return{character:function(r){var t=r.chr,a=r.i;8201===t.charCodeAt(0)&&e.report({ruleId:"bad-character-thin-space",message:"Bad character - THIN SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Mr(e){return{character:function(r){var t=r.chr,a=r.i;8202===t.charCodeAt(0)&&e.report({ruleId:"bad-character-hair-space",message:"Bad character - HAIR SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function $r(e){return{character:function(r){var t=r.chr,a=r.i;8203===t.charCodeAt(0)&&e.report({ruleId:"bad-character-zero-width-space",message:"Bad character - ZERO WIDTH SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Wr(e){return{character:function(r){var t=r.chr,a=r.i;8204===t.charCodeAt(0)&&e.report({ruleId:"bad-character-zero-width-non-joiner",message:"Bad character - ZERO WIDTH NON-JOINER.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Jr(e){return{character:function(r){var t=r.chr,a=r.i;8205===t.charCodeAt(0)&&e.report({ruleId:"bad-character-zero-width-joiner",message:"Bad character - ZERO WIDTH JOINER.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Zr(e){return{character:function(r){var t=r.chr,a=r.i;8206===t.charCodeAt(0)&&e.report({ruleId:"bad-character-left-to-right-mark",message:"Bad character - LEFT-TO-RIGHT MARK.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Yr(e){return{character:function(r){var t=r.chr,a=r.i;8207===t.charCodeAt(0)&&e.report({ruleId:"bad-character-right-to-left-mark",message:"Bad character - RIGHT-TO-LEFT MARK.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Kr(e){return{character:function(r){var t=r.chr,a=r.i;8234===t.charCodeAt(0)&&e.report({ruleId:"bad-character-left-to-right-embedding",message:"Bad character - LEFT-TO-RIGHT EMBEDDING.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Qr(e){return{character:function(r){var t=r.chr,a=r.i;8235===t.charCodeAt(0)&&e.report({ruleId:"bad-character-right-to-left-embedding",message:"Bad character - RIGHT-TO-LEFT EMBEDDING.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function Xr(e){return{character:function(r){var t=r.chr,a=r.i;8236===t.charCodeAt(0)&&e.report({ruleId:"bad-character-pop-directional-formatting",message:"Bad character - POP DIRECTIONAL FORMATTING.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function et(e){return{character:function(r){var t=r.chr,a=r.i;8237===t.charCodeAt(0)&&e.report({ruleId:"bad-character-left-to-right-override",message:"Bad character - LEFT-TO-RIGHT OVERRIDE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function rt(e){return{character:function(r){var t=r.chr,a=r.i;8238===t.charCodeAt(0)&&e.report({ruleId:"bad-character-right-to-left-override",message:"Bad character - RIGHT-TO-LEFT OVERRIDE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function tt(e){return{character:function(r){var t=r.chr,a=r.i;8288===t.charCodeAt(0)&&e.report({ruleId:"bad-character-word-joiner",message:"Bad character - WORD JOINER.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function at(e){return{character:function(r){var t=r.chr,a=r.i;8289===t.charCodeAt(0)&&e.report({ruleId:"bad-character-function-application",message:"Bad character - FUNCTION APPLICATION.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function nt(e){return{character:function(r){var t=r.chr,a=r.i;8290===t.charCodeAt(0)&&e.report({ruleId:"bad-character-invisible-times",message:"Bad character - INVISIBLE TIMES.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function it(e){return{character:function(r){var t=r.chr,a=r.i;8291===t.charCodeAt(0)&&e.report({ruleId:"bad-character-invisible-separator",message:"Bad character - INVISIBLE SEPARATOR.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function ot(e){return{character:function(r){var t=r.chr,a=r.i;8292===t.charCodeAt(0)&&e.report({ruleId:"bad-character-invisible-plus",message:"Bad character - INVISIBLE PLUS.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function st(e){return{character:function(r){var t=r.chr,a=r.i;8294===t.charCodeAt(0)&&e.report({ruleId:"bad-character-left-to-right-isolate",message:"Bad character - LEFT-TO-RIGHT ISOLATE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function ct(e){return{character:function(r){var t=r.chr,a=r.i;8295===t.charCodeAt(0)&&e.report({ruleId:"bad-character-right-to-left-isolate",message:"Bad character - RIGHT-TO-LEFT ISOLATE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function lt(e){return{character:function(r){var t=r.chr,a=r.i;8296===t.charCodeAt(0)&&e.report({ruleId:"bad-character-first-strong-isolate",message:"Bad character - FIRST STRONG ISOLATE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function dt(e){return{character:function(r){var t=r.chr,a=r.i;8297===t.charCodeAt(0)&&e.report({ruleId:"bad-character-pop-directional-isolate",message:"Bad character - FIRST STRONG ISOLATE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function ut(e){return{character:function(r){var t=r.chr,a=r.i;8298===t.charCodeAt(0)&&e.report({ruleId:"bad-character-inhibit-symmetric-swapping",message:"Bad character - INHIBIT SYMMETRIC SWAPPING.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function mt(e){return{character:function(r){var t=r.chr,a=r.i;8299===t.charCodeAt(0)&&e.report({ruleId:"bad-character-activate-symmetric-swapping",message:"Bad character - INHIBIT SYMMETRIC SWAPPING.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function pt(e){return{character:function(r){var t=r.chr,a=r.i;8300===t.charCodeAt(0)&&e.report({ruleId:"bad-character-inhibit-arabic-form-shaping",message:"Bad character - INHIBIT ARABIC FORM SHAPING.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function ft(e){return{character:function(r){var t=r.chr,a=r.i;8301===t.charCodeAt(0)&&e.report({ruleId:"bad-character-activate-arabic-form-shaping",message:"Bad character - ACTIVATE ARABIC FORM SHAPING.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function ht(e){return{character:function(r){var t=r.chr,a=r.i;8302===t.charCodeAt(0)&&e.report({ruleId:"bad-character-national-digit-shapes",message:"Bad character - NATIONAL DIGIT SHAPES.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function gt(e){return{character:function(r){var t=r.chr,a=r.i;8303===t.charCodeAt(0)&&e.report({ruleId:"bad-character-nominal-digit-shapes",message:"Bad character - NOMINAL DIGIT SHAPES.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function bt(e){return{character:function(r){var t=r.chr,a=r.i;65279===t.charCodeAt(0)&&e.report({ruleId:"bad-character-zero-width-no-break-space",message:"Bad character - ZERO WIDTH NO-BREAK SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function At(e){return{character:function(r){var t=r.chr,a=r.i;65529===t.charCodeAt(0)&&e.report({ruleId:"bad-character-interlinear-annotation-anchor",message:"Bad character - INTERLINEAR ANNOTATION ANCHOR.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function yt(e){return{character:function(r){var t=r.chr,a=r.i;65530===t.charCodeAt(0)&&e.report({ruleId:"bad-character-interlinear-annotation-separator",message:"Bad character - INTERLINEAR ANNOTATION SEPARATOR.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function St(e){return{character:function(r){var t=r.chr,a=r.i;65531===t.charCodeAt(0)&&e.report({ruleId:"bad-character-interlinear-annotation-terminator",message:"Bad character - INTERLINEAR ANNOTATION TERMINATOR.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function vt(e){return{character:function(r){var t=r.chr,a=r.i;8232===t.charCodeAt(0)&&e.report({ruleId:"bad-character-line-separator",message:"Bad character - LINE SEPARATOR.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function It(e){return{character:function(r){var t=r.chr,a=r.i;8233===t.charCodeAt(0)&&e.report({ruleId:"bad-character-paragraph-separator",message:"Bad character - PARAGRAPH SEPARATOR.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1]]}})}}}function wt(e){return{character:function(r){var t=r.chr,a=r.i;8239===t.charCodeAt(0)&&e.report({ruleId:"bad-character-narrow-no-break-space",message:"Bad character - NARROW NO-BREAK SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function qt(e){return{character:function(r){var t=r.chr,a=r.i;8287===t.charCodeAt(0)&&e.report({ruleId:"bad-character-medium-mathematical-space",message:"Bad character - MEDIUM MATHEMATICAL SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function Pt(e){return{character:function(r){var t=r.chr,a=r.i;12288===t.charCodeAt(0)&&e.report({ruleId:"bad-character-ideographic-space",message:"Bad character - IDEOGRAPHIC SPACE.",idxFrom:a,idxTo:a+1,fix:{ranges:[[a,a+1," "]]}})}}}function xt(e){return{html:function(r){var t=e.str.slice(r.start+1,r.tagNameStartAt);if(r.tagNameStartAt>r.start+1&&(!t.trim().length||"/"!==t&&"/"===t.trim())){var a=[];-1!==t.indexOf("/")?(r.start+1+t.indexOf("/")>r.start+1&&a.push([r.start+1,r.start+1+t.indexOf("/")]),r.start+1+t.indexOf("/")<r.tagNameStartAt-1&&a.push([r.start+1+t.indexOf("/")+1,r.tagNameStartAt])):a.push([r.start+1+t.indexOf("/")+1,r.tagNameStartAt]),e.report({ruleId:"tag-space-after-opening-bracket",message:"Bad whitespace.",idxFrom:a[0][0],idxTo:a[a.length-1][1],fix:{ranges:a}})}}}}function Et(e){for(var r=arguments.length,t=new Array(r>1?r-1:0),a=1;a<r;a++)t[a-1]=arguments[a];return{html:function(r){e.str.slice(r.start+1,r.tagNameStartAt);var a="never";Array.isArray(t)&&["always","never"].includes(t[0])&&(a=t[0]);var n=r.end-1,i=Y(e.str,n),o=Y(e.str,i);"never"===a&&r.void&&"/"===e.str[i]&&o<i-1?e.report({ruleId:"tag-space-before-closing-slash",message:"Bad whitespace.",idxFrom:o+1,idxTo:i,fix:{ranges:[[o+1,i]]}}):"always"===a&&r.void&&"/"===e.str[i]&&o===i-1&&e.report({ruleId:"tag-space-before-closing-slash",message:"Missing space.",idxFrom:i,idxTo:i,fix:{ranges:[[i,i," "]]}})}}}function Tt(e){return{html:function(r){if(Number.isInteger(r.end)&&">"===e.str[r.end-1]&&"/"===e.str[Y(e.str,r.end-1)]&&Y(e.str,r.end-1)<r.end-2){var t=Y(e.str,r.end-1)+1;e.report({ruleId:"tag-space-between-slash-and-bracket",message:"Bad whitespace.",idxFrom:t,idxTo:r.end-1,fix:{ranges:[[t,r.end-1]]}})}}}}Ie.isMatch=(e,r,t)=>{const a=Array.isArray(e)?e:[e],n=Array.isArray(r)?r:[r];return a.some(e=>n.every(r=>{const a=ve(r,t),n=a.test(e);return a.negated?!n:n}))};var Ct="\\";function kt(e){return{html:function(r){if(Number.isInteger(r.start)&&"<"===e.str[r.start]&&e.str[Z(e.str,r.start)]===Ct&&Number.isInteger(r.tagNameStartAt)){var t=[[r.start+1,r.tagNameStartAt]];e.report({ruleId:"tag-closing-backslash",message:"Wrong slash - backslash.",idxFrom:r.start+1,idxTo:r.tagNameStartAt,fix:{ranges:t}})}if(Number.isInteger(r.end)&&">"===e.str[r.end-1]&&e.str[Y(e.str,r.end-1)]===Ct){var a=r.void?"Replace backslash with slash.":"Delete this.",n=Y(e.str,r.end-1),i=Y(e.str,n)+1,o=r.void?"/":"";e.processedRulesConfig["tag-space-before-closing-slash"]&&(Number.isInteger(e.processedRulesConfig["tag-space-before-closing-slash"])&&e.processedRulesConfig["tag-space-before-closing-slash"]>0||Array.isArray(e.processedRulesConfig["tag-space-before-closing-slash"])&&e.processedRulesConfig["tag-space-before-closing-slash"][0]>0&&"never"===e.processedRulesConfig["tag-space-before-closing-slash"][1])&&(i=Y(e.str,n)+1),Array.isArray(e.processedRulesConfig["tag-space-before-closing-slash"])&&e.processedRulesConfig["tag-space-before-closing-slash"][0]>0&&"always"===e.processedRulesConfig["tag-space-before-closing-slash"][1]&&(i=Y(e.str,n)+1,o=" ".concat(o),r.void&&" "===e.str[i+1]?(i++,o=o.trim()):r.void||(o=o.trim())),r.void&&Array.isArray(e.processedRulesConfig["tag-void-slash"])&&e.processedRulesConfig["tag-void-slash"][0]>0&&"never"===e.processedRulesConfig["tag-void-slash"][1]&&(o="",i=Y(e.str,n)+1,a="Delete this."),e.report({ruleId:"tag-closing-backslash",message:a,idxFrom:i,idxTo:r.end-1,fix:{ranges:[[i,r.end-1,o]]}})}}}}var Nt="\\";function Lt(e){for(var r=arguments.length,t=new Array(r>1?r-1:0),a=1;a<r;a++)t[a-1]=arguments[a];return{html:function(r){var a="always";Array.isArray(t)&&["always","never"].includes(t[0])&&(a=t[0]);var n=r.end-1,i=Y(e.str,n),o=Y(e.str,i);"never"===a&&r.void&&"/"===e.str[i]?e.report({ruleId:"tag-void-slash",message:"Remove the slash.",idxFrom:o+1,idxTo:n,fix:{ranges:[[o+1,n]]}}):"always"!==a||!r.void||"/"===e.str[i]||e.processedRulesConfig["tag-closing-backslash"]&&e.str[i]===Nt&&(Number.isInteger(e.processedRulesConfig["tag-closing-backslash"])&&e.processedRulesConfig["tag-closing-backslash"]>0||Array.isArray(e.processedRulesConfig["tag-closing-backslash"])&&e.processedRulesConfig["tag-closing-backslash"][0]>0&&"always"===e.processedRulesConfig["tag-closing-backslash"][1])||(Array.isArray(e.processedRulesConfig["tag-space-before-closing-slash"])&&"always"===e.processedRulesConfig["tag-space-before-closing-slash"][1]?" "===e.str[i+1]?e.report({ruleId:"tag-void-slash",message:"Missing slash.",idxFrom:i+2,idxTo:n,fix:{ranges:[[i+2,n,"/"]]}}):e.report({ruleId:"tag-void-slash",message:"Missing slash.",idxFrom:i+1,idxTo:n,fix:{ranges:[[i+1,n," /"]]}}):(void 0===e.processedRulesConfig["tag-space-before-closing-slash"]||Array.isArray(e.processedRulesConfig["tag-space-before-closing-slash"])&&"never"===e.processedRulesConfig["tag-space-before-closing-slash"][1]||Number.isInteger(e.processedRulesConfig["tag-space-before-closing-slash"])&&e.processedRulesConfig["tag-space-before-closing-slash"]>0)&&e.report({ruleId:"tag-void-slash",message:"Missing slash.",idxFrom:i+1,idxTo:n,fix:{ranges:[[i+1,n,"/"]]}}))}}}var Rt={};function Dt(e){return Rt[e]}function Ot(){}function Bt(){Bt.init.call(this)}function jt(e){return void 0===e._maxListeners?Bt.defaultMaxListeners:e._maxListeners}function Ft(e,r,t){if(r)e.call(t);else for(var a=e.length,n=$t(e,a),i=0;i<a;++i)n[i].call(t)}function Vt(e,r,t,a){if(r)e.call(t,a);else for(var n=e.length,i=$t(e,n),o=0;o<n;++o)i[o].call(t,a)}function Ut(e,r,t,a,n){if(r)e.call(t,a,n);else for(var i=e.length,o=$t(e,i),s=0;s<i;++s)o[s].call(t,a,n)}function Ht(e,r,t,a,n,i){if(r)e.call(t,a,n,i);else for(var o=e.length,s=$t(e,o),c=0;c<o;++c)s[c].call(t,a,n,i)}function _t(e,r,t,a){if(r)e.apply(t,a);else for(var n=e.length,i=$t(e,n),o=0;o<n;++o)i[o].apply(t,a)}function zt(e,r,t,a){var n,i,o;if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');if((i=e._events)?(i.newListener&&(e.emit("newListener",r,t.listener?t.listener:t),i=e._events),o=i[r]):(i=e._events=new Ot,e._eventsCount=0),o){if("function"==typeof o?o=i[r]=a?[t,o]:[o,t]:a?o.unshift(t):o.push(t),!o.warned&&(n=jt(e))&&n>0&&o.length>n){o.warned=!0;var s=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+r+" listeners added. Use emitter.setMaxListeners() to increase limit");s.name="MaxListenersExceededWarning",s.emitter=e,s.type=r,s.count=o.length,function(e){"function"==typeof console.warn?console.warn(e):console.log(e)}(s)}}else o=i[r]=t,++e._eventsCount;return e}function Gt(e,r,t){var a=!1;function n(){e.removeListener(r,n),a||(a=!0,t.apply(e,arguments))}return n.listener=t,n}function Mt(e){var r=this._events;if(r){var t=r[e];if("function"==typeof t)return 1;if(t)return t.length}return 0}function $t(e,r){for(var t=new Array(r);r--;)t[r]=e[r];return t}fe(Rt,"bad-character-null",(function(){return we})),fe(Rt,"bad-character-start-of-heading",(function(){return qe})),fe(Rt,"bad-character-start-of-text",(function(){return Pe})),fe(Rt,"bad-character-end-of-text",(function(){return xe})),fe(Rt,"bad-character-end-of-transmission",(function(){return Ee})),fe(Rt,"bad-character-enquiry",(function(){return Te})),fe(Rt,"bad-character-acknowledge",(function(){return Ce})),fe(Rt,"bad-character-bell",(function(){return ke})),fe(Rt,"bad-character-backspace",(function(){return Ne})),fe(Rt,"bad-character-character-tabulation",(function(){return Le})),fe(Rt,"bad-character-line-tabulation",(function(){return Re})),fe(Rt,"bad-character-form-feed",(function(){return De})),fe(Rt,"bad-character-shift-out",(function(){return Oe})),fe(Rt,"bad-character-shift-in",(function(){return Be})),fe(Rt,"bad-character-data-link-escape",(function(){return je})),fe(Rt,"bad-character-device-control-one",(function(){return Fe})),fe(Rt,"bad-character-device-control-two",(function(){return Ve})),fe(Rt,"bad-character-device-control-three",(function(){return Ue})),fe(Rt,"bad-character-device-control-four",(function(){return He})),fe(Rt,"bad-character-negative-acknowledge",(function(){return _e})),fe(Rt,"bad-character-synchronous-idle",(function(){return ze})),fe(Rt,"bad-character-end-of-transmission-block",(function(){return Ge})),fe(Rt,"bad-character-cancel",(function(){return Me})),fe(Rt,"bad-character-end-of-medium",(function(){return $e})),fe(Rt,"bad-character-substitute",(function(){return We})),fe(Rt,"bad-character-escape",(function(){return Je})),fe(Rt,"bad-character-information-separator-four",(function(){return Ze})),fe(Rt,"bad-character-information-separator-three",(function(){return Ye})),fe(Rt,"bad-character-information-separator-two",(function(){return Ke})),fe(Rt,"bad-character-information-separator-one",(function(){return Qe})),fe(Rt,"bad-character-delete",(function(){return Xe})),fe(Rt,"bad-character-control-0080",(function(){return er})),fe(Rt,"bad-character-control-0081",(function(){return rr})),fe(Rt,"bad-character-break-permitted-here",(function(){return tr})),fe(Rt,"bad-character-no-break-here",(function(){return ar})),fe(Rt,"bad-character-control-0084",(function(){return nr})),fe(Rt,"bad-character-next-line",(function(){return ir})),fe(Rt,"bad-character-start-of-selected-area",(function(){return or})),fe(Rt,"bad-character-end-of-selected-area",(function(){return sr})),fe(Rt,"bad-character-character-tabulation-set",(function(){return cr})),fe(Rt,"bad-character-character-tabulation-with-justification",(function(){return lr})),fe(Rt,"bad-character-line-tabulation-set",(function(){return dr})),fe(Rt,"bad-character-partial-line-forward",(function(){return ur})),fe(Rt,"bad-character-partial-line-backward",(function(){return mr})),fe(Rt,"bad-character-reverse-line-feed",(function(){return pr})),fe(Rt,"bad-character-single-shift-two",(function(){return fr})),fe(Rt,"bad-character-single-shift-three",(function(){return hr})),fe(Rt,"bad-character-device-control-string",(function(){return gr})),fe(Rt,"bad-character-private-use-1",(function(){return br})),fe(Rt,"bad-character-private-use-2",(function(){return Ar})),fe(Rt,"bad-character-set-transmit-state",(function(){return yr})),fe(Rt,"bad-character-cancel-character",(function(){return Sr})),fe(Rt,"bad-character-message-waiting",(function(){return vr})),fe(Rt,"bad-character-start-of-protected-area",(function(){return Ir})),fe(Rt,"bad-character-end-of-protected-area",(function(){return wr})),fe(Rt,"bad-character-start-of-string",(function(){return qr})),fe(Rt,"bad-character-control-0099",(function(){return Pr})),fe(Rt,"bad-character-single-character-introducer",(function(){return xr})),fe(Rt,"bad-character-control-sequence-introducer",(function(){return Er})),fe(Rt,"bad-character-string-terminator",(function(){return Tr})),fe(Rt,"bad-character-operating-system-command",(function(){return Cr})),fe(Rt,"bad-character-private-message",(function(){return kr})),fe(Rt,"bad-character-application-program-command",(function(){return Nr})),fe(Rt,"bad-character-soft-hyphen",(function(){return Lr})),fe(Rt,"bad-character-non-breaking-space",(function(){return Rr})),fe(Rt,"bad-character-ogham-space-mark",(function(){return Dr})),fe(Rt,"bad-character-en-quad",(function(){return Or})),fe(Rt,"bad-character-em-quad",(function(){return Br})),fe(Rt,"bad-character-en-space",(function(){return jr})),fe(Rt,"bad-character-em-space",(function(){return Fr})),fe(Rt,"bad-character-three-per-em-space",(function(){return Vr})),fe(Rt,"bad-character-four-per-em-space",(function(){return Ur})),fe(Rt,"bad-character-six-per-em-space",(function(){return Hr})),fe(Rt,"bad-character-figure-space",(function(){return _r})),fe(Rt,"bad-character-punctuation-space",(function(){return zr})),fe(Rt,"bad-character-thin-space",(function(){return Gr})),fe(Rt,"bad-character-hair-space",(function(){return Mr})),fe(Rt,"bad-character-zero-width-space",(function(){return $r})),fe(Rt,"bad-character-zero-width-non-joiner",(function(){return Wr})),fe(Rt,"bad-character-zero-width-joiner",(function(){return Jr})),fe(Rt,"bad-character-left-to-right-mark",(function(){return Zr})),fe(Rt,"bad-character-right-to-left-mark",(function(){return Yr})),fe(Rt,"bad-character-left-to-right-embedding",(function(){return Kr})),fe(Rt,"bad-character-right-to-left-embedding",(function(){return Qr})),fe(Rt,"bad-character-pop-directional-formatting",(function(){return Xr})),fe(Rt,"bad-character-left-to-right-override",(function(){return et})),fe(Rt,"bad-character-right-to-left-override",(function(){return rt})),fe(Rt,"bad-character-word-joiner",(function(){return tt})),fe(Rt,"bad-character-function-application",(function(){return at})),fe(Rt,"bad-character-invisible-times",(function(){return nt})),fe(Rt,"bad-character-invisible-separator",(function(){return it})),fe(Rt,"bad-character-invisible-plus",(function(){return ot})),fe(Rt,"bad-character-left-to-right-isolate",(function(){return st})),fe(Rt,"bad-character-right-to-left-isolate",(function(){return ct})),fe(Rt,"bad-character-first-strong-isolate",(function(){return lt})),fe(Rt,"bad-character-pop-directional-isolate",(function(){return dt})),fe(Rt,"bad-character-inhibit-symmetric-swapping",(function(){return ut})),fe(Rt,"bad-character-activate-symmetric-swapping",(function(){return mt})),fe(Rt,"bad-character-inhibit-arabic-form-shaping",(function(){return pt})),fe(Rt,"bad-character-activate-arabic-form-shaping",(function(){return ft})),fe(Rt,"bad-character-national-digit-shapes",(function(){return ht})),fe(Rt,"bad-character-nominal-digit-shapes",(function(){return gt})),fe(Rt,"bad-character-zero-width-no-break-space",(function(){return bt})),fe(Rt,"bad-character-interlinear-annotation-anchor",(function(){return At})),fe(Rt,"bad-character-interlinear-annotation-separator",(function(){return yt})),fe(Rt,"bad-character-interlinear-annotation-terminator",(function(){return St})),fe(Rt,"bad-character-line-separator",(function(){return vt})),fe(Rt,"bad-character-paragraph-separator",(function(){return It})),fe(Rt,"bad-character-narrow-no-break-space",(function(){return wt})),fe(Rt,"bad-character-medium-mathematical-space",(function(){return qt})),fe(Rt,"bad-character-ideographic-space",(function(){return Pt})),fe(Rt,"tag-space-after-opening-bracket",(function(){return xt})),fe(Rt,"tag-space-before-closing-slash",(function(){return Et})),fe(Rt,"tag-space-between-slash-and-bracket",(function(){return Tt})),fe(Rt,"tag-closing-backslash",(function(){return kt})),fe(Rt,"tag-void-slash",(function(){return Lt})),Ot.prototype=Object.create(null),Bt.EventEmitter=Bt,Bt.usingDomains=!1,Bt.prototype.domain=void 0,Bt.prototype._events=void 0,Bt.prototype._maxListeners=void 0,Bt.defaultMaxListeners=10,Bt.init=function(){this.domain=null,Bt.usingDomains&&(void 0).active&&(void 0).Domain,this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=new Ot,this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},Bt.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||isNaN(e))throw new TypeError('"n" argument must be a positive number');return this._maxListeners=e,this},Bt.prototype.getMaxListeners=function(){return jt(this)},Bt.prototype.emit=function(e){var r,t,a,n,i,o,s,c="error"===e;if(o=this._events)c=c&&null==o.error;else if(!c)return!1;if(s=this.domain,c){if(r=arguments[1],!s){if(r instanceof Error)throw r;var l=new Error('Uncaught, unspecified "error" event. ('+r+")");throw l.context=r,l}return r||(r=new Error('Uncaught, unspecified "error" event')),r.domainEmitter=this,r.domain=s,r.domainThrown=!1,s.emit("error",r),!1}if(!(t=o[e]))return!1;var d="function"==typeof t;switch(a=arguments.length){case 1:Ft(t,d,this);break;case 2:Vt(t,d,this,arguments[1]);break;case 3:Ut(t,d,this,arguments[1],arguments[2]);break;case 4:Ht(t,d,this,arguments[1],arguments[2],arguments[3]);break;default:for(n=new Array(a-1),i=1;i<a;i++)n[i-1]=arguments[i];_t(t,d,this,n)}return!0},Bt.prototype.addListener=function(e,r){return zt(this,e,r,!1)},Bt.prototype.on=Bt.prototype.addListener,Bt.prototype.prependListener=function(e,r){return zt(this,e,r,!0)},Bt.prototype.once=function(e,r){if("function"!=typeof r)throw new TypeError('"listener" argument must be a function');return this.on(e,Gt(this,e,r)),this},Bt.prototype.prependOnceListener=function(e,r){if("function"!=typeof r)throw new TypeError('"listener" argument must be a function');return this.prependListener(e,Gt(this,e,r)),this},Bt.prototype.removeListener=function(e,r){var t,a,n,i,o;if("function"!=typeof r)throw new TypeError('"listener" argument must be a function');if(!(a=this._events))return this;if(!(t=a[e]))return this;if(t===r||t.listener&&t.listener===r)0==--this._eventsCount?this._events=new Ot:(delete a[e],a.removeListener&&this.emit("removeListener",e,t.listener||r));else if("function"!=typeof t){for(n=-1,i=t.length;i-- >0;)if(t[i]===r||t[i].listener&&t[i].listener===r){o=t[i].listener,n=i;break}if(n<0)return this;if(1===t.length){if(t[0]=void 0,0==--this._eventsCount)return this._events=new Ot,this;delete a[e]}else!function(e,r){for(var t=r,a=t+1,n=e.length;a<n;t+=1,a+=1)e[t]=e[a];e.pop()}(t,n);a.removeListener&&this.emit("removeListener",e,o||r)}return this},Bt.prototype.removeAllListeners=function(e){var r,t;if(!(t=this._events))return this;if(!t.removeListener)return 0===arguments.length?(this._events=new Ot,this._eventsCount=0):t[e]&&(0==--this._eventsCount?this._events=new Ot:delete t[e]),this;if(0===arguments.length){for(var a,n=Object.keys(t),i=0;i<n.length;++i)"removeListener"!==(a=n[i])&&this.removeAllListeners(a);return this.removeAllListeners("removeListener"),this._events=new Ot,this._eventsCount=0,this}if("function"==typeof(r=t[e]))this.removeListener(e,r);else if(r)do{this.removeListener(e,r[r.length-1])}while(r[0]);return this},Bt.prototype.listeners=function(e){var r,t=this._events;return t&&(r=t[e])?"function"==typeof r?[r.listener||r]:function(e){for(var r=new Array(e.length),t=0;t<r.length;++t)r[t]=e[t].listener||e[t];return r}(r):[]},Bt.listenerCount=function(e,r){return"function"==typeof e.listenerCount?e.listenerCount(r):Mt.call(e,r)},Bt.prototype.listenerCount=Mt,Bt.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]};var Wt={}.toString,Jt=Array.isArray||function(e){return"[object Array]"==Wt.call(e)},Zt=Yt;function Yt(e,r){if(!(this instanceof Yt))return"number"==typeof r?new Yt(e).fromIndex(r):new Yt(e,r);this.str=e||"",this.lineToIndex=function(e){for(var r=e.split("\n"),t=new Array(r.length),a=0,n=0,i=r.length;n<i;n++)t[n]=a,a+=r[n].length+1;return t}(this.str),r=r||{},this.origin=void 0===r.origin?1:r.origin}Yt.prototype.fromIndex=function(e){if(e<0||e>=this.str.length||isNaN(e))return null;var r=function(e,r){if(e>=r[r.length-1])return r.length-1;var t,a=0,n=r.length-2;for(;a<n;)if(e<r[t=a+(n-a>>1)])n=t-1;else{if(!(e>=r[t+1])){a=t;break}a=t+1}return a}(e,this.lineToIndex);return{line:r+this.origin,col:e-this.lineToIndex[r]+this.origin}},Yt.prototype.toIndex=function(e,r){if(void 0===r)return Jt(e)&&e.length>=2?this.toIndex(e[0],e[1]):null!=(t=e)&&"object"==typeof t&&!1===Jt(t)&&"line"in e&&("col"in e||"column"in e)?this.toIndex(e.line,"col"in e?e.col:e.column):-1;var t;if(isNaN(e)||isNaN(r))return-1;if(e-=this.origin,r-=this.origin,e>=0&&r>=0&&e<this.lineToIndex.length){var a=this.lineToIndex[e];if(r<(e===this.lineToIndex.length-1?this.str.length:this.lineToIndex[e+1])-a)return a+r}return-1};var Kt={Aacute:"Á",aacute:"á",Abreve:"Ă",abreve:"ă",ac:"∾",acd:"∿",acE:"∾̳",Acirc:"Â",acirc:"â",acute:"´",Acy:"А",acy:"а",AElig:"Æ",aelig:"æ",af:"⁡",Afr:"𝔄",afr:"𝔞",Agrave:"À",agrave:"à",alefsym:"ℵ",aleph:"ℵ",Alpha:"Α",alpha:"α",Amacr:"Ā",amacr:"ā",amalg:"⨿",AMP:"&",amp:"&",And:"⩓",and:"∧",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",Aogon:"Ą",aogon:"ą",Aopf:"𝔸",aopf:"𝕒",ap:"≈",apacir:"⩯",apE:"⩰",ape:"≊",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",Aring:"Å",aring:"å",Ascr:"𝒜",ascr:"𝒶",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",Barwed:"⌆",barwed:"⌅",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",Bcy:"Б",bcy:"б",bdquo:"„",becaus:"∵",Because:"∵",because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",Beta:"Β",beta:"β",beth:"ℶ",between:"≬",Bfr:"𝔅",bfr:"𝔟",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bNot:"⫭",bnot:"⌐",Bopf:"𝔹",bopf:"𝕓",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxDL:"╗",boxDl:"╖",boxdL:"╕",boxdl:"┐",boxDR:"╔",boxDr:"╓",boxdR:"╒",boxdr:"┌",boxH:"═",boxh:"─",boxHD:"╦",boxHd:"╤",boxhD:"╥",boxhd:"┬",boxHU:"╩",boxHu:"╧",boxhU:"╨",boxhu:"┴",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxUL:"╝",boxUl:"╜",boxuL:"╛",boxul:"┘",boxUR:"╚",boxUr:"╙",boxuR:"╘",boxur:"└",boxV:"║",boxv:"│",boxVH:"╬",boxVh:"╫",boxvH:"╪",boxvh:"┼",boxVL:"╣",boxVl:"╢",boxvL:"╡",boxvl:"┤",boxVR:"╠",boxVr:"╟",boxvR:"╞",boxvr:"├",bprime:"‵",Breve:"˘",breve:"˘",brvbar:"¦",Bscr:"ℬ",bscr:"𝒷",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpE:"⪮",bumpe:"≏",Bumpeq:"≎",bumpeq:"≏",Cacute:"Ć",cacute:"ć",Cap:"⋒",cap:"∩",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",Ccaron:"Č",ccaron:"č",Ccedil:"Ç",ccedil:"ç",Ccirc:"Ĉ",ccirc:"ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",Cdot:"Ċ",cdot:"ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",CenterDot:"·",centerdot:"·",Cfr:"ℭ",cfr:"𝔠",CHcy:"Ч",chcy:"ч",check:"✓",checkmark:"✓",Chi:"Χ",chi:"χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cirE:"⧃",cire:"≗",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",Colon:"∷",colon:":",Colone:"⩴",colone:"≔",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",Conint:"∯",conint:"∮",ContourIntegral:"∮",Copf:"ℂ",copf:"𝕔",coprod:"∐",Coproduct:"∐",COPY:"©",copy:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",Cross:"⨯",cross:"✗",Cscr:"𝒞",cscr:"𝒸",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",Cup:"⋓",cup:"∪",cupbrcap:"⩈",CupCap:"≍",cupcap:"⩆",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",Dagger:"‡",dagger:"†",daleth:"ℸ",Darr:"↡",dArr:"⇓",darr:"↓",dash:"‐",Dashv:"⫤",dashv:"⊣",dbkarow:"⤏",dblac:"˝",Dcaron:"Ď",dcaron:"ď",Dcy:"Д",dcy:"д",DD:"ⅅ",dd:"ⅆ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",Delta:"Δ",delta:"δ",demptyv:"⦱",dfisht:"⥿",Dfr:"𝔇",dfr:"𝔡",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",Diamond:"⋄",diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",DJcy:"Ђ",djcy:"ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",Dopf:"𝔻",dopf:"𝕕",Dot:"¨",dot:"˙",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",DownArrow:"↓",Downarrow:"⇓",downarrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",Dscr:"𝒟",dscr:"𝒹",DScy:"Ѕ",dscy:"ѕ",dsol:"⧶",Dstrok:"Đ",dstrok:"đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",DZcy:"Џ",dzcy:"џ",dzigrarr:"⟿",Eacute:"É",eacute:"é",easter:"⩮",Ecaron:"Ě",ecaron:"ě",ecir:"≖",Ecirc:"Ê",ecirc:"ê",ecolon:"≕",Ecy:"Э",ecy:"э",eDDot:"⩷",Edot:"Ė",eDot:"≑",edot:"ė",ee:"ⅇ",efDot:"≒",Efr:"𝔈",efr:"𝔢",eg:"⪚",Egrave:"È",egrave:"è",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",Emacr:"Ē",emacr:"ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",ENG:"Ŋ",eng:"ŋ",ensp:" ",Eogon:"Ę",eogon:"ę",Eopf:"𝔼",eopf:"𝕖",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",Epsilon:"Ε",epsilon:"ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",Escr:"ℰ",escr:"ℯ",esdot:"≐",Esim:"⩳",esim:"≂",Eta:"Η",eta:"η",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",ExponentialE:"ⅇ",exponentiale:"ⅇ",fallingdotseq:"≒",Fcy:"Ф",fcy:"ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",Ffr:"𝔉",ffr:"𝔣",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",Fopf:"𝔽",fopf:"𝕗",ForAll:"∀",forall:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",Fscr:"ℱ",fscr:"𝒻",gacute:"ǵ",Gamma:"Γ",gamma:"γ",Gammad:"Ϝ",gammad:"ϝ",gap:"⪆",Gbreve:"Ğ",gbreve:"ğ",Gcedil:"Ģ",Gcirc:"Ĝ",gcirc:"ĝ",Gcy:"Г",gcy:"г",Gdot:"Ġ",gdot:"ġ",gE:"≧",ge:"≥",gEl:"⪌",gel:"⋛",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",Gfr:"𝔊",gfr:"𝔤",Gg:"⋙",gg:"≫",ggg:"⋙",gimel:"ℷ",GJcy:"Ѓ",gjcy:"ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gnE:"≩",gne:"⪈",gneq:"⪈",gneqq:"≩",gnsim:"⋧",Gopf:"𝔾",gopf:"𝕘",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",Gscr:"𝒢",gscr:"ℊ",gsim:"≳",gsime:"⪎",gsiml:"⪐",GT:">",Gt:"≫",gt:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",HARDcy:"Ъ",hardcy:"ъ",hArr:"⇔",harr:"↔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",Hcirc:"Ĥ",hcirc:"ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",Hfr:"ℌ",hfr:"𝔥",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",Hopf:"ℍ",hopf:"𝕙",horbar:"―",HorizontalLine:"─",Hscr:"ℋ",hscr:"𝒽",hslash:"ℏ",Hstrok:"Ħ",hstrok:"ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",Iacute:"Í",iacute:"í",ic:"⁣",Icirc:"Î",icirc:"î",Icy:"И",icy:"и",Idot:"İ",IEcy:"Е",iecy:"е",iexcl:"¡",iff:"⇔",Ifr:"ℑ",ifr:"𝔦",Igrave:"Ì",igrave:"ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",IJlig:"Ĳ",ijlig:"ĳ",Im:"ℑ",Imacr:"Ī",imacr:"ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",Int:"∬",int:"∫",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",IOcy:"Ё",iocy:"ё",Iogon:"Į",iogon:"į",Iopf:"𝕀",iopf:"𝕚",Iota:"Ι",iota:"ι",iprod:"⨼",iquest:"¿",Iscr:"ℐ",iscr:"𝒾",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",Itilde:"Ĩ",itilde:"ĩ",Iukcy:"І",iukcy:"і",Iuml:"Ï",iuml:"ï",Jcirc:"Ĵ",jcirc:"ĵ",Jcy:"Й",jcy:"й",Jfr:"𝔍",jfr:"𝔧",jmath:"ȷ",Jopf:"𝕁",jopf:"𝕛",Jscr:"𝒥",jscr:"𝒿",Jsercy:"Ј",jsercy:"ј",Jukcy:"Є",jukcy:"є",Kappa:"Κ",kappa:"κ",kappav:"ϰ",Kcedil:"Ķ",kcedil:"ķ",Kcy:"К",kcy:"к",Kfr:"𝔎",kfr:"𝔨",kgreen:"ĸ",KHcy:"Х",khcy:"х",KJcy:"Ќ",kjcy:"ќ",Kopf:"𝕂",kopf:"𝕜",Kscr:"𝒦",kscr:"𝓀",lAarr:"⇚",Lacute:"Ĺ",lacute:"ĺ",laemptyv:"⦴",lagran:"ℒ",Lambda:"Λ",lambda:"λ",Lang:"⟪",lang:"⟨",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",Larr:"↞",lArr:"⇐",larr:"←",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",lAtail:"⤛",latail:"⤙",late:"⪭",lates:"⪭︀",lBarr:"⤎",lbarr:"⤌",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",Lcaron:"Ľ",lcaron:"ľ",Lcedil:"Ļ",lcedil:"ļ",lceil:"⌈",lcub:"{",Lcy:"Л",lcy:"л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",lE:"≦",le:"≤",LeftAngleBracket:"⟨",LeftArrow:"←",Leftarrow:"⇐",leftarrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",LeftRightArrow:"↔",Leftrightarrow:"⇔",leftrightarrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",lEg:"⪋",leg:"⋚",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",Lfr:"𝔏",lfr:"𝔩",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",LJcy:"Љ",ljcy:"љ",Ll:"⋘",ll:"≪",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",Lmidot:"Ŀ",lmidot:"ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lnE:"≨",lne:"⪇",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",LongLeftArrow:"⟵",Longleftarrow:"⟸",longleftarrow:"⟵",LongLeftRightArrow:"⟷",Longleftrightarrow:"⟺",longleftrightarrow:"⟷",longmapsto:"⟼",LongRightArrow:"⟶",Longrightarrow:"⟹",longrightarrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",Lopf:"𝕃",lopf:"𝕝",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",Lscr:"ℒ",lscr:"𝓁",Lsh:"↰",lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",Lstrok:"Ł",lstrok:"ł",LT:"<",Lt:"≪",lt:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",Map:"⤅",map:"↦",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",Mcy:"М",mcy:"м",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",Mfr:"𝔐",mfr:"𝔪",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",Mopf:"𝕄",mopf:"𝕞",mp:"∓",Mscr:"ℳ",mscr:"𝓂",mstpos:"∾",Mu:"Μ",mu:"μ",multimap:"⊸",mumap:"⊸",nabla:"∇",Nacute:"Ń",nacute:"ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",Ncaron:"Ň",ncaron:"ň",Ncedil:"Ņ",ncedil:"ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",Ncy:"Н",ncy:"н",ndash:"–",ne:"≠",nearhk:"⤤",neArr:"⇗",nearr:"↗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",Nfr:"𝔑",nfr:"𝔫",ngE:"≧̸",nge:"≱",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",nGt:"≫⃒",ngt:"≯",ngtr:"≯",nGtv:"≫̸",nhArr:"⇎",nharr:"↮",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",NJcy:"Њ",njcy:"њ",nlArr:"⇍",nlarr:"↚",nldr:"‥",nlE:"≦̸",nle:"≰",nLeftarrow:"⇍",nleftarrow:"↚",nLeftrightarrow:"⇎",nleftrightarrow:"↮",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nLt:"≪⃒",nlt:"≮",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",Nopf:"ℕ",nopf:"𝕟",Not:"⫬",not:"¬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrArr:"⇏",nrarr:"↛",nrarrc:"⤳̸",nrarrw:"↝̸",nRightarrow:"⇏",nrightarrow:"↛",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",Nscr:"𝒩",nscr:"𝓃",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsubE:"⫅̸",nsube:"⊈",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupE:"⫆̸",nsupe:"⊉",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",Ntilde:"Ñ",ntilde:"ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",Nu:"Ν",nu:"ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nVDash:"⊯",nVdash:"⊮",nvDash:"⊭",nvdash:"⊬",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwArr:"⇖",nwarr:"↖",nwarrow:"↖",nwnear:"⤧",Oacute:"Ó",oacute:"ó",oast:"⊛",ocir:"⊚",Ocirc:"Ô",ocirc:"ô",Ocy:"О",ocy:"о",odash:"⊝",Odblac:"Ő",odblac:"ő",odiv:"⨸",odot:"⊙",odsold:"⦼",OElig:"Œ",oelig:"œ",ofcir:"⦿",Ofr:"𝔒",ofr:"𝔬",ogon:"˛",Ograve:"Ò",ograve:"ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",Omacr:"Ō",omacr:"ō",Omega:"Ω",omega:"ω",Omicron:"Ο",omicron:"ο",omid:"⦶",ominus:"⊖",Oopf:"𝕆",oopf:"𝕠",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",Or:"⩔",or:"∨",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",Oscr:"𝒪",oscr:"ℴ",Oslash:"Ø",oslash:"ø",osol:"⊘",Otilde:"Õ",otilde:"õ",Otimes:"⨷",otimes:"⊗",otimesas:"⨶",Ouml:"Ö",ouml:"ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",Pcy:"П",pcy:"п",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",Pfr:"𝔓",pfr:"𝔭",Phi:"Φ",phi:"φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",Pi:"Π",pi:"π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",Popf:"ℙ",popf:"𝕡",pound:"£",Pr:"⪻",pr:"≺",prap:"⪷",prcue:"≼",prE:"⪳",pre:"⪯",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",Prime:"″",prime:"′",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",Pscr:"𝒫",pscr:"𝓅",Psi:"Ψ",psi:"ψ",puncsp:" ",Qfr:"𝔔",qfr:"𝔮",qint:"⨌",Qopf:"ℚ",qopf:"𝕢",qprime:"⁗",Qscr:"𝒬",qscr:"𝓆",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",QUOT:'"',quot:'"',rAarr:"⇛",race:"∽̱",Racute:"Ŕ",racute:"ŕ",radic:"√",raemptyv:"⦳",Rang:"⟫",rang:"⟩",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",Rarr:"↠",rArr:"⇒",rarr:"→",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",Rarrtl:"⤖",rarrtl:"↣",rarrw:"↝",rAtail:"⤜",ratail:"⤚",ratio:"∶",rationals:"ℚ",RBarr:"⤐",rBarr:"⤏",rbarr:"⤍",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",Rcaron:"Ř",rcaron:"ř",Rcedil:"Ŗ",rcedil:"ŗ",rceil:"⌉",rcub:"}",Rcy:"Р",rcy:"р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",REG:"®",reg:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",Rfr:"ℜ",rfr:"𝔯",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",Rho:"Ρ",rho:"ρ",rhov:"ϱ",RightAngleBracket:"⟩",RightArrow:"→",Rightarrow:"⇒",rightarrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",Ropf:"ℝ",ropf:"𝕣",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",Rscr:"ℛ",rscr:"𝓇",Rsh:"↱",rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",Sacute:"Ś",sacute:"ś",sbquo:"‚",Sc:"⪼",sc:"≻",scap:"⪸",Scaron:"Š",scaron:"š",sccue:"≽",scE:"⪴",sce:"⪰",Scedil:"Ş",scedil:"ş",Scirc:"Ŝ",scirc:"ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",Scy:"С",scy:"с",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",seArr:"⇘",searr:"↘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",Sfr:"𝔖",sfr:"𝔰",sfrown:"⌢",sharp:"♯",SHCHcy:"Щ",shchcy:"щ",SHcy:"Ш",shcy:"ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",Sigma:"Σ",sigma:"σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",SOFTcy:"Ь",softcy:"ь",sol:"/",solb:"⧄",solbar:"⌿",Sopf:"𝕊",sopf:"𝕤",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",Square:"□",square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",Sscr:"𝒮",sscr:"𝓈",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",Star:"⋆",star:"☆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",Sub:"⋐",sub:"⊂",subdot:"⪽",subE:"⫅",sube:"⊆",subedot:"⫃",submult:"⫁",subnE:"⫋",subne:"⊊",subplus:"⪿",subrarr:"⥹",Subset:"⋐",subset:"⊂",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",Sum:"∑",sum:"∑",sung:"♪",Sup:"⋑",sup:"⊃",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supE:"⫆",supe:"⊇",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supnE:"⫌",supne:"⊋",supplus:"⫀",Supset:"⋑",supset:"⊃",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swArr:"⇙",swarr:"↙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",Tau:"Τ",tau:"τ",tbrk:"⎴",Tcaron:"Ť",tcaron:"ť",Tcedil:"Ţ",tcedil:"ţ",Tcy:"Т",tcy:"т",tdot:"⃛",telrec:"⌕",Tfr:"𝔗",tfr:"𝔱",there4:"∴",Therefore:"∴",therefore:"∴",Theta:"Θ",theta:"θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",THORN:"Þ",thorn:"þ",Tilde:"∼",tilde:"˜",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",Topf:"𝕋",topf:"𝕥",topfork:"⫚",tosa:"⤩",tprime:"‴",TRADE:"™",trade:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",Tscr:"𝒯",tscr:"𝓉",TScy:"Ц",tscy:"ц",TSHcy:"Ћ",tshcy:"ћ",Tstrok:"Ŧ",tstrok:"ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",Uacute:"Ú",uacute:"ú",Uarr:"↟",uArr:"⇑",uarr:"↑",Uarrocir:"⥉",Ubrcy:"Ў",ubrcy:"ў",Ubreve:"Ŭ",ubreve:"ŭ",Ucirc:"Û",ucirc:"û",Ucy:"У",ucy:"у",udarr:"⇅",Udblac:"Ű",udblac:"ű",udhar:"⥮",ufisht:"⥾",Ufr:"𝔘",ufr:"𝔲",Ugrave:"Ù",ugrave:"ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",Umacr:"Ū",umacr:"ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",Uogon:"Ų",uogon:"ų",Uopf:"𝕌",uopf:"𝕦",UpArrow:"↑",Uparrow:"⇑",uparrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",UpDownArrow:"↕",Updownarrow:"⇕",updownarrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",Upsi:"ϒ",upsi:"υ",upsih:"ϒ",Upsilon:"Υ",upsilon:"υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",Uring:"Ů",uring:"ů",urtri:"◹",Uscr:"𝒰",uscr:"𝓊",utdot:"⋰",Utilde:"Ũ",utilde:"ũ",utri:"▵",utrif:"▴",uuarr:"⇈",Uuml:"Ü",uuml:"ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",vArr:"⇕",varr:"↕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",Vbar:"⫫",vBar:"⫨",vBarv:"⫩",Vcy:"В",vcy:"в",VDash:"⊫",Vdash:"⊩",vDash:"⊨",vdash:"⊢",Vdashl:"⫦",Vee:"⋁",vee:"∨",veebar:"⊻",veeeq:"≚",vellip:"⋮",Verbar:"‖",verbar:"|",Vert:"‖",vert:"|",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",Vfr:"𝔙",vfr:"𝔳",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",Vopf:"𝕍",vopf:"𝕧",vprop:"∝",vrtri:"⊳",Vscr:"𝒱",vscr:"𝓋",vsubnE:"⫋︀",vsubne:"⊊︀",vsupnE:"⫌︀",vsupne:"⊋︀",Vvdash:"⊪",vzigzag:"⦚",Wcirc:"Ŵ",wcirc:"ŵ",wedbar:"⩟",Wedge:"⋀",wedge:"∧",wedgeq:"≙",weierp:"℘",Wfr:"𝔚",wfr:"𝔴",Wopf:"𝕎",wopf:"𝕨",wp:"℘",wr:"≀",wreath:"≀",Wscr:"𝒲",wscr:"𝓌",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",Xfr:"𝔛",xfr:"𝔵",xhArr:"⟺",xharr:"⟷",Xi:"Ξ",xi:"ξ",xlArr:"⟸",xlarr:"⟵",xmap:"⟼",xnis:"⋻",xodot:"⨀",Xopf:"𝕏",xopf:"𝕩",xoplus:"⨁",xotime:"⨂",xrArr:"⟹",xrarr:"⟶",Xscr:"𝒳",xscr:"𝓍",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",Yacute:"Ý",yacute:"ý",YAcy:"Я",yacy:"я",Ycirc:"Ŷ",ycirc:"ŷ",Ycy:"Ы",ycy:"ы",yen:"¥",Yfr:"𝔜",yfr:"𝔶",YIcy:"Ї",yicy:"ї",Yopf:"𝕐",yopf:"𝕪",Yscr:"𝒴",yscr:"𝓎",YUcy:"Ю",yucy:"ю",Yuml:"Ÿ",yuml:"ÿ",Zacute:"Ź",zacute:"ź",Zcaron:"Ž",zcaron:"ž",Zcy:"З",zcy:"з",Zdot:"Ż",zdot:"ż",zeetrf:"ℨ",ZeroWidthSpace:"​",Zeta:"Ζ",zeta:"ζ",Zfr:"ℨ",zfr:"𝔷",ZHcy:"Ж",zhcy:"ж",zigrarr:"⇝",Zopf:"ℤ",zopf:"𝕫",Zscr:"𝒵",zscr:"𝓏",zwj:"‍",zwnj:"‌"},Qt={ound:"pound",pond:"pound",poubd:"pound",poud:"pound",poumd:"pound",poun:"pound",pund:"pound",zvbj:"zwnj",zvhj:"zwnj",zvjb:"zwnj",zvjh:"zwnj",zvjm:"zwnj",zvjn:"zwnj",zvmj:"zwnj",zvng:"zwnj",zvnh:"zwnj",zvnj:"zwnj",zvnk:"zwnj",zvnm:"zwnj",zwbj:"zwnj",zwhj:"zwnj",zwjb:"zwnj",zwjh:"zwnj",zwjm:"zwnj",zwjn:"zwnj",zwmj:"zwnj",zwng:"zwnj",zwnh:"zwnj",zwnk:"zwnj",zwnm:"zwnj"},Xt={A:{a:["Aacute"],b:["Abreve"],c:["Acirc","Acy"],E:["AElig"],f:["Afr"],g:["Agrave"],l:["Alpha"],m:["Amacr"],M:["AMP"],n:["And"],o:["Aogon","Aopf"],p:["ApplyFunction"],r:["Aring"],s:["Ascr","Assign"],t:["Atilde"],u:["Auml"]},a:{a:["aacute"],b:["abreve"],c:["ac","acd","acE","acirc","acute","acy"],e:["aelig"],f:["af","afr"],g:["agrave"],l:["alefsym","aleph","alpha"],m:["amacr","amalg","amp"],n:["and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr"],o:["aogon","aopf"],p:["ap","apacir","apE","ape","apid","apos","approx","approxeq"],r:["aring"],s:["ascr","ast","asymp","asympeq"],t:["atilde"],u:["auml"],w:["awconint","awint"]},b:{a:["backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge"],b:["bbrk","bbrktbrk"],c:["bcong","bcy"],d:["bdquo"],e:["becaus","because","bemptyv","bepsi","bernou","beta","beth","between"],f:["bfr"],i:["bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge"],k:["bkarow"],l:["blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block"],n:["bne","bnequiv","bnot"],N:["bNot"],o:["bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr"],p:["bprime"],r:["breve","brvbar"],s:["bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub"],u:["bull","bullet","bump","bumpE","bumpe","bumpeq"]},B:{a:["Backslash","Barv","Barwed"],c:["Bcy"],e:["Because","Bernoullis","Beta"],f:["Bfr"],o:["Bopf"],r:["Breve"],s:["Bscr"],u:["Bumpeq"]},C:{a:["Cacute","Cap","CapitalDifferentialD","Cayleys"],c:["Ccaron","Ccedil","Ccirc","Cconint"],d:["Cdot"],e:["Cedilla","CenterDot"],f:["Cfr"],H:["CHcy"],h:["Chi"],i:["CircleDot","CircleMinus","CirclePlus","CircleTimes"],l:["ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote"],o:["Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral"],O:["COPY"],r:["Cross"],s:["Cscr"],u:["Cup","CupCap"]},c:{a:["cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron"],c:["ccaps","ccaron","ccedil","ccirc","ccups","ccupssm"],d:["cdot"],e:["cedil","cemptyv","cent","centerdot"],f:["cfr"],h:["chcy","check","checkmark","chi"],i:["cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledR","circledS","cirE","cire","cirfnint","cirmid","cirscir"],l:["clubs","clubsuit"],o:["colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copy","copysr"],r:["crarr","cross"],s:["cscr","csub","csube","csup","csupe"],t:["ctdot"],u:["cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed"],w:["cwconint","cwint"],y:["cylcty"]},D:{a:["Dagger","Darr","Dashv"],c:["Dcaron","Dcy"],D:["DD","DDotrahd"],e:["Del","Delta"],f:["Dfr"],i:["DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD"],J:["DJcy"],o:["Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow"],s:["Dscr","Dstrok"],S:["DScy"],Z:["DZcy"]},d:{a:["dagger","daleth","darr","dash","dashv"],A:["dArr"],b:["dbkarow","dblac"],c:["dcaron","dcy"],d:["dd","ddagger","ddarr","ddotseq"],e:["deg","delta","demptyv"],f:["dfisht","dfr"],H:["dHar"],h:["dharl","dharr"],i:["diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx"],j:["djcy"],l:["dlcorn","dlcrop"],o:["dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright"],r:["drbkarow","drcorn","drcrop"],s:["dscr","dscy","dsol","dstrok"],t:["dtdot","dtri","dtrif"],u:["duarr","duhar"],w:["dwangle"],z:["dzcy","dzigrarr"]},E:{a:["Eacute"],c:["Ecaron","Ecirc","Ecy"],d:["Edot"],f:["Efr"],g:["Egrave"],l:["Element"],m:["Emacr","EmptySmallSquare","EmptyVerySmallSquare"],N:["ENG"],o:["Eogon","Eopf"],p:["Epsilon"],q:["Equal","EqualTilde","Equilibrium"],s:["Escr","Esim"],t:["Eta"],T:["ETH"],u:["Euml"],x:["Exists","ExponentialE"]},e:{a:["eacute","easter"],c:["ecaron","ecir","ecirc","ecolon","ecy"],D:["eDDot","eDot"],d:["edot"],e:["ee"],f:["efDot","efr"],g:["eg","egrave","egs","egsdot"],l:["el","elinters","ell","els","elsdot"],m:["emacr","empty","emptyset","emptyv","emsp","emsp13","emsp14"],n:["eng","ensp"],o:["eogon","eopf"],p:["epar","eparsl","eplus","epsi","epsilon","epsiv"],q:["eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl"],r:["erarr","erDot"],s:["escr","esdot","esim"],t:["eta","eth"],u:["euml","euro"],x:["excl","exist","expectation","exponentiale"]},f:{a:["fallingdotseq"],c:["fcy"],e:["female"],f:["ffilig","fflig","ffllig","ffr"],i:["filig"],j:["fjlig"],l:["flat","fllig","fltns"],n:["fnof"],o:["fopf","forall","fork","forkv"],p:["fpartint"],r:["frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown"],s:["fscr"]},F:{c:["Fcy"],f:["Ffr"],i:["FilledSmallSquare","FilledVerySmallSquare"],o:["Fopf","ForAll","Fouriertrf"],s:["Fscr"]},g:{a:["gacute","gamma","gammad","gap"],b:["gbreve"],c:["gcirc","gcy"],d:["gdot"],E:["gE","gEl"],e:["ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles"],f:["gfr"],g:["gg","ggg"],i:["gimel"],j:["gjcy"],l:["gl","gla","glE","glj"],n:["gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim"],o:["gopf"],r:["grave"],s:["gscr","gsim","gsime","gsiml"],t:["gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim"],v:["gvertneqq","gvnE"]},G:{a:["Gamma","Gammad"],b:["Gbreve"],c:["Gcedil","Gcirc","Gcy"],d:["Gdot"],f:["Gfr"],g:["Gg"],J:["GJcy"],o:["Gopf"],r:["GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde"],s:["Gscr"],T:["GT"],t:["Gt"]},H:{a:["Hacek","Hat"],A:["HARDcy"],c:["Hcirc"],f:["Hfr"],i:["HilbertSpace"],o:["Hopf","HorizontalLine"],s:["Hscr","Hstrok"],u:["HumpDownHump","HumpEqual"]},h:{a:["hairsp","half","hamilt","hardcy","harr","harrcir","harrw"],A:["hArr"],b:["hbar"],c:["hcirc"],e:["hearts","heartsuit","hellip","hercon"],f:["hfr"],k:["hksearow","hkswarow"],o:["hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar"],s:["hscr","hslash","hstrok"],y:["hybull","hyphen"]},I:{a:["Iacute"],c:["Icirc","Icy"],d:["Idot"],E:["IEcy"],f:["Ifr"],g:["Igrave"],J:["IJlig"],m:["Im","Imacr","ImaginaryI","Implies"],n:["Int","Integral","Intersection","InvisibleComma","InvisibleTimes"],O:["IOcy"],o:["Iogon","Iopf","Iota"],s:["Iscr"],t:["Itilde"],u:["Iukcy","Iuml"]},i:{a:["iacute"],c:["ic","icirc","icy"],e:["iecy","iexcl"],f:["iff","ifr"],g:["igrave"],i:["ii","iiiint","iiint","iinfin","iiota"],j:["ijlig"],m:["imacr","image","imagline","imagpart","imath","imof","imped"],n:["in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod"],o:["iocy","iogon","iopf","iota"],p:["iprod"],q:["iquest"],s:["iscr","isin","isindot","isinE","isins","isinsv","isinv"],t:["it","itilde"],u:["iukcy","iuml"]},J:{c:["Jcirc","Jcy"],f:["Jfr"],o:["Jopf"],s:["Jscr","Jsercy"],u:["Jukcy"]},j:{c:["jcirc","jcy"],f:["jfr"],m:["jmath"],o:["jopf"],s:["jscr","jsercy"],u:["jukcy"]},K:{a:["Kappa"],c:["Kcedil","Kcy"],f:["Kfr"],H:["KHcy"],J:["KJcy"],o:["Kopf"],s:["Kscr"]},k:{a:["kappa","kappav"],c:["kcedil","kcy"],f:["kfr"],g:["kgreen"],h:["khcy"],j:["kjcy"],o:["kopf"],s:["kscr"]},l:{A:["lAarr","lArr","lAtail"],a:["lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates"],B:["lBarr"],b:["lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu"],c:["lcaron","lcedil","lceil","lcub","lcy"],d:["ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh"],E:["lE","lEg"],e:["le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim"],f:["lfisht","lfloor","lfr"],g:["lg","lgE"],H:["lHar"],h:["lhard","lharu","lharul","lhblk"],j:["ljcy"],l:["ll","llarr","llcorner","llhard","lltri"],m:["lmidot","lmoust","lmoustache"],n:["lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim"],o:["loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf"],p:["lpar","lparlt"],r:["lrarr","lrcorner","lrhar","lrhard","lrm","lrtri"],s:["lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok"],t:["lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar"],u:["lurdshar","luruhar"],v:["lvertneqq","lvnE"]},L:{a:["Lacute","Lambda","Lang","Laplacetrf","Larr"],c:["Lcaron","Lcedil","Lcy"],e:["LeftAngleBracket","LeftArrow","Leftarrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","Leftrightarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde"],f:["Lfr"],J:["LJcy"],l:["Ll","Lleftarrow"],m:["Lmidot"],o:["LongLeftArrow","Longleftarrow","LongLeftRightArrow","Longleftrightarrow","LongRightArrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow"],s:["Lscr","Lsh","Lstrok"],T:["LT"],t:["Lt"]},m:{a:["macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker"],c:["mcomma","mcy"],d:["mdash"],D:["mDDot"],e:["measuredangle"],f:["mfr"],h:["mho"],i:["micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu"],l:["mlcp","mldr"],n:["mnplus"],o:["models","mopf"],p:["mp"],s:["mscr","mstpos"],u:["mu","multimap","mumap"]},M:{a:["Map"],c:["Mcy"],e:["MediumSpace","Mellintrf"],f:["Mfr"],i:["MinusPlus"],o:["Mopf"],s:["Mscr"],u:["Mu"]},n:{a:["nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals"],b:["nbsp","nbump","nbumpe"],c:["ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy"],d:["ndash"],e:["ne","nearhk","neArr","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists"],f:["nfr"],g:["ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr"],G:["nGg","nGt","nGtv"],h:["nhArr","nharr","nhpar"],i:["ni","nis","nisd","niv"],j:["njcy"],l:["nlArr","nlarr","nldr","nlE","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie"],L:["nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv"],m:["nmid"],o:["nopf","not","notin","notindot","notinE","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc"],p:["npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq"],r:["nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie"],R:["nRightarrow"],s:["nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq"],t:["ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq"],u:["nu","num","numero","numsp"],v:["nvap","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim"],V:["nVDash","nVdash"],w:["nwarhk","nwArr","nwarr","nwarrow","nwnear"]},N:{a:["Nacute"],c:["Ncaron","Ncedil","Ncy"],e:["NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine"],f:["Nfr"],J:["NJcy"],o:["NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar"],s:["Nscr"],t:["Ntilde"],u:["Nu"]},O:{a:["Oacute"],c:["Ocirc","Ocy"],d:["Odblac"],E:["OElig"],f:["Ofr"],g:["Ograve"],m:["Omacr","Omega","Omicron"],o:["Oopf"],p:["OpenCurlyDoubleQuote","OpenCurlyQuote"],r:["Or"],s:["Oscr","Oslash"],t:["Otilde","Otimes"],u:["Ouml"],v:["OverBar","OverBrace","OverBracket","OverParenthesis"]},o:{a:["oacute","oast"],c:["ocir","ocirc","ocy"],d:["odash","odblac","odiv","odot","odsold"],e:["oelig"],f:["ofcir","ofr"],g:["ogon","ograve","ogt"],h:["ohbar","ohm"],i:["oint"],l:["olarr","olcir","olcross","oline","olt"],m:["omacr","omega","omicron","omid","ominus"],o:["oopf"],p:["opar","operp","oplus"],r:["or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv"],S:["oS"],s:["oscr","oslash","osol"],t:["otilde","otimes","otimesas"],u:["ouml"],v:["ovbar"]},p:{a:["par","para","parallel","parsim","parsl","part"],c:["pcy"],e:["percnt","period","permil","perp","pertenk"],f:["pfr"],h:["phi","phiv","phmmat","phone"],i:["pi","pitchfork","piv"],l:["planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo"],m:["pm"],o:["pointint","popf","pound"],r:["pr","prap","prcue","prE","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnap","prnE","prnsim","prod","profalar","profline","profsurf","prop","propto","prsim","prurel"],s:["pscr","psi"],u:["puncsp"]},P:{a:["PartialD"],c:["Pcy"],f:["Pfr"],h:["Phi"],i:["Pi"],l:["PlusMinus"],o:["Poincareplane","Popf"],r:["Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional"],s:["Pscr","Psi"]},Q:{f:["Qfr"],o:["Qopf"],s:["Qscr"],U:["QUOT"]},q:{f:["qfr"],i:["qint"],o:["qopf"],p:["qprime"],s:["qscr"],u:["quaternions","quatint","quest","questeq","quot"]},r:{A:["rAarr","rArr","rAtail"],a:["race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals"],B:["rBarr"],b:["rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu"],c:["rcaron","rcedil","rceil","rcub","rcy"],d:["rdca","rdldhar","rdquo","rdquor","rdsh"],e:["real","realine","realpart","reals","rect","reg"],f:["rfisht","rfloor","rfr"],H:["rHar"],h:["rhard","rharu","rharul","rho","rhov"],i:["rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq"],l:["rlarr","rlhar","rlm"],m:["rmoust","rmoustache"],n:["rnmid"],o:["roang","roarr","robrk","ropar","ropf","roplus","rotimes"],p:["rpar","rpargt","rppolint"],r:["rrarr"],s:["rsaquo","rscr","rsh","rsqb","rsquo","rsquor"],t:["rthree","rtimes","rtri","rtrie","rtrif","rtriltri"],u:["ruluhar"],x:["rx"]},R:{a:["Racute","Rang","Rarr","Rarrtl"],B:["RBarr"],c:["Rcaron","Rcedil","Rcy"],e:["Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium"],E:["REG"],f:["Rfr"],h:["Rho"],i:["RightAngleBracket","RightArrow","Rightarrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar"],o:["Ropf","RoundImplies"],r:["Rrightarrow"],s:["Rscr","Rsh"],u:["RuleDelayed"]},S:{a:["Sacute"],c:["Sc","Scaron","Scedil","Scirc","Scy"],f:["Sfr"],H:["SHCHcy","SHcy"],h:["ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow"],i:["Sigma"],m:["SmallCircle"],O:["SOFTcy"],o:["Sopf"],q:["Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion"],s:["Sscr"],t:["Star"],u:["Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset"]},s:{a:["sacute"],b:["sbquo"],c:["sc","scap","scaron","sccue","scE","sce","scedil","scirc","scnap","scnE","scnsim","scpolint","scsim","scy"],d:["sdot","sdotb","sdote"],e:["searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext"],f:["sfr","sfrown"],h:["sharp","shchcy","shcy","shortmid","shortparallel","shy"],i:["sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr"],l:["slarr"],m:["smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes"],o:["softcy","sol","solb","solbar","sopf"],p:["spades","spadesuit","spar"],q:["sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf"],r:["srarr"],s:["sscr","ssetmn","ssmile","sstarf"],t:["star","starf","straightepsilon","straightphi","strns"],u:["sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup"],w:["swarhk","swArr","swarr","swarrow","swnwar"],z:["szlig"]},T:{a:["Tab","Tau"],c:["Tcaron","Tcedil","Tcy"],f:["Tfr"],h:["Therefore","Theta","ThickSpace","ThinSpace"],H:["THORN"],i:["Tilde","TildeEqual","TildeFullEqual","TildeTilde"],o:["Topf"],R:["TRADE"],r:["TripleDot"],s:["Tscr","Tstrok"],S:["TScy","TSHcy"]},t:{a:["target","tau"],b:["tbrk"],c:["tcaron","tcedil","tcy"],d:["tdot"],e:["telrec"],f:["tfr"],h:["there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn"],i:["tilde","times","timesb","timesbar","timesd","tint"],o:["toea","top","topbot","topcir","topf","topfork","tosa"],p:["tprime"],r:["trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium"],s:["tscr","tscy","tshcy","tstrok"],w:["twixt","twoheadleftarrow","twoheadrightarrow"]},U:{a:["Uacute","Uarr","Uarrocir"],b:["Ubrcy","Ubreve"],c:["Ucirc","Ucy"],d:["Udblac"],f:["Ufr"],g:["Ugrave"],m:["Umacr"],n:["UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus"],o:["Uogon","Uopf"],p:["UpArrow","Uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","UpEquilibrium","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","UpTee","UpTeeArrow"],r:["Uring"],s:["Uscr"],t:["Utilde"],u:["Uuml"]},u:{a:["uacute","uarr"],A:["uArr"],b:["ubrcy","ubreve"],c:["ucirc","ucy"],d:["udarr","udblac","udhar"],f:["ufisht","ufr"],g:["ugrave"],H:["uHar"],h:["uharl","uharr","uhblk"],l:["ulcorn","ulcorner","ulcrop","ultri"],m:["umacr","uml"],o:["uogon","uopf"],p:["uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows"],r:["urcorn","urcorner","urcrop","uring","urtri"],s:["uscr"],t:["utdot","utilde","utri","utrif"],u:["uuarr","uuml"],w:["uwangle"]},v:{a:["vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright"],A:["vArr"],B:["vBar","vBarv"],c:["vcy"],D:["vDash"],d:["vdash"],e:["vee","veebar","veeeq","vellip","verbar","vert"],f:["vfr"],l:["vltri"],n:["vnsub","vnsup"],o:["vopf"],p:["vprop"],r:["vrtri"],s:["vscr","vsubnE","vsubne","vsupnE","vsupne"],z:["vzigzag"]},V:{b:["Vbar"],c:["Vcy"],D:["VDash"],d:["Vdash","Vdashl"],e:["Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace"],f:["Vfr"],o:["Vopf"],s:["Vscr"],v:["Vvdash"]},W:{c:["Wcirc"],e:["Wedge"],f:["Wfr"],o:["Wopf"],s:["Wscr"]},w:{c:["wcirc"],e:["wedbar","wedge","wedgeq","weierp"],f:["wfr"],o:["wopf"],p:["wp"],r:["wr","wreath"],s:["wscr"]},x:{c:["xcap","xcirc","xcup"],d:["xdtri"],f:["xfr"],h:["xhArr","xharr"],i:["xi"],l:["xlArr","xlarr"],m:["xmap"],n:["xnis"],o:["xodot","xopf","xoplus","xotime"],r:["xrArr","xrarr"],s:["xscr","xsqcup"],u:["xuplus","xutri"],v:["xvee"],w:["xwedge"]},X:{f:["Xfr"],i:["Xi"],o:["Xopf"],s:["Xscr"]},Y:{a:["Yacute"],A:["YAcy"],c:["Ycirc","Ycy"],f:["Yfr"],I:["YIcy"],o:["Yopf"],s:["Yscr"],U:["YUcy"],u:["Yuml"]},y:{a:["yacute","yacy"],c:["ycirc","ycy"],e:["yen"],f:["yfr"],i:["yicy"],o:["yopf"],s:["yscr"],u:["yucy","yuml"]},Z:{a:["Zacute"],c:["Zcaron","Zcy"],d:["Zdot"],e:["ZeroWidthSpace","Zeta"],f:["Zfr"],H:["ZHcy"],o:["Zopf"],s:["Zscr"]},z:{a:["zacute"],c:["zcaron","zcy"],d:["zdot"],e:["zeetrf","zeta"],f:["zfr"],h:["zhcy"],i:["zigrarr"],o:["zopf"],s:["zscr"],w:["zwj","zwnj"]}},ea={1:{p:["sup1"]},2:{1:["blk12","frac12"],p:["sup2"]},3:{1:["emsp13","frac13"],2:["frac23"],p:["sup3"]},4:{1:["blk14","emsp14","frac14"],3:["blk34","frac34"],e:["there4"]},5:{1:["frac15"],2:["frac25"],3:["frac35"],4:["frac45"]},6:{1:["frac16"],5:["frac56"]},8:{1:["frac18"],3:["frac38"],5:["frac58"],7:["frac78"]},e:{t:["Aacute","aacute","acute","Cacute","cacute","CloseCurlyDoubleQuote","CloseCurlyQuote","DiacriticalAcute","DiacriticalDoubleAcute","Eacute","eacute","gacute","Iacute","iacute","Lacute","lacute","late","Nacute","nacute","Oacute","oacute","OpenCurlyDoubleQuote","OpenCurlyQuote","Racute","racute","Sacute","sacute","sdote","smte","Uacute","uacute","Yacute","yacute","Zacute","zacute"],v:["Abreve","abreve","Agrave","agrave","Breve","breve","DiacriticalGrave","DownBreve","Egrave","egrave","Gbreve","gbreve","grave","Igrave","igrave","Ograve","ograve","Ubreve","ubreve","Ugrave","ugrave"],p:["andslope","ape","bumpe","csupe","nbumpe","nsqsupe","nsupe","orslope","sqsupe","supe"],g:["ange","barwedge","bigwedge","blacklozenge","curlywedge","doublebarwedge","ge","image","lozenge","nge","nvge","range","Wedge","wedge","xwedge"],l:["angle","blacktriangle","dwangle","exponentiale","female","langle","le","LeftTriangle","male","measuredangle","nle","NotLeftTriangle","NotRightTriangle","nvle","rangle","RightTriangle","SmallCircle","smile","ssmile","triangle","uwangle"],a:["angmsdae"],d:["Atilde","atilde","DiacriticalTilde","divide","EqualTilde","GreaterTilde","Itilde","itilde","LessTilde","NotEqualTilde","NotGreaterTilde","NotLessTilde","NotSucceedsTilde","NotTilde","NotTildeTilde","Ntilde","ntilde","Otilde","otilde","PrecedesTilde","SucceedsTilde","Tilde","tilde","TildeTilde","trade","Utilde","utilde","VerticalTilde"],m:["backprime","bprime","bsime","gsime","lsime","nsime","Prime","prime","qprime","sime","tprime","tritime","xotime"],e:["barvee","bigvee","curlyvee","cuvee","DoubleLeftTee","DoubleRightTee","DownTee","ee","LeftTee","lthree","RightTee","rthree","UpTee","Vee","vee","xvee"],s:["Because","because","maltese","pluse"],r:["blacksquare","cire","dotsquare","EmptySmallSquare","EmptyVerySmallSquare","FilledSmallSquare","FilledVerySmallSquare","incare","npre","pre","Square","square","Therefore","therefore"],n:["bne","Colone","colone","gne","HorizontalLine","imagline","lne","ne","NewLine","oline","phone","Poincareplane","profline","realine","simne","subne","supne","VerticalLine","vsubne","vsupne"],i:["bowtie","die","infintie","ltrie","nltrie","nrtrie","nvltrie","nvrtrie","rtrie","trie"],b:["csube","nsqsube","nsube","sqsube","sube"],c:["HilbertSpace","lbrace","MediumSpace","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NonBreakingSpace","nsce","OverBrace","race","rbrace","sce","ThickSpace","ThinSpace","UnderBrace","VeryThinSpace","ZeroWidthSpace"],k:["lbrke","rbrke"],h:["lmoustache","rmoustache"],u:["nprcue","nsccue","prcue","sccue"],R:["Re"]},c:{a:["ac","angmsdac","dblac","Odblac","odblac","Udblac","udblac"],r:["Acirc","acirc","bigcirc","Ccirc","ccirc","circ","circledcirc","Ecirc","ecirc","eqcirc","Gcirc","gcirc","Hcirc","hcirc","Icirc","icirc","Jcirc","jcirc","nrarrc","Ocirc","ocirc","rarrc","Scirc","scirc","Ucirc","ucirc","Wcirc","wcirc","xcirc","Ycirc","ycirc"],s:["cuesc","nsc","sc"],e:["curlyeqprec","nprec","prec","telrec"],c:["curlyeqsucc","gescc","gtcc","lescc","ltcc","nsucc","succ"],i:["ic","radic"],v:["notinvc","notnivc"],S:["Sc"]},d:{c:["acd"],n:["And","and","andand","capand","Diamond","diamond","pound"],d:["andd","dd"],s:["angmsd","minusd","nisd","timesd"],a:["angmsdad","Gammad","gammad"],b:["angrtvbd"],i:["apid","cirmid","mid","napid","nmid","nshortmid","nsmid","omid","rnmid","shortmid","smid"],e:["Barwed","barwed","cuwed","imped","RuleDelayed"],H:["boxHd"],h:["boxhd","DDotrahd"],o:["coprod","intprod","iprod","period","prod"],g:["langd","rangd"],l:["lbrksld","odsold","rbrksld"],r:["lhard","llhard","lrhard","ord","rhard"]},E:{c:["acE","scE"],p:["apE","bumpE","napE","nsupE","supE"],r:["cirE","prE"],l:["ExponentialE","glE","lE","nlE","simlE"],g:["gE","lgE","ngE","simgE"],n:["gnE","gvnE","isinE","lnE","lvnE","notinE","prnE","scnE","subnE","supnE","vsubnE","vsupnE"],b:["nsubE","subE"],D:["TRADE"]},y:{c:["Acy","acy","Bcy","bcy","CHcy","chcy","Dcy","dcy","DJcy","djcy","DScy","dscy","DZcy","dzcy","Ecy","ecy","Fcy","fcy","Gcy","gcy","GJcy","gjcy","HARDcy","hardcy","Icy","icy","IEcy","iecy","IOcy","iocy","Iukcy","iukcy","Jcy","jcy","Jsercy","jsercy","Jukcy","jukcy","Kcy","kcy","KHcy","khcy","KJcy","kjcy","Lcy","lcy","LJcy","ljcy","Mcy","mcy","Ncy","ncy","NJcy","njcy","Ocy","ocy","Pcy","pcy","Rcy","rcy","Scy","scy","SHCHcy","shchcy","SHcy","shcy","SOFTcy","softcy","Tcy","tcy","TScy","tscy","TSHcy","tshcy","Ubrcy","ubrcy","Ucy","ucy","Vcy","vcy","YAcy","yacy","Ycy","ycy","YIcy","yicy","YUcy","yucy","Zcy","zcy","ZHcy","zhcy"],p:["copy"],t:["cylcty","empty"],h:["shy"]},g:{i:["AElig","aelig","ffilig","fflig","ffllig","filig","fjlig","fllig","IJlig","ijlig","OElig","oelig","szlig"],l:["amalg","lg","ntlg"],n:["ang","Aring","aring","backcong","bcong","cong","eng","Lang","lang","LeftCeiling","loang","nang","ncong","Rang","rang","RightCeiling","ring","roang","sung","Uring","uring","varnothing"],a:["angmsdag","vzigzag"],e:["deg","eg","leg","reg"],G:["Gg","nGg"],g:["gg","ggg"],E:["lEg"],s:["lesg"],m:["lsimg","simg"]},f:{a:["af","angmsdaf","sigmaf"],p:["Aopf","aopf","Bopf","bopf","Copf","copf","Dopf","dopf","Eopf","eopf","Fopf","fopf","Gopf","gopf","Hopf","hopf","Iopf","iopf","Jopf","jopf","Kopf","kopf","Lopf","lopf","Mopf","mopf","Nopf","nopf","Oopf","oopf","Popf","popf","Qopf","qopf","Ropf","ropf","Sopf","sopf","Topf","topf","Uopf","uopf","Vopf","vopf","Wopf","wopf","Xopf","xopf","Yopf","yopf","Zopf","zopf"],i:["dtrif","ltrif","rtrif","utrif"],o:["fnof","imof","orderof","origof"],r:["Fouriertrf","Laplacetrf","Mellintrf","profsurf","squarf","sstarf","starf","zeetrf"],l:["half"],f:["iff"],z:["lozf"],d:["ordf"],u:["squf"]},r:{f:["Afr","afr","Bfr","bfr","Cfr","cfr","Dfr","dfr","Efr","efr","Ffr","ffr","Gfr","gfr","Hfr","hfr","Ifr","ifr","Jfr","jfr","Kfr","kfr","Lfr","lfr","Mfr","mfr","Nfr","nfr","Ofr","ofr","Pfr","pfr","Qfr","qfr","Rfr","rfr","Sfr","sfr","Tfr","tfr","Ufr","ufr","Vfr","vfr","Wfr","wfr","Xfr","xfr","Yfr","yfr","Zfr","zfr"],c:["Amacr","amacr","Ascr","ascr","Bscr","bscr","Cscr","cscr","Dscr","dscr","Emacr","emacr","Escr","escr","Fscr","fscr","Gscr","gscr","Hscr","hscr","Imacr","imacr","Iscr","iscr","Jscr","jscr","Kscr","kscr","Lscr","lscr","macr","Mscr","mscr","Nscr","nscr","Omacr","omacr","Oscr","oscr","Pscr","pscr","Qscr","qscr","Rscr","rscr","Sscr","sscr","Tscr","tscr","Umacr","umacr","Uscr","uscr","Vscr","vscr","Wscr","wscr","Xscr","xscr","Yscr","yscr","Zscr","zscr"],r:["angzarr","crarr","cudarrr","cularr","curarr","Darr","dArr","darr","ddarr","dharr","duarr","dzigrarr","erarr","gtrarr","hArr","harr","hoarr","lAarr","Larr","lArr","larr","lBarr","lbarr","llarr","loarr","lrarr","ltlarr","neArr","nearr","nhArr","nharr","nlArr","nlarr","nrArr","nrarr","nvHarr","nvlArr","nvrArr","nwArr","nwarr","olarr","orarr","rAarr","Rarr","rArr","rarr","RBarr","rBarr","rbarr","rlarr","roarr","rrarr","seArr","searr","simrarr","slarr","srarr","subrarr","suplarr","swArr","swarr","Uarr","uArr","uarr","udarr","uharr","uuarr","vArr","varr","xhArr","xharr","xlArr","xlarr","xrArr","xrarr","zigrarr"],i:["apacir","cir","cirscir","ecir","gtcir","harrcir","ltcir","midcir","ocir","ofcir","olcir","plusacir","pluscir","topcir","Uarrocir"],a:["bigstar","brvbar","dHar","dollar","DoubleVerticalBar","DownArrowBar","DownLeftVectorBar","DownRightVectorBar","duhar","epar","gtlPar","hbar","horbar","ldrdhar","ldrushar","LeftArrowBar","LeftDownVectorBar","LeftTriangleBar","LeftUpVectorBar","LeftVectorBar","lHar","lopar","lowbar","lpar","lrhar","ltrPar","lurdshar","luruhar","nesear","nhpar","NotDoubleVerticalBar","NotLeftTriangleBar","NotRightTriangleBar","NotVerticalBar","npar","nspar","nwnear","ohbar","opar","ovbar","OverBar","par","profalar","rdldhar","rHar","RightArrowBar","RightDownVectorBar","RightTriangleBar","RightUpVectorBar","RightVectorBar","rlhar","ropar","rpar","ruluhar","seswar","solbar","spar","Star","star","swnwar","timesbar","udhar","uHar","UnderBar","UpArrowBar","Vbar","vBar","veebar","Verbar","verbar","VerticalBar","wedbar"],D:["boxDr"],d:["boxdr","mldr","nldr"],U:["boxUr"],u:["boxur","natur"],V:["boxVr"],v:["boxvr"],s:["copysr"],p:["cuepr","npr","pr"],o:["cupor","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownRightTeeVector","DownRightVector","ldquor","LeftDownTeeVector","LeftDownVector","LeftFloor","LeftRightVector","LeftTeeVector","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftVector","lesdotor","lfloor","lsquor","or","oror","rdquor","rfloor","RightDownTeeVector","RightDownVector","RightFloor","RightTeeVector","RightUpDownVector","RightUpTeeVector","RightUpVector","RightVector","rsquor","VerticalSeparator"],e:["Dagger","dagger","ddagger","easter","GreaterGreater","LessEqualGreater","LessGreater","llcorner","lrcorner","marker","NestedGreaterGreater","NotGreater","NotGreaterGreater","NotLessGreater","NotNestedGreaterGreater","order","ulcorner","urcorner"],t:["eqslantgtr","lesseqgtr","lesseqqgtr","lessgtr","ngtr"],O:["Or"],P:["Pr"],w:["wr"]},m:{y:["alefsym","thetasym"],i:["backsim","bsim","eqsim","Esim","esim","gnsim","gsim","gtrsim","larrsim","lesssim","lnsim","lsim","nesim","ngsim","nlsim","nsim","nvsim","parsim","plussim","precnsim","precsim","prnsim","prsim","rarrsim","scnsim","scsim","sim","subsim","succnsim","succsim","supsim","thicksim","thksim"],o:["bottom"],s:["ccupssm"],r:["curarrm","lrm"],a:["diam"],u:["Equilibrium","num","ReverseEquilibrium","ReverseUpEquilibrium","Sum","sum","trpezium","UpEquilibrium"],I:["Im"],h:["ohm"],d:["ordm"],p:["pm"],l:["rlm"]},h:{p:["aleph","angsph"],a:["angmsdah"],s:["Backslash","circleddash","dash","hslash","ldsh","Lsh","lsh","mdash","ndash","nVDash","nVdash","nvDash","nvdash","odash","Oslash","oslash","rdsh","Rsh","rsh","VDash","Vdash","vDash","vdash","Vvdash"],t:["beth","daleth","eth","imath","jmath","wreath"],x:["boxh"],V:["boxVh"],v:["boxvh"],k:["planckh"],i:["upsih"]},a:{h:["Alpha","alpha"],a:["angmsdaa"],t:["Beta","beta","Delta","delta","Eta","eta","iiota","Iota","iota","Theta","theta","vartheta","Zeta","zeta"],l:["Cedilla","gla","nabla"],m:["comma","digamma","Gamma","gamma","InvisibleComma","mcomma","Sigma","sigma","varsigma"],p:["Kappa","kappa","varkappa"],d:["Lambda","lambda"],c:["ldca","rdca"],v:["notinva","notniva"],g:["Omega","omega"],r:["para"],e:["toea"],s:["tosa"]},P:{M:["AMP"]},p:{m:["amp","asymp","bump","comp","HumpDownHump","mp","nbump","NotHumpDownHump"],a:["ap","bigcap","Cap","cap","capcap","cupbrcap","CupCap","cupcap","gap","gnap","lap","lnap","Map","map","multimap","mumap","nap","ncap","NotCupCap","nvap","prap","prnap","rarrap","scap","scnap","sqcap","thkap","xcap","xmap"],u:["bigcup","bigsqcup","bigtriangleup","capbrcup","capcup","csup","Cup","cup","cupcup","leftharpoonup","mapstoup","ncup","nsup","rightharpoonup","sqcup","sqsup","subsup","Sup","sup","supsup","vnsup","xcup","xsqcup"],r:["cularrp","operp","perp","sharp","weierp"],o:["dlcrop","drcrop","prop","top","ulcrop","urcrop","vprop"],s:["emsp","ensp","hairsp","nbsp","numsp","puncsp","thinsp"],i:["hellip","vellip"],l:["larrlp","rarrlp"],c:["mlcp"],h:["smashp"],w:["wp"]},v:{d:["andv"],r:["Barv","orv","vBarv"],y:["bemptyv","cemptyv","demptyv","emptyv","laemptyv","raemptyv"],i:["bnequiv","div","epsiv","equiv","nequiv","niv","odiv","phiv","piv"],x:["boxv"],h:["Dashv","dashv"],k:["forkv","plankv"],s:["isinsv"],n:["isinv"],a:["kappav","sigmav","thetav"],t:["nGtv","nLtv"],o:["rhov"]},b:{a:["angmsdab","Tab"],v:["angrtvb","notinvb","notnivb"],l:["bsolb","solb"],u:["bsolhsub","csub","lcub","nsub","rcub","sqsub","Sub","sub","subsub","supdsub","suphsub","supsub","vnsub"],r:["larrb","rarrb"],q:["lsqb","rsqb"],s:["minusb","plusb","timesb","trisb"],t:["sdotb"]},t:{r:["angrt","imagpart","npart","part","realpart","Sqrt","vangrt","Vert","vert"],s:["angst","ast","circledast","equest","exist","gtquest","iquest","lmoust","lowast","ltquest","midast","nexist","oast","quest","rmoust"],n:["awconint","awint","Cconint","cent","cirfnint","complement","Congruent","Conint","conint","cwconint","cwint","Element","fpartint","geqslant","iiiint","iiint","Int","int","leqslant","ngeqslant","nleqslant","NotCongruent","NotElement","NotReverseElement","npolint","oint","percnt","pointint","qint","quatint","ReverseElement","rppolint","scpolint","tint"],o:["bigodot","bNot","bnot","bot","capdot","Cdot","cdot","CenterDot","centerdot","CircleDot","congdot","ctdot","cupdot","DiacriticalDot","Dot","dot","DotDot","doteqdot","DoubleDot","dtdot","eDDot","Edot","eDot","edot","efDot","egsdot","elsdot","erDot","esdot","Gdot","gdot","gesdot","gtdot","gtrdot","Idot","inodot","isindot","lesdot","lessdot","Lmidot","lmidot","ltdot","mDDot","middot","ncongdot","nedot","Not","not","notindot","odot","quot","sdot","simdot","subdot","subedot","supdot","supedot","tdot","topbot","tridot","TripleDot","utdot","xodot","Zdot","zdot"],f:["blacktriangleleft","circlearrowleft","curvearrowleft","downharpoonleft","looparrowleft","mapstoleft","ntriangleleft","triangleleft","upharpoonleft","vartriangleleft"],h:["blacktriangleright","circlearrowright","curvearrowright","dfisht","downharpoonright","homtht","lfisht","looparrowright","ntriangleright","rfisht","triangleright","ufisht","upharpoonright","vartriangleright"],e:["bullet","caret","emptyset","LeftAngleBracket","LeftDoubleBracket","NotSquareSubset","NotSquareSuperset","NotSubset","NotSuperset","nsubset","nsupset","OverBracket","RightAngleBracket","RightDoubleBracket","sqsubset","sqsupset","SquareSubset","SquareSuperset","Subset","subset","Superset","Supset","supset","target","UnderBracket"],i:["clubsuit","diamondsuit","heartsuit","it","spadesuit"],a:["commat","flat","Hat","lat","phmmat","SuchThat"],c:["Coproduct","Product","rect","sect"],G:["Gt","nGt"],g:["gt","ngt","nvgt","ogt","rpargt"],l:["hamilt","lparlt","lt","malt","nlt","nvlt","olt","submult","supmult"],L:["Lt","nLt"],x:["sext","twixt"],m:["smt"]},n:{o:["Aogon","aogon","ApplyFunction","backepsilon","caron","Ccaron","ccaron","Colon","colon","Dcaron","dcaron","Ecaron","ecaron","ecolon","Eogon","eogon","Epsilon","epsilon","eqcolon","expectation","hercon","Intersection","Iogon","iogon","Lcaron","lcaron","Ncaron","ncaron","ogon","Omicron","omicron","Proportion","Rcaron","rcaron","Scaron","scaron","SquareIntersection","SquareUnion","straightepsilon","Tcaron","tcaron","Union","Uogon","uogon","Upsilon","upsilon","varepsilon","Zcaron","zcaron"],g:["Assign"],e:["between","curren","hyphen","kgreen","yen"],w:["bigtriangledown","blacktriangledown","frown","leftharpoondown","mapstodown","rightharpoondown","sfrown","triangledown"],f:["compfn"],i:["disin","iinfin","in","infin","isin","notin","nvinfin"],r:["dlcorn","drcorn","thorn","ulcorn","urcorn"],a:["lagran"],m:["plusmn","setmn","ssetmn"]},s:{o:["apos","mstpos","napos"],u:["becaus","bigoplus","biguplus","boxminus","boxplus","CircleMinus","CirclePlus","dotminus","dotplus","eplus","loplus","minus","MinusPlus","mnplus","ominus","oplus","plus","PlusMinus","roplus","setminus","simplus","smallsetminus","subplus","supplus","triminus","triplus","UnionPlus","uplus","xoplus","xuplus"],i:["Bernoullis","nis","OverParenthesis","UnderParenthesis","xnis"],e:["bigotimes","boxtimes","CircleTimes","complexes","divideontimes","ges","gesles","Implies","InvisibleTimes","lates","leftthreetimes","les","lesges","lotimes","ltimes","nges","nles","NotPrecedes","Otimes","otimes","Precedes","primes","rightthreetimes","rotimes","RoundImplies","rtimes","smtes","spades","times"],p:["caps","ccaps","ccups","cups","sqcaps","sqcups"],y:["Cayleys"],b:["clubs"],s:["Cross","cross","eqslantless","GreaterEqualLess","GreaterLess","gtreqless","gtreqqless","gtrless","LessLess","NestedLessLess","nless","NotGreaterLess","NotLess","NotLessLess","NotNestedLessLess","olcross"],m:["diams"],w:["downdownarrows","leftleftarrows","leftrightarrows","rightleftarrows","rightrightarrows","upuparrows"],g:["egs"],r:["elinters","integers"],l:["els","equals","models","naturals","rationals","reals"],t:["Exists","hearts","nexists","NotExists"],n:["fltns","isins","leftrightharpoons","quaternions","rightleftharpoons","strns"],f:["larrbfs","larrfs","rarrbfs","rarrfs"],d:["NotSucceeds","Succeeds"],a:["otimesas"]},x:{o:["approx","boxbox","gnapprox","gtrapprox","lessapprox","lnapprox","napprox","precapprox","precnapprox","succapprox","succnapprox","thickapprox"],n:["divonx"],r:["rx"]},q:{e:["approxeq","asympeq","backsimeq","Bumpeq","bumpeq","circeq","coloneq","ddotseq","doteq","fallingdotseq","geq","gneq","leq","lneq","ngeq","nleq","npreceq","nsimeq","nsubseteq","nsucceq","nsupseteq","ntrianglelefteq","ntrianglerighteq","preccurlyeq","preceq","questeq","risingdotseq","simeq","sqsubseteq","sqsupseteq","subseteq","subsetneq","succcurlyeq","succeq","supseteq","supsetneq","trianglelefteq","triangleq","trianglerighteq","varsubsetneq","varsupsetneq","veeeq","wedgeq"],q:["geqq","gneqq","gvertneqq","leqq","lneqq","lvertneqq","ngeqq","nleqq","nsubseteqq","nsupseteqq","precneqq","subseteqq","subsetneqq","succneqq","supseteqq","supsetneqq","varsubsetneqq","varsupsetneqq"]},l:{m:["Auml","auml","Euml","euml","gsiml","Iuml","iuml","Ouml","ouml","siml","uml","Uuml","uuml","Yuml","yuml"],D:["boxDl"],d:["boxdl"],U:["boxUl"],u:["boxul","lharul","rharul"],V:["boxVl"],v:["boxvl"],o:["bsol","dsol","gesdotol","osol","sol","suphsol"],l:["bull","ell","ForAll","forall","hybull","ll"],i:["Ccedil","ccedil","cedil","Gcedil","Kcedil","kcedil","lAtail","latail","Lcedil","lcedil","lceil","leftarrowtail","Ncedil","ncedil","permil","rAtail","ratail","Rcedil","rcedil","rceil","rightarrowtail","Scedil","scedil","Tcedil","tcedil"],a:["ClockwiseContourIntegral","ContourIntegral","CounterClockwiseContourIntegral","DotEqual","DoubleContourIntegral","Equal","GreaterEqual","GreaterFullEqual","GreaterSlantEqual","HumpEqual","intcal","Integral","intercal","LeftTriangleEqual","LessFullEqual","LessSlantEqual","natural","NotEqual","NotGreaterEqual","NotGreaterFullEqual","NotGreaterSlantEqual","NotHumpEqual","NotLeftTriangleEqual","NotLessEqual","NotLessSlantEqual","NotPrecedesEqual","NotPrecedesSlantEqual","NotRightTriangleEqual","NotSquareSubsetEqual","NotSquareSupersetEqual","NotSubsetEqual","NotSucceedsEqual","NotSucceedsSlantEqual","NotSupersetEqual","NotTildeEqual","NotTildeFullEqual","PrecedesEqual","PrecedesSlantEqual","Proportional","real","RightTriangleEqual","SquareSubsetEqual","SquareSupersetEqual","SubsetEqual","SucceedsEqual","SucceedsSlantEqual","SupersetEqual","TildeEqual","TildeFullEqual"],r:["cudarrl","dharl","uharl"],e:["Del","el","gel","gimel","nparallel","nshortparallel","parallel","prurel","shortparallel"],s:["eparsl","eqvparsl","frasl","gesl","nparsl","parsl","smeparsl"],c:["excl","iexcl"],E:["gEl"],g:["gl","ntgl"],p:["larrpl","rarrpl"],t:["larrtl","Rarrtl","rarrtl"],L:["Ll","nLl"],h:["Vdashl"]},k:{r:["bbrk","bbrktbrk","checkmark","fork","lbbrk","lobrk","pitchfork","rbbrk","robrk","tbrk","topfork"],n:["blank","pertenk"],c:["block","check","lbrack","planck","rbrack"],o:["Dstrok","dstrok","Hstrok","hstrok","Lstrok","lstrok","Tstrok","tstrok"],e:["Hacek"],h:["intlarhk","larrhk","nearhk","nwarhk","rarrhk","searhk","swarhk"],l:["lhblk","uhblk"],a:["NoBreak"]},o:{u:["bdquo","laquo","ldquo","lsaquo","lsquo","raquo","rdquo","rsaquo","rsquo","sbquo"],r:["euro","micro","numero"],t:["gesdoto","lesdoto","longmapsto","mapsto","propto","varpropto"],h:["mho","Rho","rho","varrho"],d:["plusdo"],w:["plustwo"],i:["ratio"]},i:{s:["bepsi","epsi","Psi","psi","Upsi","upsi"],m:["bsemi","semi"],h:["Chi","chi","Phi","phi","straightphi","varphi"],r:["dtri","lltri","lrtri","ltri","nltri","nrtri","rtri","rtriltri","ultri","urtri","utri","vltri","vrtri","xdtri","xutri"],i:["ii"],n:["ni","notni"],P:["Pi"],p:["pi","varpi"],X:["Xi"],x:["xi"]},u:{o:["bernou"],H:["boxHu"],h:["boxhu"],l:["lbrkslu","rbrkslu"],r:["lharu","rharu"],d:["minusdu","plusdu"],M:["Mu"],m:["mu"],N:["Nu"],n:["nu"],q:["squ"],a:["Tau","tau"]},w:{o:["bkarow","dbkarow","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleUpArrow","DoubleUpDownArrow","DownArrow","Downarrow","downarrow","DownArrowUpArrow","DownTeeArrow","drbkarow","hksearow","hkswarow","hookleftarrow","hookrightarrow","LeftArrow","Leftarrow","leftarrow","LeftArrowRightArrow","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightsquigarrow","LeftTeeArrow","Lleftarrow","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","LongRightArrow","Longrightarrow","longrightarrow","LowerLeftArrow","LowerRightArrow","nearrow","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nRightarrow","nrightarrow","nwarrow","RightArrow","Rightarrow","rightarrow","RightArrowLeftArrow","rightsquigarrow","RightTeeArrow","Rrightarrow","searrow","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","swarrow","twoheadleftarrow","twoheadrightarrow","UpArrow","Uparrow","uparrow","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpperLeftArrow","UpperRightArrow","UpTeeArrow"],r:["harrw","nrarrw","rarrw"]},L:{D:["boxDL"],d:["boxdL"],U:["boxUL"],u:["boxuL"],V:["boxVL"],v:["boxvL"]},R:{D:["boxDR"],d:["boxdR","circledR"],U:["boxUR"],u:["boxuR"],V:["boxVR"],v:["boxvR"]},H:{x:["boxH"],V:["boxVH"],v:["boxvH"],T:["ETH"]},D:{H:["boxHD"],h:["boxhD"],l:["CapitalDifferentialD","DifferentialD","PartialD"],D:["DD","equivDD"]},U:{H:["boxHU"],h:["boxhU"]},V:{x:["boxV"]},S:{d:["circledS"],o:["oS"]},Y:{P:["COPY"]},G:{N:["ENG"],E:["REG"]},j:{l:["glj"],w:["zwj"],n:["zwnj"]},T:{G:["GT"],L:["LT"],O:["QUOT"]},I:{y:["ImaginaryI"]},z:{o:["loz"]},N:{R:["THORN"]}},ra={a:{a:["aacute"],b:["abreve"],c:["ac","acd","ace","acirc","acute","acy"],e:["aelig"],f:["af","afr"],g:["agrave"],l:["alefsym","aleph","alpha"],m:["amacr","amalg","amp"],n:["and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr"],o:["aogon","aopf"],p:["ap","apacir","ape","apid","apos","applyfunction","approx","approxeq"],r:["aring"],s:["ascr","assign","ast","asymp","asympeq"],t:["atilde"],u:["auml"],w:["awconint","awint"]},b:{a:["backcong","backepsilon","backprime","backsim","backsimeq","backslash","barv","barvee","barwed","barwedge"],b:["bbrk","bbrktbrk"],c:["bcong","bcy"],d:["bdquo"],e:["becaus","because","bemptyv","bepsi","bernou","bernoullis","beta","beth","between"],f:["bfr"],i:["bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge"],k:["bkarow"],l:["blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block"],n:["bne","bnequiv","bnot"],o:["bopf","bot","bottom","bowtie","boxbox","boxdl","boxdr","boxh","boxhd","boxhu","boxminus","boxplus","boxtimes","boxul","boxur","boxv","boxvh","boxvl","boxvr"],p:["bprime"],r:["breve","brvbar"],s:["bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub"],u:["bull","bullet","bump","bumpe","bumpeq"]},c:{a:["cacute","cap","capand","capbrcup","capcap","capcup","capdot","capitaldifferentiald","caps","caret","caron","cayleys"],c:["ccaps","ccaron","ccedil","ccirc","cconint","ccups","ccupssm"],d:["cdot"],e:["cedil","cedilla","cemptyv","cent","centerdot"],f:["cfr"],h:["chcy","check","checkmark","chi"],i:["cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledot","circledr","circleds","circleminus","circleplus","circletimes","cire","cirfnint","cirmid","cirscir"],l:["clockwisecontourintegral","closecurlydoublequote","closecurlyquote","clubs","clubsuit"],o:["colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","congruent","conint","contourintegral","copf","coprod","coproduct","copy","copysr","counterclockwisecontourintegral"],r:["crarr","cross"],s:["cscr","csub","csube","csup","csupe"],t:["ctdot"],u:["cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed"],w:["cwconint","cwint"],y:["cylcty"]},d:{a:["dagger","daleth","darr","dash","dashv"],b:["dbkarow","dblac"],c:["dcaron","dcy"],d:["dd","ddagger","ddarr","ddotrahd","ddotseq"],e:["deg","del","delta","demptyv"],f:["dfisht","dfr"],h:["dhar","dharl","dharr"],i:["diacriticalacute","diacriticaldot","diacriticaldoubleacute","diacriticalgrave","diacriticaltilde","diam","diamond","diamondsuit","diams","die","differentiald","digamma","disin","div","divide","divideontimes","divonx"],j:["djcy"],l:["dlcorn","dlcrop"],o:["dollar","dopf","dot","dotdot","doteq","doteqdot","dotequal","dotminus","dotplus","dotsquare","doublebarwedge","doublecontourintegral","doubledot","doubledownarrow","doubleleftarrow","doubleleftrightarrow","doublelefttee","doublelongleftarrow","doublelongleftrightarrow","doublelongrightarrow","doublerightarrow","doublerighttee","doubleuparrow","doubleupdownarrow","doubleverticalbar","downarrow","downarrowbar","downarrowuparrow","downbreve","downdownarrows","downharpoonleft","downharpoonright","downleftrightvector","downleftteevector","downleftvector","downleftvectorbar","downrightteevector","downrightvector","downrightvectorbar","downtee","downteearrow"],r:["drbkarow","drcorn","drcrop"],s:["dscr","dscy","dsol","dstrok"],t:["dtdot","dtri","dtrif"],u:["duarr","duhar"],w:["dwangle"],z:["dzcy","dzigrarr"]},e:{a:["eacute","easter"],c:["ecaron","ecir","ecirc","ecolon","ecy"],d:["eddot","edot"],e:["ee"],f:["efdot","efr"],g:["eg","egrave","egs","egsdot"],l:["el","element","elinters","ell","els","elsdot"],m:["emacr","empty","emptyset","emptysmallsquare","emptyv","emptyverysmallsquare","emsp","emsp13","emsp14"],n:["eng","ensp"],o:["eogon","eopf"],p:["epar","eparsl","eplus","epsi","epsilon","epsiv"],q:["eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equal","equals","equaltilde","equest","equilibrium","equiv","equivdd","eqvparsl"],r:["erarr","erdot"],s:["escr","esdot","esim"],t:["eta","eth"],u:["euml","euro"],x:["excl","exist","exists","expectation","exponentiale"]},f:{a:["fallingdotseq"],c:["fcy"],e:["female"],f:["ffilig","fflig","ffllig","ffr"],i:["filig","filledsmallsquare","filledverysmallsquare"],j:["fjlig"],l:["flat","fllig","fltns"],n:["fnof"],o:["fopf","forall","fork","forkv","fouriertrf"],p:["fpartint"],r:["frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown"],s:["fscr"]},g:{a:["gacute","gamma","gammad","gap"],b:["gbreve"],c:["gcedil","gcirc","gcy"],d:["gdot"],e:["ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles"],f:["gfr"],g:["gg","ggg"],i:["gimel"],j:["gjcy"],l:["gl","gla","gle","glj"],n:["gnap","gnapprox","gne","gneq","gneqq","gnsim"],o:["gopf"],r:["grave","greaterequal","greaterequalless","greaterfullequal","greatergreater","greaterless","greaterslantequal","greatertilde"],s:["gscr","gsim","gsime","gsiml"],t:["gt","gtcc","gtcir","gtdot","gtlpar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim"],v:["gvertneqq","gvne"]},h:{a:["hacek","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hat"],b:["hbar"],c:["hcirc"],e:["hearts","heartsuit","hellip","hercon"],f:["hfr"],i:["hilbertspace"],k:["hksearow","hkswarow"],o:["hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","horizontalline"],s:["hscr","hslash","hstrok"],u:["humpdownhump","humpequal"],y:["hybull","hyphen"]},i:{a:["iacute"],c:["ic","icirc","icy"],d:["idot"],e:["iecy","iexcl"],f:["iff","ifr"],g:["igrave"],i:["ii","iiiint","iiint","iinfin","iiota"],j:["ijlig"],m:["im","imacr","image","imaginaryi","imagline","imagpart","imath","imof","imped","implies"],n:["in","incare","infin","infintie","inodot","int","intcal","integers","integral","intercal","intersection","intlarhk","intprod","invisiblecomma","invisibletimes"],o:["iocy","iogon","iopf","iota"],p:["iprod"],q:["iquest"],s:["iscr","isin","isindot","isine","isins","isinsv","isinv"],t:["it","itilde"],u:["iukcy","iuml"]},j:{c:["jcirc","jcy"],f:["jfr"],m:["jmath"],o:["jopf"],s:["jscr","jsercy"],u:["jukcy"]},k:{a:["kappa","kappav"],c:["kcedil","kcy"],f:["kfr"],g:["kgreen"],h:["khcy"],j:["kjcy"],o:["kopf"],s:["kscr"]},l:{a:["laarr","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laplacetrf","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates"],b:["lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu"],c:["lcaron","lcedil","lceil","lcub","lcy"],d:["ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh"],e:["le","leftanglebracket","leftarrow","leftarrowbar","leftarrowrightarrow","leftarrowtail","leftceiling","leftdoublebracket","leftdownteevector","leftdownvector","leftdownvectorbar","leftfloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftrightvector","lefttee","leftteearrow","leftteevector","leftthreetimes","lefttriangle","lefttrianglebar","lefttriangleequal","leftupdownvector","leftupteevector","leftupvector","leftupvectorbar","leftvector","leftvectorbar","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessequalgreater","lessfullequal","lessgreater","lessgtr","lessless","lesssim","lessslantequal","lesstilde"],f:["lfisht","lfloor","lfr"],g:["lg","lge"],h:["lhar","lhard","lharu","lharul","lhblk"],j:["ljcy"],l:["ll","llarr","llcorner","lleftarrow","llhard","lltri"],m:["lmidot","lmoust","lmoustache"],n:["lnap","lnapprox","lne","lneq","lneqq","lnsim"],o:["loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","lowerleftarrow","lowerrightarrow","loz","lozenge","lozf"],p:["lpar","lparlt"],r:["lrarr","lrcorner","lrhar","lrhard","lrm","lrtri"],s:["lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok"],t:["lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrpar"],u:["lurdshar","luruhar"],v:["lvertneqq","lvne"]},m:{a:["macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker"],c:["mcomma","mcy"],d:["mdash","mddot"],e:["measuredangle","mediumspace","mellintrf"],f:["mfr"],h:["mho"],i:["micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","minusplus"],l:["mlcp","mldr"],n:["mnplus"],o:["models","mopf"],p:["mp"],s:["mscr","mstpos"],u:["mu","multimap","mumap"]},n:{a:["nabla","nacute","nang","nap","nape","napid","napos","napprox","natur","natural","naturals"],b:["nbsp","nbump","nbumpe"],c:["ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy"],d:["ndash"],e:["ne","nearhk","nearr","nearrow","nedot","negativemediumspace","negativethickspace","negativethinspace","negativeverythinspace","nequiv","nesear","nesim","nestedgreatergreater","nestedlessless","newline","nexist","nexists"],f:["nfr"],g:["nge","ngeq","ngeqq","ngeqslant","nges","ngg","ngsim","ngt","ngtr","ngtv"],h:["nharr","nhpar"],i:["ni","nis","nisd","niv"],j:["njcy"],l:["nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nll","nlsim","nlt","nltri","nltrie","nltv"],m:["nmid"],o:["nobreak","nonbreakingspace","nopf","not","notcongruent","notcupcap","notdoubleverticalbar","notelement","notequal","notequaltilde","notexists","notgreater","notgreaterequal","notgreaterfullequal","notgreatergreater","notgreaterless","notgreaterslantequal","notgreatertilde","nothumpdownhump","nothumpequal","notin","notindot","notine","notinva","notinvb","notinvc","notlefttriangle","notlefttrianglebar","notlefttriangleequal","notless","notlessequal","notlessgreater","notlessless","notlessslantequal","notlesstilde","notnestedgreatergreater","notnestedlessless","notni","notniva","notnivb","notnivc","notprecedes","notprecedesequal","notprecedesslantequal","notreverseelement","notrighttriangle","notrighttrianglebar","notrighttriangleequal","notsquaresubset","notsquaresubsetequal","notsquaresuperset","notsquaresupersetequal","notsubset","notsubsetequal","notsucceeds","notsucceedsequal","notsucceedsslantequal","notsucceedstilde","notsuperset","notsupersetequal","nottilde","nottildeequal","nottildefullequal","nottildetilde","notverticalbar"],p:["npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq"],r:["nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie"],s:["nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupe","nsupset","nsupseteq","nsupseteqq"],t:["ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq"],u:["nu","num","numero","numsp"],v:["nvap","nvdash","nvge","nvgt","nvharr","nvinfin","nvlarr","nvle","nvlt","nvltrie","nvrarr","nvrtrie","nvsim"],w:["nwarhk","nwarr","nwarrow","nwnear"]},o:{a:["oacute","oast"],c:["ocir","ocirc","ocy"],d:["odash","odblac","odiv","odot","odsold"],e:["oelig"],f:["ofcir","ofr"],g:["ogon","ograve","ogt"],h:["ohbar","ohm"],i:["oint"],l:["olarr","olcir","olcross","oline","olt"],m:["omacr","omega","omicron","omid","ominus"],o:["oopf"],p:["opar","opencurlydoublequote","opencurlyquote","operp","oplus"],r:["or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv"],s:["os","oscr","oslash","osol"],t:["otilde","otimes","otimesas"],u:["ouml"],v:["ovbar","overbar","overbrace","overbracket","overparenthesis"]},p:{a:["par","para","parallel","parsim","parsl","part","partiald"],c:["pcy"],e:["percnt","period","permil","perp","pertenk"],f:["pfr"],h:["phi","phiv","phmmat","phone"],i:["pi","pitchfork","piv"],l:["planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusminus","plusmn","plussim","plustwo"],m:["pm"],o:["poincareplane","pointint","popf","pound"],r:["pr","prap","prcue","pre","prec","precapprox","preccurlyeq","precedes","precedesequal","precedesslantequal","precedestilde","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnap","prne","prnsim","prod","product","profalar","profline","profsurf","prop","proportion","proportional","propto","prsim","prurel"],s:["pscr","psi"],u:["puncsp"]},q:{f:["qfr"],i:["qint"],o:["qopf"],p:["qprime"],s:["qscr"],u:["quaternions","quatint","quest","questeq","quot"]},r:{a:["raarr","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals"],b:["rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu"],c:["rcaron","rcedil","rceil","rcub","rcy"],d:["rdca","rdldhar","rdquo","rdquor","rdsh"],e:["re","real","realine","realpart","reals","rect","reg","reverseelement","reverseequilibrium","reverseupequilibrium"],f:["rfisht","rfloor","rfr"],h:["rhar","rhard","rharu","rharul","rho","rhov"],i:["rightanglebracket","rightarrow","rightarrowbar","rightarrowleftarrow","rightarrowtail","rightceiling","rightdoublebracket","rightdownteevector","rightdownvector","rightdownvectorbar","rightfloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","righttee","rightteearrow","rightteevector","rightthreetimes","righttriangle","righttrianglebar","righttriangleequal","rightupdownvector","rightupteevector","rightupvector","rightupvectorbar","rightvector","rightvectorbar","ring","risingdotseq"],l:["rlarr","rlhar","rlm"],m:["rmoust","rmoustache"],n:["rnmid"],o:["roang","roarr","robrk","ropar","ropf","roplus","rotimes","roundimplies"],p:["rpar","rpargt","rppolint"],r:["rrarr","rrightarrow"],s:["rsaquo","rscr","rsh","rsqb","rsquo","rsquor"],t:["rthree","rtimes","rtri","rtrie","rtrif","rtriltri"],u:["ruledelayed","ruluhar"],x:["rx"]},s:{a:["sacute"],b:["sbquo"],c:["sc","scap","scaron","sccue","sce","scedil","scirc","scnap","scne","scnsim","scpolint","scsim","scy"],d:["sdot","sdotb","sdote"],e:["searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext"],f:["sfr","sfrown"],h:["sharp","shchcy","shcy","shortdownarrow","shortleftarrow","shortmid","shortparallel","shortrightarrow","shortuparrow","shy"],i:["sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simge","siml","simle","simne","simplus","simrarr"],l:["slarr"],m:["smallcircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes"],o:["softcy","sol","solb","solbar","sopf"],p:["spades","spadesuit","spar"],q:["sqcap","sqcaps","sqcup","sqcups","sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squareintersection","squaresubset","squaresubsetequal","squaresuperset","squaresupersetequal","squareunion","squarf","squf"],r:["srarr"],s:["sscr","ssetmn","ssmile","sstarf"],t:["star","starf","straightepsilon","straightphi","strns"],u:["sub","subdot","sube","subedot","submult","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetequal","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeeds","succeedsequal","succeedsslantequal","succeedstilde","succeq","succnapprox","succneqq","succnsim","succsim","suchthat","sum","sung","sup","sup1","sup2","sup3","supdot","supdsub","supe","supedot","superset","supersetequal","suphsol","suphsub","suplarr","supmult","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup"],w:["swarhk","swarr","swarrow","swnwar"],z:["szlig"]},t:{a:["tab","target","tau"],b:["tbrk"],c:["tcaron","tcedil","tcy"],d:["tdot"],e:["telrec"],f:["tfr"],h:["there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thickspace","thinsp","thinspace","thkap","thksim","thorn"],i:["tilde","tildeequal","tildefullequal","tildetilde","times","timesb","timesbar","timesd","tint"],o:["toea","top","topbot","topcir","topf","topfork","tosa"],p:["tprime"],r:["trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","tripledot","triplus","trisb","tritime","trpezium"],s:["tscr","tscy","tshcy","tstrok"],w:["twixt","twoheadleftarrow","twoheadrightarrow"]},u:{a:["uacute","uarr","uarrocir"],b:["ubrcy","ubreve"],c:["ucirc","ucy"],d:["udarr","udblac","udhar"],f:["ufisht","ufr"],g:["ugrave"],h:["uhar","uharl","uharr","uhblk"],l:["ulcorn","ulcorner","ulcrop","ultri"],m:["umacr","uml"],n:["underbar","underbrace","underbracket","underparenthesis","union","unionplus"],o:["uogon","uopf"],p:["uparrow","uparrowbar","uparrowdownarrow","updownarrow","upequilibrium","upharpoonleft","upharpoonright","uplus","upperleftarrow","upperrightarrow","upsi","upsih","upsilon","uptee","upteearrow","upuparrows"],r:["urcorn","urcorner","urcrop","uring","urtri"],s:["uscr"],t:["utdot","utilde","utri","utrif"],u:["uuarr","uuml"],w:["uwangle"]},v:{a:["vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright"],b:["vbar","vbarv"],c:["vcy"],d:["vdash","vdashl"],e:["vee","veebar","veeeq","vellip","verbar","vert","verticalbar","verticalline","verticalseparator","verticaltilde","verythinspace"],f:["vfr"],l:["vltri"],n:["vnsub","vnsup"],o:["vopf"],p:["vprop"],r:["vrtri"],s:["vscr","vsubne","vsupne"],v:["vvdash"],z:["vzigzag"]},w:{c:["wcirc"],e:["wedbar","wedge","wedgeq","weierp"],f:["wfr"],o:["wopf"],p:["wp"],r:["wr","wreath"],s:["wscr"]},x:{c:["xcap","xcirc","xcup"],d:["xdtri"],f:["xfr"],h:["xharr"],i:["xi"],l:["xlarr"],m:["xmap"],n:["xnis"],o:["xodot","xopf","xoplus","xotime"],r:["xrarr"],s:["xscr","xsqcup"],u:["xuplus","xutri"],v:["xvee"],w:["xwedge"]},y:{a:["yacute","yacy"],c:["ycirc","ycy"],e:["yen"],f:["yfr"],i:["yicy"],o:["yopf"],s:["yscr"],u:["yucy","yuml"]},z:{a:["zacute"],c:["zcaron","zcy"],d:["zdot"],e:["zeetrf","zerowidthspace","zeta"],f:["zfr"],h:["zhcy"],i:["zigrarr"],o:["zopf"],s:["zscr"],w:["zwj","zwnj"]}},ta={ac:{addAmpIfSemiPresent:"edge only",addSemiIfAmpPresent:!1},acute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Alpha:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},alpha:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},amp:{addAmpIfSemiPresent:"edge only",addSemiIfAmpPresent:!0},And:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},and:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},ange:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},angle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},angst:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},ap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ape:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},approx:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Aring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},aring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},Ascr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ascr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Assign:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ast:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},atilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},Backslash:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},barwedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},becaus:{addAmpIfSemiPresent:!0,addSemiIfAmpPresent:"edge only"},Because:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},because:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bepsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Bernoullis:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Beta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},beta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},beth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},between:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},blank:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},block:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bottom:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bowtie:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},breve:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bull:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bullet:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bump:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Cap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},capand:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},caps:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},caret:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},caron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cedil:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Cedilla:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cent:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},check:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},checkmark:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Chi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},chi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cir:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},circ:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},clubs:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},clubsuit:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Colon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},colon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Colone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},colone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},comma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},commat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},comp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},complement:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},complexes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cong:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Congruent:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},conint:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},copf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},coprod:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},COPY:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},copy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Cross:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cross:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Cup:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cup:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cups:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Dagger:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dagger:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},daleth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},darr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dash:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},DD:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dd:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},deg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Del:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Delta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},delta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dharr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},diam:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Diamond:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},diamond:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},diams:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},die:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},digamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},disin:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},div:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},divide:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dollar:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Dot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dsol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dtri:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},easter:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ecir:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ecolon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ecy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},edot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ee:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},efr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},egrave:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},egs:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},el:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ell:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},els:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},empty:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ENG:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},eng:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},epsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Epsilon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},epsilon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Equal:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equest:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Equilibrium:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equiv:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},escr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},esim:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Eta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ETH:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},euro:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},excl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},exist:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Exists:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},expectation:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},female:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},flat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},fork:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},frown:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Gamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gcy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gel:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},geq:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ges:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gesl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gla:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},grave:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},GT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},half:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Hat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},hearts:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},hopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},hyphen:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ic:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},icy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iff:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ii:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},image:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},imped:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},in:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},int:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},integers:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},iocy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iogon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iota:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},isin:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},it:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Kappa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},kappa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},kopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Lambda:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lambda:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},late:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lates:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},le:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},leg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},leq:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},les:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ll:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},lne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},lozenge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lsh:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},LT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ltimes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},male:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},malt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},map:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},marker:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},mid:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},minus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},models:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},mp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},mu:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},nang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},natural:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},naturals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ncy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ngt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ni:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nis:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nles:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nless:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nlt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Not:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},not:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},nsc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nsce:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nu:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},num:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ogt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ohm:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oline:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},olt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Omega:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},omega:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Omicron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},omicron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},opar:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},or:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},order:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oror:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},orv:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},osol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},par:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},para:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},parallel:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},part:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},phi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},phone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Pi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pitchfork:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},plus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pm:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},popf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},pound:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prime:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},primes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prod:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Product:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prop:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Proportion:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Proportional:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},psi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},quest:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},QUOT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},quot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},race:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},range:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ratio:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Re:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},real:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},reals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rect:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},REG:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},reg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rsh:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},scap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sce:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},scy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sdot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sect:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},semi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sharp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},shy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sigma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sigma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sim:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},spades:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},square:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Star:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},star:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sub:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sub:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sube:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sum:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sum:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tab:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},target:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tau:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tau:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},therefore:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Theta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},theta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},THORN:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},thorn:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},times:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tint:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},top:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tosa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},TRADE:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},trade:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},triangle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},trie:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ucy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},uml:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Union:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},uplus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Upsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},upsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},uring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},vee:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Vert:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},vert:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},wedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Wedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},wreath:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Xi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},xi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Ycirc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ycirc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ycy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},yen:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Zacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},zacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Zeta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},zeta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1}};function aa(e){if("string"!=typeof e||!e.length||!e.startsWith("&")||!e.endsWith(";"))throw new Error(`all-named-html-entities/decode(): [THROW_ID_01] Input must be an HTML entity with leading ampersand and trailing semicolon, but "${e}" was given`);const r=e.slice(1,e.length-1);return Kt[r]?Kt[r]:null}const na=31,ia=Array.isArray;var oa=function(e){function s(){return function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,s),i(this,a(s).apply(this,arguments))}var c,l,d;return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),r&&n(e,r)}(s,e),c=s,(l=[{key:"verify",value:function(e,t){var a=this;if(this.messages=[],this.str=e,this.config=t,!t)return this.messages;if("object"!==r(t))throw new Error("emlint/verify(): [THROW_ID_01] second input argument, config is not a plain object but ".concat(r(t),". It's equal to:\n").concat(JSON.stringify(t,null,4)));if(!Object.keys(t).length)return this.messages;if(!t.rules||"object"!==r(t.rules))throw new Error("emlint/verify(): [THROW_ID_02] config contains no rules! It was given as:\n".concat(JSON.stringify(t,null,4)));var n,i,s=(n=t.rules,i={},Object.keys(n).some((function(e){return["bad-character","bad-character*","bad-character-*"].includes(e)}))&&he.forEach((function(e){i[e]=n["bad-character"]})),Object.keys(n).some((function(e){return["tag","tag*","tag-*"].includes(e)}))&&ge.forEach((function(e){i[e]=n.tag})),Object.keys(n).includes("bad-html-entity")&&be.forEach((function(e){i[e]=n["bad-html-entity"]})),Object.keys(n).forEach((function(e){["tag","tag*","tag-*","bad-character","bad-character","bad-character*","bad-character-*","bad-html-entity"].includes(e)||(Object.keys(Rt).includes(e)?i[e]=M(n[e]):e.includes("*")&&Object.keys(Rt).forEach((function(r){Ie.isMatch(r,e)&&(i[r]=M(n[e]))})))})),i);return this.processedRulesConfig=s,Object.keys(s).filter((function(e){return!(be.includes(e)||e.startsWith("bad-named-html-entity-")||e.includes("*")&&Ie.isMatch(["bad-malformed-numeric-character-entity","encoded-html-entity-nbsp","encoded-numeric-html-entity-reference"],e))})).filter((function(e){return"number"==typeof s[e]?s[e]>0:Array.isArray(s[e])?s[e][0]>0:void 0})).forEach((function(e){var r;r=Array.isArray(s[e])&&s[e].length>1?Dt(e).apply(void 0,[a].concat(o(s[e].slice(1)))):Dt(e)(a),Object.keys(r).forEach((function(e){a.on(e,(function(){var t;(t=r)[e].apply(t,arguments)}))}))})),function(e,r,t,a){if(!se(e))throw void 0===e?new Error("codsen-tokenizer: [THROW_ID_01] the first input argument is completely missing! It should be given as string."):new Error(`codsen-tokenizer: [THROW_ID_02] the first input argument must be string! It was given as "${typeof e}", equal to:\n${JSON.stringify(e,null,4)}`);if(r&&"function"!=typeof r)throw new Error(`codsen-tokenizer: [THROW_ID_03] the second input argument, callback function, should be a function but it was given as type ${typeof r}, equal to ${JSON.stringify(r,null,4)}`);if(t&&"function"!=typeof t)throw new Error(`codsen-tokenizer: [THROW_ID_04] the second input argument, callback function, should be a function but it was given as type ${typeof t}, equal to ${JSON.stringify(t,null,4)}`);if(a&&!A(a))throw new Error(`codsen-tokenizer: [THROW_ID_05] the third input argument, options object, should be a plain object but it was given as type ${typeof a}, equal to ${JSON.stringify(a,null,4)}`);const n=Object.assign({},ue,a);if(n.reportProgressFunc&&"function"!=typeof n.reportProgressFunc)throw new TypeError(`codsen-tokenizer: [THROW_ID_06] opts.reportProgressFunc should be a function but it was given as :\n${JSON.stringify(n.reportProgressFunc,null,4)} (${typeof n.reportProgressFunc})`);let i,o=0;const s=e.length,c=Math.floor(s/2);let l,d=!1,u={};const m={type:null,start:null,end:null,tail:null,kind:null};function p(){u=Object.assign({},m)}p();const f=[];function h(e,r){if(!f.length)return!1;if("simple"===f[f.length-1].type)return e[r]===f[f.length-1].value;if("esp"===f[f.length-1].type){if(!pe.includes(e[r]))return!1;let t="";const a=e.length;for(let n=r;n<a&&pe.includes(e[n]);n++)t+=e[n];return f[f.length-1].value.split("").every(e=>t.includes(e))}}function g(e){r&&(r(M(e)),p())}function b(r,t){"text"!==r.type&&null!==r.start&&e[t-1]&&!e[t-1].trim().length&&(r.end=Y(e,t)+1,g(r),r.start=Y(e,t)+1,r.type="text"),null!==r.start&&(r.end=t,g(r))}for(let r=0;r<s;r++){if(n.reportProgressFunc&&(s>1e3&&s<2e3?r===c&&n.reportProgressFunc(Math.floor((n.reportProgressFuncTo-n.reportProgressFuncFrom)/2)):s>=2e3&&(i=n.reportProgressFuncFrom+Math.floor(r/s*(n.reportProgressFuncTo-n.reportProgressFuncFrom)))!==o&&(o=i,n.reportProgressFunc(i))),Number.isInteger(l)&&r>=l&&(l=!1),u.end&&u.end===r&&("style"===u.kind&&(d=!0),b(u,r)),!l&&["html"].includes(u.type)&&['"',"'"].includes(e[r])&&(h(e,r)?f.pop():f.length&&"esp"===f[f.length-1].type||f.push({type:"simple",value:e[r]})),!l)if(f.length||"<"!==e[r]||!ie(e,r)&&!G(e,r,["!--","!doctype","?xml"],{i:!0})||"esp"===u.type&&!u.tail.includes(e[r]))if("html"===u.type&&"comment"===u.kind||!pe.includes(e[r])||!e[r+1]||!pe.includes(e[r+1])||"-"===e[r]&&"-"===e[r+1])null!==u.start&&u.end!==r||(d?e[r].trim().length?(u.start=r,u.type="css"):(u.start=r,u.type="text",u.end=Z(e,r)||e.length,g(u),Z(e,r)&&(u.start=Z(e,r),u.type="css",l=Z(e,r))):(u.start=r,u.type="text"));else{let t="";for(let a=r;a<s&&pe.includes(e[a]);a++)t+=e[a];["html","esp"].includes(u.type)?"html"===u.type&&(h(e,r)?f.pop():f.push({type:"esp",value:de(t)})):(b(u,r),u.start=r,u.type="esp",l=r+t.length,u.tail=de(t))}else u.type&&b(u,r),u.start=r,u.type="html",u=Object.assign({tagNameStartAt:null,tagNameEndAt:null,tagName:null,recognised:null,closing:!1,void:!1,pureHTML:!0,esp:[]},u),G(e,r,"!--")?u.kind="comment":G(e,r,"!doctype",{i:!0})?u.kind="doctype":G(e,r,"?xml",{i:!0})?u.kind="xml":G(e,r,"style",{i:!0,trimCharsBeforeMatching:"/"})&&(u.kind="style");if(!l)if("html"!==u.type||f.length||">"!==e[r]){if("esp"===u.type&&null===u.end&&se(u.tail)&&u.tail.includes(e[r])){let t="";for(let a=r;a<s&&pe.includes(e[a]);a++)t+=e[a];u.end=r+t.length,l=r+t.length}}else u.end=r+1;"html"===u.type&&ce(u.tagNameStartAt)&&!ce(u.tagNameEndAt)&&(le(e[r])||(u.tagNameEndAt=r,u.tagName=e.slice(u.tagNameStartAt,r),me.includes(u.tagName)&&(u.void=!0),u.recognised=oe.includes(u.tagName))),"html"===u.type&&!ce(u.tagNameStartAt)&&ce(u.start)&&u.start<r&&("/"===e[r]?u.closing=!0:le(e[r])&&(u.tagNameStartAt=r,u.closing||(u.closing=!1))),t&&(y={type:u.type,chr:e[r],i:r},t&&t(y)),e[r+1]||null===u.start||(u.end=r+1,g(u))}var y}(e,(function(e){a.emit(e.type,e)}),(function(e){a.emit("character",e)})),Object.keys(t.rules).some((function(e){return"bad-html-entity"===e||e.startsWith("bad-named-html-entity")||Ie.isMatch(["bad-malformed-numeric-character-entity","encoded-html-entity-nbsp","encoded-numeric-html-entity-reference"],e)}))&&function(e,r){function t(e,r,t){let a=0,n=0,o=0,c=0,l=0,d="",u="";for(let m=r;m<t;m++)e[m].trim().length?u+=e[m]:l++,i(e[m])?a++:s(e[m])?(n++,d+=String(e[m])):"#"===e[m]?c++:o++;let m=!1;return!a&&n>o?m="deci":(n||a)&&("#"===u[0]&&"x"===u[1].toLowerCase()&&(s(u[2])||i(u[2]))||"x"===u[0].toLowerCase()&&n&&!o)&&(m="hexi"),{probablyNumeric:m,lettersCount:a,numbersCount:n,numbersValue:d,hashesCount:c,othersCount:o,charTrimmed:u,whitespaceCount:l}}function a(e){return!("string"==typeof e&&1===e.length&&e.toUpperCase()!==e.toLowerCase())}function n(e){return"string"==typeof e}function i(e){return"string"==typeof e&&(e.charCodeAt(0)>96&&e.charCodeAt(0)<123||e.charCodeAt(0)>64&&e.charCodeAt(0)<91)}function o(e){return n(e)&&1===e.length&&(e.charCodeAt(0)>96&&e.charCodeAt(0)<123||e.charCodeAt(0)>47&&e.charCodeAt(0)<58||e.charCodeAt(0)>64&&e.charCodeAt(0)<91||35===e.charCodeAt(0))}function s(e){return n(e)&&e.charCodeAt(0)>47&&e.charCodeAt(0)<58}function c(e,r,t){for(let a=r;a<t;a++)if(e[a].trim().length&&!"nbsp".includes(e[a].toLowerCase()))return!1;return!0}function l(e){return ia(e)&&e.length?1===e.length?e[0]:e.reduce((e,r)=>r.tempEnt.length>e.tempEnt.length?r:e):e}function d(r){let t;return ia(r)&&r.length&&((t=Array.from(r)).length>1&&t.some(r=>";"===e[Z(e,r.tempRes.rightmostChar)])&&t.some(r=>";"!==e[Z(e,r.tempRes.rightmostChar)])&&(t=t.filter(r=>";"===e[Z(e,r.tempRes.rightmostChar)])),!t.every(e=>!(e&&e.tempRes&&e.tempRes.gaps&&ia(e.tempRes.gaps)&&e.tempRes.gaps.length))&&!t.every(e=>e&&e.tempRes&&e.tempRes.gaps&&ia(e.tempRes.gaps)&&e.tempRes.gaps.length))?l(t.filter(e=>!e.tempRes.gaps||!ia(e.tempRes.gaps)||!e.tempRes.gaps.length)):l(r)}if("string"!=typeof e)throw new Error(`string-fix-broken-named-entities: [THROW_ID_01] the first input argument must be string! It was given as:\n${JSON.stringify(e,null,4)} (${typeof e}-type)`);const u={decode:!1,cb:({rangeFrom:e,rangeTo:r,rangeValEncoded:t,rangeValDecoded:a})=>a||t?[e,r,m.decode?a:t]:[e,r],progressFn:null};let m;if(null!=r){if(!A(r))throw new Error(`string-fix-broken-named-entities: [THROW_ID_02] the second input argument must be a plain object! I was given as:\n${JSON.stringify(r,null,4)} (${typeof r}-type)`);m=Object.assign({},u,r)}else m=u;if(m.cb&&"function"!=typeof m.cb)throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_03] opts.cb must be a function (or falsey)! Currently it's: ${typeof m.cb}, equal to: ${JSON.stringify(m.cb,null,4)}`);if(m.entityCatcherCb&&"function"!=typeof m.entityCatcherCb)throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_03] opts.entityCatcherCb must be a function (or falsey)! Currently it's: ${typeof m.entityCatcherCb}, equal to: ${JSON.stringify(m.entityCatcherCb,null,4)}`);if(m.progressFn&&"function"!=typeof m.progressFn)throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_04] opts.progressFn must be a function (or falsey)! Currently it's: ${typeof m.progressFn}, equal to: ${JSON.stringify(m.progressFn,null,4)}`);let p=!1;const f={nameStartsAt:null,ampersandNecessary:null,patience:1,matchedN:null,matchedB:null,matchedS:null,matchedP:null,matchedSemicol:null};let h=M(f);const g=()=>{h=M(f)},b=[];let y,S,v,I,w,q;const P=e.length+1;let x=0,E=null,T=null,C=null;const k=["&nspar;","&prnsim;","&subplus;"];e:for(let r=0;r<P;r++){if(m.progressFn&&(w=Math.floor(x/P*100))!==q&&(q=w,m.progressFn(w)),E){if(!(!0!==E&&r>=E)){x++;continue}E=null}if(v=(null!==h.matchedN?1:0)+(null!==h.matchedB?1:0)+(null!==h.matchedS?1:0)+(null!==h.matchedP?1:0),I=[h.matchedN,h.matchedB,h.matchedS,h.matchedP].filter(e=>null!==e),y=Math.min(...I),S=Math.max(...I),!(null!==h.nameStartsAt&&v>2&&(null!==h.matchedSemicol||!h.ampersandNecessary||a(e[h.nameStartsAt-1])&&a(e[r])||(a(e[h.nameStartsAt-1])||a(e[r]))&&S-y<=4||null!==h.matchedN&&null!==h.matchedB&&null!==h.matchedS&&null!==h.matchedP&&h.matchedN+1===h.matchedB&&h.matchedB+1===h.matchedS&&h.matchedS+1===h.matchedP)&&(!e[r]||null!==h.matchedN&&null!==h.matchedB&&null!==h.matchedS&&null!==h.matchedP&&e[r]!==e[r-1]||"n"!==e[r].toLowerCase()&&"b"!==e[r].toLowerCase()&&"s"!==e[r].toLowerCase()&&"p"!==e[r].toLowerCase()||";"===e[Y(e,r)])&&";"!==e[r])||void 0!==e[r+1]&&";"===e[Z(e,r)]||null===h.matchedB&&("n"===e[y].toLowerCase()&&e[Y(e,y)]&&"e"===e[Y(e,y)].toLowerCase()||null!==h.matchedN&&X(e,h.matchedN,{i:!0},"s","u","p")||"c"===e[Z(e,h.matchedN)].toLowerCase())||null!==h.matchedB&&!c(e,y,S+1)&&e[y]&&e[S]&&"n"===e[y].toLowerCase()&&"b"===e[S].toLowerCase())if(e[r]&&";"===e[r-1]&&!Q(e,r-1,"a","m","p")&&";"!==e[r]&&v>0)g(),x++;else{if(null!==T&&(!e[r]||e[r].trim().length&&!o(e[r]))){if(r>T+1&&"&nbsp;"!==e.slice(T-1,r+1)){const a=e.slice(T,r),i=Y(e,T),o=i?Y(e,i):"";if("&"!==e[i]||e[r]&&";"===e[r]){if("&"!==e[i]&&"&"!==e[o]&&";"===e[r]){const t=Y(e,r),a=t?Y(e,t):null;if(null!==a&&Object.prototype.hasOwnProperty.call(ea,e[t])&&Object.prototype.hasOwnProperty.call(ea[e[t]],e[a])){let i,o,s=ea[e[t]][e[a]].reduce((t,a)=>{const n=Q(e,r,...a.split(""));return!n||"nbsp"===a||"block"===a&&":"===e[Y(e,T)]?t:t.concat([{tempEnt:a,tempRes:n}])},[]);if((s=d(s))&&({tempEnt:i,tempRes:o}=s),i&&(!Object.keys(ta).includes(i)||!0===ta[i].addAmpIfSemiPresent||ta[i].addAmpIfSemiPresent&&(!o.leftmostChar||n(e[o.leftmostChar-1])&&!e[o.leftmostChar-1].trim().length))){const e=aa(`&${i};`);b.push({ruleName:`bad-named-html-entity-malformed-${i}`,entityName:i,rangeFrom:o.leftmostChar,rangeTo:r+1,rangeValEncoded:`&${i};`,rangeValDecoded:e})}}else null!==C&&(b.push({ruleName:"bad-malformed-numeric-character-entity",entityName:null,rangeFrom:C,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null}),C=null)}else if("&"===e[i]&&";"===e[r]){if(e.slice(i+1,r).trim().length>1){const o=t(e,i+1,r);if(o.probablyNumeric){if(o.probablyNumeric&&"#"===o.charTrimmed[0]&&!o.whitespaceCount&&(!o.lettersCount&&o.numbersCount>0&&!o.othersCount||(o.numbersCount||o.lettersCount)&&"x"===o.charTrimmed[1]&&!o.othersCount)){const e=String.fromCharCode(parseInt(o.charTrimmed.slice("deci"===o.probablyNumeric?1:2),"deci"===o.probablyNumeric?10:16));"deci"===o.probablyNumeric&&parseInt(o.numbersValue,10)>918015?b.push({ruleName:"bad-malformed-numeric-character-entity",entityName:null,rangeFrom:i,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null}):m.decode&&b.push({ruleName:"encoded-numeric-html-entity-reference",entityName:o.charTrimmed,rangeFrom:i,rangeTo:r+1,rangeValEncoded:`&${o.charTrimmed};`,rangeValDecoded:e})}else b.push({ruleName:"bad-malformed-numeric-character-entity",entityName:null,rangeFrom:i,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null});m.entityCatcherCb&&m.entityCatcherCb(i,r+1)}else{const t=T,s=T?Z(e,T):null;let c;if(Object.prototype.hasOwnProperty.call(Qt,o.charTrimmed.toLowerCase())){c=o.charTrimmed;const e=aa(`&${Qt[o.charTrimmed.toLowerCase()]};`);b.push({ruleName:`bad-named-html-entity-malformed-${Qt[o.charTrimmed.toLowerCase()]}`,entityName:Qt[o.charTrimmed.toLowerCase()],rangeFrom:i,rangeTo:r+1,rangeValEncoded:`&${Qt[o.charTrimmed.toLowerCase()]};`,rangeValDecoded:e})}else if(Object.prototype.hasOwnProperty.call(ra,e[t].toLowerCase())&&Object.prototype.hasOwnProperty.call(ra[e[t].toLowerCase()],e[s].toLowerCase())){let l,u,p=ra[e[t].toLowerCase()][e[s].toLowerCase()].reduce((r,t)=>{const a=X(e,T-1,{i:!0},...t.split(""));return a&&"nbsp"!==t?r.concat([{tempEnt:t,tempRes:a}]):r},[]);if((p=d(p))&&({tempEnt:c,tempRes:l}=p),c){let t=!1;const s=l.leftmostChar,d=Z(e,s);if(Object.keys(ta).includes(a)&&n(e[s-1])&&!e[s-1].trim().length&&!0!==ta[a].addAmpIfSemiPresent){T=null;continue}if(Object.prototype.hasOwnProperty.call(Xt,e[s])&&Object.prototype.hasOwnProperty.call(Xt[e[s]],e[d])&&Xt[e[s]][e[d]].includes(o.charTrimmed))u=o.charTrimmed,r-i-1===c.length?m.decode&&(t="encoded-html-entity"):t="bad-named-html-entity-malformed";else{t="bad-named-html-entity-malformed";const e=Object.keys(Kt).filter(e=>o.charTrimmed.toLowerCase().startsWith(e.toLowerCase()));if(1===e.length)u=e[0];else{const a=e.reduce((e,r)=>e.length&&r.length!==e[0].length?r.length>e[0].length?[r]:e:e.concat([r]),[]);if(1===a.length)u=a[0];else{const e=a.map(e=>{let r=0;for(let t=0,a=e.length;t<a;t++)e[t]!==o.charTrimmed[t]&&r++;return r});e.filter(r=>r===Math.min(...e)).length>1&&(b.push({ruleName:"bad-named-html-entity-unrecognised",entityName:null,rangeFrom:i,rangeTo:l.rightmostChar+1===r?r+1:l.rightmostChar+1,rangeValEncoded:null,rangeValDecoded:null}),t=!1),u=a[e.indexOf(Math.min(...e))]}}}let p=l.rightmostChar+1===r?r+1:l.rightmostChar+1;if(t){const r=aa(`&${u};`);e[p]&&";"!==e[p]&&!e[p].trim().length&&";"===e[Z(e,p)]&&(p=Z(e,p)+1),b.push({ruleName:`${t}-${u}`,entityName:u,rangeFrom:i,rangeTo:p,rangeValEncoded:`&${u};`,rangeValDecoded:r})}m.entityCatcherCb&&m.entityCatcherCb(i,p)}}c||"&nbsp;"!==o.charTrimmed.toLowerCase()&&(b.push({ruleName:"bad-named-html-entity-unrecognised",entityName:null,rangeFrom:i,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null}),m.entityCatcherCb&&m.entityCatcherCb(i,r+1))}}}else if("&"===e[o]&&";"===e[r]&&r-o<na){const a=t(e,o+1,r);b.push({ruleName:`${a.probablyNumeric?"bad-malformed-numeric-character-entity":"bad-named-html-entity-unrecognised"}`,entityName:null,rangeFrom:o,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null})}}else{const r=T,t=T?Z(e,T):null;if(Object.prototype.hasOwnProperty.call(Xt,e[r])&&Object.prototype.hasOwnProperty.call(Xt[e[r]],e[t])){let a,n,o=Xt[e[r]][e[t]].reduce((r,t)=>{const a=X(e,T-1,...t.split(""));return a&&"nbsp"!==t?r.concat([{tempEnt:t,tempRes:a}]):r},[]);if((o=d(o))&&({tempEnt:a,tempRes:n}=o),a&&(!Object.keys(ta).includes(a)||!e[n.rightmostChar+1]||["&"].includes(e[n.rightmostChar+1])||(!0===ta[a].addSemiIfAmpPresent||ta[a].addSemiIfAmpPresent&&(!e[n.rightmostChar+1]||!e[n.rightmostChar+1].trim().length))&&"&"===e[n.leftmostChar-1])){const e=aa(`&${a};`);b.push({ruleName:`bad-named-html-entity-malformed-${a}`,entityName:a,rangeFrom:i,rangeTo:n.rightmostChar+1,rangeValEncoded:`&${a};`,rangeValDecoded:e})}}}}T=null}if(null===T&&o(e[r])&&e[r+1]&&(T=r),"a"===e[r]){const t=X(e,r,"m","p",";");if(t){let a=t.rightmostChar+1;const n=X(e,t.rightmostChar,"a","m","p",";");if(n){let r;a=n.rightmostChar+1;do{(r=X(e,a-1,"a","m","p",";"))&&(a=r.rightmostChar+1)}while(r)}const i=Z(e,a-1),o=i?Z(e,i):null;let s;if(o&&Object.prototype.hasOwnProperty.call(Xt,e[i])&&Object.prototype.hasOwnProperty.call(Xt[e[i]],e[o])&&Xt[e[i]][e[o]].some(r=>{if(X(e,a-1,...r.slice("")))return s=r,!0})){E=i+s.length+1;const t=Y(e,r);if("&"===e[t])b.push({ruleName:"bad-named-html-entity-multiple-encoding",entityName:s,rangeFrom:t,rangeTo:E,rangeValEncoded:`&${s};`,rangeValDecoded:aa(`&${s};`)});else if(t){const t=r,a="";e[r-1],m.cb&&b.push({ruleName:"bad-named-html-entity-multiple-encoding",entityName:s,rangeFrom:t,rangeTo:E,rangeValEncoded:`${a}&${s};`,rangeValDecoded:`${a}${aa(`&${s};`)}`})}}}}if("&"===e[r]&&(h.nameStartsAt&&h.nameStartsAt<r&&(h.matchedN||h.matchedB||h.matchedS||h.matchedP)&&g(),h.nameStartsAt=r,h.ampersandNecessary=!1),e[r]&&"n"===e[r].toLowerCase()){if(e[r-1]&&"i"===e[r-1].toLowerCase()&&e[r+1]&&"s"===e[r+1].toLowerCase()){g(),x++;continue e}null===h.matchedN&&(h.matchedN=r),null===h.nameStartsAt&&(h.nameStartsAt=r,null!==h.ampersandNecessary||p?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0)}if(e[r]&&"b"===e[r].toLowerCase())if(null!==h.nameStartsAt)null===h.matchedB&&(h.matchedB=r);else{if(!h.patience){g(),x++;continue e}h.patience--,h.nameStartsAt=r,h.matchedB=r,null!==h.ampersandNecessary||p?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0}if(e[r]&&"s"===e[r].toLowerCase())if(null!==h.nameStartsAt)null===h.matchedS&&(h.matchedS=r);else{if(!h.patience){g(),x++;continue e}h.patience--,h.nameStartsAt=r,h.matchedS=r,null!==h.ampersandNecessary||p?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0}if(e[r]&&"p"===e[r].toLowerCase())if(Q(e,r,"t","h","i","n","s"))g();else if(null!==h.nameStartsAt)null===h.matchedP&&(h.matchedP=r);else{if(!h.patience){g(),x++;continue e}h.patience--,h.nameStartsAt=r,h.matchedP=r,null!==h.ampersandNecessary||p?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0}if(";"===e[r]&&null!==h.nameStartsAt&&(h.matchedSemicol=r,(!h.matchedN||h.matchedB||h.matchedS||h.matchedP)&&(h.matchedN||!h.matchedB||h.matchedS||h.matchedP)&&(h.matchedN||h.matchedB||!h.matchedS||h.matchedP)&&(h.matchedN||h.matchedB||h.matchedS||!h.matchedP)||g()),"#"!==e[r]||!Z(e,r)||"x"!==e[Z(e,r)].toLowerCase()||e[r-1]&&Y(e,r)&&"&"===e[Y(e,r)]||s(e[Z(e,Z(e,r))])&&(C=r),p&&(p=!1,h.nameStartsAt&&(h.matchedN||h.matchedB||h.matchedS||h.matchedP)&&(h.ampersandNecessary=!1)),null!==h.nameStartsAt&&r>h.nameStartsAt&&e[r]&&"n"!==e[r].toLowerCase()&&"b"!==e[r].toLowerCase()&&"s"!==e[r].toLowerCase()&&"p"!==e[r].toLowerCase()&&"&"!==e[r]&&";"!==e[r]&&" "!==e[r]){if(!h.patience){g(),x++;continue e}h.patience=h.patience-1}x++}else{const t=re(e,h.nameStartsAt,"&?","a","m","p",";?"),a=t||h.nameStartsAt;m.entityCatcherCb&&m.entityCatcherCb(a,r),k.some(r=>e.slice(a).startsWith(r))||"&nbsp;"===e.slice(a,r)?m.decode&&b.push({ruleName:"encoded-html-entity-nbsp",entityName:"nbsp",rangeFrom:a,rangeTo:r,rangeValEncoded:"&nbsp;",rangeValDecoded:" "}):b.push({ruleName:"bad-named-html-entity-malformed-nbsp",entityName:"nbsp",rangeFrom:a,rangeTo:r,rangeValEncoded:"&nbsp;",rangeValDecoded:" "}),g(),x++,"&"===e[r]&&"&"!==e[r+1]&&(h.nameStartsAt=r,h.ampersandNecessary=!1)}}b.length&&b.filter((e,r)=>b.every((t,a)=>r===a||!(e.rangeFrom>=t.rangeFrom&&e.rangeTo<t.rangeTo))).filter((e,r,t)=>"bad-named-html-entity-unrecognised"!==e.ruleName||!t.some((t,a)=>r!==a&&t.rangeFrom<=e.rangeFrom&&t.rangeTo===e.rangeTo)).map(m.cb)}(e,{cb:function(e){var r,n;if(Object.keys(t.rules).includes("bad-html-entity")?"bad-named-html-entity-unrecognised"===e.ruleName?n=1:Array.isArray(t.rules["bad-html-entity"])?n=t.rules["bad-html-entity"][0]:Number.isInteger(t.rules["bad-html-entity"])&&(n=t.rules["bad-html-entity"]):Object.keys(t.rules).some((function(t){if(Ie.isMatch(e.ruleName,t))return r=t,!0}))&&("bad-named-html-entity-unrecognised"===e.ruleName&&void 0===t.rules["bad-named-html-entity-unrecognised"]?n=1:Array.isArray(t.rules[r])?n=t.rules[r][0]:Number.isInteger(t.rules[r])&&(n=t.rules[r])),Number.isInteger(n)){var i;i="bad-named-html-entity-malformed-nbsp"===e.ruleName?"Malformed NBSP entity.":"bad-named-html-entity-unrecognised"===e.ruleName?"Unrecognised named entity.":"bad-named-html-entity-multiple-encoding"===e.ruleName?"HTML entity encoding over and over.":"bad-malformed-numeric-character-entity"===e.ruleName?"Malformed numeric entity.":"Malformed ".concat(e.entityName?e.entityName:"named"," entity.");var o=[[e.rangeFrom,e.rangeTo,e.rangeValEncoded?e.rangeValEncoded:""]];"bad-named-html-entity-unrecognised"===e.ruleName&&(o=[]),a.report({severity:n,ruleId:e.ruleName,message:i,idxFrom:e.rangeFrom,idxTo:e.rangeTo,fix:{ranges:o}})}}}),this.messages}},{key:"report",value:function(e){var r=Zt(this.str,e.idxFrom),t=r.line,a=r.col,n=e.severity;Number.isInteger(e.severity)||"number"!=typeof this.processedRulesConfig[e.ruleId]?Number.isInteger(e.severity)||(n=this.processedRulesConfig[e.ruleId][0]):n=this.processedRulesConfig[e.ruleId],this.messages.push(Object.assign({},{line:t,column:a,severity:n},e))}}])&&t(c.prototype,l),d&&t(c,d),s}(Bt);e.Linter=oa,e.version="2.2.0",Object.defineProperty(e,"__esModule",{value:!0})}));
