/**
 * emlint
 * Non-parsing, email template-oriented linter
 * Version: 1.5.6
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/emlint
 */

!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e=e||self).emlint={})}(this,function(e){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function t(e){return function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var a=["async","autofocus","autoplay","checked","compact","contenteditable","controls","default","defer","disabled","formNoValidate","frameborder","hidden","ismap","itemscope","loop","multiple","muted","nohref","nomodule","noresize","noshade","novalidate","nowrap","open","readonly","required","reversed","scoped","scrolling","seamless","selected","typemustmatch"],n="[object Object]";var i,o,s=Function.prototype,l=Object.prototype,c=s.toString,d=l.hasOwnProperty,p=c.call(Object),u=l.toString,m=(i=Object.getPrototypeOf,o=Object,function(e){return i(o(e))});var f=function(e){if(!function(e){return!!e&&"object"==typeof e}(e)||u.call(e)!=n||function(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}(e))return!1;var r=m(e);if(null===r)return!0;var t=d.call(r,"constructor")&&r.constructor;return"function"==typeof t&&t instanceof t&&c.call(t)==p},g="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function h(e,r){return e(r={exports:{}},r.exports),r.exports}var b=h(function(e,r){var t=200,a="__lodash_hash_undefined__",n=9007199254740991,i="[object Arguments]",o="[object Boolean]",s="[object Date]",l="[object Function]",c="[object GeneratorFunction]",d="[object Map]",p="[object Number]",u="[object Object]",m="[object RegExp]",f="[object Set]",h="[object String]",b="[object Symbol]",w="[object ArrayBuffer]",y="[object DataView]",A="[object Float32Array]",S="[object Float64Array]",v="[object Int8Array]",q="[object Int16Array]",I="[object Int32Array]",P="[object Uint8Array]",x="[object Uint8ClampedArray]",k="[object Uint16Array]",E="[object Uint32Array]",L=/\w*$/,T=/^\[object .+?Constructor\]$/,C=/^(?:0|[1-9]\d*)$/,N={};N[i]=N["[object Array]"]=N[w]=N[y]=N[o]=N[s]=N[A]=N[S]=N[v]=N[q]=N[I]=N[d]=N[p]=N[u]=N[m]=N[f]=N[h]=N[b]=N[P]=N[x]=N[k]=N[E]=!0,N["[object Error]"]=N[l]=N["[object WeakMap]"]=!1;var D="object"==typeof g&&g&&g.Object===Object&&g,R="object"==typeof self&&self&&self.Object===Object&&self,j=D||R||Function("return this")(),_=r&&!r.nodeType&&r,O=_&&e&&!e.nodeType&&e,V=O&&O.exports===_;function F(e,r){return e.set(r[0],r[1]),e}function U(e,r){return e.add(r),e}function B(e,r,t,a){var n=-1,i=e?e.length:0;for(a&&i&&(t=e[++n]);++n<i;)t=r(t,e[n],n,e);return t}function H(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}function z(e){var r=-1,t=Array(e.size);return e.forEach(function(e,a){t[++r]=[a,e]}),t}function $(e,r){return function(t){return e(r(t))}}function G(e){var r=-1,t=Array(e.size);return e.forEach(function(e){t[++r]=e}),t}var M,Q=Array.prototype,J=Function.prototype,W=Object.prototype,K=j["__core-js_shared__"],Z=(M=/[^.]+$/.exec(K&&K.keys&&K.keys.IE_PROTO||""))?"Symbol(src)_1."+M:"",Y=J.toString,X=W.hasOwnProperty,ee=W.toString,re=RegExp("^"+Y.call(X).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),te=V?j.Buffer:void 0,ae=j.Symbol,ne=j.Uint8Array,ie=$(Object.getPrototypeOf,Object),oe=Object.create,se=W.propertyIsEnumerable,le=Q.splice,ce=Object.getOwnPropertySymbols,de=te?te.isBuffer:void 0,pe=$(Object.keys,Object),ue=Oe(j,"DataView"),me=Oe(j,"Map"),fe=Oe(j,"Promise"),ge=Oe(j,"Set"),he=Oe(j,"WeakMap"),be=Oe(Object,"create"),we=He(ue),ye=He(me),Ae=He(fe),Se=He(ge),ve=He(he),qe=ae?ae.prototype:void 0,Ie=qe?qe.valueOf:void 0;function Pe(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function xe(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function ke(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function Ee(e){this.__data__=new xe(e)}function Le(e,r){var t=$e(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Ge(e)}(e)&&X.call(e,"callee")&&(!se.call(e,"callee")||ee.call(e)==i)}(e)?function(e,r){for(var t=-1,a=Array(e);++t<e;)a[t]=r(t);return a}(e.length,String):[],a=t.length,n=!!a;for(var o in e)!r&&!X.call(e,o)||n&&("length"==o||Ue(o,a))||t.push(o);return t}function Te(e,r,t){var a=e[r];X.call(e,r)&&ze(a,t)&&(void 0!==t||r in e)||(e[r]=t)}function Ce(e,r){for(var t=e.length;t--;)if(ze(e[t][0],r))return t;return-1}function Ne(e,r,t,a,n,g,T){var C;if(a&&(C=g?a(e,n,g,T):a(e)),void 0!==C)return C;if(!Je(e))return e;var D=$e(e);if(D){if(C=function(e){var r=e.length,t=e.constructor(r);r&&"string"==typeof e[0]&&X.call(e,"index")&&(t.index=e.index,t.input=e.input);return t}(e),!r)return function(e,r){var t=-1,a=e.length;r||(r=Array(a));for(;++t<a;)r[t]=e[t];return r}(e,C)}else{var R=Fe(e),j=R==l||R==c;if(Me(e))return function(e,r){if(r)return e.slice();var t=new e.constructor(e.length);return e.copy(t),t}(e,r);if(R==u||R==i||j&&!g){if(H(e))return g?e:{};if(C=function(e){return"function"!=typeof e.constructor||Be(e)?{}:(r=ie(e),Je(r)?oe(r):{});var r}(j?{}:e),!r)return function(e,r){return je(e,Ve(e),r)}(e,function(e,r){return e&&je(r,We(r),e)}(C,e))}else{if(!N[R])return g?e:{};C=function(e,r,t,a){var n=e.constructor;switch(r){case w:return Re(e);case o:case s:return new n(+e);case y:return function(e,r){var t=r?Re(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.byteLength)}(e,a);case A:case S:case v:case q:case I:case P:case x:case k:case E:return function(e,r){var t=r?Re(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.length)}(e,a);case d:return function(e,r,t){return B(r?t(z(e),!0):z(e),F,new e.constructor)}(e,a,t);case p:case h:return new n(e);case m:return(c=new(l=e).constructor(l.source,L.exec(l))).lastIndex=l.lastIndex,c;case f:return function(e,r,t){return B(r?t(G(e),!0):G(e),U,new e.constructor)}(e,a,t);case b:return i=e,Ie?Object(Ie.call(i)):{}}var i;var l,c}(e,R,Ne,r)}}T||(T=new Ee);var _=T.get(e);if(_)return _;if(T.set(e,C),!D)var O=t?function(e){return function(e,r,t){var a=r(e);return $e(e)?a:function(e,r){for(var t=-1,a=r.length,n=e.length;++t<a;)e[n+t]=r[t];return e}(a,t(e))}(e,We,Ve)}(e):We(e);return function(e,r){for(var t=-1,a=e?e.length:0;++t<a&&!1!==r(e[t],t,e););}(O||e,function(n,i){O&&(n=e[i=n]),Te(C,i,Ne(n,r,t,a,i,e,T))}),C}function De(e){return!(!Je(e)||function(e){return!!Z&&Z in e}(e))&&(Qe(e)||H(e)?re:T).test(He(e))}function Re(e){var r=new e.constructor(e.byteLength);return new ne(r).set(new ne(e)),r}function je(e,r,t,a){t||(t={});for(var n=-1,i=r.length;++n<i;){var o=r[n],s=a?a(t[o],e[o],o,t,e):void 0;Te(t,o,void 0===s?e[o]:s)}return t}function _e(e,r){var t,a,n=e.__data__;return("string"==(a=typeof(t=r))||"number"==a||"symbol"==a||"boolean"==a?"__proto__"!==t:null===t)?n["string"==typeof r?"string":"hash"]:n.map}function Oe(e,r){var t=function(e,r){return null==e?void 0:e[r]}(e,r);return De(t)?t:void 0}Pe.prototype.clear=function(){this.__data__=be?be(null):{}},Pe.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Pe.prototype.get=function(e){var r=this.__data__;if(be){var t=r[e];return t===a?void 0:t}return X.call(r,e)?r[e]:void 0},Pe.prototype.has=function(e){var r=this.__data__;return be?void 0!==r[e]:X.call(r,e)},Pe.prototype.set=function(e,r){return this.__data__[e]=be&&void 0===r?a:r,this},xe.prototype.clear=function(){this.__data__=[]},xe.prototype.delete=function(e){var r=this.__data__,t=Ce(r,e);return!(t<0||(t==r.length-1?r.pop():le.call(r,t,1),0))},xe.prototype.get=function(e){var r=this.__data__,t=Ce(r,e);return t<0?void 0:r[t][1]},xe.prototype.has=function(e){return Ce(this.__data__,e)>-1},xe.prototype.set=function(e,r){var t=this.__data__,a=Ce(t,e);return a<0?t.push([e,r]):t[a][1]=r,this},ke.prototype.clear=function(){this.__data__={hash:new Pe,map:new(me||xe),string:new Pe}},ke.prototype.delete=function(e){return _e(this,e).delete(e)},ke.prototype.get=function(e){return _e(this,e).get(e)},ke.prototype.has=function(e){return _e(this,e).has(e)},ke.prototype.set=function(e,r){return _e(this,e).set(e,r),this},Ee.prototype.clear=function(){this.__data__=new xe},Ee.prototype.delete=function(e){return this.__data__.delete(e)},Ee.prototype.get=function(e){return this.__data__.get(e)},Ee.prototype.has=function(e){return this.__data__.has(e)},Ee.prototype.set=function(e,r){var a=this.__data__;if(a instanceof xe){var n=a.__data__;if(!me||n.length<t-1)return n.push([e,r]),this;a=this.__data__=new ke(n)}return a.set(e,r),this};var Ve=ce?$(ce,Object):function(){return[]},Fe=function(e){return ee.call(e)};function Ue(e,r){return!!(r=null==r?n:r)&&("number"==typeof e||C.test(e))&&e>-1&&e%1==0&&e<r}function Be(e){var r=e&&e.constructor;return e===("function"==typeof r&&r.prototype||W)}function He(e){if(null!=e){try{return Y.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function ze(e,r){return e===r||e!=e&&r!=r}(ue&&Fe(new ue(new ArrayBuffer(1)))!=y||me&&Fe(new me)!=d||fe&&"[object Promise]"!=Fe(fe.resolve())||ge&&Fe(new ge)!=f||he&&"[object WeakMap]"!=Fe(new he))&&(Fe=function(e){var r=ee.call(e),t=r==u?e.constructor:void 0,a=t?He(t):void 0;if(a)switch(a){case we:return y;case ye:return d;case Ae:return"[object Promise]";case Se:return f;case ve:return"[object WeakMap]"}return r});var $e=Array.isArray;function Ge(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=n}(e.length)&&!Qe(e)}var Me=de||function(){return!1};function Qe(e){var r=Je(e)?ee.call(e):"";return r==l||r==c}function Je(e){var r=typeof e;return!!e&&("object"==r||"function"==r)}function We(e){return Ge(e)?Le(e):function(e){if(!Be(e))return pe(e);var r=[];for(var t in Object(e))X.call(e,t)&&"constructor"!=t&&r.push(t);return r}(e)}e.exports=function(e){return Ne(e,!0,!0)}}),w={Aacute:"Á",aacute:"á",Abreve:"Ă",abreve:"ă",ac:"∾",acd:"∿",acE:"∾̳",Acirc:"Â",acirc:"â",acute:"´",Acy:"А",acy:"а",AElig:"Æ",aelig:"æ",af:"⁡",Afr:"𝔄",afr:"𝔞",Agrave:"À",agrave:"à",alefsym:"ℵ",aleph:"ℵ",Alpha:"Α",alpha:"α",Amacr:"Ā",amacr:"ā",amalg:"⨿",AMP:"&",amp:"&",And:"⩓",and:"∧",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",Aogon:"Ą",aogon:"ą",Aopf:"𝔸",aopf:"𝕒",ap:"≈",apacir:"⩯",apE:"⩰",ape:"≊",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",Aring:"Å",aring:"å",Ascr:"𝒜",ascr:"𝒶",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",Barwed:"⌆",barwed:"⌅",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",Bcy:"Б",bcy:"б",bdquo:"„",becaus:"∵",Because:"∵",because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",Beta:"Β",beta:"β",beth:"ℶ",between:"≬",Bfr:"𝔅",bfr:"𝔟",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bNot:"⫭",bnot:"⌐",Bopf:"𝔹",bopf:"𝕓",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxDL:"╗",boxDl:"╖",boxdL:"╕",boxdl:"┐",boxDR:"╔",boxDr:"╓",boxdR:"╒",boxdr:"┌",boxH:"═",boxh:"─",boxHD:"╦",boxHd:"╤",boxhD:"╥",boxhd:"┬",boxHU:"╩",boxHu:"╧",boxhU:"╨",boxhu:"┴",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxUL:"╝",boxUl:"╜",boxuL:"╛",boxul:"┘",boxUR:"╚",boxUr:"╙",boxuR:"╘",boxur:"└",boxV:"║",boxv:"│",boxVH:"╬",boxVh:"╫",boxvH:"╪",boxvh:"┼",boxVL:"╣",boxVl:"╢",boxvL:"╡",boxvl:"┤",boxVR:"╠",boxVr:"╟",boxvR:"╞",boxvr:"├",bprime:"‵",Breve:"˘",breve:"˘",brvbar:"¦",Bscr:"ℬ",bscr:"𝒷",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpE:"⪮",bumpe:"≏",Bumpeq:"≎",bumpeq:"≏",Cacute:"Ć",cacute:"ć",Cap:"⋒",cap:"∩",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",Ccaron:"Č",ccaron:"č",Ccedil:"Ç",ccedil:"ç",Ccirc:"Ĉ",ccirc:"ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",Cdot:"Ċ",cdot:"ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",CenterDot:"·",centerdot:"·",Cfr:"ℭ",cfr:"𝔠",CHcy:"Ч",chcy:"ч",check:"✓",checkmark:"✓",Chi:"Χ",chi:"χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cirE:"⧃",cire:"≗",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",Colon:"∷",colon:":",Colone:"⩴",colone:"≔",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",Conint:"∯",conint:"∮",ContourIntegral:"∮",Copf:"ℂ",copf:"𝕔",coprod:"∐",Coproduct:"∐",COPY:"©",copy:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",Cross:"⨯",cross:"✗",Cscr:"𝒞",cscr:"𝒸",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",Cup:"⋓",cup:"∪",cupbrcap:"⩈",CupCap:"≍",cupcap:"⩆",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",Dagger:"‡",dagger:"†",daleth:"ℸ",Darr:"↡",dArr:"⇓",darr:"↓",dash:"‐",Dashv:"⫤",dashv:"⊣",dbkarow:"⤏",dblac:"˝",Dcaron:"Ď",dcaron:"ď",Dcy:"Д",dcy:"д",DD:"ⅅ",dd:"ⅆ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",Delta:"Δ",delta:"δ",demptyv:"⦱",dfisht:"⥿",Dfr:"𝔇",dfr:"𝔡",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",Diamond:"⋄",diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",DJcy:"Ђ",djcy:"ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",Dopf:"𝔻",dopf:"𝕕",Dot:"¨",dot:"˙",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",DownArrow:"↓",Downarrow:"⇓",downarrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",Dscr:"𝒟",dscr:"𝒹",DScy:"Ѕ",dscy:"ѕ",dsol:"⧶",Dstrok:"Đ",dstrok:"đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",DZcy:"Џ",dzcy:"џ",dzigrarr:"⟿",Eacute:"É",eacute:"é",easter:"⩮",Ecaron:"Ě",ecaron:"ě",ecir:"≖",Ecirc:"Ê",ecirc:"ê",ecolon:"≕",Ecy:"Э",ecy:"э",eDDot:"⩷",Edot:"Ė",eDot:"≑",edot:"ė",ee:"ⅇ",efDot:"≒",Efr:"𝔈",efr:"𝔢",eg:"⪚",Egrave:"È",egrave:"è",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",Emacr:"Ē",emacr:"ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",ENG:"Ŋ",eng:"ŋ",ensp:" ",Eogon:"Ę",eogon:"ę",Eopf:"𝔼",eopf:"𝕖",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",Epsilon:"Ε",epsilon:"ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",Escr:"ℰ",escr:"ℯ",esdot:"≐",Esim:"⩳",esim:"≂",Eta:"Η",eta:"η",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",ExponentialE:"ⅇ",exponentiale:"ⅇ",fallingdotseq:"≒",Fcy:"Ф",fcy:"ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",Ffr:"𝔉",ffr:"𝔣",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",Fopf:"𝔽",fopf:"𝕗",ForAll:"∀",forall:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",Fscr:"ℱ",fscr:"𝒻",gacute:"ǵ",Gamma:"Γ",gamma:"γ",Gammad:"Ϝ",gammad:"ϝ",gap:"⪆",Gbreve:"Ğ",gbreve:"ğ",Gcedil:"Ģ",Gcirc:"Ĝ",gcirc:"ĝ",Gcy:"Г",gcy:"г",Gdot:"Ġ",gdot:"ġ",gE:"≧",ge:"≥",gEl:"⪌",gel:"⋛",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",Gfr:"𝔊",gfr:"𝔤",Gg:"⋙",gg:"≫",ggg:"⋙",gimel:"ℷ",GJcy:"Ѓ",gjcy:"ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gnE:"≩",gne:"⪈",gneq:"⪈",gneqq:"≩",gnsim:"⋧",Gopf:"𝔾",gopf:"𝕘",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",Gscr:"𝒢",gscr:"ℊ",gsim:"≳",gsime:"⪎",gsiml:"⪐",GT:">",Gt:"≫",gt:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",HARDcy:"Ъ",hardcy:"ъ",hArr:"⇔",harr:"↔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",Hcirc:"Ĥ",hcirc:"ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",Hfr:"ℌ",hfr:"𝔥",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",Hopf:"ℍ",hopf:"𝕙",horbar:"―",HorizontalLine:"─",Hscr:"ℋ",hscr:"𝒽",hslash:"ℏ",Hstrok:"Ħ",hstrok:"ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",Iacute:"Í",iacute:"í",ic:"⁣",Icirc:"Î",icirc:"î",Icy:"И",icy:"и",Idot:"İ",IEcy:"Е",iecy:"е",iexcl:"¡",iff:"⇔",Ifr:"ℑ",ifr:"𝔦",Igrave:"Ì",igrave:"ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",IJlig:"Ĳ",ijlig:"ĳ",Im:"ℑ",Imacr:"Ī",imacr:"ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",Int:"∬",int:"∫",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",IOcy:"Ё",iocy:"ё",Iogon:"Į",iogon:"į",Iopf:"𝕀",iopf:"𝕚",Iota:"Ι",iota:"ι",iprod:"⨼",iquest:"¿",Iscr:"ℐ",iscr:"𝒾",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",Itilde:"Ĩ",itilde:"ĩ",Iukcy:"І",iukcy:"і",Iuml:"Ï",iuml:"ï",Jcirc:"Ĵ",jcirc:"ĵ",Jcy:"Й",jcy:"й",Jfr:"𝔍",jfr:"𝔧",jmath:"ȷ",Jopf:"𝕁",jopf:"𝕛",Jscr:"𝒥",jscr:"𝒿",Jsercy:"Ј",jsercy:"ј",Jukcy:"Є",jukcy:"є",Kappa:"Κ",kappa:"κ",kappav:"ϰ",Kcedil:"Ķ",kcedil:"ķ",Kcy:"К",kcy:"к",Kfr:"𝔎",kfr:"𝔨",kgreen:"ĸ",KHcy:"Х",khcy:"х",KJcy:"Ќ",kjcy:"ќ",Kopf:"𝕂",kopf:"𝕜",Kscr:"𝒦",kscr:"𝓀",lAarr:"⇚",Lacute:"Ĺ",lacute:"ĺ",laemptyv:"⦴",lagran:"ℒ",Lambda:"Λ",lambda:"λ",Lang:"⟪",lang:"⟨",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",Larr:"↞",lArr:"⇐",larr:"←",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",lAtail:"⤛",latail:"⤙",late:"⪭",lates:"⪭︀",lBarr:"⤎",lbarr:"⤌",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",Lcaron:"Ľ",lcaron:"ľ",Lcedil:"Ļ",lcedil:"ļ",lceil:"⌈",lcub:"{",Lcy:"Л",lcy:"л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",lE:"≦",le:"≤",LeftAngleBracket:"⟨",LeftArrow:"←",Leftarrow:"⇐",leftarrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",LeftRightArrow:"↔",Leftrightarrow:"⇔",leftrightarrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",lEg:"⪋",leg:"⋚",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",Lfr:"𝔏",lfr:"𝔩",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",LJcy:"Љ",ljcy:"љ",Ll:"⋘",ll:"≪",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",Lmidot:"Ŀ",lmidot:"ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lnE:"≨",lne:"⪇",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",LongLeftArrow:"⟵",Longleftarrow:"⟸",longleftarrow:"⟵",LongLeftRightArrow:"⟷",Longleftrightarrow:"⟺",longleftrightarrow:"⟷",longmapsto:"⟼",LongRightArrow:"⟶",Longrightarrow:"⟹",longrightarrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",Lopf:"𝕃",lopf:"𝕝",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",Lscr:"ℒ",lscr:"𝓁",Lsh:"↰",lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",Lstrok:"Ł",lstrok:"ł",LT:"<",Lt:"≪",lt:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",Map:"⤅",map:"↦",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",Mcy:"М",mcy:"м",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",Mfr:"𝔐",mfr:"𝔪",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",Mopf:"𝕄",mopf:"𝕞",mp:"∓",Mscr:"ℳ",mscr:"𝓂",mstpos:"∾",Mu:"Μ",mu:"μ",multimap:"⊸",mumap:"⊸",nabla:"∇",Nacute:"Ń",nacute:"ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",Ncaron:"Ň",ncaron:"ň",Ncedil:"Ņ",ncedil:"ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",Ncy:"Н",ncy:"н",ndash:"–",ne:"≠",nearhk:"⤤",neArr:"⇗",nearr:"↗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",Nfr:"𝔑",nfr:"𝔫",ngE:"≧̸",nge:"≱",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",nGt:"≫⃒",ngt:"≯",ngtr:"≯",nGtv:"≫̸",nhArr:"⇎",nharr:"↮",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",NJcy:"Њ",njcy:"њ",nlArr:"⇍",nlarr:"↚",nldr:"‥",nlE:"≦̸",nle:"≰",nLeftarrow:"⇍",nleftarrow:"↚",nLeftrightarrow:"⇎",nleftrightarrow:"↮",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nLt:"≪⃒",nlt:"≮",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",Nopf:"ℕ",nopf:"𝕟",Not:"⫬",not:"¬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrArr:"⇏",nrarr:"↛",nrarrc:"⤳̸",nrarrw:"↝̸",nRightarrow:"⇏",nrightarrow:"↛",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",Nscr:"𝒩",nscr:"𝓃",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsubE:"⫅̸",nsube:"⊈",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupE:"⫆̸",nsupe:"⊉",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",Ntilde:"Ñ",ntilde:"ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",Nu:"Ν",nu:"ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nVDash:"⊯",nVdash:"⊮",nvDash:"⊭",nvdash:"⊬",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwArr:"⇖",nwarr:"↖",nwarrow:"↖",nwnear:"⤧",Oacute:"Ó",oacute:"ó",oast:"⊛",ocir:"⊚",Ocirc:"Ô",ocirc:"ô",Ocy:"О",ocy:"о",odash:"⊝",Odblac:"Ő",odblac:"ő",odiv:"⨸",odot:"⊙",odsold:"⦼",OElig:"Œ",oelig:"œ",ofcir:"⦿",Ofr:"𝔒",ofr:"𝔬",ogon:"˛",Ograve:"Ò",ograve:"ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",Omacr:"Ō",omacr:"ō",Omega:"Ω",omega:"ω",Omicron:"Ο",omicron:"ο",omid:"⦶",ominus:"⊖",Oopf:"𝕆",oopf:"𝕠",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",Or:"⩔",or:"∨",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",Oscr:"𝒪",oscr:"ℴ",Oslash:"Ø",oslash:"ø",osol:"⊘",Otilde:"Õ",otilde:"õ",Otimes:"⨷",otimes:"⊗",otimesas:"⨶",Ouml:"Ö",ouml:"ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",Pcy:"П",pcy:"п",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",Pfr:"𝔓",pfr:"𝔭",Phi:"Φ",phi:"φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",Pi:"Π",pi:"π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",Popf:"ℙ",popf:"𝕡",pound:"£",Pr:"⪻",pr:"≺",prap:"⪷",prcue:"≼",prE:"⪳",pre:"⪯",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",Prime:"″",prime:"′",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",Pscr:"𝒫",pscr:"𝓅",Psi:"Ψ",psi:"ψ",puncsp:" ",Qfr:"𝔔",qfr:"𝔮",qint:"⨌",Qopf:"ℚ",qopf:"𝕢",qprime:"⁗",Qscr:"𝒬",qscr:"𝓆",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",QUOT:'"',quot:'"',rAarr:"⇛",race:"∽̱",Racute:"Ŕ",racute:"ŕ",radic:"√",raemptyv:"⦳",Rang:"⟫",rang:"⟩",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",Rarr:"↠",rArr:"⇒",rarr:"→",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",Rarrtl:"⤖",rarrtl:"↣",rarrw:"↝",rAtail:"⤜",ratail:"⤚",ratio:"∶",rationals:"ℚ",RBarr:"⤐",rBarr:"⤏",rbarr:"⤍",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",Rcaron:"Ř",rcaron:"ř",Rcedil:"Ŗ",rcedil:"ŗ",rceil:"⌉",rcub:"}",Rcy:"Р",rcy:"р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",REG:"®",reg:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",Rfr:"ℜ",rfr:"𝔯",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",Rho:"Ρ",rho:"ρ",rhov:"ϱ",RightAngleBracket:"⟩",RightArrow:"→",Rightarrow:"⇒",rightarrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",Ropf:"ℝ",ropf:"𝕣",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",Rscr:"ℛ",rscr:"𝓇",Rsh:"↱",rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",Sacute:"Ś",sacute:"ś",sbquo:"‚",Sc:"⪼",sc:"≻",scap:"⪸",Scaron:"Š",scaron:"š",sccue:"≽",scE:"⪴",sce:"⪰",Scedil:"Ş",scedil:"ş",Scirc:"Ŝ",scirc:"ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",Scy:"С",scy:"с",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",seArr:"⇘",searr:"↘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",Sfr:"𝔖",sfr:"𝔰",sfrown:"⌢",sharp:"♯",SHCHcy:"Щ",shchcy:"щ",SHcy:"Ш",shcy:"ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",Sigma:"Σ",sigma:"σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",SOFTcy:"Ь",softcy:"ь",sol:"/",solb:"⧄",solbar:"⌿",Sopf:"𝕊",sopf:"𝕤",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",Square:"□",square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",Sscr:"𝒮",sscr:"𝓈",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",Star:"⋆",star:"☆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",Sub:"⋐",sub:"⊂",subdot:"⪽",subE:"⫅",sube:"⊆",subedot:"⫃",submult:"⫁",subnE:"⫋",subne:"⊊",subplus:"⪿",subrarr:"⥹",Subset:"⋐",subset:"⊂",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",Sum:"∑",sum:"∑",sung:"♪",Sup:"⋑",sup:"⊃",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supE:"⫆",supe:"⊇",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supnE:"⫌",supne:"⊋",supplus:"⫀",Supset:"⋑",supset:"⊃",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swArr:"⇙",swarr:"↙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",Tau:"Τ",tau:"τ",tbrk:"⎴",Tcaron:"Ť",tcaron:"ť",Tcedil:"Ţ",tcedil:"ţ",Tcy:"Т",tcy:"т",tdot:"⃛",telrec:"⌕",Tfr:"𝔗",tfr:"𝔱",there4:"∴",Therefore:"∴",therefore:"∴",Theta:"Θ",theta:"θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",THORN:"Þ",thorn:"þ",Tilde:"∼",tilde:"˜",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",Topf:"𝕋",topf:"𝕥",topfork:"⫚",tosa:"⤩",tprime:"‴",TRADE:"™",trade:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",Tscr:"𝒯",tscr:"𝓉",TScy:"Ц",tscy:"ц",TSHcy:"Ћ",tshcy:"ћ",Tstrok:"Ŧ",tstrok:"ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",Uacute:"Ú",uacute:"ú",Uarr:"↟",uArr:"⇑",uarr:"↑",Uarrocir:"⥉",Ubrcy:"Ў",ubrcy:"ў",Ubreve:"Ŭ",ubreve:"ŭ",Ucirc:"Û",ucirc:"û",Ucy:"У",ucy:"у",udarr:"⇅",Udblac:"Ű",udblac:"ű",udhar:"⥮",ufisht:"⥾",Ufr:"𝔘",ufr:"𝔲",Ugrave:"Ù",ugrave:"ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",Umacr:"Ū",umacr:"ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",Uogon:"Ų",uogon:"ų",Uopf:"𝕌",uopf:"𝕦",UpArrow:"↑",Uparrow:"⇑",uparrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",UpDownArrow:"↕",Updownarrow:"⇕",updownarrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",Upsi:"ϒ",upsi:"υ",upsih:"ϒ",Upsilon:"Υ",upsilon:"υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",Uring:"Ů",uring:"ů",urtri:"◹",Uscr:"𝒰",uscr:"𝓊",utdot:"⋰",Utilde:"Ũ",utilde:"ũ",utri:"▵",utrif:"▴",uuarr:"⇈",Uuml:"Ü",uuml:"ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",vArr:"⇕",varr:"↕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",Vbar:"⫫",vBar:"⫨",vBarv:"⫩",Vcy:"В",vcy:"в",VDash:"⊫",Vdash:"⊩",vDash:"⊨",vdash:"⊢",Vdashl:"⫦",Vee:"⋁",vee:"∨",veebar:"⊻",veeeq:"≚",vellip:"⋮",Verbar:"‖",verbar:"|",Vert:"‖",vert:"|",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",Vfr:"𝔙",vfr:"𝔳",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",Vopf:"𝕍",vopf:"𝕧",vprop:"∝",vrtri:"⊳",Vscr:"𝒱",vscr:"𝓋",vsubnE:"⫋︀",vsubne:"⊊︀",vsupnE:"⫌︀",vsupne:"⊋︀",Vvdash:"⊪",vzigzag:"⦚",Wcirc:"Ŵ",wcirc:"ŵ",wedbar:"⩟",Wedge:"⋀",wedge:"∧",wedgeq:"≙",weierp:"℘",Wfr:"𝔚",wfr:"𝔴",Wopf:"𝕎",wopf:"𝕨",wp:"℘",wr:"≀",wreath:"≀",Wscr:"𝒲",wscr:"𝓌",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",Xfr:"𝔛",xfr:"𝔵",xhArr:"⟺",xharr:"⟷",Xi:"Ξ",xi:"ξ",xlArr:"⟸",xlarr:"⟵",xmap:"⟼",xnis:"⋻",xodot:"⨀",Xopf:"𝕏",xopf:"𝕩",xoplus:"⨁",xotime:"⨂",xrArr:"⟹",xrarr:"⟶",Xscr:"𝒳",xscr:"𝓍",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",Yacute:"Ý",yacute:"ý",YAcy:"Я",yacy:"я",Ycirc:"Ŷ",ycirc:"ŷ",Ycy:"Ы",ycy:"ы",yen:"¥",Yfr:"𝔜",yfr:"𝔶",YIcy:"Ї",yicy:"ї",Yopf:"𝕐",yopf:"𝕪",Yscr:"𝒴",yscr:"𝓎",YUcy:"Ю",yucy:"ю",Yuml:"Ÿ",yuml:"ÿ",Zacute:"Ź",zacute:"ź",Zcaron:"Ž",zcaron:"ž",Zcy:"З",zcy:"з",Zdot:"Ż",zdot:"ż",zeetrf:"ℨ",ZeroWidthSpace:"​",Zeta:"Ζ",zeta:"ζ",Zfr:"ℨ",zfr:"𝔷",ZHcy:"Ж",zhcy:"ж",zigrarr:"⇝",Zopf:"ℤ",zopf:"𝕫",Zscr:"𝒵",zscr:"𝓏",zwj:"‍",zwnj:"‌"},y={ound:"pound",pond:"pound",poubd:"pound",poud:"pound",poumd:"pound",poun:"pound",pund:"pound",zvbj:"zwnj",zvhj:"zwnj",zvjb:"zwnj",zvjh:"zwnj",zvjm:"zwnj",zvjn:"zwnj",zvmj:"zwnj",zvng:"zwnj",zvnh:"zwnj",zvnj:"zwnj",zvnk:"zwnj",zvnm:"zwnj",zwbj:"zwnj",zwhj:"zwnj",zwjb:"zwnj",zwjh:"zwnj",zwjm:"zwnj",zwjn:"zwnj",zwmj:"zwnj",zwng:"zwnj",zwnh:"zwnj",zwnk:"zwnj",zwnm:"zwnj"},A={A:{a:["Aacute"],b:["Abreve"],c:["Acirc","Acy"],E:["AElig"],f:["Afr"],g:["Agrave"],l:["Alpha"],m:["Amacr"],M:["AMP"],n:["And"],o:["Aogon","Aopf"],p:["ApplyFunction"],r:["Aring"],s:["Ascr","Assign"],t:["Atilde"],u:["Auml"]},a:{a:["aacute"],b:["abreve"],c:["ac","acd","acE","acirc","acute","acy"],e:["aelig"],f:["af","afr"],g:["agrave"],l:["alefsym","aleph","alpha"],m:["amacr","amalg","amp"],n:["and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr"],o:["aogon","aopf"],p:["ap","apacir","apE","ape","apid","apos","approx","approxeq"],r:["aring"],s:["ascr","ast","asymp","asympeq"],t:["atilde"],u:["auml"],w:["awconint","awint"]},b:{a:["backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge"],b:["bbrk","bbrktbrk"],c:["bcong","bcy"],d:["bdquo"],e:["becaus","because","bemptyv","bepsi","bernou","beta","beth","between"],f:["bfr"],i:["bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge"],k:["bkarow"],l:["blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block"],n:["bne","bnequiv","bnot"],N:["bNot"],o:["bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr"],p:["bprime"],r:["breve","brvbar"],s:["bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub"],u:["bull","bullet","bump","bumpE","bumpe","bumpeq"]},B:{a:["Backslash","Barv","Barwed"],c:["Bcy"],e:["Because","Bernoullis","Beta"],f:["Bfr"],o:["Bopf"],r:["Breve"],s:["Bscr"],u:["Bumpeq"]},C:{a:["Cacute","Cap","CapitalDifferentialD","Cayleys"],c:["Ccaron","Ccedil","Ccirc","Cconint"],d:["Cdot"],e:["Cedilla","CenterDot"],f:["Cfr"],H:["CHcy"],h:["Chi"],i:["CircleDot","CircleMinus","CirclePlus","CircleTimes"],l:["ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote"],o:["Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral"],O:["COPY"],r:["Cross"],s:["Cscr"],u:["Cup","CupCap"]},c:{a:["cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron"],c:["ccaps","ccaron","ccedil","ccirc","ccups","ccupssm"],d:["cdot"],e:["cedil","cemptyv","cent","centerdot"],f:["cfr"],h:["chcy","check","checkmark","chi"],i:["cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledR","circledS","cirE","cire","cirfnint","cirmid","cirscir"],l:["clubs","clubsuit"],o:["colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copy","copysr"],r:["crarr","cross"],s:["cscr","csub","csube","csup","csupe"],t:["ctdot"],u:["cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed"],w:["cwconint","cwint"],y:["cylcty"]},D:{a:["Dagger","Darr","Dashv"],c:["Dcaron","Dcy"],D:["DD","DDotrahd"],e:["Del","Delta"],f:["Dfr"],i:["DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD"],J:["DJcy"],o:["Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow"],s:["Dscr","Dstrok"],S:["DScy"],Z:["DZcy"]},d:{a:["dagger","daleth","darr","dash","dashv"],A:["dArr"],b:["dbkarow","dblac"],c:["dcaron","dcy"],d:["dd","ddagger","ddarr","ddotseq"],e:["deg","delta","demptyv"],f:["dfisht","dfr"],H:["dHar"],h:["dharl","dharr"],i:["diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx"],j:["djcy"],l:["dlcorn","dlcrop"],o:["dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright"],r:["drbkarow","drcorn","drcrop"],s:["dscr","dscy","dsol","dstrok"],t:["dtdot","dtri","dtrif"],u:["duarr","duhar"],w:["dwangle"],z:["dzcy","dzigrarr"]},E:{a:["Eacute"],c:["Ecaron","Ecirc","Ecy"],d:["Edot"],f:["Efr"],g:["Egrave"],l:["Element"],m:["Emacr","EmptySmallSquare","EmptyVerySmallSquare"],N:["ENG"],o:["Eogon","Eopf"],p:["Epsilon"],q:["Equal","EqualTilde","Equilibrium"],s:["Escr","Esim"],t:["Eta"],T:["ETH"],u:["Euml"],x:["Exists","ExponentialE"]},e:{a:["eacute","easter"],c:["ecaron","ecir","ecirc","ecolon","ecy"],D:["eDDot","eDot"],d:["edot"],e:["ee"],f:["efDot","efr"],g:["eg","egrave","egs","egsdot"],l:["el","elinters","ell","els","elsdot"],m:["emacr","empty","emptyset","emptyv","emsp","emsp13","emsp14"],n:["eng","ensp"],o:["eogon","eopf"],p:["epar","eparsl","eplus","epsi","epsilon","epsiv"],q:["eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl"],r:["erarr","erDot"],s:["escr","esdot","esim"],t:["eta","eth"],u:["euml","euro"],x:["excl","exist","expectation","exponentiale"]},f:{a:["fallingdotseq"],c:["fcy"],e:["female"],f:["ffilig","fflig","ffllig","ffr"],i:["filig"],j:["fjlig"],l:["flat","fllig","fltns"],n:["fnof"],o:["fopf","forall","fork","forkv"],p:["fpartint"],r:["frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown"],s:["fscr"]},F:{c:["Fcy"],f:["Ffr"],i:["FilledSmallSquare","FilledVerySmallSquare"],o:["Fopf","ForAll","Fouriertrf"],s:["Fscr"]},g:{a:["gacute","gamma","gammad","gap"],b:["gbreve"],c:["gcirc","gcy"],d:["gdot"],E:["gE","gEl"],e:["ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles"],f:["gfr"],g:["gg","ggg"],i:["gimel"],j:["gjcy"],l:["gl","gla","glE","glj"],n:["gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim"],o:["gopf"],r:["grave"],s:["gscr","gsim","gsime","gsiml"],t:["gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim"],v:["gvertneqq","gvnE"]},G:{a:["Gamma","Gammad"],b:["Gbreve"],c:["Gcedil","Gcirc","Gcy"],d:["Gdot"],f:["Gfr"],g:["Gg"],J:["GJcy"],o:["Gopf"],r:["GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde"],s:["Gscr"],T:["GT"],t:["Gt"]},H:{a:["Hacek","Hat"],A:["HARDcy"],c:["Hcirc"],f:["Hfr"],i:["HilbertSpace"],o:["Hopf","HorizontalLine"],s:["Hscr","Hstrok"],u:["HumpDownHump","HumpEqual"]},h:{a:["hairsp","half","hamilt","hardcy","harr","harrcir","harrw"],A:["hArr"],b:["hbar"],c:["hcirc"],e:["hearts","heartsuit","hellip","hercon"],f:["hfr"],k:["hksearow","hkswarow"],o:["hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar"],s:["hscr","hslash","hstrok"],y:["hybull","hyphen"]},I:{a:["Iacute"],c:["Icirc","Icy"],d:["Idot"],E:["IEcy"],f:["Ifr"],g:["Igrave"],J:["IJlig"],m:["Im","Imacr","ImaginaryI","Implies"],n:["Int","Integral","Intersection","InvisibleComma","InvisibleTimes"],O:["IOcy"],o:["Iogon","Iopf","Iota"],s:["Iscr"],t:["Itilde"],u:["Iukcy","Iuml"]},i:{a:["iacute"],c:["ic","icirc","icy"],e:["iecy","iexcl"],f:["iff","ifr"],g:["igrave"],i:["ii","iiiint","iiint","iinfin","iiota"],j:["ijlig"],m:["imacr","image","imagline","imagpart","imath","imof","imped"],n:["in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod"],o:["iocy","iogon","iopf","iota"],p:["iprod"],q:["iquest"],s:["iscr","isin","isindot","isinE","isins","isinsv","isinv"],t:["it","itilde"],u:["iukcy","iuml"]},J:{c:["Jcirc","Jcy"],f:["Jfr"],o:["Jopf"],s:["Jscr","Jsercy"],u:["Jukcy"]},j:{c:["jcirc","jcy"],f:["jfr"],m:["jmath"],o:["jopf"],s:["jscr","jsercy"],u:["jukcy"]},K:{a:["Kappa"],c:["Kcedil","Kcy"],f:["Kfr"],H:["KHcy"],J:["KJcy"],o:["Kopf"],s:["Kscr"]},k:{a:["kappa","kappav"],c:["kcedil","kcy"],f:["kfr"],g:["kgreen"],h:["khcy"],j:["kjcy"],o:["kopf"],s:["kscr"]},l:{A:["lAarr","lArr","lAtail"],a:["lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates"],B:["lBarr"],b:["lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu"],c:["lcaron","lcedil","lceil","lcub","lcy"],d:["ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh"],E:["lE","lEg"],e:["le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim"],f:["lfisht","lfloor","lfr"],g:["lg","lgE"],H:["lHar"],h:["lhard","lharu","lharul","lhblk"],j:["ljcy"],l:["ll","llarr","llcorner","llhard","lltri"],m:["lmidot","lmoust","lmoustache"],n:["lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim"],o:["loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf"],p:["lpar","lparlt"],r:["lrarr","lrcorner","lrhar","lrhard","lrm","lrtri"],s:["lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok"],t:["lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar"],u:["lurdshar","luruhar"],v:["lvertneqq","lvnE"]},L:{a:["Lacute","Lambda","Lang","Laplacetrf","Larr"],c:["Lcaron","Lcedil","Lcy"],e:["LeftAngleBracket","LeftArrow","Leftarrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","Leftrightarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde"],f:["Lfr"],J:["LJcy"],l:["Ll","Lleftarrow"],m:["Lmidot"],o:["LongLeftArrow","Longleftarrow","LongLeftRightArrow","Longleftrightarrow","LongRightArrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow"],s:["Lscr","Lsh","Lstrok"],T:["LT"],t:["Lt"]},m:{a:["macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker"],c:["mcomma","mcy"],d:["mdash"],D:["mDDot"],e:["measuredangle"],f:["mfr"],h:["mho"],i:["micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu"],l:["mlcp","mldr"],n:["mnplus"],o:["models","mopf"],p:["mp"],s:["mscr","mstpos"],u:["mu","multimap","mumap"]},M:{a:["Map"],c:["Mcy"],e:["MediumSpace","Mellintrf"],f:["Mfr"],i:["MinusPlus"],o:["Mopf"],s:["Mscr"],u:["Mu"]},n:{a:["nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals"],b:["nbsp","nbump","nbumpe"],c:["ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy"],d:["ndash"],e:["ne","nearhk","neArr","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists"],f:["nfr"],g:["ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr"],G:["nGg","nGt","nGtv"],h:["nhArr","nharr","nhpar"],i:["ni","nis","nisd","niv"],j:["njcy"],l:["nlArr","nlarr","nldr","nlE","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie"],L:["nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv"],m:["nmid"],o:["nopf","not","notin","notindot","notinE","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc"],p:["npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq"],r:["nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie"],R:["nRightarrow"],s:["nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq"],t:["ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq"],u:["nu","num","numero","numsp"],v:["nvap","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim"],V:["nVDash","nVdash"],w:["nwarhk","nwArr","nwarr","nwarrow","nwnear"]},N:{a:["Nacute"],c:["Ncaron","Ncedil","Ncy"],e:["NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine"],f:["Nfr"],J:["NJcy"],o:["NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar"],s:["Nscr"],t:["Ntilde"],u:["Nu"]},O:{a:["Oacute"],c:["Ocirc","Ocy"],d:["Odblac"],E:["OElig"],f:["Ofr"],g:["Ograve"],m:["Omacr","Omega","Omicron"],o:["Oopf"],p:["OpenCurlyDoubleQuote","OpenCurlyQuote"],r:["Or"],s:["Oscr","Oslash"],t:["Otilde","Otimes"],u:["Ouml"],v:["OverBar","OverBrace","OverBracket","OverParenthesis"]},o:{a:["oacute","oast"],c:["ocir","ocirc","ocy"],d:["odash","odblac","odiv","odot","odsold"],e:["oelig"],f:["ofcir","ofr"],g:["ogon","ograve","ogt"],h:["ohbar","ohm"],i:["oint"],l:["olarr","olcir","olcross","oline","olt"],m:["omacr","omega","omicron","omid","ominus"],o:["oopf"],p:["opar","operp","oplus"],r:["or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv"],S:["oS"],s:["oscr","oslash","osol"],t:["otilde","otimes","otimesas"],u:["ouml"],v:["ovbar"]},p:{a:["par","para","parallel","parsim","parsl","part"],c:["pcy"],e:["percnt","period","permil","perp","pertenk"],f:["pfr"],h:["phi","phiv","phmmat","phone"],i:["pi","pitchfork","piv"],l:["planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo"],m:["pm"],o:["pointint","popf","pound"],r:["pr","prap","prcue","prE","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnap","prnE","prnsim","prod","profalar","profline","profsurf","prop","propto","prsim","prurel"],s:["pscr","psi"],u:["puncsp"]},P:{a:["PartialD"],c:["Pcy"],f:["Pfr"],h:["Phi"],i:["Pi"],l:["PlusMinus"],o:["Poincareplane","Popf"],r:["Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional"],s:["Pscr","Psi"]},Q:{f:["Qfr"],o:["Qopf"],s:["Qscr"],U:["QUOT"]},q:{f:["qfr"],i:["qint"],o:["qopf"],p:["qprime"],s:["qscr"],u:["quaternions","quatint","quest","questeq","quot"]},r:{A:["rAarr","rArr","rAtail"],a:["race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals"],B:["rBarr"],b:["rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu"],c:["rcaron","rcedil","rceil","rcub","rcy"],d:["rdca","rdldhar","rdquo","rdquor","rdsh"],e:["real","realine","realpart","reals","rect","reg"],f:["rfisht","rfloor","rfr"],H:["rHar"],h:["rhard","rharu","rharul","rho","rhov"],i:["rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq"],l:["rlarr","rlhar","rlm"],m:["rmoust","rmoustache"],n:["rnmid"],o:["roang","roarr","robrk","ropar","ropf","roplus","rotimes"],p:["rpar","rpargt","rppolint"],r:["rrarr"],s:["rsaquo","rscr","rsh","rsqb","rsquo","rsquor"],t:["rthree","rtimes","rtri","rtrie","rtrif","rtriltri"],u:["ruluhar"],x:["rx"]},R:{a:["Racute","Rang","Rarr","Rarrtl"],B:["RBarr"],c:["Rcaron","Rcedil","Rcy"],e:["Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium"],E:["REG"],f:["Rfr"],h:["Rho"],i:["RightAngleBracket","RightArrow","Rightarrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar"],o:["Ropf","RoundImplies"],r:["Rrightarrow"],s:["Rscr","Rsh"],u:["RuleDelayed"]},S:{a:["Sacute"],c:["Sc","Scaron","Scedil","Scirc","Scy"],f:["Sfr"],H:["SHCHcy","SHcy"],h:["ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow"],i:["Sigma"],m:["SmallCircle"],O:["SOFTcy"],o:["Sopf"],q:["Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion"],s:["Sscr"],t:["Star"],u:["Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset"]},s:{a:["sacute"],b:["sbquo"],c:["sc","scap","scaron","sccue","scE","sce","scedil","scirc","scnap","scnE","scnsim","scpolint","scsim","scy"],d:["sdot","sdotb","sdote"],e:["searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext"],f:["sfr","sfrown"],h:["sharp","shchcy","shcy","shortmid","shortparallel","shy"],i:["sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr"],l:["slarr"],m:["smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes"],o:["softcy","sol","solb","solbar","sopf"],p:["spades","spadesuit","spar"],q:["sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf"],r:["srarr"],s:["sscr","ssetmn","ssmile","sstarf"],t:["star","starf","straightepsilon","straightphi","strns"],u:["sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup"],w:["swarhk","swArr","swarr","swarrow","swnwar"],z:["szlig"]},T:{a:["Tab","Tau"],c:["Tcaron","Tcedil","Tcy"],f:["Tfr"],h:["Therefore","Theta","ThickSpace","ThinSpace"],H:["THORN"],i:["Tilde","TildeEqual","TildeFullEqual","TildeTilde"],o:["Topf"],R:["TRADE"],r:["TripleDot"],s:["Tscr","Tstrok"],S:["TScy","TSHcy"]},t:{a:["target","tau"],b:["tbrk"],c:["tcaron","tcedil","tcy"],d:["tdot"],e:["telrec"],f:["tfr"],h:["there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn"],i:["tilde","times","timesb","timesbar","timesd","tint"],o:["toea","top","topbot","topcir","topf","topfork","tosa"],p:["tprime"],r:["trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium"],s:["tscr","tscy","tshcy","tstrok"],w:["twixt","twoheadleftarrow","twoheadrightarrow"]},U:{a:["Uacute","Uarr","Uarrocir"],b:["Ubrcy","Ubreve"],c:["Ucirc","Ucy"],d:["Udblac"],f:["Ufr"],g:["Ugrave"],m:["Umacr"],n:["UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus"],o:["Uogon","Uopf"],p:["UpArrow","Uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","UpEquilibrium","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","UpTee","UpTeeArrow"],r:["Uring"],s:["Uscr"],t:["Utilde"],u:["Uuml"]},u:{a:["uacute","uarr"],A:["uArr"],b:["ubrcy","ubreve"],c:["ucirc","ucy"],d:["udarr","udblac","udhar"],f:["ufisht","ufr"],g:["ugrave"],H:["uHar"],h:["uharl","uharr","uhblk"],l:["ulcorn","ulcorner","ulcrop","ultri"],m:["umacr","uml"],o:["uogon","uopf"],p:["uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows"],r:["urcorn","urcorner","urcrop","uring","urtri"],s:["uscr"],t:["utdot","utilde","utri","utrif"],u:["uuarr","uuml"],w:["uwangle"]},v:{a:["vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright"],A:["vArr"],B:["vBar","vBarv"],c:["vcy"],D:["vDash"],d:["vdash"],e:["vee","veebar","veeeq","vellip","verbar","vert"],f:["vfr"],l:["vltri"],n:["vnsub","vnsup"],o:["vopf"],p:["vprop"],r:["vrtri"],s:["vscr","vsubnE","vsubne","vsupnE","vsupne"],z:["vzigzag"]},V:{b:["Vbar"],c:["Vcy"],D:["VDash"],d:["Vdash","Vdashl"],e:["Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace"],f:["Vfr"],o:["Vopf"],s:["Vscr"],v:["Vvdash"]},W:{c:["Wcirc"],e:["Wedge"],f:["Wfr"],o:["Wopf"],s:["Wscr"]},w:{c:["wcirc"],e:["wedbar","wedge","wedgeq","weierp"],f:["wfr"],o:["wopf"],p:["wp"],r:["wr","wreath"],s:["wscr"]},x:{c:["xcap","xcirc","xcup"],d:["xdtri"],f:["xfr"],h:["xhArr","xharr"],i:["xi"],l:["xlArr","xlarr"],m:["xmap"],n:["xnis"],o:["xodot","xopf","xoplus","xotime"],r:["xrArr","xrarr"],s:["xscr","xsqcup"],u:["xuplus","xutri"],v:["xvee"],w:["xwedge"]},X:{f:["Xfr"],i:["Xi"],o:["Xopf"],s:["Xscr"]},Y:{a:["Yacute"],A:["YAcy"],c:["Ycirc","Ycy"],f:["Yfr"],I:["YIcy"],o:["Yopf"],s:["Yscr"],U:["YUcy"],u:["Yuml"]},y:{a:["yacute","yacy"],c:["ycirc","ycy"],e:["yen"],f:["yfr"],i:["yicy"],o:["yopf"],s:["yscr"],u:["yucy","yuml"]},Z:{a:["Zacute"],c:["Zcaron","Zcy"],d:["Zdot"],e:["ZeroWidthSpace","Zeta"],f:["Zfr"],H:["ZHcy"],o:["Zopf"],s:["Zscr"]},z:{a:["zacute"],c:["zcaron","zcy"],d:["zdot"],e:["zeetrf","zeta"],f:["zfr"],h:["zhcy"],i:["zigrarr"],o:["zopf"],s:["zscr"],w:["zwj","zwnj"]}},S={1:{p:["sup1"]},2:{1:["blk12","frac12"],p:["sup2"]},3:{1:["emsp13","frac13"],2:["frac23"],p:["sup3"]},4:{1:["blk14","emsp14","frac14"],3:["blk34","frac34"],e:["there4"]},5:{1:["frac15"],2:["frac25"],3:["frac35"],4:["frac45"]},6:{1:["frac16"],5:["frac56"]},8:{1:["frac18"],3:["frac38"],5:["frac58"],7:["frac78"]},e:{t:["Aacute","aacute","acute","Cacute","cacute","CloseCurlyDoubleQuote","CloseCurlyQuote","DiacriticalAcute","DiacriticalDoubleAcute","Eacute","eacute","gacute","Iacute","iacute","Lacute","lacute","late","Nacute","nacute","Oacute","oacute","OpenCurlyDoubleQuote","OpenCurlyQuote","Racute","racute","Sacute","sacute","sdote","smte","Uacute","uacute","Yacute","yacute","Zacute","zacute"],v:["Abreve","abreve","Agrave","agrave","Breve","breve","DiacriticalGrave","DownBreve","Egrave","egrave","Gbreve","gbreve","grave","Igrave","igrave","Ograve","ograve","Ubreve","ubreve","Ugrave","ugrave"],p:["andslope","ape","bumpe","csupe","nbumpe","nsqsupe","nsupe","orslope","sqsupe","supe"],g:["ange","barwedge","bigwedge","blacklozenge","curlywedge","doublebarwedge","ge","image","lozenge","nge","nvge","range","Wedge","wedge","xwedge"],l:["angle","blacktriangle","dwangle","exponentiale","female","langle","le","LeftTriangle","male","measuredangle","nle","NotLeftTriangle","NotRightTriangle","nvle","rangle","RightTriangle","SmallCircle","smile","ssmile","triangle","uwangle"],a:["angmsdae"],d:["Atilde","atilde","DiacriticalTilde","divide","EqualTilde","GreaterTilde","Itilde","itilde","LessTilde","NotEqualTilde","NotGreaterTilde","NotLessTilde","NotSucceedsTilde","NotTilde","NotTildeTilde","Ntilde","ntilde","Otilde","otilde","PrecedesTilde","SucceedsTilde","Tilde","tilde","TildeTilde","trade","Utilde","utilde","VerticalTilde"],m:["backprime","bprime","bsime","gsime","lsime","nsime","Prime","prime","qprime","sime","tprime","tritime","xotime"],e:["barvee","bigvee","curlyvee","cuvee","DoubleLeftTee","DoubleRightTee","DownTee","ee","LeftTee","lthree","RightTee","rthree","UpTee","Vee","vee","xvee"],s:["Because","because","maltese","pluse"],r:["blacksquare","cire","dotsquare","EmptySmallSquare","EmptyVerySmallSquare","FilledSmallSquare","FilledVerySmallSquare","incare","npre","pre","Square","square","Therefore","therefore"],n:["bne","Colone","colone","gne","HorizontalLine","imagline","lne","ne","NewLine","oline","phone","Poincareplane","profline","realine","simne","subne","supne","VerticalLine","vsubne","vsupne"],i:["bowtie","die","infintie","ltrie","nltrie","nrtrie","nvltrie","nvrtrie","rtrie","trie"],b:["csube","nsqsube","nsube","sqsube","sube"],c:["HilbertSpace","lbrace","MediumSpace","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NonBreakingSpace","nsce","OverBrace","race","rbrace","sce","ThickSpace","ThinSpace","UnderBrace","VeryThinSpace","ZeroWidthSpace"],k:["lbrke","rbrke"],h:["lmoustache","rmoustache"],u:["nprcue","nsccue","prcue","sccue"],R:["Re"]},c:{a:["ac","angmsdac","dblac","Odblac","odblac","Udblac","udblac"],r:["Acirc","acirc","bigcirc","Ccirc","ccirc","circ","circledcirc","Ecirc","ecirc","eqcirc","Gcirc","gcirc","Hcirc","hcirc","Icirc","icirc","Jcirc","jcirc","nrarrc","Ocirc","ocirc","rarrc","Scirc","scirc","Ucirc","ucirc","Wcirc","wcirc","xcirc","Ycirc","ycirc"],s:["cuesc","nsc","sc"],e:["curlyeqprec","nprec","prec","telrec"],c:["curlyeqsucc","gescc","gtcc","lescc","ltcc","nsucc","succ"],i:["ic","radic"],v:["notinvc","notnivc"],S:["Sc"]},d:{c:["acd"],n:["And","and","andand","capand","Diamond","diamond","pound"],d:["andd","dd"],s:["angmsd","minusd","nisd","timesd"],a:["angmsdad","Gammad","gammad"],b:["angrtvbd"],i:["apid","cirmid","mid","napid","nmid","nshortmid","nsmid","omid","rnmid","shortmid","smid"],e:["Barwed","barwed","cuwed","imped","RuleDelayed"],H:["boxHd"],h:["boxhd","DDotrahd"],o:["coprod","intprod","iprod","period","prod"],g:["langd","rangd"],l:["lbrksld","odsold","rbrksld"],r:["lhard","llhard","lrhard","ord","rhard"]},E:{c:["acE","scE"],p:["apE","bumpE","napE","nsupE","supE"],r:["cirE","prE"],l:["ExponentialE","glE","lE","nlE","simlE"],g:["gE","lgE","ngE","simgE"],n:["gnE","gvnE","isinE","lnE","lvnE","notinE","prnE","scnE","subnE","supnE","vsubnE","vsupnE"],b:["nsubE","subE"],D:["TRADE"]},y:{c:["Acy","acy","Bcy","bcy","CHcy","chcy","Dcy","dcy","DJcy","djcy","DScy","dscy","DZcy","dzcy","Ecy","ecy","Fcy","fcy","Gcy","gcy","GJcy","gjcy","HARDcy","hardcy","Icy","icy","IEcy","iecy","IOcy","iocy","Iukcy","iukcy","Jcy","jcy","Jsercy","jsercy","Jukcy","jukcy","Kcy","kcy","KHcy","khcy","KJcy","kjcy","Lcy","lcy","LJcy","ljcy","Mcy","mcy","Ncy","ncy","NJcy","njcy","Ocy","ocy","Pcy","pcy","Rcy","rcy","Scy","scy","SHCHcy","shchcy","SHcy","shcy","SOFTcy","softcy","Tcy","tcy","TScy","tscy","TSHcy","tshcy","Ubrcy","ubrcy","Ucy","ucy","Vcy","vcy","YAcy","yacy","Ycy","ycy","YIcy","yicy","YUcy","yucy","Zcy","zcy","ZHcy","zhcy"],p:["copy"],t:["cylcty","empty"],h:["shy"]},g:{i:["AElig","aelig","ffilig","fflig","ffllig","filig","fjlig","fllig","IJlig","ijlig","OElig","oelig","szlig"],l:["amalg","lg","ntlg"],n:["ang","Aring","aring","backcong","bcong","cong","eng","Lang","lang","LeftCeiling","loang","nang","ncong","Rang","rang","RightCeiling","ring","roang","sung","Uring","uring","varnothing"],a:["angmsdag","vzigzag"],e:["deg","eg","leg","reg"],G:["Gg","nGg"],g:["gg","ggg"],E:["lEg"],s:["lesg"],m:["lsimg","simg"]},f:{a:["af","angmsdaf","sigmaf"],p:["Aopf","aopf","Bopf","bopf","Copf","copf","Dopf","dopf","Eopf","eopf","Fopf","fopf","Gopf","gopf","Hopf","hopf","Iopf","iopf","Jopf","jopf","Kopf","kopf","Lopf","lopf","Mopf","mopf","Nopf","nopf","Oopf","oopf","Popf","popf","Qopf","qopf","Ropf","ropf","Sopf","sopf","Topf","topf","Uopf","uopf","Vopf","vopf","Wopf","wopf","Xopf","xopf","Yopf","yopf","Zopf","zopf"],i:["dtrif","ltrif","rtrif","utrif"],o:["fnof","imof","orderof","origof"],r:["Fouriertrf","Laplacetrf","Mellintrf","profsurf","squarf","sstarf","starf","zeetrf"],l:["half"],f:["iff"],z:["lozf"],d:["ordf"],u:["squf"]},r:{f:["Afr","afr","Bfr","bfr","Cfr","cfr","Dfr","dfr","Efr","efr","Ffr","ffr","Gfr","gfr","Hfr","hfr","Ifr","ifr","Jfr","jfr","Kfr","kfr","Lfr","lfr","Mfr","mfr","Nfr","nfr","Ofr","ofr","Pfr","pfr","Qfr","qfr","Rfr","rfr","Sfr","sfr","Tfr","tfr","Ufr","ufr","Vfr","vfr","Wfr","wfr","Xfr","xfr","Yfr","yfr","Zfr","zfr"],c:["Amacr","amacr","Ascr","ascr","Bscr","bscr","Cscr","cscr","Dscr","dscr","Emacr","emacr","Escr","escr","Fscr","fscr","Gscr","gscr","Hscr","hscr","Imacr","imacr","Iscr","iscr","Jscr","jscr","Kscr","kscr","Lscr","lscr","macr","Mscr","mscr","Nscr","nscr","Omacr","omacr","Oscr","oscr","Pscr","pscr","Qscr","qscr","Rscr","rscr","Sscr","sscr","Tscr","tscr","Umacr","umacr","Uscr","uscr","Vscr","vscr","Wscr","wscr","Xscr","xscr","Yscr","yscr","Zscr","zscr"],r:["angzarr","crarr","cudarrr","cularr","curarr","Darr","dArr","darr","ddarr","dharr","duarr","dzigrarr","erarr","gtrarr","hArr","harr","hoarr","lAarr","Larr","lArr","larr","lBarr","lbarr","llarr","loarr","lrarr","ltlarr","neArr","nearr","nhArr","nharr","nlArr","nlarr","nrArr","nrarr","nvHarr","nvlArr","nvrArr","nwArr","nwarr","olarr","orarr","rAarr","Rarr","rArr","rarr","RBarr","rBarr","rbarr","rlarr","roarr","rrarr","seArr","searr","simrarr","slarr","srarr","subrarr","suplarr","swArr","swarr","Uarr","uArr","uarr","udarr","uharr","uuarr","vArr","varr","xhArr","xharr","xlArr","xlarr","xrArr","xrarr","zigrarr"],i:["apacir","cir","cirscir","ecir","gtcir","harrcir","ltcir","midcir","ocir","ofcir","olcir","plusacir","pluscir","topcir","Uarrocir"],a:["bigstar","brvbar","dHar","dollar","DoubleVerticalBar","DownArrowBar","DownLeftVectorBar","DownRightVectorBar","duhar","epar","gtlPar","hbar","horbar","ldrdhar","ldrushar","LeftArrowBar","LeftDownVectorBar","LeftTriangleBar","LeftUpVectorBar","LeftVectorBar","lHar","lopar","lowbar","lpar","lrhar","ltrPar","lurdshar","luruhar","nesear","nhpar","NotDoubleVerticalBar","NotLeftTriangleBar","NotRightTriangleBar","NotVerticalBar","npar","nspar","nwnear","ohbar","opar","ovbar","OverBar","par","profalar","rdldhar","rHar","RightArrowBar","RightDownVectorBar","RightTriangleBar","RightUpVectorBar","RightVectorBar","rlhar","ropar","rpar","ruluhar","seswar","solbar","spar","Star","star","swnwar","timesbar","udhar","uHar","UnderBar","UpArrowBar","Vbar","vBar","veebar","Verbar","verbar","VerticalBar","wedbar"],D:["boxDr"],d:["boxdr","mldr","nldr"],U:["boxUr"],u:["boxur","natur"],V:["boxVr"],v:["boxvr"],s:["copysr"],p:["cuepr","npr","pr"],o:["cupor","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownRightTeeVector","DownRightVector","ldquor","LeftDownTeeVector","LeftDownVector","LeftFloor","LeftRightVector","LeftTeeVector","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftVector","lesdotor","lfloor","lsquor","or","oror","rdquor","rfloor","RightDownTeeVector","RightDownVector","RightFloor","RightTeeVector","RightUpDownVector","RightUpTeeVector","RightUpVector","RightVector","rsquor","VerticalSeparator"],e:["Dagger","dagger","ddagger","easter","GreaterGreater","LessEqualGreater","LessGreater","llcorner","lrcorner","marker","NestedGreaterGreater","NotGreater","NotGreaterGreater","NotLessGreater","NotNestedGreaterGreater","order","ulcorner","urcorner"],t:["eqslantgtr","lesseqgtr","lesseqqgtr","lessgtr","ngtr"],O:["Or"],P:["Pr"],w:["wr"]},m:{y:["alefsym","thetasym"],i:["backsim","bsim","eqsim","Esim","esim","gnsim","gsim","gtrsim","larrsim","lesssim","lnsim","lsim","nesim","ngsim","nlsim","nsim","nvsim","parsim","plussim","precnsim","precsim","prnsim","prsim","rarrsim","scnsim","scsim","sim","subsim","succnsim","succsim","supsim","thicksim","thksim"],o:["bottom"],s:["ccupssm"],r:["curarrm","lrm"],a:["diam"],u:["Equilibrium","num","ReverseEquilibrium","ReverseUpEquilibrium","Sum","sum","trpezium","UpEquilibrium"],I:["Im"],h:["ohm"],d:["ordm"],p:["pm"],l:["rlm"]},h:{p:["aleph","angsph"],a:["angmsdah"],s:["Backslash","circleddash","dash","hslash","ldsh","Lsh","lsh","mdash","ndash","nVDash","nVdash","nvDash","nvdash","odash","Oslash","oslash","rdsh","Rsh","rsh","VDash","Vdash","vDash","vdash","Vvdash"],t:["beth","daleth","eth","imath","jmath","wreath"],x:["boxh"],V:["boxVh"],v:["boxvh"],k:["planckh"],i:["upsih"]},a:{h:["Alpha","alpha"],a:["angmsdaa"],t:["Beta","beta","Delta","delta","Eta","eta","iiota","Iota","iota","Theta","theta","vartheta","Zeta","zeta"],l:["Cedilla","gla","nabla"],m:["comma","digamma","Gamma","gamma","InvisibleComma","mcomma","Sigma","sigma","varsigma"],p:["Kappa","kappa","varkappa"],d:["Lambda","lambda"],c:["ldca","rdca"],v:["notinva","notniva"],g:["Omega","omega"],r:["para"],e:["toea"],s:["tosa"]},P:{M:["AMP"]},p:{m:["amp","asymp","bump","comp","HumpDownHump","mp","nbump","NotHumpDownHump"],a:["ap","bigcap","Cap","cap","capcap","cupbrcap","CupCap","cupcap","gap","gnap","lap","lnap","Map","map","multimap","mumap","nap","ncap","NotCupCap","nvap","prap","prnap","rarrap","scap","scnap","sqcap","thkap","xcap","xmap"],u:["bigcup","bigsqcup","bigtriangleup","capbrcup","capcup","csup","Cup","cup","cupcup","leftharpoonup","mapstoup","ncup","nsup","rightharpoonup","sqcup","sqsup","subsup","Sup","sup","supsup","vnsup","xcup","xsqcup"],r:["cularrp","operp","perp","sharp","weierp"],o:["dlcrop","drcrop","prop","top","ulcrop","urcrop","vprop"],s:["emsp","ensp","hairsp","nbsp","numsp","puncsp","thinsp"],i:["hellip","vellip"],l:["larrlp","rarrlp"],c:["mlcp"],h:["smashp"],w:["wp"]},v:{d:["andv"],r:["Barv","orv","vBarv"],y:["bemptyv","cemptyv","demptyv","emptyv","laemptyv","raemptyv"],i:["bnequiv","div","epsiv","equiv","nequiv","niv","odiv","phiv","piv"],x:["boxv"],h:["Dashv","dashv"],k:["forkv","plankv"],s:["isinsv"],n:["isinv"],a:["kappav","sigmav","thetav"],t:["nGtv","nLtv"],o:["rhov"]},b:{a:["angmsdab","Tab"],v:["angrtvb","notinvb","notnivb"],l:["bsolb","solb"],u:["bsolhsub","csub","lcub","nsub","rcub","sqsub","Sub","sub","subsub","supdsub","suphsub","supsub","vnsub"],r:["larrb","rarrb"],q:["lsqb","rsqb"],s:["minusb","plusb","timesb","trisb"],t:["sdotb"]},t:{r:["angrt","imagpart","npart","part","realpart","Sqrt","vangrt","Vert","vert"],s:["angst","ast","circledast","equest","exist","gtquest","iquest","lmoust","lowast","ltquest","midast","nexist","oast","quest","rmoust"],n:["awconint","awint","Cconint","cent","cirfnint","complement","Congruent","Conint","conint","cwconint","cwint","Element","fpartint","geqslant","iiiint","iiint","Int","int","leqslant","ngeqslant","nleqslant","NotCongruent","NotElement","NotReverseElement","npolint","oint","percnt","pointint","qint","quatint","ReverseElement","rppolint","scpolint","tint"],o:["bigodot","bNot","bnot","bot","capdot","Cdot","cdot","CenterDot","centerdot","CircleDot","congdot","ctdot","cupdot","DiacriticalDot","Dot","dot","DotDot","doteqdot","DoubleDot","dtdot","eDDot","Edot","eDot","edot","efDot","egsdot","elsdot","erDot","esdot","Gdot","gdot","gesdot","gtdot","gtrdot","Idot","inodot","isindot","lesdot","lessdot","Lmidot","lmidot","ltdot","mDDot","middot","ncongdot","nedot","Not","not","notindot","odot","quot","sdot","simdot","subdot","subedot","supdot","supedot","tdot","topbot","tridot","TripleDot","utdot","xodot","Zdot","zdot"],f:["blacktriangleleft","circlearrowleft","curvearrowleft","downharpoonleft","looparrowleft","mapstoleft","ntriangleleft","triangleleft","upharpoonleft","vartriangleleft"],h:["blacktriangleright","circlearrowright","curvearrowright","dfisht","downharpoonright","homtht","lfisht","looparrowright","ntriangleright","rfisht","triangleright","ufisht","upharpoonright","vartriangleright"],e:["bullet","caret","emptyset","LeftAngleBracket","LeftDoubleBracket","NotSquareSubset","NotSquareSuperset","NotSubset","NotSuperset","nsubset","nsupset","OverBracket","RightAngleBracket","RightDoubleBracket","sqsubset","sqsupset","SquareSubset","SquareSuperset","Subset","subset","Superset","Supset","supset","target","UnderBracket"],i:["clubsuit","diamondsuit","heartsuit","it","spadesuit"],a:["commat","flat","Hat","lat","phmmat","SuchThat"],c:["Coproduct","Product","rect","sect"],G:["Gt","nGt"],g:["gt","ngt","nvgt","ogt","rpargt"],l:["hamilt","lparlt","lt","malt","nlt","nvlt","olt","submult","supmult"],L:["Lt","nLt"],x:["sext","twixt"],m:["smt"]},n:{o:["Aogon","aogon","ApplyFunction","backepsilon","caron","Ccaron","ccaron","Colon","colon","Dcaron","dcaron","Ecaron","ecaron","ecolon","Eogon","eogon","Epsilon","epsilon","eqcolon","expectation","hercon","Intersection","Iogon","iogon","Lcaron","lcaron","Ncaron","ncaron","ogon","Omicron","omicron","Proportion","Rcaron","rcaron","Scaron","scaron","SquareIntersection","SquareUnion","straightepsilon","Tcaron","tcaron","Union","Uogon","uogon","Upsilon","upsilon","varepsilon","Zcaron","zcaron"],g:["Assign"],e:["between","curren","hyphen","kgreen","yen"],w:["bigtriangledown","blacktriangledown","frown","leftharpoondown","mapstodown","rightharpoondown","sfrown","triangledown"],f:["compfn"],i:["disin","iinfin","in","infin","isin","notin","nvinfin"],r:["dlcorn","drcorn","thorn","ulcorn","urcorn"],a:["lagran"],m:["plusmn","setmn","ssetmn"]},s:{o:["apos","mstpos","napos"],u:["becaus","bigoplus","biguplus","boxminus","boxplus","CircleMinus","CirclePlus","dotminus","dotplus","eplus","loplus","minus","MinusPlus","mnplus","ominus","oplus","plus","PlusMinus","roplus","setminus","simplus","smallsetminus","subplus","supplus","triminus","triplus","UnionPlus","uplus","xoplus","xuplus"],i:["Bernoullis","nis","OverParenthesis","UnderParenthesis","xnis"],e:["bigotimes","boxtimes","CircleTimes","complexes","divideontimes","ges","gesles","Implies","InvisibleTimes","lates","leftthreetimes","les","lesges","lotimes","ltimes","nges","nles","NotPrecedes","Otimes","otimes","Precedes","primes","rightthreetimes","rotimes","RoundImplies","rtimes","smtes","spades","times"],p:["caps","ccaps","ccups","cups","sqcaps","sqcups"],y:["Cayleys"],b:["clubs"],s:["Cross","cross","eqslantless","GreaterEqualLess","GreaterLess","gtreqless","gtreqqless","gtrless","LessLess","NestedLessLess","nless","NotGreaterLess","NotLess","NotLessLess","NotNestedLessLess","olcross"],m:["diams"],w:["downdownarrows","leftleftarrows","leftrightarrows","rightleftarrows","rightrightarrows","upuparrows"],g:["egs"],r:["elinters","integers"],l:["els","equals","models","naturals","rationals","reals"],t:["Exists","hearts","nexists","NotExists"],n:["fltns","isins","leftrightharpoons","quaternions","rightleftharpoons","strns"],f:["larrbfs","larrfs","rarrbfs","rarrfs"],d:["NotSucceeds","Succeeds"],a:["otimesas"]},x:{o:["approx","boxbox","gnapprox","gtrapprox","lessapprox","lnapprox","napprox","precapprox","precnapprox","succapprox","succnapprox","thickapprox"],n:["divonx"],r:["rx"]},q:{e:["approxeq","asympeq","backsimeq","Bumpeq","bumpeq","circeq","coloneq","ddotseq","doteq","fallingdotseq","geq","gneq","leq","lneq","ngeq","nleq","npreceq","nsimeq","nsubseteq","nsucceq","nsupseteq","ntrianglelefteq","ntrianglerighteq","preccurlyeq","preceq","questeq","risingdotseq","simeq","sqsubseteq","sqsupseteq","subseteq","subsetneq","succcurlyeq","succeq","supseteq","supsetneq","trianglelefteq","triangleq","trianglerighteq","varsubsetneq","varsupsetneq","veeeq","wedgeq"],q:["geqq","gneqq","gvertneqq","leqq","lneqq","lvertneqq","ngeqq","nleqq","nsubseteqq","nsupseteqq","precneqq","subseteqq","subsetneqq","succneqq","supseteqq","supsetneqq","varsubsetneqq","varsupsetneqq"]},l:{m:["Auml","auml","Euml","euml","gsiml","Iuml","iuml","Ouml","ouml","siml","uml","Uuml","uuml","Yuml","yuml"],D:["boxDl"],d:["boxdl"],U:["boxUl"],u:["boxul","lharul","rharul"],V:["boxVl"],v:["boxvl"],o:["bsol","dsol","gesdotol","osol","sol","suphsol"],l:["bull","ell","ForAll","forall","hybull","ll"],i:["Ccedil","ccedil","cedil","Gcedil","Kcedil","kcedil","lAtail","latail","Lcedil","lcedil","lceil","leftarrowtail","Ncedil","ncedil","permil","rAtail","ratail","Rcedil","rcedil","rceil","rightarrowtail","Scedil","scedil","Tcedil","tcedil"],a:["ClockwiseContourIntegral","ContourIntegral","CounterClockwiseContourIntegral","DotEqual","DoubleContourIntegral","Equal","GreaterEqual","GreaterFullEqual","GreaterSlantEqual","HumpEqual","intcal","Integral","intercal","LeftTriangleEqual","LessFullEqual","LessSlantEqual","natural","NotEqual","NotGreaterEqual","NotGreaterFullEqual","NotGreaterSlantEqual","NotHumpEqual","NotLeftTriangleEqual","NotLessEqual","NotLessSlantEqual","NotPrecedesEqual","NotPrecedesSlantEqual","NotRightTriangleEqual","NotSquareSubsetEqual","NotSquareSupersetEqual","NotSubsetEqual","NotSucceedsEqual","NotSucceedsSlantEqual","NotSupersetEqual","NotTildeEqual","NotTildeFullEqual","PrecedesEqual","PrecedesSlantEqual","Proportional","real","RightTriangleEqual","SquareSubsetEqual","SquareSupersetEqual","SubsetEqual","SucceedsEqual","SucceedsSlantEqual","SupersetEqual","TildeEqual","TildeFullEqual"],r:["cudarrl","dharl","uharl"],e:["Del","el","gel","gimel","nparallel","nshortparallel","parallel","prurel","shortparallel"],s:["eparsl","eqvparsl","frasl","gesl","nparsl","parsl","smeparsl"],c:["excl","iexcl"],E:["gEl"],g:["gl","ntgl"],p:["larrpl","rarrpl"],t:["larrtl","Rarrtl","rarrtl"],L:["Ll","nLl"],h:["Vdashl"]},k:{r:["bbrk","bbrktbrk","checkmark","fork","lbbrk","lobrk","pitchfork","rbbrk","robrk","tbrk","topfork"],n:["blank","pertenk"],c:["block","check","lbrack","planck","rbrack"],o:["Dstrok","dstrok","Hstrok","hstrok","Lstrok","lstrok","Tstrok","tstrok"],e:["Hacek"],h:["intlarhk","larrhk","nearhk","nwarhk","rarrhk","searhk","swarhk"],l:["lhblk","uhblk"],a:["NoBreak"]},o:{u:["bdquo","laquo","ldquo","lsaquo","lsquo","raquo","rdquo","rsaquo","rsquo","sbquo"],r:["euro","micro","numero"],t:["gesdoto","lesdoto","longmapsto","mapsto","propto","varpropto"],h:["mho","Rho","rho","varrho"],d:["plusdo"],w:["plustwo"],i:["ratio"]},i:{s:["bepsi","epsi","Psi","psi","Upsi","upsi"],m:["bsemi","semi"],h:["Chi","chi","Phi","phi","straightphi","varphi"],r:["dtri","lltri","lrtri","ltri","nltri","nrtri","rtri","rtriltri","ultri","urtri","utri","vltri","vrtri","xdtri","xutri"],i:["ii"],n:["ni","notni"],P:["Pi"],p:["pi","varpi"],X:["Xi"],x:["xi"]},u:{o:["bernou"],H:["boxHu"],h:["boxhu"],l:["lbrkslu","rbrkslu"],r:["lharu","rharu"],d:["minusdu","plusdu"],M:["Mu"],m:["mu"],N:["Nu"],n:["nu"],q:["squ"],a:["Tau","tau"]},w:{o:["bkarow","dbkarow","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleUpArrow","DoubleUpDownArrow","DownArrow","Downarrow","downarrow","DownArrowUpArrow","DownTeeArrow","drbkarow","hksearow","hkswarow","hookleftarrow","hookrightarrow","LeftArrow","Leftarrow","leftarrow","LeftArrowRightArrow","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightsquigarrow","LeftTeeArrow","Lleftarrow","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","LongRightArrow","Longrightarrow","longrightarrow","LowerLeftArrow","LowerRightArrow","nearrow","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nRightarrow","nrightarrow","nwarrow","RightArrow","Rightarrow","rightarrow","RightArrowLeftArrow","rightsquigarrow","RightTeeArrow","Rrightarrow","searrow","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","swarrow","twoheadleftarrow","twoheadrightarrow","UpArrow","Uparrow","uparrow","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpperLeftArrow","UpperRightArrow","UpTeeArrow"],r:["harrw","nrarrw","rarrw"]},L:{D:["boxDL"],d:["boxdL"],U:["boxUL"],u:["boxuL"],V:["boxVL"],v:["boxvL"]},R:{D:["boxDR"],d:["boxdR","circledR"],U:["boxUR"],u:["boxuR"],V:["boxVR"],v:["boxvR"]},H:{x:["boxH"],V:["boxVH"],v:["boxvH"],T:["ETH"]},D:{H:["boxHD"],h:["boxhD"],l:["CapitalDifferentialD","DifferentialD","PartialD"],D:["DD","equivDD"]},U:{H:["boxHU"],h:["boxhU"]},V:{x:["boxV"]},S:{d:["circledS"],o:["oS"]},Y:{P:["COPY"]},G:{N:["ENG"],E:["REG"]},j:{l:["glj"],w:["zwj"],n:["zwnj"]},T:{G:["GT"],L:["LT"],O:["QUOT"]},I:{y:["ImaginaryI"]},z:{o:["loz"]},N:{R:["THORN"]}},v={a:{a:["aacute"],b:["abreve"],c:["ac","acd","ace","acirc","acute","acy"],e:["aelig"],f:["af","afr"],g:["agrave"],l:["alefsym","aleph","alpha"],m:["amacr","amalg","amp"],n:["and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr"],o:["aogon","aopf"],p:["ap","apacir","ape","apid","apos","applyfunction","approx","approxeq"],r:["aring"],s:["ascr","assign","ast","asymp","asympeq"],t:["atilde"],u:["auml"],w:["awconint","awint"]},b:{a:["backcong","backepsilon","backprime","backsim","backsimeq","backslash","barv","barvee","barwed","barwedge"],b:["bbrk","bbrktbrk"],c:["bcong","bcy"],d:["bdquo"],e:["becaus","because","bemptyv","bepsi","bernou","bernoullis","beta","beth","between"],f:["bfr"],i:["bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge"],k:["bkarow"],l:["blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block"],n:["bne","bnequiv","bnot"],o:["bopf","bot","bottom","bowtie","boxbox","boxdl","boxdr","boxh","boxhd","boxhu","boxminus","boxplus","boxtimes","boxul","boxur","boxv","boxvh","boxvl","boxvr"],p:["bprime"],r:["breve","brvbar"],s:["bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub"],u:["bull","bullet","bump","bumpe","bumpeq"]},c:{a:["cacute","cap","capand","capbrcup","capcap","capcup","capdot","capitaldifferentiald","caps","caret","caron","cayleys"],c:["ccaps","ccaron","ccedil","ccirc","cconint","ccups","ccupssm"],d:["cdot"],e:["cedil","cedilla","cemptyv","cent","centerdot"],f:["cfr"],h:["chcy","check","checkmark","chi"],i:["cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledot","circledr","circleds","circleminus","circleplus","circletimes","cire","cirfnint","cirmid","cirscir"],l:["clockwisecontourintegral","closecurlydoublequote","closecurlyquote","clubs","clubsuit"],o:["colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","congruent","conint","contourintegral","copf","coprod","coproduct","copy","copysr","counterclockwisecontourintegral"],r:["crarr","cross"],s:["cscr","csub","csube","csup","csupe"],t:["ctdot"],u:["cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed"],w:["cwconint","cwint"],y:["cylcty"]},d:{a:["dagger","daleth","darr","dash","dashv"],b:["dbkarow","dblac"],c:["dcaron","dcy"],d:["dd","ddagger","ddarr","ddotrahd","ddotseq"],e:["deg","del","delta","demptyv"],f:["dfisht","dfr"],h:["dhar","dharl","dharr"],i:["diacriticalacute","diacriticaldot","diacriticaldoubleacute","diacriticalgrave","diacriticaltilde","diam","diamond","diamondsuit","diams","die","differentiald","digamma","disin","div","divide","divideontimes","divonx"],j:["djcy"],l:["dlcorn","dlcrop"],o:["dollar","dopf","dot","dotdot","doteq","doteqdot","dotequal","dotminus","dotplus","dotsquare","doublebarwedge","doublecontourintegral","doubledot","doubledownarrow","doubleleftarrow","doubleleftrightarrow","doublelefttee","doublelongleftarrow","doublelongleftrightarrow","doublelongrightarrow","doublerightarrow","doublerighttee","doubleuparrow","doubleupdownarrow","doubleverticalbar","downarrow","downarrowbar","downarrowuparrow","downbreve","downdownarrows","downharpoonleft","downharpoonright","downleftrightvector","downleftteevector","downleftvector","downleftvectorbar","downrightteevector","downrightvector","downrightvectorbar","downtee","downteearrow"],r:["drbkarow","drcorn","drcrop"],s:["dscr","dscy","dsol","dstrok"],t:["dtdot","dtri","dtrif"],u:["duarr","duhar"],w:["dwangle"],z:["dzcy","dzigrarr"]},e:{a:["eacute","easter"],c:["ecaron","ecir","ecirc","ecolon","ecy"],d:["eddot","edot"],e:["ee"],f:["efdot","efr"],g:["eg","egrave","egs","egsdot"],l:["el","element","elinters","ell","els","elsdot"],m:["emacr","empty","emptyset","emptysmallsquare","emptyv","emptyverysmallsquare","emsp","emsp13","emsp14"],n:["eng","ensp"],o:["eogon","eopf"],p:["epar","eparsl","eplus","epsi","epsilon","epsiv"],q:["eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equal","equals","equaltilde","equest","equilibrium","equiv","equivdd","eqvparsl"],r:["erarr","erdot"],s:["escr","esdot","esim"],t:["eta","eth"],u:["euml","euro"],x:["excl","exist","exists","expectation","exponentiale"]},f:{a:["fallingdotseq"],c:["fcy"],e:["female"],f:["ffilig","fflig","ffllig","ffr"],i:["filig","filledsmallsquare","filledverysmallsquare"],j:["fjlig"],l:["flat","fllig","fltns"],n:["fnof"],o:["fopf","forall","fork","forkv","fouriertrf"],p:["fpartint"],r:["frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown"],s:["fscr"]},g:{a:["gacute","gamma","gammad","gap"],b:["gbreve"],c:["gcedil","gcirc","gcy"],d:["gdot"],e:["ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles"],f:["gfr"],g:["gg","ggg"],i:["gimel"],j:["gjcy"],l:["gl","gla","gle","glj"],n:["gnap","gnapprox","gne","gneq","gneqq","gnsim"],o:["gopf"],r:["grave","greaterequal","greaterequalless","greaterfullequal","greatergreater","greaterless","greaterslantequal","greatertilde"],s:["gscr","gsim","gsime","gsiml"],t:["gt","gtcc","gtcir","gtdot","gtlpar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim"],v:["gvertneqq","gvne"]},h:{a:["hacek","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hat"],b:["hbar"],c:["hcirc"],e:["hearts","heartsuit","hellip","hercon"],f:["hfr"],i:["hilbertspace"],k:["hksearow","hkswarow"],o:["hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","horizontalline"],s:["hscr","hslash","hstrok"],u:["humpdownhump","humpequal"],y:["hybull","hyphen"]},i:{a:["iacute"],c:["ic","icirc","icy"],d:["idot"],e:["iecy","iexcl"],f:["iff","ifr"],g:["igrave"],i:["ii","iiiint","iiint","iinfin","iiota"],j:["ijlig"],m:["im","imacr","image","imaginaryi","imagline","imagpart","imath","imof","imped","implies"],n:["in","incare","infin","infintie","inodot","int","intcal","integers","integral","intercal","intersection","intlarhk","intprod","invisiblecomma","invisibletimes"],o:["iocy","iogon","iopf","iota"],p:["iprod"],q:["iquest"],s:["iscr","isin","isindot","isine","isins","isinsv","isinv"],t:["it","itilde"],u:["iukcy","iuml"]},j:{c:["jcirc","jcy"],f:["jfr"],m:["jmath"],o:["jopf"],s:["jscr","jsercy"],u:["jukcy"]},k:{a:["kappa","kappav"],c:["kcedil","kcy"],f:["kfr"],g:["kgreen"],h:["khcy"],j:["kjcy"],o:["kopf"],s:["kscr"]},l:{a:["laarr","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laplacetrf","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates"],b:["lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu"],c:["lcaron","lcedil","lceil","lcub","lcy"],d:["ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh"],e:["le","leftanglebracket","leftarrow","leftarrowbar","leftarrowrightarrow","leftarrowtail","leftceiling","leftdoublebracket","leftdownteevector","leftdownvector","leftdownvectorbar","leftfloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftrightvector","lefttee","leftteearrow","leftteevector","leftthreetimes","lefttriangle","lefttrianglebar","lefttriangleequal","leftupdownvector","leftupteevector","leftupvector","leftupvectorbar","leftvector","leftvectorbar","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessequalgreater","lessfullequal","lessgreater","lessgtr","lessless","lesssim","lessslantequal","lesstilde"],f:["lfisht","lfloor","lfr"],g:["lg","lge"],h:["lhar","lhard","lharu","lharul","lhblk"],j:["ljcy"],l:["ll","llarr","llcorner","lleftarrow","llhard","lltri"],m:["lmidot","lmoust","lmoustache"],n:["lnap","lnapprox","lne","lneq","lneqq","lnsim"],o:["loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","lowerleftarrow","lowerrightarrow","loz","lozenge","lozf"],p:["lpar","lparlt"],r:["lrarr","lrcorner","lrhar","lrhard","lrm","lrtri"],s:["lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok"],t:["lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrpar"],u:["lurdshar","luruhar"],v:["lvertneqq","lvne"]},m:{a:["macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker"],c:["mcomma","mcy"],d:["mdash","mddot"],e:["measuredangle","mediumspace","mellintrf"],f:["mfr"],h:["mho"],i:["micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","minusplus"],l:["mlcp","mldr"],n:["mnplus"],o:["models","mopf"],p:["mp"],s:["mscr","mstpos"],u:["mu","multimap","mumap"]},n:{a:["nabla","nacute","nang","nap","nape","napid","napos","napprox","natur","natural","naturals"],b:["nbsp","nbump","nbumpe"],c:["ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy"],d:["ndash"],e:["ne","nearhk","nearr","nearrow","nedot","negativemediumspace","negativethickspace","negativethinspace","negativeverythinspace","nequiv","nesear","nesim","nestedgreatergreater","nestedlessless","newline","nexist","nexists"],f:["nfr"],g:["nge","ngeq","ngeqq","ngeqslant","nges","ngg","ngsim","ngt","ngtr","ngtv"],h:["nharr","nhpar"],i:["ni","nis","nisd","niv"],j:["njcy"],l:["nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nll","nlsim","nlt","nltri","nltrie","nltv"],m:["nmid"],o:["nobreak","nonbreakingspace","nopf","not","notcongruent","notcupcap","notdoubleverticalbar","notelement","notequal","notequaltilde","notexists","notgreater","notgreaterequal","notgreaterfullequal","notgreatergreater","notgreaterless","notgreaterslantequal","notgreatertilde","nothumpdownhump","nothumpequal","notin","notindot","notine","notinva","notinvb","notinvc","notlefttriangle","notlefttrianglebar","notlefttriangleequal","notless","notlessequal","notlessgreater","notlessless","notlessslantequal","notlesstilde","notnestedgreatergreater","notnestedlessless","notni","notniva","notnivb","notnivc","notprecedes","notprecedesequal","notprecedesslantequal","notreverseelement","notrighttriangle","notrighttrianglebar","notrighttriangleequal","notsquaresubset","notsquaresubsetequal","notsquaresuperset","notsquaresupersetequal","notsubset","notsubsetequal","notsucceeds","notsucceedsequal","notsucceedsslantequal","notsucceedstilde","notsuperset","notsupersetequal","nottilde","nottildeequal","nottildefullequal","nottildetilde","notverticalbar"],p:["npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq"],r:["nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie"],s:["nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupe","nsupset","nsupseteq","nsupseteqq"],t:["ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq"],u:["nu","num","numero","numsp"],v:["nvap","nvdash","nvge","nvgt","nvharr","nvinfin","nvlarr","nvle","nvlt","nvltrie","nvrarr","nvrtrie","nvsim"],w:["nwarhk","nwarr","nwarrow","nwnear"]},o:{a:["oacute","oast"],c:["ocir","ocirc","ocy"],d:["odash","odblac","odiv","odot","odsold"],e:["oelig"],f:["ofcir","ofr"],g:["ogon","ograve","ogt"],h:["ohbar","ohm"],i:["oint"],l:["olarr","olcir","olcross","oline","olt"],m:["omacr","omega","omicron","omid","ominus"],o:["oopf"],p:["opar","opencurlydoublequote","opencurlyquote","operp","oplus"],r:["or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv"],s:["os","oscr","oslash","osol"],t:["otilde","otimes","otimesas"],u:["ouml"],v:["ovbar","overbar","overbrace","overbracket","overparenthesis"]},p:{a:["par","para","parallel","parsim","parsl","part","partiald"],c:["pcy"],e:["percnt","period","permil","perp","pertenk"],f:["pfr"],h:["phi","phiv","phmmat","phone"],i:["pi","pitchfork","piv"],l:["planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusminus","plusmn","plussim","plustwo"],m:["pm"],o:["poincareplane","pointint","popf","pound"],r:["pr","prap","prcue","pre","prec","precapprox","preccurlyeq","precedes","precedesequal","precedesslantequal","precedestilde","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnap","prne","prnsim","prod","product","profalar","profline","profsurf","prop","proportion","proportional","propto","prsim","prurel"],s:["pscr","psi"],u:["puncsp"]},q:{f:["qfr"],i:["qint"],o:["qopf"],p:["qprime"],s:["qscr"],u:["quaternions","quatint","quest","questeq","quot"]},r:{a:["raarr","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals"],b:["rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu"],c:["rcaron","rcedil","rceil","rcub","rcy"],d:["rdca","rdldhar","rdquo","rdquor","rdsh"],e:["re","real","realine","realpart","reals","rect","reg","reverseelement","reverseequilibrium","reverseupequilibrium"],f:["rfisht","rfloor","rfr"],h:["rhar","rhard","rharu","rharul","rho","rhov"],i:["rightanglebracket","rightarrow","rightarrowbar","rightarrowleftarrow","rightarrowtail","rightceiling","rightdoublebracket","rightdownteevector","rightdownvector","rightdownvectorbar","rightfloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","righttee","rightteearrow","rightteevector","rightthreetimes","righttriangle","righttrianglebar","righttriangleequal","rightupdownvector","rightupteevector","rightupvector","rightupvectorbar","rightvector","rightvectorbar","ring","risingdotseq"],l:["rlarr","rlhar","rlm"],m:["rmoust","rmoustache"],n:["rnmid"],o:["roang","roarr","robrk","ropar","ropf","roplus","rotimes","roundimplies"],p:["rpar","rpargt","rppolint"],r:["rrarr","rrightarrow"],s:["rsaquo","rscr","rsh","rsqb","rsquo","rsquor"],t:["rthree","rtimes","rtri","rtrie","rtrif","rtriltri"],u:["ruledelayed","ruluhar"],x:["rx"]},s:{a:["sacute"],b:["sbquo"],c:["sc","scap","scaron","sccue","sce","scedil","scirc","scnap","scne","scnsim","scpolint","scsim","scy"],d:["sdot","sdotb","sdote"],e:["searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext"],f:["sfr","sfrown"],h:["sharp","shchcy","shcy","shortdownarrow","shortleftarrow","shortmid","shortparallel","shortrightarrow","shortuparrow","shy"],i:["sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simge","siml","simle","simne","simplus","simrarr"],l:["slarr"],m:["smallcircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes"],o:["softcy","sol","solb","solbar","sopf"],p:["spades","spadesuit","spar"],q:["sqcap","sqcaps","sqcup","sqcups","sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squareintersection","squaresubset","squaresubsetequal","squaresuperset","squaresupersetequal","squareunion","squarf","squf"],r:["srarr"],s:["sscr","ssetmn","ssmile","sstarf"],t:["star","starf","straightepsilon","straightphi","strns"],u:["sub","subdot","sube","subedot","submult","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetequal","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeeds","succeedsequal","succeedsslantequal","succeedstilde","succeq","succnapprox","succneqq","succnsim","succsim","suchthat","sum","sung","sup","sup1","sup2","sup3","supdot","supdsub","supe","supedot","superset","supersetequal","suphsol","suphsub","suplarr","supmult","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup"],w:["swarhk","swarr","swarrow","swnwar"],z:["szlig"]},t:{a:["tab","target","tau"],b:["tbrk"],c:["tcaron","tcedil","tcy"],d:["tdot"],e:["telrec"],f:["tfr"],h:["there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thickspace","thinsp","thinspace","thkap","thksim","thorn"],i:["tilde","tildeequal","tildefullequal","tildetilde","times","timesb","timesbar","timesd","tint"],o:["toea","top","topbot","topcir","topf","topfork","tosa"],p:["tprime"],r:["trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","tripledot","triplus","trisb","tritime","trpezium"],s:["tscr","tscy","tshcy","tstrok"],w:["twixt","twoheadleftarrow","twoheadrightarrow"]},u:{a:["uacute","uarr","uarrocir"],b:["ubrcy","ubreve"],c:["ucirc","ucy"],d:["udarr","udblac","udhar"],f:["ufisht","ufr"],g:["ugrave"],h:["uhar","uharl","uharr","uhblk"],l:["ulcorn","ulcorner","ulcrop","ultri"],m:["umacr","uml"],n:["underbar","underbrace","underbracket","underparenthesis","union","unionplus"],o:["uogon","uopf"],p:["uparrow","uparrowbar","uparrowdownarrow","updownarrow","upequilibrium","upharpoonleft","upharpoonright","uplus","upperleftarrow","upperrightarrow","upsi","upsih","upsilon","uptee","upteearrow","upuparrows"],r:["urcorn","urcorner","urcrop","uring","urtri"],s:["uscr"],t:["utdot","utilde","utri","utrif"],u:["uuarr","uuml"],w:["uwangle"]},v:{a:["vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright"],b:["vbar","vbarv"],c:["vcy"],d:["vdash","vdashl"],e:["vee","veebar","veeeq","vellip","verbar","vert","verticalbar","verticalline","verticalseparator","verticaltilde","verythinspace"],f:["vfr"],l:["vltri"],n:["vnsub","vnsup"],o:["vopf"],p:["vprop"],r:["vrtri"],s:["vscr","vsubne","vsupne"],v:["vvdash"],z:["vzigzag"]},w:{c:["wcirc"],e:["wedbar","wedge","wedgeq","weierp"],f:["wfr"],o:["wopf"],p:["wp"],r:["wr","wreath"],s:["wscr"]},x:{c:["xcap","xcirc","xcup"],d:["xdtri"],f:["xfr"],h:["xharr"],i:["xi"],l:["xlarr"],m:["xmap"],n:["xnis"],o:["xodot","xopf","xoplus","xotime"],r:["xrarr"],s:["xscr","xsqcup"],u:["xuplus","xutri"],v:["xvee"],w:["xwedge"]},y:{a:["yacute","yacy"],c:["ycirc","ycy"],e:["yen"],f:["yfr"],i:["yicy"],o:["yopf"],s:["yscr"],u:["yucy","yuml"]},z:{a:["zacute"],c:["zcaron","zcy"],d:["zdot"],e:["zeetrf","zerowidthspace","zeta"],f:["zfr"],h:["zhcy"],i:["zigrarr"],o:["zopf"],s:["zscr"],w:["zwj","zwnj"]}},q={ac:{addAmpIfSemiPresent:"edge only",addSemiIfAmpPresent:!1},acute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Alpha:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},alpha:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},amp:{addAmpIfSemiPresent:"edge only",addSemiIfAmpPresent:!0},And:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},and:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},ange:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},angle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},angst:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ape:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},approx:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Aring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},aring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Ascr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ascr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Assign:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ast:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},atilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},Backslash:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},barwedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},becaus:{addAmpIfSemiPresent:!0,addSemiIfAmpPresent:"edge only"},Because:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},because:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bepsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Bernoullis:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Beta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},beta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},beth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},between:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},blank:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},block:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bottom:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bowtie:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},breve:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bull:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bullet:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bump:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Cap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},capand:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},caps:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},caret:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},caron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cedil:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Cedilla:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cent:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},check:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},checkmark:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Chi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},chi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cir:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},circ:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},clubs:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},clubsuit:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Colon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},colon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Colone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},colone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},comma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},commat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},comp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},complement:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},complexes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cong:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Congruent:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},conint:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},copf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},coprod:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},COPY:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},copy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Cross:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cross:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Cup:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cup:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cups:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Dagger:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dagger:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},daleth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},darr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dash:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},DD:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dd:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},deg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Del:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Delta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},delta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dharr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},diam:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Diamond:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},diamond:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},diams:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},die:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},digamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},disin:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},div:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},divide:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dollar:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Dot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dsol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dtri:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},easter:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ecir:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ecolon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ecy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},edot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ee:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},efr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},egrave:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},egs:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},el:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ell:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},els:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},empty:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ENG:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},eng:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},epsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Epsilon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},epsilon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Equal:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equest:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Equilibrium:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equiv:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},escr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},esim:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Eta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ETH:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},euro:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},excl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},exist:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Exists:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},expectation:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},female:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},flat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},fork:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},frown:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Gamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gcy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gel:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},geq:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ges:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gesl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gla:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},grave:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},GT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},half:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Hat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},hearts:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},hopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},hyphen:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ic:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},icy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iff:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ii:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},image:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},imped:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},in:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},int:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},integers:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},iocy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iogon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iota:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},isin:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},it:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Kappa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},kappa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},kopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Lambda:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lambda:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},late:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lates:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},le:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},leg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},leq:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},les:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ll:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},lne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},lozenge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lsh:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},LT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ltimes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},male:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},malt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},map:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},marker:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},mid:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},minus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},models:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},mp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},mu:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},nang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},natural:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},naturals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ncy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ngt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ni:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nis:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nles:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nless:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nlt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Not:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},not:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},nsc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nsce:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nu:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},num:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ogt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ohm:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oline:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},olt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Omega:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},omega:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Omicron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},omicron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},opar:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},or:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},order:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oror:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},orv:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},osol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},par:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},para:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},parallel:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},part:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},phi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},phone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Pi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pitchfork:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},plus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pm:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},popf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},pound:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prime:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},primes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prod:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Product:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prop:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Proportion:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Proportional:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},psi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},quest:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},QUOT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},quot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},race:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},range:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ratio:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Re:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},real:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},reals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rect:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},REG:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},reg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rsh:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},scap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sce:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},scy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sdot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sect:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},semi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sharp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},shy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sigma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sigma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sim:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},spades:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},square:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Star:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},star:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sub:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sub:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sube:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sum:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sum:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tab:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},target:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tau:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tau:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},therefore:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Theta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},theta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},THORN:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},thorn:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},times:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tint:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},top:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tosa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},TRADE:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},trade:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},triangle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},trie:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ucy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},uml:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Union:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},uplus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Upsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},upsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},uring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},vee:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Vert:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},vert:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},wedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Wedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},wreath:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Xi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},xi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Ycirc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ycirc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ycy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},yen:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Zacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},zacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Zeta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},zeta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1}};function I(e){if("string"!=typeof e||!e.length||!e.startsWith("&")||!e.endsWith(";"))throw new Error(`all-named-html-entities/decode(): [THROW_ID_01] Input must be an HTML entity with leading ampersand and trailing semicolon, but "${e}" was given`);const r=e.slice(1,e.length-1);return w[r]?w[r]:null}const P=31;function x(e){const r={value:e,hungry:!1,optional:!1};return(r.value.endsWith("?*")||r.value.endsWith("*?"))&&r.value.length>2?(r.value=r.value.slice(0,r.value.length-2),r.optional=!0,r.hungry=!0):r.value.endsWith("?")&&r.value.length>1?(r.value=r.value.slice(0,r.value.length-1),r.optional=!0):r.value.endsWith("*")&&r.value.length>1&&(r.value=r.value.slice(0,r.value.length-1),r.hungry=!0),r}function k(e){return"number"==typeof e}function E(e){return"string"==typeof e}function L(e,r){if("string"!=typeof e||!e.length)return null;if(r&&"number"==typeof r||(r=0),!e[r+1])return null;if(e[r+1]&&e[r+1].trim().length)return r+1;if(e[r+2]&&e[r+2].trim().length)return r+2;for(let t=r+1,a=e.length;t<a;t++)if(e[t].trim().length)return t;return null}function T(e,r){if("string"!=typeof e||!e.length)return null;if(r&&"number"==typeof r||(r=0),r<1)return null;if(e[r-1]&&e[r-1].trim().length)return r-1;if(e[r-2]&&e[r-2].trim().length)return r-2;for(let t=r;t--;)if(e[t]&&e[t].trim().length)return t;return null}function C(e,r,t,a,n){if("string"!=typeof r||!r.length)return null;if(t&&"number"==typeof t||(t=0),"right"===e&&!r[t+1]||"left"===e&&!r[t-1])return null;let i=t;const o=[];let s,l,c,d=0;for(;d<n.length;){if(!E(n[d])||!n[d].length){d++;continue}const{value:t,optional:p,hungry:u}=x(n[d]),m="right"===e?L(r,i):T(r,i);if(!(a.i&&r[m].toLowerCase()===t.toLowerCase()||!a.i&&r[m]===t)){if(p){d++;continue}if(c){d++,c=void 0;continue}return null}{const n="right"===e?L(r,m):T(r,m);u&&(a.i&&r[n].toLowerCase()===t.toLowerCase()||!a.i&&r[n]===t)?c=!0:d++,"right"===e&&m>i+1?o.push([i+1,m]):"left"===e&&m<i-1&&o.unshift([m+1,i]),i=m,"right"===e?(void 0===s&&(s=m),l=m):(void 0===l&&(l=m),s=m)}}return void 0===s?null:{gaps:o,leftmostChar:s,rightmostChar:l}}function N(e,r,...t){if(!t.length)return T(e,r);const a={i:!1};let n;return C("left",e,r,n=f(t[0])?Object.assign({},a,t.shift()):a,Array.from(t).reverse())}function D(e,r,...t){if(!t.length)return L(e,r);const a={i:!1};let n;return C("right",e,r,n=f(t[0])?Object.assign({},a,t.shift()):a,t)}function R(e,r,t,a,n){if("string"!=typeof r||!r.length)return null;if(t&&"number"==typeof t||(t=0),"right"===e&&!r[t+1]||"left"===e&&(k(t)&&t<1||"0"===t))return null;let i=null,o=null;do{null!==(i="right"===e?D(r,k(o)?o:t,...n):N(r,k(o)?o:t,...n))&&(o="right"===e?i.rightmostChar:i.leftmostChar)}while(i);if(null!=o&&"right"===e&&o++,null===o)return null;if("right"===e){if(r[o]&&r[o].trim().length)return o;const e=L(r,o);if(0===a.mode){if(e===o+1)return o;if(!(r.slice(o,e||r.length).trim().length||r.slice(o,e||r.length).includes("\n")||r.slice(o,e||r.length).includes("\r")))return e?e-1:r.length;for(let e=o,t=r.length;e<t;e++)if("\n\r".includes(r[e]))return e}else{if(1===a.mode)return o;if(2===a.mode){const e=r.slice(o);if(e.trim().length||e.includes("\n")||e.includes("\r"))for(let e=o,t=r.length;e<t;e++)if(r[e].trim().length||"\n\r".includes(r[e]))return e;return r.length}}return e||r.length}if(r[o]&&r[o-1]&&r[o-1].trim().length)return o;const s=T(r,o);if(0===a.mode){if(s===o-2)return o;if(r.slice(0,o).trim().length||r.slice(0,o).includes("\n")||r.slice(0,o).includes("\r"))for(let e=o;e--;)if("\n\r".includes(r[e])||r[e].trim().length)return e+1+(r[e].trim().length?1:0);return 0}if(1===a.mode)return o;if(2===a.mode){const e=r.slice(0,o);if(e.trim().length||e.includes("\n")||e.includes("\r"))for(let e=o;e--;)if(r[e].trim().length||"\n\r".includes(r[e]))return e+1;return 0}return null!==s?s+1:0}function j(e,r,...t){if(!t.length||1===t.length&&f(t[0]))return null;const a={mode:0};if(f(t[0])){const n=Object.assign({},a,b(t[0]));if(n.mode){if(E(n.mode)&&"0123".includes(n.mode))n.mode=Number.parseInt(n.mode,10);else if(!k(n.mode))throw new Error(`string-left-right/chompLeft(): [THROW_ID_01] the opts.mode is wrong! It should be 0, 1, 2 or 3. It was given as ${n.mode} (type ${typeof n.mode})`)}else n.mode=0;return R("left",e,r,n,b(t).slice(1))}return E(t[0])?R("left",e,r,a,b(t)):R("left",e,r,a,b(t).slice(1))}function _(e,r,...t){if(!t.length||1===t.length&&f(t[0]))return null;const a={mode:0};if(f(t[0])){const n=Object.assign({},a,b(t[0]));if(n.mode){if(E(n.mode)&&"0123".includes(n.mode))n.mode=Number.parseInt(n.mode,10);else if(!k(n.mode))throw new Error(`string-left-right/chompRight(): [THROW_ID_02] the opts.mode is wrong! It should be 0, 1, 2 or 3. It was given as ${n.mode} (type ${typeof n.mode})`)}else n.mode=0;return R("right",e,r,n,b(t).slice(1))}return E(t[0])?R("right",e,r,a,b(t)):R("right",e,r,a,b(t).slice(1))}const O=Array.isArray;var V={"bad-character-acknowledge":{description:"https://www.fileformat.info/info/unicode/char/0006/index.htm",excerpt:"bad character - acknowledge",scope:"all"},"bad-character-application-program-command":{description:"http://www.fileformat.info/info/unicode/char/009f/index.htm",excerpt:"bad character - application program command",scope:"all"},"bad-character-backspace":{description:"https://www.fileformat.info/info/unicode/char/0008/index.htm",excerpt:"bad character - backspace",scope:"all"},"bad-character-bell":{description:"https://www.fileformat.info/info/unicode/char/0007/index.htm",excerpt:"bad character - bell",scope:"all"},"bad-character-break-permitted-here":{description:"http://www.fileformat.info/info/unicode/char/0082/index.htm",excerpt:"bad character - break permitted here",scope:"all"},"bad-character-cancel":{description:"https://www.fileformat.info/info/unicode/char/0018/index.htm",excerpt:"bad character - cancel",scope:"all"},"bad-character-cancel-character":{description:"http://www.fileformat.info/info/unicode/char/0094/index.htm",excerpt:"bad character - cancel character",scope:"all"},"bad-character-character-tabulation":{description:"https://www.fileformat.info/info/unicode/char/0009/index.htm",excerpt:"bad character - character tabulation",scope:"all"},"bad-character-character-tabulation-set":{description:"http://www.fileformat.info/info/unicode/char/0088/index.htm",excerpt:"bad character - character tabulation set",scope:"all"},"bad-character-character-tabulation-with-justification":{description:"http://www.fileformat.info/info/unicode/char/0089/index.htm",excerpt:"bad character - character tabulation with justification",scope:"all"},"bad-character-control-sequence-introducer":{description:"http://www.fileformat.info/info/unicode/char/009b/index.htm",excerpt:"bad character - control sequence introducer",scope:"all"},"bad-character-data-link-escape":{description:"https://www.fileformat.info/info/unicode/char/0010/index.htm",excerpt:"bad character - data link escape",scope:"all"},"bad-character-delete":{description:"http://www.fileformat.info/info/unicode/char/007f/index.htm",excerpt:"bad character - delete",scope:"all"},"bad-character-device-control-four":{description:"https://www.fileformat.info/info/unicode/char/0014/index.htm",excerpt:"bad character - device control four",scope:"all"},"bad-character-device-control-one":{description:"https://www.fileformat.info/info/unicode/char/0011/index.htm",excerpt:"bad character - device control one",scope:"all"},"bad-character-device-control-string":{description:"http://www.fileformat.info/info/unicode/char/0090/index.htm",excerpt:"bad character - device control string",scope:"all"},"bad-character-device-control-three":{description:"https://www.fileformat.info/info/unicode/char/0013/index.htm",excerpt:"bad character - device control three",scope:"all"},"bad-character-device-control-two":{description:"https://www.fileformat.info/info/unicode/char/0012/index.htm",excerpt:"bad character - device control two",scope:"all"},"bad-character-em-quad":{description:"https://www.fileformat.info/info/unicode/char/2001/index.htm",excerpt:"bad character - em quad",scope:"all"},"bad-character-em-space":{description:"https://www.fileformat.info/info/unicode/char/2001/index.htm",excerpt:"bad character - em space",scope:"all"},"bad-character-en-quad":{description:"https://www.fileformat.info/info/unicode/char/2000/index.htm",excerpt:"bad character - en quad",scope:"all"},"bad-character-en-space":{description:"https://www.fileformat.info/info/unicode/char/2000/index.htm",excerpt:"bad character - en space",scope:"all"},"bad-character-end-of-medium":{description:"https://www.fileformat.info/info/unicode/char/0019/index.htm",excerpt:"bad character - end of medium",scope:"all"},"bad-character-end-of-protected-area":{description:"http://www.fileformat.info/info/unicode/char/0097/index.htm",excerpt:"bad character - end of protected area",scope:"all"},"bad-character-end-of-selected-area":{description:"http://www.fileformat.info/info/unicode/char/0087/index.htm",excerpt:"bad character - end of selected area",scope:"all"},"bad-character-end-of-text":{description:"https://www.fileformat.info/info/unicode/char/0003/index.htm",excerpt:"bad character - end of text (ETX)",scope:"all"},"bad-character-end-of-transmission":{description:"https://www.fileformat.info/info/unicode/char/0004/index.htm",excerpt:"bad character - end of transmission",scope:"all"},"bad-character-end-of-transmission-block":{description:"https://www.fileformat.info/info/unicode/char/0017/index.htm",excerpt:"bad character - end of transmission block",scope:"all"},"bad-character-enquiry":{description:"https://www.fileformat.info/info/unicode/char/0005/index.htm",excerpt:"bad character - enquiry",scope:"all"},"bad-character-escape":{description:"https://www.fileformat.info/info/unicode/char/001b/index.htm",excerpt:"bad character - escape",scope:"all"},"bad-character-figure-space":{description:"https://www.fileformat.info/info/unicode/char/2007/index.htm",excerpt:"bad character - figure space",scope:"all"},"bad-character-form-feed":{description:"https://www.fileformat.info/info/unicode/char/000c/index.htm",excerpt:"bad character - form feed",scope:"all"},"bad-character-four-per-em-space":{description:"https://www.fileformat.info/info/unicode/char/2005/index.htm",excerpt:"bad character - four-per-em space",scope:"all"},"bad-character-generic":{description:"This character is invalid",excerpt:"bad character",scope:"all"},"bad-character-grave-accent":{description:"https://www.fileformat.info/info/unicode/char/0060/index.htm",excerpt:"bad character - grave accent",scope:"html"},"bad-character-hair-space":{description:"https://www.fileformat.info/info/unicode/char/200a/index.htm",excerpt:"bad character - hair space",scope:"all"},"bad-character-high-octet-preset":{description:"http://www.fileformat.info/info/unicode/char/0081/index.htm",excerpt:"bad character - high octet preset",scope:"all"},"bad-character-ideographic-space":{description:"https://www.fileformat.info/info/unicode/char/3000/index.htm",excerpt:"bad character - ideographic space",scope:"all"},"bad-character-index":{description:"http://www.fileformat.info/info/unicode/char/0084/index.htm",excerpt:"bad character - index",scope:"all"},"bad-character-information-separator-four":{description:"https://www.fileformat.info/info/unicode/char/001c/index.htm",excerpt:"bad character - information separator four",scope:"all"},"bad-character-information-separator-one":{description:"https://www.fileformat.info/info/unicode/char/001f/index.htm",excerpt:"bad character - information separator one",scope:"all"},"bad-character-information-separator-three":{description:"https://www.fileformat.info/info/unicode/char/001d/index.htm",excerpt:"bad character - information separator three",scope:"all"},"bad-character-information-separator-two":{description:"https://www.fileformat.info/info/unicode/char/001e/index.htm",excerpt:"bad character - information separator two",scope:"all"},"bad-character-line-separator":{description:"https://www.fileformat.info/info/unicode/char/2028/index.htm",excerpt:"bad character - line separator",scope:"all"},"bad-character-line-tabulation":{description:"https://www.fileformat.info/info/unicode/char/000b/index.htm",excerpt:"bad character - line tabulation",scope:"all"},"bad-character-line-tabulation-set":{description:"http://www.fileformat.info/info/unicode/char/008a/index.htm",excerpt:"bad character - line tabulation set",scope:"all"},"bad-character-medium-mathematical-space":{description:"https://www.fileformat.info/info/unicode/char/205f/index.htm",excerpt:"bad character - medium mathematical space",scope:"all"},"bad-character-message-waiting":{description:"http://www.fileformat.info/info/unicode/char/0095/index.htm",excerpt:"bad character - message waiting",scope:"all"},"bad-character-narrow-no-break-space":{description:"https://www.fileformat.info/info/unicode/char/202f/index.htm",excerpt:"bad character - narrow no-break space",scope:"all"},"bad-character-negative-acknowledge":{description:"https://www.fileformat.info/info/unicode/char/0015/index.htm",excerpt:"bad character - negative acknowledge",scope:"all"},"bad-character-next-line":{description:"http://www.fileformat.info/info/unicode/char/0085/index.htm",excerpt:"bad character - next line",scope:"all"},"bad-character-no-break-here":{description:"http://www.fileformat.info/info/unicode/char/0083/index.htm",excerpt:"bad character - no break here",scope:"all"},"bad-character-null":{description:"https://www.fileformat.info/info/unicode/char/0000/index.htm",excerpt:"bad character - null",scope:"all"},"bad-character-ogham-space-mark":{description:"https://www.fileformat.info/info/unicode/char/1680/index.htm",excerpt:"bad character - ogham space mark",scope:"all"},"bad-character-operating-system-command":{description:"http://www.fileformat.info/info/unicode/char/009d/index.htm",excerpt:"bad character - operating system command",scope:"all"},"bad-character-padding":{description:"http://www.fileformat.info/info/unicode/char/0080/index.htm",excerpt:"bad character - padding",scope:"all"},"bad-character-paragraph-separator":{description:"https://www.fileformat.info/info/unicode/char/2029/index.htm",excerpt:"bad character - paragraph separator",scope:"all"},"bad-character-partial-line-backward":{description:"http://www.fileformat.info/info/unicode/char/008c/index.htm",excerpt:"bad character - partial line backward",scope:"all"},"bad-character-partial-line-forward":{description:"http://www.fileformat.info/info/unicode/char/008b/index.htm",excerpt:"bad character - partial line forward",scope:"all"},"bad-character-private-message":{description:"http://www.fileformat.info/info/unicode/char/009e/index.htm",excerpt:"bad character - private message",scope:"all"},"bad-character-private-use-1":{description:"http://www.fileformat.info/info/unicode/char/0091/index.htm",excerpt:"bad character - private use 1",scope:"all"},"bad-character-private-use-2":{description:"http://www.fileformat.info/info/unicode/char/0092/index.htm",excerpt:"bad character - private use 2",scope:"all"},"bad-character-punctuation-space":{description:"https://www.fileformat.info/info/unicode/char/2008/index.htm",excerpt:"bad character - punctuation space",scope:"all"},"bad-character-reverse-line-feed":{description:"http://www.fileformat.info/info/unicode/char/008d/index.htm",excerpt:"bad character - reverse line feed",scope:"all"},"bad-character-set-transmit-state":{description:"http://www.fileformat.info/info/unicode/char/0093/index.htm",excerpt:"bad character - set transmit state",scope:"all"},"bad-character-shift-in":{description:"https://www.fileformat.info/info/unicode/char/000f/index.htm",excerpt:"bad character - shift in",scope:"all"},"bad-character-shift-out":{description:"https://www.fileformat.info/info/unicode/char/000e/index.htm",excerpt:"bad character - shift out",scope:"all"},"bad-character-single-character-intro-introducer":{description:"http://www.fileformat.info/info/unicode/char/009a/index.htm",excerpt:"bad character - single character intro introducer",scope:"all"},"bad-character-single-graphic-character-introducer":{description:"http://www.fileformat.info/info/unicode/char/0099/index.htm",excerpt:"bad character - single graphic character introducer",scope:"all"},"bad-character-single-shift-three":{description:"http://www.fileformat.info/info/unicode/char/008f/index.htm",excerpt:"bad character - single shift three",scope:"all"},"bad-character-single-shift-two":{description:"http://www.fileformat.info/info/unicode/char/008e/index.htm",excerpt:"bad character - single shift two",scope:"all"},"bad-character-six-per-em-space":{description:"https://www.fileformat.info/info/unicode/char/2005/index.htm",excerpt:"bad character - six-per-em space",scope:"all"},"bad-character-start-of-heading":{description:"https://www.fileformat.info/info/unicode/char/0001/index.htm",excerpt:"bad character - start of heading",scope:"all"},"bad-character-start-of-protected-area":{description:"http://www.fileformat.info/info/unicode/char/0096/index.htm",excerpt:"bad character - start of protected area",scope:"all"},"bad-character-start-of-selected-area":{description:"http://www.fileformat.info/info/unicode/char/0086/index.htm",excerpt:"bad character - start of selected area",scope:"all"},"bad-character-start-of-string":{description:"http://www.fileformat.info/info/unicode/char/0098/index.htm",excerpt:"bad character - start of string",scope:"all"},"bad-character-start-of-text":{description:"https://www.fileformat.info/info/unicode/char/0002/index.htm",excerpt:"bad character - start of text",scope:"all"},"bad-character-string-terminator":{description:"http://www.fileformat.info/info/unicode/char/009c/index.htm",excerpt:"bad character - string terminator",scope:"all"},"bad-character-substitute":{description:"https://www.fileformat.info/info/unicode/char/001a/index.htm",excerpt:"bad character - substitute",scope:"all"},"bad-character-synchronous-idle":{description:"https://www.fileformat.info/info/unicode/char/0016/index.htm",excerpt:"bad character - synchronous idle",scope:"all"},"bad-character-thin-space":{description:"https://www.fileformat.info/info/unicode/char/2009/index.htm",excerpt:"bad character - thin space",scope:"all"},"bad-character-three-per-em-space":{description:"https://www.fileformat.info/info/unicode/char/2004/index.htm",excerpt:"bad character - three-per-em space",scope:"all"},"bad-character-unencoded-ampersand":{description:"There is unencoded ampersand",excerpt:"unencoded ampersand",scope:"html"},"bad-character-unencoded-closing-bracket":{description:"There is unencoded closing bracket",excerpt:"unencoded closing bracket",scope:"html"},"bad-character-unencoded-double-quotes":{description:"There is unencoded double quotes",excerpt:"unencoded double quotes",scope:"html"},"bad-character-unencoded-non-breaking-space":{description:"http://www.fileformat.info/info/unicode/char/00a0/index.htm",excerpt:"bad character - unencoded non-breaking space",scope:"all"},"bad-character-unencoded-opening-bracket":{description:"There is unencoded opening bracket",excerpt:"unencoded opening bracket",scope:"html"},"bad-character-zero-width-space":{description:"https://www.fileformat.info/info/unicode/char/200b/index.htm",excerpt:"bad character - zero width space",scope:"all"}},F=["abbr","address","area","article","aside","audio","base","bdi","bdo","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","doctype","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","rb","rp","rt","rtc","ruby","samp","script","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","ul","var","video","wbr","xml"],U={$:{sibling:"$",type:"closing"},"%}":{sibling:["{%","{%-"],type:"closing"},"*|":{sibling:"|*",type:"opening"},"-%}":{sibling:["{%-","{%"],type:"closing"},"{%":{sibling:["%}","-%}"],type:"opening"},"{%-":{sibling:["-%}","%}"],type:"opening"},"|*":{sibling:"*|",type:"closing"}},B={"bad-cdata-tag-malformed":{description:"CDATA opening tag is malformed",excerpt:"malformed CDATA tag",scope:"html"},"bad-named-html-entity-malformed-nbsp":{description:"HTML named entity &nbsp; (a non-breaking space) is malformed",excerpt:"malformed &nbsp;",scope:"html"},"bad-named-html-entity-missing-semicolon":{description:"HTML named entity is missing a semicolon",excerpt:"missing semicolon on a named HTML entity",scope:"html"},"bad-named-html-entity-multiple-encoding":{description:"HTML named entity was encoded multiple times, causing repeated amp;",excerpt:"repeated amp; because of over-encoding",scope:"html"},"esp-line-break-within-templating-tag":{description:"There should be no line breaks within ESP template tags",excerpt:"line break should be removed",scope:"all",unfixable:!0},"esp-more-closing-parentheses-than-opening":{description:"There are more closing parentheses than opening-ones",excerpt:"too many closing parentheses",scope:"all",unfixable:!0},"esp-more-opening-parentheses-than-closing":{description:"There are more opening parentheses than closing-ones",excerpt:"too many opening parentheses",scope:"all",unfixable:!0},"file-empty":{description:"the contents are empty",excerpt:"the contents are empty",scope:"all"},"file-missing-ending":{description:"the ending part of the contents is missing",excerpt:"ending part is missing",scope:"all"},"file-mixed-line-endings-file-is-CR-mainly":{description:"mixed line endings detected, majority EOL's are CR",excerpt:"mixed line endings detected, majority EOL's are CR",scope:"all"},"file-mixed-line-endings-file-is-CRLF-mainly":{description:"mixed line endings detected, majority EOL's are CRLF",excerpt:"mixed line endings detected, majority EOL's are CRLF",scope:"all"},"file-mixed-line-endings-file-is-LF-mainly":{description:"mixed line endings detected, majority EOL's are LF",excerpt:"mixed line endings detected, majority EOL's are LF",scope:"all"},"file-wrong-type-line-ending-CR":{description:"Carriage Return (ASCII #13) line ending detected",excerpt:"Carriage Return line ending",scope:"all"},"file-wrong-type-line-ending-CRLF":{description:"CRLF (Carriage Return + Line Feed) line ending detected",excerpt:"CRLF line ending",scope:"all"},"file-wrong-type-line-ending-LF":{description:"Line Feed (ASCII #10) line ending detected",excerpt:"Line Feed line ending",scope:"all"},"html-comment-missing-dash":{description:"The dash in the comment is missing",excerpt:"missing dash",scope:"html"},"html-comment-missing-exclamation-mark":{description:"The exclamation mark in the HTML comment is missing",excerpt:"missing exclamation mark",scope:"html"},"html-comment-redundant-dash":{description:"There are too many dashes in HTML comment",excerpt:"redundant dash",scope:"html"},"html-comment-spaces":{description:"There should be no spaces between HTML comment characters",excerpt:"rogue spaces",scope:"html"},"tag-attribute-closing-quotation-mark-missing":{description:"The closing quotation mark is missing",excerpt:"the closing quotation mark is missing",scope:"html"},"tag-attribute-left-double-quotation-mark":{description:"There's a left double quotation mark, https://www.fileformat.info/info/unicode/char/201C/index.htm",excerpt:"a left double quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-left-single-quotation-mark":{description:"There's a left single quotation mark, https://www.fileformat.info/info/unicode/char/2018/index.htm",excerpt:"a left single quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-mismatching-quotes-is-double":{description:"attribute's opening quote is single, but closing-one is double",excerpt:"there should be a single quote here instead",scope:"html"},"tag-attribute-mismatching-quotes-is-single":{description:"attribute's opening quote is double, but closing-one is single",excerpt:"there should be a double quote here instead",scope:"html"},"tag-attribute-missing-equal":{description:"The equal is missing between attribute's name and quotes",excerpt:"missing equal character",scope:"html"},"tag-attribute-opening-quotation-mark-missing":{description:"The opening quotation mark is missing",excerpt:"the opening quotation mark is missing",scope:"html"},"tag-attribute-quote-and-onwards-missing":{description:"One of the attributes ends with an equal sign, there are no quotes on it",excerpt:"attributes ends with an equal sign, there are no quotes on it",scope:"html"},"tag-attribute-repeated-equal":{description:"The equal after attribute's name is repeated",excerpt:"repeated equal character",scope:"html"},"tag-attribute-right-double-quotation-mark":{description:"There's a right double quotation mark, https://www.fileformat.info/info/unicode/char/201d/index.htm",excerpt:"a right double quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-right-single-quotation-mark":{description:"There's a right single quotation mark, https://www.fileformat.info/info/unicode/char/2019/index.htm",excerpt:"a right single quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-space-between-equals-and-opening-quotes":{description:"There's a space between attribute's equal sign and opening quotes",excerpt:"space between attribute's equal sign and opening quotes",scope:"html"},"tag-attribute-space-between-name-and-equals":{description:"There's a space between attribute's name and equal sign",excerpt:"space between attribute's name and equal sign",scope:"html"},"tag-duplicate-closing-slash":{description:"Tag's closing slash is repeated",excerpt:"repeated tag's closing slash",scope:"html"},"tag-closing-left-slash":{description:"Tag's closing slash is wrong, it's left not right",excerpt:"should be right slash",scope:"html"},"tag-excessive-whitespace-inside-tag":{description:"There's an excessive whitespace inside the tag",excerpt:"space between attribute's name and equal sign",scope:"html"},"tag-generic-error":{description:"Something is wrong here",excerpt:"something is wrong here",scope:"html"},"tag-missing-closing-bracket":{description:"Tag's closing bracket is missing",excerpt:"missing closing bracket",scope:"html"},"tag-missing-space-before-attribute":{description:"The space before attribute's name is missing",excerpt:"missing space",scope:"html"},"tag-name-lowercase":{description:"Normally all tags are in lowercase",excerpt:"tag name contains uppercase characters",scope:"html"},"tag-space-after-opening-bracket":{description:"Many browsers, including Chrome will not consider this a tag",excerpt:"space between opening bracket and tag name",scope:"html"},"tag-stray-character":{description:"This chunk seems to be astray and can be deleted",excerpt:"delete this",scope:"html"},"tag-stray-quotes":{description:"These quotes can be deleted",excerpt:"delete this",scope:"html"},"tag-whitespace-closing-slash-and-bracket":{description:"There's a whitespace between closing slash and closing bracket",excerpt:"whitespace between slash and closing bracket",scope:"html"}};function H(e){return"string"==typeof e?e.length>0?[e]:[]:e}var z=h(function(e,r){var t,a,n,i,o,s,l,c,d,p,u,m,f,h,b,w,y,A,S,v;e.exports=(t="function"==typeof Promise,a="object"==typeof self?self:g,n="undefined"!=typeof Symbol,i="undefined"!=typeof Map,o="undefined"!=typeof Set,s="undefined"!=typeof WeakMap,l="undefined"!=typeof WeakSet,c="undefined"!=typeof DataView,d=n&&void 0!==Symbol.iterator,p=n&&void 0!==Symbol.toStringTag,u=o&&"function"==typeof Set.prototype.entries,m=i&&"function"==typeof Map.prototype.entries,f=u&&Object.getPrototypeOf((new Set).entries()),h=m&&Object.getPrototypeOf((new Map).entries()),b=d&&"function"==typeof Array.prototype[Symbol.iterator],w=b&&Object.getPrototypeOf([][Symbol.iterator]()),y=d&&"function"==typeof String.prototype[Symbol.iterator],A=y&&Object.getPrototypeOf(""[Symbol.iterator]()),S=8,v=-1,function(e){var r=typeof e;if("object"!==r)return r;if(null===e)return"null";if(e===a)return"global";if(Array.isArray(e)&&(!1===p||!(Symbol.toStringTag in e)))return"Array";if("object"==typeof window&&null!==window){if("object"==typeof window.location&&e===window.location)return"Location";if("object"==typeof window.document&&e===window.document)return"Document";if("object"==typeof window.navigator){if("object"==typeof window.navigator.mimeTypes&&e===window.navigator.mimeTypes)return"MimeTypeArray";if("object"==typeof window.navigator.plugins&&e===window.navigator.plugins)return"PluginArray"}if(("function"==typeof window.HTMLElement||"object"==typeof window.HTMLElement)&&e instanceof window.HTMLElement){if("BLOCKQUOTE"===e.tagName)return"HTMLQuoteElement";if("TD"===e.tagName)return"HTMLTableDataCellElement";if("TH"===e.tagName)return"HTMLTableHeaderCellElement"}}var n=p&&e[Symbol.toStringTag];if("string"==typeof n)return n;var d=Object.getPrototypeOf(e);return d===RegExp.prototype?"RegExp":d===Date.prototype?"Date":t&&d===Promise.prototype?"Promise":o&&d===Set.prototype?"Set":i&&d===Map.prototype?"Map":l&&d===WeakSet.prototype?"WeakSet":s&&d===WeakMap.prototype?"WeakMap":c&&d===DataView.prototype?"DataView":i&&d===h?"Map Iterator":o&&d===f?"Set Iterator":b&&d===w?"Array Iterator":y&&d===A?"String Iterator":null===d?"Object":Object.prototype.toString.call(e).slice(S,v)})});function $(e,r,t){if(r!=r)return function(e,r,t,a){for(var n=e.length,i=t+(a?1:-1);a?i--:++i<n;)if(r(e[i],i,e))return i;return-1}(e,M,t);for(var a=t-1,n=e.length;++a<n;)if(e[a]===r)return a;return-1}function G(e,r,t,a){for(var n=t-1,i=e.length;++n<i;)if(a(e[n],r))return n;return-1}function M(e){return e!=e}var Q=Array.prototype.splice;function J(e,r,t,a){var n=a?G:$,i=-1,o=r.length,s=e;for(e===r&&(r=function(e,r){var t=-1,a=e.length;r||(r=Array(a));for(;++t<a;)r[t]=e[t];return r}(r)),t&&(s=function(e,r){for(var t=-1,a=e?e.length:0,n=Array(a);++t<a;)n[t]=r(e[t],t,e);return n}(e,function(e){return function(r){return e(r)}}(t)));++i<o;)for(var l=0,c=r[i],d=t?t(c):c;(l=n(s,d,l,a))>-1;)s!==e&&Q.call(s,l,1),Q.call(e,l,1);return e}var W=function(e,r){return e&&e.length&&r&&r.length?J(e,r):e};const K=Array.isArray;function Z(e){return"string"==typeof e&&e.length>0&&"."===e[0]?e.slice(1):e}function Y(e){return null!=e}function X(e,r){return function e(r,t,a){const n=b(r);let i,o,s,l,c;if((a=Object.assign({depth:-1,path:""},a)).depth+=1,K(n))for(i=0,o=n.length;i<o;i++){const r=`${a.path}.${i}`;void 0!==n[i]?(a.parent=b(n),a.parentType="array",s=e(t(n[i],void 0,Object.assign({},a,{path:Z(r)})),t,Object.assign({},a,{path:Z(r)})),Number.isNaN(s)&&i<n.length?(n.splice(i,1),i-=1):n[i]=s):n.splice(i,1)}else if(f(n))for(i=0,o=(l=Object.keys(n)).length;i<o;i++){c=l[i];const r=`${a.path}.${c}`;0===a.depth&&Y(c)&&(a.topmostKey=c),a.parent=b(n),a.parentType="object",s=e(t(c,n[c],Object.assign({},a,{path:Z(r)})),t,Object.assign({},a,{path:Z(r)})),Number.isNaN(s)?delete n[c]:n[c]=s}return n}(e,r,{})}var ee="__lodash_hash_undefined__",re=9007199254740991,te="[object Function]",ae="[object GeneratorFunction]",ne=/^\[object .+?Constructor\]$/,ie="object"==typeof g&&g&&g.Object===Object&&g,oe="object"==typeof self&&self&&self.Object===Object&&self,se=ie||oe||Function("return this")();function le(e,r,t){switch(t.length){case 0:return e.call(r);case 1:return e.call(r,t[0]);case 2:return e.call(r,t[0],t[1]);case 3:return e.call(r,t[0],t[1],t[2])}return e.apply(r,t)}function ce(e,r){return!!(e?e.length:0)&&function(e,r,t){if(r!=r)return function(e,r,t,a){var n=e.length,i=t+(a?1:-1);for(;a?i--:++i<n;)if(r(e[i],i,e))return i;return-1}(e,ue,t);var a=t-1,n=e.length;for(;++a<n;)if(e[a]===r)return a;return-1}(e,r,0)>-1}function de(e,r,t){for(var a=-1,n=e?e.length:0;++a<n;)if(t(r,e[a]))return!0;return!1}function pe(e,r){for(var t=-1,a=e?e.length:0,n=Array(a);++t<a;)n[t]=r(e[t],t,e);return n}function ue(e){return e!=e}function me(e){return function(r){return e(r)}}function fe(e,r){return e.has(r)}var ge,he=Array.prototype,be=Function.prototype,we=Object.prototype,ye=se["__core-js_shared__"],Ae=(ge=/[^.]+$/.exec(ye&&ye.keys&&ye.keys.IE_PROTO||""))?"Symbol(src)_1."+ge:"",Se=be.toString,ve=we.hasOwnProperty,qe=we.toString,Ie=RegExp("^"+Se.call(ve).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Pe=he.splice,xe=Math.max,ke=Math.min,Ee=Ve(se,"Map"),Le=Ve(Object,"create");function Te(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function Ce(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function Ne(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var a=e[r];this.set(a[0],a[1])}}function De(e){var r=-1,t=e?e.length:0;for(this.__data__=new Ne;++r<t;)this.add(e[r])}function Re(e,r){for(var t,a,n=e.length;n--;)if((t=e[n][0])===(a=r)||t!=t&&a!=a)return n;return-1}function je(e){return!(!Ue(e)||function(e){return!!Ae&&Ae in e}(e))&&(Fe(e)||function(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}(e)?Ie:ne).test(function(e){if(null!=e){try{return Se.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}function _e(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=re}(e.length)&&!Fe(e)}(e)}(e)?e:[]}function Oe(e,r){var t,a,n=e.__data__;return("string"==(a=typeof(t=r))||"number"==a||"symbol"==a||"boolean"==a?"__proto__"!==t:null===t)?n["string"==typeof r?"string":"hash"]:n.map}function Ve(e,r){var t=function(e,r){return null==e?void 0:e[r]}(e,r);return je(t)?t:void 0}function Fe(e){var r=Ue(e)?qe.call(e):"";return r==te||r==ae}function Ue(e){var r=typeof e;return!!e&&("object"==r||"function"==r)}Te.prototype.clear=function(){this.__data__=Le?Le(null):{}},Te.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Te.prototype.get=function(e){var r=this.__data__;if(Le){var t=r[e];return t===ee?void 0:t}return ve.call(r,e)?r[e]:void 0},Te.prototype.has=function(e){var r=this.__data__;return Le?void 0!==r[e]:ve.call(r,e)},Te.prototype.set=function(e,r){return this.__data__[e]=Le&&void 0===r?ee:r,this},Ce.prototype.clear=function(){this.__data__=[]},Ce.prototype.delete=function(e){var r=this.__data__,t=Re(r,e);return!(t<0||(t==r.length-1?r.pop():Pe.call(r,t,1),0))},Ce.prototype.get=function(e){var r=this.__data__,t=Re(r,e);return t<0?void 0:r[t][1]},Ce.prototype.has=function(e){return Re(this.__data__,e)>-1},Ce.prototype.set=function(e,r){var t=this.__data__,a=Re(t,e);return a<0?t.push([e,r]):t[a][1]=r,this},Ne.prototype.clear=function(){this.__data__={hash:new Te,map:new(Ee||Ce),string:new Te}},Ne.prototype.delete=function(e){return Oe(this,e).delete(e)},Ne.prototype.get=function(e){return Oe(this,e).get(e)},Ne.prototype.has=function(e){return Oe(this,e).has(e)},Ne.prototype.set=function(e,r){return Oe(this,e).set(e,r),this},De.prototype.add=De.prototype.push=function(e){return this.__data__.set(e,ee),this},De.prototype.has=function(e){return this.__data__.has(e)};var Be=function(e,r){return r=xe(void 0===r?e.length-1:r,0),function(){for(var t=arguments,a=-1,n=xe(t.length-r,0),i=Array(n);++a<n;)i[a]=t[r+a];a=-1;for(var o=Array(r+1);++a<r;)o[a]=t[a];return o[r]=i,le(e,this,o)}}(function(e){var r=pe(e,_e);return r.length&&r[0]===e[0]?function(e,r,t){for(var a=t?de:ce,n=e[0].length,i=e.length,o=i,s=Array(i),l=1/0,c=[];o--;){var d=e[o];o&&r&&(d=pe(d,me(r))),l=ke(d.length,l),s[o]=!t&&(r||n>=120&&d.length>=120)?new De(o&&d):void 0}d=e[0];var p=-1,u=s[0];e:for(;++p<n&&c.length<l;){var m=d[p],f=r?r(m):m;if(m=t||0!==m?m:0,!(u?fe(u,f):a(c,f,t))){for(o=i;--o;){var g=s[o];if(!(g?fe(g,f):a(e[o],f,t)))continue e}u&&u.push(f),c.push(m)}}return c}(r):[]}),He=h(function(e){e.exports=function(){var e=Object.prototype.toString;function r(e,r){return null!=e&&Object.prototype.hasOwnProperty.call(e,r)}function t(e){if(!e)return!0;if(n(e)&&0===e.length)return!0;if("string"!=typeof e){for(var t in e)if(r(e,t))return!1;return!0}return!1}function a(r){return e.call(r)}var n=Array.isArray||function(r){return"[object Array]"===e.call(r)};function i(e){var r=parseInt(e);return r.toString()===e?r:e}function o(e){e=e||{};var o=function(e){return Object.keys(o).reduce(function(r,t){return"create"===t?r:("function"==typeof o[t]&&(r[t]=o[t].bind(o,e)),r)},{})};function s(t,a){return e.includeInheritedProps||"number"==typeof a&&Array.isArray(t)||r(t,a)}function l(e,r){if(s(e,r))return e[r]}function c(e,r,t,a){if("number"==typeof r&&(r=[r]),!r||0===r.length)return e;if("string"==typeof r)return c(e,r.split(".").map(i),t,a);var n=r[0],o=l(e,n);return 1===r.length?(void 0!==o&&a||(e[n]=t),o):(void 0===o&&("number"==typeof r[1]?e[n]=[]:e[n]={}),c(e[n],r.slice(1),t,a))}return o.has=function(t,a){if("number"==typeof a?a=[a]:"string"==typeof a&&(a=a.split(".")),!a||0===a.length)return!!t;for(var o=0;o<a.length;o++){var s=i(a[o]);if(!("number"==typeof s&&n(t)&&s<t.length||(e.includeInheritedProps?s in Object(t):r(t,s))))return!1;t=t[s]}return!0},o.ensureExists=function(e,r,t){return c(e,r,t,!0)},o.set=function(e,r,t,a){return c(e,r,t,a)},o.insert=function(e,r,t,a){var i=o.get(e,r);a=~~a,n(i)||(i=[],o.set(e,r,i)),i.splice(a,0,t)},o.empty=function(e,r){var i,l;if(!t(r)&&null!=e&&(i=o.get(e,r))){if("string"==typeof i)return o.set(e,r,"");if(function(e){return"boolean"==typeof e||"[object Boolean]"===a(e)}(i))return o.set(e,r,!1);if("number"==typeof i)return o.set(e,r,0);if(n(i))i.length=0;else{if(!function(e){return"object"==typeof e&&"[object Object]"===a(e)}(i))return o.set(e,r,null);for(l in i)s(i,l)&&delete i[l]}}},o.push=function(e,r){var t=o.get(e,r);n(t)||(t=[],o.set(e,r,t)),t.push.apply(t,Array.prototype.slice.call(arguments,2))},o.coalesce=function(e,r,t){for(var a,n=0,i=r.length;n<i;n++)if(void 0!==(a=o.get(e,r[n])))return a;return t},o.get=function(e,r,t){if("number"==typeof r&&(r=[r]),!r||0===r.length)return e;if(null==e)return t;if("string"==typeof r)return o.get(e,r.split("."),t);var a=i(r[0]),n=l(e,a);return void 0===n?t:1===r.length?n:o.get(e[a],r.slice(1),t)},o.del=function(e,r){if("number"==typeof r&&(r=[r]),null==e)return e;if(t(r))return e;if("string"==typeof r)return o.del(e,r.split("."));var a=i(r[0]);return s(e,a)?1!==r.length?o.del(e[a],r.slice(1)):(n(e)?e.splice(a,1):delete e[a],e):e},o}var s=o();return s.create=o,s.withInheritedProps=o({includeInheritedProps:!0}),s}()}),ze=function(e){var r=(e=Math.abs(e))%100;if(r>=10&&r<=20)return"th";var t=e%10;return 1===t?"st":2===t?"nd":3===t?"rd":"th"};function $e(e){if("number"!=typeof e)throw new TypeError("Expected Number, got "+typeof e+" "+e);return Number.isFinite(e)?e+ze(e):e}$e.indicator=ze;var Ge=$e;const Me=/[|\\{}()[\]^$+*?.-]/g;var Qe=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(Me,"\\$&")};const Je=new Map;function We(e,r){r={caseSensitive:!1,...r};const t=e+JSON.stringify(r);if(Je.has(t))return Je.get(t);const a="!"===e[0];a&&(e=e.slice(1)),e=Qe(e).replace(/\\\*/g,".*");const n=new RegExp(`^${e}$`,r.caseSensitive?"":"i");return n.negated=a,Je.set(t,n),n}var Ke=(e,r,t)=>{if(!Array.isArray(e)||!Array.isArray(r))throw new TypeError(`Expected two arrays, got ${typeof e} ${typeof r}`);if(0===r.length)return e;const a="!"===r[0][0];r=r.map(e=>We(e,t));const n=[];for(const t of e){let e=a;for(const a of r)a.test(t)&&(e=!a.negated);e&&n.push(t)}return n};function Ze(e,r,t){return function e(r,t,a,n=!0){const i=Object.prototype.hasOwnProperty;function o(e){return null!=e}function s(e){return"Object"===z(e)}function l(e,r){return r=H(r),Array.from(e).filter(e=>!r.some(r=>Ke.isMatch(e,r,{caseSensitive:!0})))}const c=["any","anything","every","everything","all","whatever","whatevs"],d=Array.isArray;if(!o(r))throw new Error("check-types-mini: [THROW_ID_01] First argument is missing!");const p={ignoreKeys:[],ignorePaths:[],acceptArrays:!1,acceptArraysIgnore:[],enforceStrictKeyset:!0,schema:{},msg:"check-types-mini",optsVarName:"opts"};let u;if(u=o(a)&&s(a)?Object.assign({},p,a):Object.assign({},p),o(u.ignoreKeys)&&u.ignoreKeys?u.ignoreKeys=H(u.ignoreKeys):u.ignoreKeys=[],o(u.ignorePaths)&&u.ignorePaths?u.ignorePaths=H(u.ignorePaths):u.ignorePaths=[],o(u.acceptArraysIgnore)&&u.acceptArraysIgnore?u.acceptArraysIgnore=H(u.acceptArraysIgnore):u.acceptArraysIgnore=[],u.msg="string"==typeof u.msg?u.msg.trim():u.msg,":"===u.msg[u.msg.length-1]&&(u.msg=u.msg.slice(0,u.msg.length-1).trim()),u.schema&&(Object.keys(u.schema).forEach(e=>{if(s(u.schema[e])){const r={};X(u.schema[e],(t,a,n)=>{const i=void 0!==a?a:t;return d(i)||s(i)||(r[`${e}.${n.path}`]=i),i}),delete u.schema[e],u.schema=Object.assign(u.schema,r)}}),Object.keys(u.schema).forEach(e=>{d(u.schema[e])||(u.schema[e]=[u.schema[e]]),u.schema[e]=u.schema[e].map(String).map(e=>e.toLowerCase()).map(e=>e.trim())})),o(t)||(t={}),n&&e(u,p,{enforceStrictKeyset:!1},!1),u.enforceStrictKeyset)if(o(u.schema)&&Object.keys(u.schema).length>0){if(0!==l(W(Object.keys(r),Object.keys(t).concat(Object.keys(u.schema))),u.ignoreKeys).length){const e=W(Object.keys(r),Object.keys(t).concat(Object.keys(u.schema)));throw new TypeError(`${u.msg}: ${u.optsVarName}.enforceStrictKeyset is on and the following key${e.length>1?"s":""} ${e.length>1?"are":"is"} not covered by schema and/or reference objects: ${e.join(", ")}`)}}else{if(!(o(t)&&Object.keys(t).length>0))throw new TypeError(`${u.msg}: Both ${u.optsVarName}.schema and reference objects are missing! We don't have anything to match the keys as you requested via opts.enforceStrictKeyset!`);if(0!==l(W(Object.keys(r),Object.keys(t)),u.ignoreKeys).length){const e=W(Object.keys(r),Object.keys(t));throw new TypeError(`${u.msg}: The input object has key${e.length>1?"s":""} which ${e.length>1?"are":"is"} not covered by the reference object: ${e.join(", ")}`)}if(0!==l(W(Object.keys(t),Object.keys(r)),u.ignoreKeys).length){const e=W(Object.keys(t),Object.keys(r));throw new TypeError(`${u.msg}: The reference object has key${e.length>1?"s":""} which ${e.length>1?"are":"is"} not present in the input object: ${e.join(", ")}`)}}const m=[];X(r,(e,a,n)=>{let o=a,l=e;if("array"===n.parentType&&(l=void 0,o=e),d(m)&&m.length&&m.some(e=>n.path.startsWith(e)))return o;if(l&&u.ignoreKeys.some(e=>Ke.isMatch(l,e)))return o;if(u.ignorePaths.some(e=>Ke.isMatch(n.path,e)))return o;const p=!(!s(o)&&!d(o)&&d(n.parent));let f=!1;s(u.schema)&&i.call(u.schema,He.get(n.path))&&(f=!0);let g=!1;if(s(t)&&He.has(t,He.get(n.path))&&(g=!0),u.enforceStrictKeyset&&p&&!f&&!g)throw new TypeError(`${u.msg}: ${u.optsVarName}.${n.path} is neither covered by reference object (second input argument), nor ${u.optsVarName}.schema! To stop this error, turn off ${u.optsVarName}.enforceStrictKeyset or provide some type reference (2nd argument or ${u.optsVarName}.schema).\n\nDebug info:\n\nobj = ${JSON.stringify(r,null,4)}\n\nref = ${JSON.stringify(t,null,4)}\n\ninnerObj = ${JSON.stringify(n,null,4)}\n\nopts = ${JSON.stringify(u,null,4)}\n\ncurrent = ${JSON.stringify(o,null,4)}\n\n`);if(f){const e=H(u.schema[n.path]).map(String).map(e=>e.toLowerCase());if(He.set(u.schema,n.path,e),Be(e,c).length)m.push(n.path);else if(!0!==o&&!1!==o&&!e.includes(z(o).toLowerCase())||(!0===o||!1===o)&&!e.includes(String(o))&&!e.includes("boolean")){if(!d(o)||!u.acceptArrays)throw new TypeError(`${u.msg}: ${u.optsVarName}.${n.path} was customised to ${"string"!==z(o)?'"':""}${JSON.stringify(o,null,0)}${"string"!==z(o)?'"':""} (type: ${z(o).toLowerCase()}) which is not among the allowed types in schema (which is equal to ${JSON.stringify(e,null,0)})`);for(let r=0,t=o.length;r<t;r++)if(!e.includes(z(o[r]).toLowerCase()))throw new TypeError(`${u.msg}: ${u.optsVarName}.${n.path}.${r}, the ${Ge(r+1)} element (equal to ${JSON.stringify(o[r],null,0)}) is of a type ${z(o[r]).toLowerCase()}, but only the following are allowed by the ${u.optsVarName}.schema: ${e.join(", ")}`)}}else if(g){const r=He.get(t,n.path);if(u.acceptArrays&&d(o)&&!u.acceptArraysIgnore.includes(e)){if(!o.every(r=>z(r).toLowerCase()===z(t[e]).toLowerCase()))throw new TypeError(`${u.msg}: ${u.optsVarName}.${n.path} was customised to be array, but not all of its elements are ${z(t[e]).toLowerCase()}-type`)}else if(z(o)!==z(r))throw new TypeError(`${u.msg}: ${u.optsVarName}.${n.path} was customised to ${"string"===z(o).toLowerCase()?"":'"'}${JSON.stringify(o,null,0)}${"string"===z(o).toLowerCase()?"":'"'} which is not ${z(r).toLowerCase()} but ${z(o).toLowerCase()}`)}return o})}(e,r,t)}Ke.isMatch=(e,r,t)=>{const a=We(r,t),n=a.test(e);return a.negated?!n:n};var Ye=function(e,r){if(r){if("object"!=typeof r)throw new TypeError(String(r)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in r){if("boolean"!=typeof r.includeZero)throw new TypeError(String(r.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(r.includeZero&&0===e)return!0}}return Number.isSafeInteger(e)&&e>=1},Xe=h(function(e,r){(r=e.exports=function(e){return e+r.suffix(+e)}).suffix=function(e){return e%=100,1===Math.floor(e/10)?"th":e%10==1?"st":e%10==2?"nd":e%10==3?"rd":"th"}});Xe.suffix;const er=Array.isArray;function rr(e,r){if(!er(e))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(0===e.length)return e;const t={strictlyTwoElementsInRangeArrays:!1,progressFn:null},a=Object.assign({},t,r);let n,i;if(Ze(a,t,{msg:"ranges-sort: [THROW_ID_02*]",schema:{progressFn:["function","false","null"]}}),a.strictlyTwoElementsInRangeArrays&&!e.every((e,r)=>2===e.length||(n=r,i=e.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${Xe(n)} range (${JSON.stringify(e[n],null,4)}) has not two but ${i} elements!`);if(!e.every((e,r)=>!(!Ye(e[0],{includeZero:!0})||!Ye(e[1],{includeZero:!0}))||(n=r,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${Xe(n)} range (${JSON.stringify(e[n],null,4)}) does not consist of only natural numbers!`);const o=e.length*e.length;let s=0;return Array.from(e).sort((e,r)=>(a.progressFn&&(s++,a.progressFn(Math.floor(100*s/o))),e[0]===r[0]?e[1]<r[1]?-1:e[1]>r[1]?1:0:e[0]<r[0]?-1:1))}var tr=Array.isArray,ar=["null","start-of-heading","start-of-text","end-of-text","end-of-transmission","enquiry","acknowledge","bell","backspace","character-tabulation","line-feed","line-tabulation","form-feed","carriage-return","shift-out","shift-in","data-link-escape","device-control-one","device-control-two","device-control-three","device-control-four","negative-acknowledge","synchronous-idle","end-of-transmission-block","cancel","end-of-medium","substitute","escape","information-separator-four","information-separator-three","information-separator-two","information-separator-one","space","exclamation-mark"],nr=["delete","padding","high-octet-preset","break-permitted-here","no-break-here","index","next-line","start-of-selected-area","end-of-selected-area","character-tabulation-set","character-tabulation-with-justification","line-tabulation-set","partial-line-forward","partial-line-backward","reverse-line-feed","single-shift-two","single-shift-three","device-control-string","private-use-1","private-use-2","set-transmit-state","cancel-character","message-waiting","start-of-protected-area","end-of-protected-area","start-of-string","single-graphic-character-introducer","single-character-intro-introducer","control-sequence-introducer","string-terminator","operating-system-command","private-message","application-program-command"];function ir(e){return!"\"'><=".includes(e)}function or(e){return function(e){var t=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;"function"==typeof t&&(t=[t]),"function"==typeof a&&(a=[a]),"function"==typeof n&&(n=[n]);for(var i=!1,o=function(r,o){if(a.some(function(t){return t(e[r],r)})){if(!n)return{v:r};i=r}return null!==n&&i&&n.some(function(t){return t(e[r],r)})?{v:i}:t.some(function(t){return t(e[r],r)})||a.some(function(t){return t(e[r],r)})?void 0:{v:!1}},s=0,l=e.length;s<l;s++){var c=o(s);if("object"===r(c))return c.v}}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,ir,function(e){return"="===e})}function sr(e){return"\"'`‘’“”".includes(e)}function lr(e){if("string"!=typeof e||e.length>1)throw new Error("emlint/util/isTagChar(): input is not a single string character!");return!"><=".includes(e)}function cr(e){return dr(e)&&e.charCodeAt(0)>96&&e.charCodeAt(0)<123}function dr(e){return"string"==typeof e}function pr(e){return"number"==typeof e}function ur(e){return dr(e)&&1===e.length&&(e.charCodeAt(0)>64&&e.charCodeAt(0)<91||e.charCodeAt(0)>96&&e.charCodeAt(0)<123)}function mr(e){return cr(e)||":"===e}function fr(e,t,a){if("number"!=typeof t){if(null!=t)throw new Error("emlint/util.js/withinTagInnerspace(): second argument is of a type ".concat(r(t)));t=0}for(var n={at:null,last:!1,precedes:!1,within:!1},i=!0,o=!1,s=!1,l=!1,c=!1,d=!1,p=!1,u=!1,m=!1,f=!1,g=!1,h=!1,b=!1,w=!1,y=!1,A=!1,S=!1,v=!1,q=t,I=e.length;q<I;q++){e[q].charCodeAt(0);if(e[q].trim().length||n.last&&(n.precedes=!0),e[q],e[q],e[q],sr(e[q])?(null===n.at?(n.within=!0,n.at=q):e[q]!==e[n.at]&&q!==a||(n.within=!1),n.last=!0):n.last?(n.precedes=!0,n.last=!1):n.precedes=!1,n.at&&!n.within&&n.precedes&&e[q]!==e[n.at]&&(n.at=null),!n.within&&i&&"/"===e[q]&&">".includes(e[L(e,q)]))return!0;if(n.within||!i||">"!==e[q]||d)if(d&&!p&&e[q].trim().length&&!lr(e[q]))"<"===e[q]?p=!0:d=!1;else if(p&&!u&&e[q].trim().length)mr(e[q])||"/"===e[q]?u=!0:(d=!1,p=!1);else if(u&&!m&&e[q].trim().length&&!mr(e[q])){if("<>".includes(e[q])||"/"===e[q]&&"<>".includes(L(e,q)))return!0;"='\"".includes(e[q])&&(d=!1,p=!1,u=!1)}else if(!u||m||e[q].trim().length){if(m&&!f&&e[q].trim().length)ir(e[q])?f=!0:(d=!1,p=!1,u=!1,m=!1);else if(f&&(!e[q].trim().length||"="===e[q]||sr(e[q])))return!0}else m=!0;else{if(d=!0,!e[q+1]||!L(e,q)||!e.slice(q).includes("'")&&!e.slice(q).includes('"'))return!0;if("<"===e[L(e,q)])return!0}if(n.within||!i||!ir(e[q])||o||"="===e[T(e,q)]&&!or(e,q)){if(!s&&o&&e[q].trim().length&&!ir(e[q]))if("="===e[q])s=!0;else if(">"===e[q]||"/"===e[q]&&">"===e[L(e,q)]){var P=q;if("/"===e[q]&&(P=e[L(e,q)]),!L(e,P))return!0;d=!0,o=!1}else o=!1;else if(!l&&s&&e[q].trim().length)"'\"".includes(e[q])?l=!0:(o=!1,s=!1);else if(l&&sr(e[q]))e[q]===e[n.at]?c=!0:null!=a&&a===q?dr(e[n.at])&&"\"'".includes(e[n.at])&&"\"'".includes(e[q])?c=!0:dr(e[n.at])&&"‘’".includes(e[n.at])&&"‘’".includes(e[q])?c=!0:dr(e[n.at])&&"“”".includes(e[n.at])&&"“”".includes(e[q])&&(c=!0):null==a&&fr(e,null,q)&&(n.within&&(n.within=!1),c=!0);else if(c&&!n.within&&e[q].trim().length&&"/"!==e[q]){if(">"===e[q])return!0;if(ir(e[q]))return!0}}else o=!0;if(n.within||!i||g||!ir(e[q])||"="===e[T(e,q)]&&!or(e,q)){if(g&&e[q].trim().length&&(!ir(e[q])||"/"===e[q])){if("/"===e[q]&&">"===e[L(e,q)])return!0;g=!1}}else g=!0;if(i&&!n.within&&!h&&e[q].trim().length&&ir(e[q])?h=!0:h&&!b&&e[q].trim().length&&!ir(e[q])?"="===e[q]?b=!0:h=!1:b&&!w&&e[q].trim().length?">"===e[q]?w=!0:(h=!1,b=!1):w&&e[q].trim().length&&!lr(e[q])&&("<"===e[q]?p=!0:(h=!1,b=!1,w=!1)),n.within||y||!ir(e[q])&&e[q].trim().length||ir(e[q-1])||"="===e[q-1]||(y=!0),n.within||!y||A||!e[q].trim().length||ir(e[q])){if(!S&&A&&e[q].trim().length)sr(e[q])?S=!0:(y=!1,A=!1);else if(S&&sr(e[q])){if(e[q]===e[n.at])return!0;if(e[q+1]&&"/>".includes(e[L(e,q)]))return!0}}else"="===e[q]?A=!0:y=!1;if(i&&e[q].trim().length&&ir(e[q])&&!v&&(v=!0),v&&!e[q].trim().length&&e[q+1]&&ir(e[q+1])&&(v=!1),!n.within&&e[q].trim().length&&!ir(e[q])&&v){if("="===e[q])return!0;v=!1}i&&e[q].trim().length&&(i=!1)}return!1}function gr(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=r?e.slice(r):e,a=!1;return/^<\s*\w+\s*\/?\s*>/g.test(t)?a=!0:/^<\s*\w+\s+\w+\s*=\s*['"]/g.test(t)?a=!0:/^<\s*\/?\s*\w+\s*\/?\s*>/g.test(t)?a=!0:/^<\s*\w+(?:\s*\w+)*\s*\w+=['"]/g.test(t)&&(a=!0),dr(e)&&r<e.length&&a}var hr=Array.isArray,br=function e(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=r[t];if("'"!==n&&'"'!==n)throw new Error("1 emlint/util/attributeOnTheRight(): first character is not a single/double quote!\nstartingQuoteVal = ".concat(JSON.stringify(n,null,0),"\nstr = ").concat(JSON.stringify(r,null,4),"\nidx = ").concat(JSON.stringify(t,null,0)));for(var i=!1,o=null,s=null,l=null,c=null,d=t,p=r.length;d<p;d++){if(r[d].charCodeAt(0),(d===a&&d>t||null===a&&d>t&&r[d]===n)&&(a=d,i||(i=!0)),">"===r[d]&&(o=d),"<"===r[d]&&(s=d),"="===r[d]&&(c=d),"'"!==r[d]&&'"'!==r[d]||(l=d),"="===r[d]&&("'"===r[d+1]||'"'===r[d+1]))if(i){if(!o||o<a)return a}else{if(a)return!1;if(0!==l&&r[d+1]!==l&&e(r,t,l))return l;if(e(r,d+1))return!1}if(i&&o&&o>i)return a;if(i&&null===o&&null===s&&(null===l||l&&a>=l)&&null===c)return a;r[d+1]}if(l&&null===a&&e(r,t,l))return l;return!1},wr=fr,yr=cr,Ar=function(e){for(var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=null,a=null,n="\"'".includes(e[r])?e[r]:null,i=null,o=r,s=e.length;o<s;o++){var l=e[o].charCodeAt(0);if(34===l||39===l){if(e[o]===n&&o>r)return o;if(t=o,a=o,o>r&&("'"===e[o]||'"'===e[o])&&fr(e,o+1))return o;if(gr(e,o+1))return o}else if(e[o].trim().length)if(">"===e[o]){if(i=o,null!==t&&fr(e,o))return t===r?t+1:t}else if("="===e[o]){var c=L(e,o);if(c&&sr(e[c])){if(a&&a!==r&&fr(e,a+1))return a+1;if(!a||a===r){for(var d=void 0,p=e[o-1].trim().length?o-1:T(e,o);p--;){if(!e[p].trim().length){d=T(e,p)+1;break}if(p===r){d=r+1;break}}return d}}else if(e[o+1].trim().length){for(var u=void 0,m=o;m--;)if(!e[m].trim().length){u=T(e,m);break}return sr(u)?u:u+1}}else if("/"!==e[o]){if("<"===e[o]&&gr(e,o)&&null!==i)return i;null!==t&&(t=null)}}return null},Sr=gr,vr=sr,qr=function(e,r){return"<"===e[r]?{name:"bad-character-unencoded-opening-bracket",position:[[r,r+1,"&lt;"]]}:">"===e[r]?{name:"bad-character-unencoded-closing-bracket",position:[[r,r+1,"&gt;"]]}:'"'===e[r]?{name:"bad-character-unencoded-double-quotes",position:[[r,r+1,"&quot;"]]}:"`"===e[r]?{name:"bad-character-grave-accent",position:[[r,r+1,"&#x60;"]]}:"£"===e[r]?{name:"bad-character-unencoded-pound",position:[[r,r+1,"&pound;"]]}:"€"===e[r]?{name:"bad-character-unencoded-euro",position:[[r,r+1,"&euro;"]]}:"¢"===e[r]?{name:"bad-character-unencoded-cent",position:[[r,r+1,"&cent;"]]}:null},Ir=function(e,r,t){if(pr(r.startAt)&&pr(r.endAt)){var a=e.slice(r.startAt,r.endAt).match(/\(/g),n=e.slice(r.startAt,r.endAt).match(/\)/g);(tr(a)&&tr(n)&&a.length!==n.length||tr(a)&&!tr(n)||!tr(a)&&tr(n))&&(tr(a)&&tr(n)&&a.length>n.length||tr(a)&&a.length&&!tr(n)?t({name:"esp-more-opening-parentheses-than-closing",position:[[r.startAt,r.endAt]]}):(tr(a)&&tr(n)&&a.length<n.length||tr(n)&&n.length&&!tr(a))&&t({name:"esp-more-closing-parentheses-than-opening",position:[[r.startAt,r.endAt]]}))}},Pr=dr,xr=function(e){if(dr(e)&&e.length)return e.replace(/\{/g,"}").replace(/\(/g,")")};e.lint=function(e,n){if(!Pr(e))throw new Error("emlint: [THROW_ID_01] the first input argument must be a string. It was given as:\n".concat(JSON.stringify(e,null,4)," (type ").concat(r(e),")"));var i,o,s={rules:{},style:{line_endings_CR_LF_CRLF:null}};if(n){if(!f(n))throw new Error("emlint: [THROW_ID_02] the second input argument must be a plain object. It was given as:\n".concat(JSON.stringify(n,null,4)," (type ").concat(r(n),")"));if(Ze(i=Object.assign({},s,n),s,{enforceStrictKeyset:!0,msg:"emlint: [THROW_ID_03*]",ignorePaths:"rules.*",schema:{rules:["string","object","false","null","undefined"],style:["object","null","undefined"],"style.line_endings_CR_LF_CRLF":["string","null","undefined"]}}),i.style&&Pr(i.style.line_endings_CR_LF_CRLF))if("cr"===i.style.line_endings_CR_LF_CRLF.toLowerCase())"CR"!==i.style.line_endings_CR_LF_CRLF&&i.style.line_endings_CR_LF_CRLF;else if("lf"===i.style.line_endings_CR_LF_CRLF.toLowerCase())"LF"!==i.style.line_endings_CR_LF_CRLF&&i.style.line_endings_CR_LF_CRLF;else{if("crlf"!==i.style.line_endings_CR_LF_CRLF.toLowerCase())throw new Error('emlint: [THROW_ID_04] opts.style.line_endings_CR_LF_CRLF should be either falsey or string "CR" or "LF" or "CRLF". It was given as:\n'.concat(JSON.stringify(i.style.line_endings_CR_LF_CRLF,null,4)," (type is string)"));"CRLF"!==i.style.line_endings_CR_LF_CRLF&&i.style.line_endings_CR_LF_CRLF}}else i=b(s);i.style&&Pr(i.style.line_endings_CR_LF_CRLF)&&(o="cr"===i.style.line_endings_CR_LF_CRLF.toLowerCase()?"\r":"crlf"===i.style.line_endings_CR_LF_CRLF.toLowerCase()?"\r\n":"\n");var l,c,d=null,p=null,u={tagStartAt:null,tagEndAt:null,tagNameStartAt:null,tagNameEndAt:null,tagName:null,recognised:null,closing:null,comment:!1,pureHTML:!0,attributes:[],esp:[]};function m(){l=b(u)}m();var g,h={attrStartAt:null,attrEndAt:null,attrNameStartAt:null,attrNameEndAt:null,attrName:null,attrValue:null,attrValueStartAt:null,attrValueEndAt:null,attrEqualAt:null,attrOpeningQuote:{pos:null,val:null},attrClosingQuote:{pos:null,val:null},recognised:null,pureHTML:!0};function x(){c=b(h)}x();var k={headStartAt:null,headEndAt:null,headVal:null,tailStartAt:null,tailEndAt:null,tailVal:null,startAt:null,endAt:null,recognised:null,type:null};function E(){g=b(k)}E();var C,R={startAt:null,includesLinebreaks:!1,lastLinebreakAt:null};function z(){C=b(R)}z();var $=[],G=[],M={issues:[],applicableRules:{}};function Q(e,r){"raw"!==r&&"tag"!==r&&(M.applicableRules[e.name]=!0),Object.prototype.hasOwnProperty.call(i.rules,e.name)&&!i.rules[e.name]||("raw"===r?G.push(e):"tag"===r?$.push(e):M.issues.push(e))}function J(e,r){Q({name:"bad-character-unencoded-opening-bracket",position:[[e,r,"&lt;"]]},"raw")}Object.keys(B).concat(Object.keys(V)).sort().forEach(function(e){M.applicableRules[e]=!1});var W={cr:[],lf:[],crlf:[]},K=null,Z=null;0===e.length&&Q({name:"file-empty",position:[[0,0]]});for(var Y=function(r,n){null!==g.headVal&&r===g.headEndAt&&null===d&&(d=!0,p="esp");var s,u,f=e[r].charCodeAt(0);if(d&&!0!==d&&r>=d&&(d=null,p=null),e[r+4]&&"c"===e[r].toLowerCase()&&D(e,r,{i:!0},"d*","a*","t*","a*","[?*","]?","[?*")&&("<![".includes(e[T(e,r)])||e[r-1]&&!"<![".includes(e[r-1])&&"["===e[r-2]&&"!"===e[r-3]&&"<"===e[r-4]&&(!e[r-5]||e[r-5].trim().length&&!"<![".includes(e[r-5]))||e[r-1]&&!"<![".includes(e[r-1])&&"!"===e[r-2]&&"<"===e[r-3]&&(!e[r-4]||e[r-4].trim().length&&!"<![".includes(e[r-4])))&&null===N(e,r,"&","l","t",";","!","[")){var h=L(e,D(e,r,{i:!0},"d*","a*","t*","a*","[?*","]?","[?*").rightmostChar)-1,w=j(e,r,"<?*","!?*","[?*","]?*");return("<![".includes(e[r-1])||"["!==e[r-2]||"!"!==e[r-3]||"<"!==e[r-4]||e[r-5]&&"<![".includes(e[r-5]))&&("["!==e[r-1]||"<![".includes(e[r-2])||"!"!==e[r-3]||"<"!==e[r-4]||e[r-5]&&"<![".includes(e[r-5]))&&("["!==e[r-1]||"!"!==e[r-2]||"<![".includes(e[r-3])||"<"!==e[r-4]||e[r-5]&&"<![".includes(e[r-5]))?("<![".includes(e[r-1])||"!"!==e[r-2]||"<"!==e[r-3]||e[r-4]&&"<![".includes(e[r-4]))&&("["!==e[r-1]||"<![".includes(e[r-2])||"<"!==e[r-3]||e[r-4]&&"<![".includes(e[r-4]))||(w=Math.min(w,r-3)):w=Math.min(w,r-4),"<![CDATA["!==e.slice(w,h+1)&&Q({name:"bad-cdata-tag-malformed",position:[[w,h+1,"<![CDATA["]]}),d=!0,p="cdata",G.length&&(G.forEach(function(e){e.position[0][0]<w&&Q(e)}),G=[]),X=r=h,"continue"}if(!0===d&&"cdata"===p&&"[]".includes(e[r])){var y=_(e,r,"[?*","]?*","[?*","]?*",">");"]"===e[r]&&e[r+1]&&e[r+1].trim().length&&!">]".includes(e[r+1])&&"]"===e[r+2]&&">"===e[r+3]||"]"===e[r]&&"]"===e[r+1]&&e[r+2]&&e[r+2].trim().length&&!">]".includes(e[r+2])&&">"===e[r+3]?y=Math.max(y||r+4,r+4):"]"===e[r]&&e[r+1]&&e[r+1].trim().length&&!">]".includes(e[r+1])&&">"===e[r+2]&&(y=Math.max(y||r+3,r+3)),y&&("]]>"!==e.slice(r,y)&&Q({name:"bad-cdata-tag-malformed",position:[[r,y,"]]>"]]}),d=r+3)}if((null===d||null!==d&&"script tag"!==p||"script tag"===p&&("\\"!==e[r-1]||"\\"===e[r-2]))&&(null===K&&"\"'`".includes(e[r])?K=r:null===K||e[K]!==e[r]||Z&&Z!==r||(K=null,Z=null)),Z&&Z===r&&(K=null,Z=null),d&&"esp"===p&&g.tailStartAt&&null===g.tailEndAt&&!"{}%-$_()*|".includes(e[r+1])&&(d=r+1),d&&"esp"===p&&g.headVal&&null===g.tailStartAt)if(g.recognised&&H(U[g.headVal].sibling).some(function(a){if(D.apply(void 0,[e,r].concat(t(a.split("")))))return s=a,X=r,!0})){var A=D.apply(void 0,[e,r].concat(t(s.split(""))));g.tailStartAt=A.leftmostChar,g.tailEndAt=A.rightmostChar+1,g.tailVal=e.slice(g.tailStartAt,g.tailEndAt),g.endAt=g.tailEndAt,d=g.endAt,Ir(e,g,Q),E()}else xr(g.headVal).includes(e[r])&&("{}%-$_()*|".includes(e[L(e,r)])||g.headVal.includes(e[r])||xr(g.headVal).includes(e[r]))&&(g.tailStartAt=r);if(!(null!==g.headStartAt&&null===g.headEndAt&&r>g.headStartAt&&e[r+1])||e[r+1].trim().length&&"{}%-$_()*|".includes(e[r+1])||g.recognised&&"opening"!==U[g.headVal].type||"--"!==e.slice(g.headStartAt,r+1)&&(g.headEndAt=r+1,g.headVal=e.slice(g.headStartAt,r+1),g.recognised=Object.prototype.hasOwnProperty.call(U,g.headVal)),l.comment||null!==g.startAt||null!==g.headStartAt||!"{}%-$_()*|".includes(e[r])||!e[r+1]||N(e,r,"<","!")||d&&!0!==d||("{}%-$_()*|".includes(e[r+1])?(g.headStartAt=r,g.startAt=r,g.type="tag-based"):"$".includes(e[r])&&yr(e[r+1])&&(g.headStartAt=r,g.startAt=r,g.headEndAt=r+1,g.headVal=e[r],g.type="function-based",g.recognised=Object.prototype.hasOwnProperty.call(U,e[r])),null!==g.headStartAt&&null!==C.startAt&&C.startAt<r-1&&!C.includesLinebreaks&&Q({name:"tag-excessive-whitespace-inside-tag",position:[[C.startAt+1,r]]})),!d&&null!==l.tagNameEndAt){if(null===c.attrNameStartAt||null!==c.attrNameEndAt||null!==c.attrName||ur(e[r])||":"===e[r]&&ur(e[r+1])||(c.attrNameEndAt=r,c.attrName=e.slice(c.attrNameStartAt,c.attrNameEndAt),"="!==e[r]&&e[L(e,r)]),null!==c.attrNameEndAt&&null===c.attrEqualAt&&r>=c.attrNameEndAt&&e[r].trim().length){var S;if("'"!==e[r]&&'"'!==e[r]||(S=br(e,r)),"="===e[r]){if(c.attrEqualAt=r,e[r+1]){var v=L(e,r);if("="===e[v]){var q=r+1,I=v+1;for(d=I,p="repeated equals";q&&I;){Q({name:"tag-attribute-repeated-equal",position:[[q,I]]});var P=L(e,I-1);"="===e[P]?(q=I,d=I=P+1,p="already processed equals"):q=null}}}}else S?(Q({name:"tag-attribute-missing-equal",position:[[r,r,"="]]}),c.attrEqualAt=r,c.attrValueStartAt=r+1,c.attrValueEndAt=S,c.attrOpeningQuote.pos=r,c.attrOpeningQuote.val=e[r],c.attrClosingQuote.pos=S,c.attrClosingQuote.val=e[S],c.attrValue=e.slice(r+1,S)):(l.attributes.push(b(c)),x());null!==C.startAt&&("="===e[r]?(Q({name:"tag-attribute-space-between-name-and-equals",position:[[C.startAt,r]]}),z()):ur(e[r])&&(l.attributes.push(b(c)),x(),null!==C.startAt&&(" "===e[C.startAt]?C.startAt+1<r&&Q({name:"tag-excessive-whitespace-inside-tag",position:[[C.startAt+1,r]]}):Q({name:"tag-excessive-whitespace-inside-tag",position:[[C.startAt,r," "]]}))))}if(null===c.attrStartAt&&ur(e[r])&&(c.attrStartAt=r,c.attrNameStartAt=r,null!==C.startAt&&C.startAt<r-1&&(" "===e[C.startAt]?Q({name:"tag-excessive-whitespace-inside-tag",position:[[C.startAt+1,r]]}):Q({name:"tag-excessive-whitespace-inside-tag",position:[[C.startAt,r," "]]})),e[r-1]&&vr(e[r-1])))for(var k=r-1;k--;)if(!vr(e[k])){e[k].trim().length||Q({name:"tag-stray-character",position:[[k+1,r]]});break}if(null!==c.attrEqualAt&&null===c.attrOpeningQuote.pos)if(c.attrEqualAt<r&&e[r].trim().length){if(34===f||39===f){C.startAt&&C.startAt<r&&Q({name:"tag-attribute-space-between-equals-and-opening-quotes",position:[[C.startAt,r]]}),z(),c.attrOpeningQuote.pos=r,c.attrOpeningQuote.val=e[r];var R=Ar(e,r);if(R){if(e[R]!==e[r])if("'"===e[R]||'"'===e[R]){var O='"'===e[R];Q({name:"tag-attribute-mismatching-quotes-is-".concat(O?"double":"single"),position:[[R,R+1,"".concat(O?"'":'"')]]})}else{var V=e[R-1].trim().length?R:T(e,R)+1,B=R;"/"===e[T(e,R)]&&((B=T(e,R))+1<R&&Q({name:"tag-whitespace-closing-slash-and-bracket",position:[[B+1,R]]}),V=T(e,B)+1),Q({name:"tag-attribute-closing-quotation-mark-missing",position:[[V,B,"".concat(e[r]).concat("")]]})}c.attrClosingQuote.pos=R,c.attrClosingQuote.val=e[r],c.attrValue=e.slice(r+1,R),c.attrValueStartAt=r+1,c.attrValueEndAt=R,c.attrEndAt=R;for(var Y=r+1;Y<R;Y++){var ee=qr(e,Y);ee&&$.push(ee)}if(G.length,!c.attrNameStartAt||!e[c.attrNameStartAt-1].trim().length||i.rules&&!1===i.rules["tag-stray-character"]||M.issues.some(function(e){return X=r,("tag-stray-quotes"===e.name||"tag-stray-character"===e.name)&&e.position[0][1]===c.attrNameStartAt})||Q({name:"tag-missing-space-before-attribute",position:[[c.attrNameStartAt,c.attrNameStartAt," "]]}),l.attributes.push(b(c)),e[R].trim().length){var re=R-(vr(e[R])?0:1)+1;re>r&&(d=re,p="closing quote looked up")}else{var te=T(e,R)+1;te>r&&(d=te,p="closing quote looked up")}return null!==K&&(Z=c.attrClosingQuote.pos),x(),r===n-1&&null!==l.tagStartAt&&(null!==c.attrEqualAt&&null!==c.attrOpeningQuote.pos||l.attributes.some(function(e){return null!==e.attrEqualAt&&null!==e.attrOpeningQuote.pos}))&&Q({name:"tag-missing-closing-bracket",position:[[r+1,r+1,">"]]}),X=r,"continue"}}else if(8220===f||8221===f)c.attrOpeningQuote.pos=r,c.attrOpeningQuote.val='"',Q({name:8220===f?"tag-attribute-left-double-quotation-mark":"tag-attribute-right-double-quotation-mark",position:[[r,r+1,'"']]}),c.attrValueStartAt=r+1,K=r;else{if(8216!==f&&8217!==f){if(wr(e,r)){var ae=c.attrStartAt,ne=L(e,r);if("/"===e[r]&&ne&&">"===e[ne]||">"===e[r])for(var ie=c.attrStartAt;ie--;)if(e[ie].trim().length){ae=ie+1;break}return Q({name:"tag-attribute-quote-and-onwards-missing",position:[[ae,r]]}),z(),x(),X=--r,"continue"}var oe=Ar(e,r),se=vr(e[oe])?e[oe]:'"';Q({name:"tag-attribute-opening-quotation-mark-missing",position:[[T(e,r)+1,r,se]]}),c.attrOpeningQuote={pos:r,val:se},c.attrValueStartAt=r,K=r;for(var le,ce=null,de=r;de<n;de++){if(">"===e[de]&&("/"!==e[T(e,de)]&&wr(e,de)||"/"===e[T(e,de)])){var pe=T(e,de);ce=de,"/"===e[pe]&&(ce=pe)}if(null!==ce&&"=<".includes(e[de]))break}var ue,me=ce;if((le=r<ce?e.slice(r,ce):"").includes("=")){var fe=le.split("=")[0];if(fe.split("").some(function(e){return!e.trim().length})){for(var ge=r+fe.length;ge--;){if(!e[ge].trim().length){ue=ge+1;break}if(ge===r)break}var he=T(e,ue);vr(he)||(me=he+1)}}for(var be=null,we=null,ye=null,Ae=!1,Se=me;Se--&&"="!==e[Se];Se>r)if(null===be&&e[Se].trim().length&&(be=Se+1,Ae&&(ye=be,Ae=!1)),!e[Se].trim().length&&be){if(we=Se+1,"="===e[L(e,be)]){var ve=T(e,we);vr(e[ve])||(ue=L(e,ve+1));break}if(!a.includes(e.slice(we,be)))break;Ae=!0,be=null,we=null}if(!ye&&ue&&(ye=T(e,ue)+1),be&&c.attrOpeningQuote&&!ye&&e[T(e,be)]!==c.attrOpeningQuote.val&&(ye=be),ye?(Q({name:"tag-attribute-closing-quotation-mark-missing",position:[[ye,ye,c.attrOpeningQuote.val]]}),c.attrClosingQuote.pos=ye,c.attrValueEndAt=ye,c.attrEndAt=ye+1):(c.attrClosingQuote.pos=T(e,be),c.attrValueEndAt=c.attrClosingQuote.pos,c.attrEndAt=be),c.attrClosingQuote.val=c.attrOpeningQuote.val,c.attrValue=e.slice(c.attrOpeningQuote.pos,c.attrClosingQuote.pos),c.attrValueStartAt<c.attrValueEndAt)for(var qe=c.attrValueStartAt;qe<c.attrValueEndAt;qe++){var Ie=qr(e,qe);Ie&&Q(Ie)}return d||(d=c.attrClosingQuote.pos,p="missing opening quotes",C.startAt=null),l.attributes.push(b(c)),x(),X=r,"continue"}c.attrOpeningQuote.pos=r,c.attrOpeningQuote.val="'",Q({name:8216===f?"tag-attribute-left-single-quotation-mark":"tag-attribute-right-single-quotation-mark",position:[[r,r+1,"'"]]}),c.attrValueStartAt=r+1,K=r}null!==C.startAt&&("'"===e[r]||'"'===e[r]?Q({name:"tag-attribute-space-between-equals-and-opening-quotes",position:[[C.startAt,r]]}):wr(e,r+1)&&(Q({name:"tag-attribute-quote-and-onwards-missing",position:[[c.attrStartAt,r]]}),x()))}else if(!e[r+1]||!L(e,r))return Q({name:"file-missing-ending",position:[[r+1,r+1]]}),X=r,"continue";if(null!==c.attrEqualAt&&null!==c.attrOpeningQuote.pos&&(null===c.attrClosingQuote.pos||r===c.attrClosingQuote.pos)&&r>c.attrOpeningQuote.pos&&vr(e[r]))if(34===f||39===f){var Pe="tag-attribute-mismatching-quotes-is-".concat(34===f?"double":"single");e[r]===c.attrOpeningQuote.val||M.issues.length&&M.issues.some(function(e){return X=r,e.name===Pe&&1===e.position.length&&e.position[0][0]===r&&e.position[0][1]===r+1})||Q({name:Pe,position:[[r,r+1,"".concat(34===f?"'":'"')]]}),c.attrClosingQuote.pos=r,c.attrClosingQuote.val=e[r],null===c.attrValue&&(c.attrOpeningQuote.pos&&c.attrClosingQuote.pos&&c.attrOpeningQuote.pos+1<c.attrClosingQuote.pos?c.attrValue=e.slice(c.attrValueStartAt,r):c.attrValue=""),c.attrEndAt=r,c.attrValueEndAt=r,K&&(K=null),l.attributes.push(b(c)),x()}else!Pr(c.attrOpeningQuote.val)||8220!==f&&8221!==f?!Pr(c.attrOpeningQuote.val)||8216!==f&&8217!==f||(null===L(e,r)||">"!==e[L(e,r)]&&"/"!==e[L(e,r)])&&!wr(e,r+1)||(Q({name:8216===f?"tag-attribute-left-single-quotation-mark":"tag-attribute-right-single-quotation-mark",position:[[r,r+1,"'"]]}),c.attrEndAt=r,c.attrClosingQuote.pos=r,c.attrClosingQuote.val="'",K=null,Z=null,l.attributes.push(b(c)),x()):(Q({name:8220===f?"tag-attribute-left-double-quotation-mark":"tag-attribute-right-double-quotation-mark",position:[[r,r+1,'"']]}),c.attrEndAt=r,c.attrClosingQuote.pos=r,c.attrClosingQuote.val='"',l.attributes.push(b(c)),x());c.attrOpeningQuote.val&&c.attrOpeningQuote.pos<r&&null===c.attrClosingQuote.pos&&("/"===e[r]&&L(e,r)&&">"===e[L(e,r)]||">"===e[r])&&(Q({name:"tag-attribute-closing-quotation-mark-missing",position:[[r,r,c.attrOpeningQuote.val]]}),c.attrClosingQuote.pos=r,c.attrClosingQuote.val=c.attrOpeningQuote.val,l.attributes.push(b(c)),x())}if(f<32){var xe="bad-character-".concat(ar[f]);if(9===f)d||Q({name:xe,position:[[r,r+1,"  "]]});else if(13===f)Pr(e[r+1])&&10===e[r+1].charCodeAt(0)?(d||(i.style&&i.style.line_endings_CR_LF_CRLF&&"CRLF"!==i.style.line_endings_CR_LF_CRLF?Q({name:"file-wrong-type-line-ending-CRLF",position:[[r,r+2,o]]}):W.crlf.push([r,r+2])),null!==g.headStartAt&&Q({name:"esp-line-break-within-templating-tag",position:[[r,r+2]]})):(d||(i.style&&i.style.line_endings_CR_LF_CRLF&&"CR"!==i.style.line_endings_CR_LF_CRLF?Q({name:"file-wrong-type-line-ending-CR",position:[[r,r+1,o]]}):W.cr.push([r,r+1])),null!==g.headStartAt&&Q({name:"esp-line-break-within-templating-tag",position:[[r,r+1]]}));else if(10===f)Pr(e[r-1])&&13===e[r-1].charCodeAt(0)||(d||(i.style&&i.style.line_endings_CR_LF_CRLF&&"LF"!==i.style.line_endings_CR_LF_CRLF?Q({name:"file-wrong-type-line-ending-LF",position:[[r,r+1,o]]}):W.lf.push([r,r+1])),null!==g.headStartAt&&Q({name:"esp-line-break-within-templating-tag",position:[[r,r+1]]}));else if(!d){var ke,Ee=T(e,r),Le=L(e,r);if(Ee<r-1&&(Le>r+1||null===Le&&e[r+1]&&"\n"!==e[r+1]&&"\r"!==e[r+1]&&!e[r+1].trim().length)){var Te=e.slice(Ee+1,Le);ke=Te.includes("\n")||Te.includes("\r")?i.style&&i.style.line_endings_CR_LF_CRLF?i.style.line_endings_CR_LF_CRLF:"\n":" "}Q(ke?{name:xe,position:[[Ee+1,Le,ke]]}:{name:xe,position:[[r,r+1]]})}}else if(!d&&f>126&&f<160)Q({name:"bad-character-".concat(nr[f-127]),position:[[r,r+1]]});else if(d||38!==f)if(d||60!==f)if(d||62!==f)d||160!==f?d||5760!==f?d||8192!==f?d||8193!==f?d||8194!==f?d||8195!==f?d||8196!==f?d||8197!==f?d||8198!==f?d||8199!==f?d||8200!==f?d||8201!==f?d||8202!==f?d||8203!==f?d||8232!==f?d||8233!==f?d||8239!==f?d||8287!==f?d||12288!==f?!d&&qr(e,r)?Q(qr(e,r),"raw"):!d&&f>=888&&f<=8591&&(888===f||889===f||f>=896&&f<=899||907===f||909===f||930===f||1328===f||1367===f||1368===f||1419===f||1419===f||1420===f||1424===f||f>=1480&&f<=1487||f>=1515&&f<=1519||f>=1525&&f<=1535||1565===f||1806===f||1867===f||1868===f||f>=1970&&f<=1983||f>=2043&&f<=2047||2094===f||2095===f||2111===f||2140===f||2141===f||2143===f||f>=2155&&f<=2207||2229===f||f>=2238&&f<=2258||2436===f||2445===f||2446===f||2449===f||2450===f||2473===f||2481===f||2483===f||2484===f||2485===f||2490===f||2491===f||2501===f||2502===f||2505===f||2506===f||f>=2511&&f<=2518||f>=2520&&f<=2523||2526===f||f>=8384&&f<=8399||f>=8433&&f<=8447||8588===f||8589===f||8590===f||8591===f)&&Q({name:"bad-character-generic",position:[[r,r+1]]}):Q({name:"bad-character-ideographic-space",position:[[r,r+1," "]]}):Q({name:"bad-character-medium-mathematical-space",position:[[r,r+1," "]]}):Q({name:"bad-character-narrow-no-break-space",position:[[r,r+1," "]]}):Q({name:"bad-character-paragraph-separator",position:[[r,r+1,"\n"]]}):Q({name:"bad-character-line-separator",position:[[r,r+1,"\n"]]}):Q({name:"bad-character-zero-width-space",position:[[r,r+1]]}):Q({name:"bad-character-hair-space",position:[[r,r+1," "]]}):Q({name:"bad-character-thin-space",position:[[r,r+1," "]]}):Q({name:"bad-character-punctuation-space",position:[[r,r+1," "]]}):Q({name:"bad-character-figure-space",position:[[r,r+1," "]]}):Q({name:"bad-character-six-per-em-space",position:[[r,r+1," "]]}):Q({name:"bad-character-four-per-em-space",position:[[r,r+1," "]]}):Q({name:"bad-character-three-per-em-space",position:[[r,r+1," "]]}):Q({name:"bad-character-em-space",position:[[r,r+1," "]]}):Q({name:"bad-character-en-space",position:[[r,r+1," "]]}):Q({name:"bad-character-em-quad",position:[[r,r+1," "]]}):Q({name:"bad-character-en-quad",position:[[r,r+1," "]]}):Q({name:"bad-character-ogham-space-mark",position:[[r,r+1," "]]}):Q({name:"bad-character-unencoded-non-breaking-space",position:[[r,r+1,"&nbsp;"]]});else{var Ce=T(e,r);if("-"===e[Ce]){var Ne=T(e,Ce);e[Ne]}else Q({name:"bad-character-unencoded-closing-bracket",position:[[r,r+1,"&gt;"]]},"raw")}else{var De=L(e,r);if(De){var Re=L(e,De);if("!"===e[De]){De>r+1&&"["!==e[L(e,De)]&&Q({name:"html-comment-spaces",position:[[r+1,De]]});var je=L(e,Re);if("-"===e[Re]){Re>De+1&&Q({name:"html-comment-spaces",position:[[De+1,Re]]});var _e=L(e,je);if("-"===e[je]&&(l.comment=!0,je>Re+1&&Q({name:"html-comment-spaces",position:[[Re+1,je]]})),"-"===e[_e]){var Oe,Ve=_e;do{Oe=L(e,Ve),"-"===e[Oe]&&(Ve=Oe)}while("-"===e[Oe]);var Fe=L(e,Ve);Q({name:"html-comment-redundant-dash",position:[[je+1,Fe]]}),d=Fe,p="repeated HTML comment dashes"}}}else"-"===e[De]||J(r,r+1)}else J(r,r+1)}else yr(e[L(e,r)])||Q({name:"bad-character-unencoded-ampersand",position:[[r,r+1,"&amp;"]]});if(!d&&null!==C.startAt&&e[r].trim().length&&null!==l.tagNameStartAt&&null===c.attrStartAt&&(!c.attrClosingQuote.pos||c.attrClosingQuote.pos<=r)&&(">"===e[r]||"/"===e[r]&&"<>".includes(e[L(e,r)]))){var Ue="tag-excessive-whitespace-inside-tag";"/"===e[C.startAt-1]&&(Ue="tag-whitespace-closing-slash-and-bracket"),Q({name:Ue,position:[[C.startAt,r]]})}if(d||e[r].trim().length||null!==C.startAt||(C.startAt=r),(!d&&"\n"===e[r]||"\r"===e[r])&&(null===C.startAt||C.includesLinebreaks||(C.includesLinebreaks=!0),C.lastLinebreakAt=r),!d&&null!==l.tagNameStartAt&&null===l.tagNameEndAt&&!ur(e[r])&&"<"!==e[r]&&"/"!==e[r]&&(l.tagNameEndAt=r,l.tagName=e.slice(l.tagNameStartAt,r),l.recognised=F.includes(l.tagName.toLowerCase()),vr(e[r])||"="===e[r])){var Be,He=r+1;if(e[r+1].trim().length)if(vr(e[r+1])||"="===e[r+1]){for(var ze=r+1;ze<n;ze++)if(!vr(e[ze])&&"="!==e[ze]){e[ze].trim().length&&(Be=!0,He=ze);break}}else Be=!0;Q(Be?{name:"tag-stray-character",position:[[r,He," "]]}:{name:"tag-stray-character",position:[[r,He]]})}if(!d&&null!==l.tagStartAt&&null===l.tagNameStartAt&&ur(e[r])&&l.tagStartAt<r&&(l.tagNameStartAt=r,null===l.closing&&(l.closing=!1),l.tagStartAt<r-1&&null!==C.startAt&&$.push({name:"tag-space-after-opening-bracket",position:[[l.tagStartAt+1,r]]})),!d&&null!==l.tagNameStartAt&&null===l.tagNameEndAt&&dr(u=e[r])&&1===u.length&&u.charCodeAt(0)>64&&u.charCodeAt(0)<91&&!e.slice(l.tagNameStartAt).toLowerCase().startsWith("doctype")&&Q({name:"tag-name-lowercase",position:[[r,r+1,e[r].toLowerCase()]]}),d||"/"!==e[r]||null===l.tagStartAt||null!==l.tagNameStartAt||null===l.closing&&(l.closing=!0),!d&&"<"===e[r])if(null===l.tagStartAt)l.tagStartAt=r;else if(Sr(e,r))if(null!==l.tagStartAt&&l.attributes.length&&l.attributes.some(function(e){return null!==e.attrEqualAt&&null!==e.attrOpeningQuote.pos})){var $e=T(e,r);">"===e[$e]?l.tagEndAt=$e+1:Q({name:"tag-missing-closing-bracket",position:[[$e+1,r,">"]]}),G.length&&G.forEach(function(e){e.position[0][0]<l.tagStartAt&&Q(e)}),b(l),m(),x(),G=[],l.tagStartAt=r}else G.length&&(G.forEach(function(e){e.position[0][0]<r&&Q(e)}),G=[]),$.length&&($=[]);if(!d&&null!==l.tagStartAt&&(!c.attrClosingQuote||c.attrClosingQuote.pos<r))if(62===f)$.length&&($.forEach(function(e){Q(e)}),$=[]),G.length&&(G.forEach(function(e){(e.position[0][0]<l.tagStartAt||l.attributes.some(function(t){return X=r,t.attrValueStartAt<e.position[0][0]&&t.attrValueEndAt>e.position[0][0]})&&!M.issues.some(function(t){return X=r,t.position[0][0]===e.position[0][0]&&t.position[0][1]===e.position[0][1]}))&&Q(e)}),G=[]),"script"===l.tagName&&(d=!0,p="script tag"),m(),x();else if(47===f){var Ge=_(e,r,{mode:1},"\\?*","/*","\\?*");(">"===e[Ge]||e[Ge]&&!e[Ge].trim().length&&">"===e[L(e,Ge)])&&(null!==C.startAt&&(Q({name:"tag-excessive-whitespace-inside-tag",position:[[C.startAt,r]]}),z()),Q({name:e.slice(r+1,Ge).includes("\\")?"tag-closing-left-slash":"tag-duplicate-closing-slash",position:[[r+1,Ge]]}),d=Ge,p="repeated slash")}else if(92===f){var Me=_(e,r,{mode:1},"/?*","\\*","/?*");">"===e[Me]||e[Me]&&!e[Me].trim().length&&">"===e[L(e,Me)]?(Q({name:"tag-closing-left-slash",position:[[r,Me,"/"]]}),d=Me,p="repeated slash"):null===Me&&">"===e[L(e,r)]&&Q({name:"tag-closing-left-slash",position:[[r,r+1,"/"]]}),null!==C.startAt&&(Q({name:"tag-excessive-whitespace-inside-tag",position:[[C.startAt,r]]}),z())}if(d&&"script tag"===p&&"t"===e[r]&&"p"===e[r-1]&&"i"===e[r-2]&&"r"===e[r-3]&&"c"===e[r-4]&&"s"===e[r-5]&&null===K){var Qe=L(e,r),Je=T(e,r-5);"/"===e[Je]?T(e,Je):e[Je],d=Qe+1}!d&&null!==C.startAt&&e[r].trim().length&&z(),e[r+1]||G.length&&(null!==l.tagStartAt&&l.attributes.some(function(e){return null!==e.attrEqualAt&&null!==e.attrOpeningQuote})?(G.forEach(function(e){e.position[0][0]<l.tagStartAt&&Q(e)}),G=[],Q({name:"tag-missing-closing-bracket",position:[[C.startAt?C.startAt:r+1,r+1,">"]]})):M.issues.some(function(e){return"file-missing-ending"===e.name})||(G.forEach(function(e){Q(e)}),G=[]));var We=b(M);Object.keys(We.applicableRules).forEach(function(e){We.applicableRules[e]||delete We.applicableRules[e]}),X=r},X=0,ee=e.length;X<ee;X++)Y(X,ee);i.style&&i.style.line_endings_CR_LF_CRLF||!(W.cr.length&&W.lf.length||W.lf.length&&W.crlf.length||W.cr.length&&W.crlf.length)||(W.cr.length>W.crlf.length&&W.cr.length>W.lf.length?(W.crlf.length&&W.crlf.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-CR-mainly",position:[[e[0],e[1],"\r"]]})}),W.lf.length&&W.lf.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-CR-mainly",position:[[e[0],e[1],"\r"]]})})):W.lf.length>W.crlf.length&&W.lf.length>W.cr.length?(W.crlf.length&&W.crlf.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})}),W.cr.length&&W.cr.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})})):W.crlf.length>W.lf.length&&W.crlf.length>W.cr.length?(W.cr.length&&W.cr.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})}),W.lf.length&&W.lf.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})})):W.crlf.length===W.lf.length&&W.lf.length===W.cr.length?(W.crlf.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})}),W.cr.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})})):W.cr.length===W.crlf.length&&W.cr.length>W.lf.length?(W.cr.length&&W.cr.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})}),W.lf.length&&W.lf.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})})):(W.lf.length===W.crlf.length&&W.lf.length>W.cr.length||W.cr.length===W.lf.length&&W.cr.length>W.crlf.length)&&(W.cr.length&&W.cr.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})}),W.crlf.length&&W.crlf.forEach(function(e){Q({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})})));var re=function(e,r){function t(e,r,t){let a=0,n=0,o=0,l=0,c=0,d="",p="";for(let u=r;u<t;u++)e[u].trim().length?p+=e[u]:c++,i(e[u])?a++:s(e[u])?(n++,d+=String(e[u])):"#"===e[u]?l++:o++;let u=!1;return!a&&n>o?u="deci":(n||a)&&("#"===p[0]&&"x"===p[1].toLowerCase()&&(s(p[2])||i(p[2]))||"x"===p[0].toLowerCase()&&n&&!o)&&(u="hexi"),{probablyNumeric:u,lettersCount:a,numbersCount:n,numbersValue:d,hashesCount:l,othersCount:o,charTrimmed:p,whitespaceCount:c}}function a(e){return!("string"==typeof e&&1===e.length&&e.toUpperCase()!==e.toLowerCase())}function n(e){return"string"==typeof e}function i(e){return"string"==typeof e&&(e.charCodeAt(0)>96&&e.charCodeAt(0)<123||e.charCodeAt(0)>64&&e.charCodeAt(0)<91)}function o(e){return n(e)&&1===e.length&&(e.charCodeAt(0)>96&&e.charCodeAt(0)<123||e.charCodeAt(0)>47&&e.charCodeAt(0)<58||e.charCodeAt(0)>64&&e.charCodeAt(0)<91||35===e.charCodeAt(0))}function s(e){return n(e)&&e.charCodeAt(0)>47&&e.charCodeAt(0)<58}function l(e,r,t){for(let a=r;a<t;a++)if(e[a].trim().length&&!"nbsp".includes(e[a].toLowerCase()))return!1;return!0}function c(e){return O(e)&&e.length?1===e.length?e[0]:e.reduce((e,r)=>r.tempEnt.length>e.tempEnt.length?r:e):e}function d(r){let t;return O(r)&&r.length&&((t=Array.from(r)).length>1&&t.some(r=>";"===e[L(e,r.tempRes.rightmostChar)])&&t.some(r=>";"!==e[L(e,r.tempRes.rightmostChar)])&&(t=t.filter(r=>";"===e[L(e,r.tempRes.rightmostChar)])),!t.every(e=>!(e&&e.tempRes&&e.tempRes.gaps&&O(e.tempRes.gaps)&&e.tempRes.gaps.length))&&!t.every(e=>e&&e.tempRes&&e.tempRes.gaps&&O(e.tempRes.gaps)&&e.tempRes.gaps.length))?c(t.filter(e=>!e.tempRes.gaps||!O(e.tempRes.gaps)||!e.tempRes.gaps.length)):c(r)}if("string"!=typeof e)throw new Error(`string-fix-broken-named-entities: [THROW_ID_01] the first input argument must be string! It was given as:\n${JSON.stringify(e,null,4)} (${typeof e}-type)`);const p={decode:!1,cb:({rangeFrom:e,rangeTo:r,rangeValEncoded:t,rangeValDecoded:a})=>a||t?[e,r,u.decode?a:t]:[e,r],progressFn:null};let u;if(null!=r){if(!f(r))throw new Error(`string-fix-broken-named-entities: [THROW_ID_02] the second input argument must be a plain object! I was given as:\n${JSON.stringify(r,null,4)} (${typeof r}-type)`);u=Object.assign({},p,r)}else u=p;if(u.cb&&"function"!=typeof u.cb)throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_03] opts.cb must be a function (or falsey)! Currently it's: ${typeof u.cb}, equal to: ${JSON.stringify(u.cb,null,4)}`);if(u.entityCatcherCb&&"function"!=typeof u.entityCatcherCb)throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_03] opts.entityCatcherCb must be a function (or falsey)! Currently it's: ${typeof u.entityCatcherCb}, equal to: ${JSON.stringify(u.entityCatcherCb,null,4)}`);if(u.progressFn&&"function"!=typeof u.progressFn)throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_04] opts.progressFn must be a function (or falsey)! Currently it's: ${typeof u.progressFn}, equal to: ${JSON.stringify(u.progressFn,null,4)}`);let m=!1;const g={nameStartsAt:null,ampersandNecessary:null,patience:1,matchedN:null,matchedB:null,matchedS:null,matchedP:null,matchedSemicol:null};let h=b(g);const x=()=>{h=b(g)},k=[];let E,C,R,_,V,F;const U=e.length+1;let B=0,H=null,z=null,$=null;e:for(let r=0;r<U;r++){if(u.progressFn&&(V=Math.floor(B/U*100))!==F&&(F=V,u.progressFn(V)),H){if(!(!0!==H&&r>=H)){B++;continue}H=null}if(R=(null!==h.matchedN?1:0)+(null!==h.matchedB?1:0)+(null!==h.matchedS?1:0)+(null!==h.matchedP?1:0),_=[h.matchedN,h.matchedB,h.matchedS,h.matchedP].filter(e=>null!==e),E=Math.min(..._),C=Math.max(..._),!(null!==h.nameStartsAt&&R>2&&(null!==h.matchedSemicol||!h.ampersandNecessary||a(e[h.nameStartsAt-1])&&a(e[r])||(a(e[h.nameStartsAt-1])||a(e[r]))&&C-E<=4||null!==h.matchedN&&null!==h.matchedB&&null!==h.matchedS&&null!==h.matchedP&&h.matchedN+1===h.matchedB&&h.matchedB+1===h.matchedS&&h.matchedS+1===h.matchedP)&&(!e[r]||null!==h.matchedN&&null!==h.matchedB&&null!==h.matchedS&&null!==h.matchedP&&e[r]!==e[r-1]||"n"!==e[r].toLowerCase()&&"b"!==e[r].toLowerCase()&&"s"!==e[r].toLowerCase()&&"p"!==e[r].toLowerCase()||";"===e[T(e,r)])&&";"!==e[r])||void 0!==e[r+1]&&";"===e[L(e,r)]||null===h.matchedB&&("n"===e[E].toLowerCase()&&e[T(e,E)]&&"e"===e[T(e,E)].toLowerCase()||null!==h.matchedN&&D(e,h.matchedN,{i:!0},"s","u","p")||"c"===e[L(e,h.matchedN)].toLowerCase())||null!==h.matchedB&&!l(e,E,C+1)&&e[E]&&e[C]&&"n"===e[E].toLowerCase()&&"b"===e[C].toLowerCase())if(e[r]&&";"===e[r-1]&&!N(e,r-1,"a","m","p")&&";"!==e[r]&&R>0)x(),B++;else{if(null!==z&&(!e[r]||e[r].trim().length&&!o(e[r]))){if(r>z+1&&"&nbsp;"!==e.slice(z-1,r+1)){const a=e.slice(z,r),i=T(e,z),o=i?T(e,i):"";if("&"!==e[i]||e[r]&&";"===e[r]){if("&"!==e[i]&&"&"!==e[o]&&";"===e[r]){const t=T(e,r),a=t?T(e,t):null;if(null!==a&&Object.prototype.hasOwnProperty.call(S,e[t])&&Object.prototype.hasOwnProperty.call(S[e[t]],e[a])){let i,o,s=S[e[t]][e[a]].reduce((t,a)=>{const n=N(e,r,...a.split(""));return!n||"nbsp"===a||"block"===a&&":"===e[T(e,z)]?t:t.concat([{tempEnt:a,tempRes:n}])},[]);if((s=d(s))&&({tempEnt:i,tempRes:o}=s),i&&(!Object.keys(q).includes(i)||!0===q[i].addAmpIfSemiPresent||q[i].addAmpIfSemiPresent&&(!o.leftmostChar||n(e[o.leftmostChar-1])&&!e[o.leftmostChar-1].trim().length))){const e=I(`&${i};`);k.push({ruleName:`bad-named-html-entity-malformed-${i}`,entityName:i,rangeFrom:o.leftmostChar,rangeTo:r+1,rangeValEncoded:`&${i};`,rangeValDecoded:e})}}else null!==$&&(k.push({ruleName:"bad-malformed-numeric-character-entity",entityName:null,rangeFrom:$,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null}),$=null)}else if("&"===e[i]&&";"===e[r]){if(e.slice(i+1,r).trim().length>1){const o=t(e,i+1,r);if(o.probablyNumeric){if(o.probablyNumeric&&"#"===o.charTrimmed[0]&&!o.whitespaceCount&&(!o.lettersCount&&o.numbersCount>0&&!o.othersCount||(o.numbersCount||o.lettersCount)&&"x"===o.charTrimmed[1]&&!o.othersCount)){const e=String.fromCharCode(parseInt(o.charTrimmed.slice("deci"===o.probablyNumeric?1:2),"deci"===o.probablyNumeric?10:16));"deci"===o.probablyNumeric&&parseInt(o.numbersValue,10)>918015?k.push({ruleName:"bad-malformed-numeric-character-entity",entityName:null,rangeFrom:i,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null}):u.decode&&k.push({ruleName:"encoded-numeric-html-entity-reference",entityName:o.charTrimmed,rangeFrom:i,rangeTo:r+1,rangeValEncoded:`&${o.charTrimmed};`,rangeValDecoded:e})}else k.push({ruleName:"bad-malformed-numeric-character-entity",entityName:null,rangeFrom:i,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null});u.entityCatcherCb&&u.entityCatcherCb(i,r+1)}else{const t=z,s=z?L(e,z):null;let l;if(Object.prototype.hasOwnProperty.call(y,o.charTrimmed.toLowerCase())){l=o.charTrimmed;const e=I(`&${y[o.charTrimmed.toLowerCase()]};`);k.push({ruleName:`bad-named-html-entity-malformed-${y[o.charTrimmed.toLowerCase()]}`,entityName:y[o.charTrimmed.toLowerCase()],rangeFrom:i,rangeTo:r+1,rangeValEncoded:`&${y[o.charTrimmed.toLowerCase()]};`,rangeValDecoded:e})}else if(Object.prototype.hasOwnProperty.call(v,e[t].toLowerCase())&&Object.prototype.hasOwnProperty.call(v[e[t].toLowerCase()],e[s].toLowerCase())){let c,p,m=v[e[t].toLowerCase()][e[s].toLowerCase()].reduce((r,t)=>{const a=D(e,z-1,{i:!0},...t.split(""));return a&&"nbsp"!==t?r.concat([{tempEnt:t,tempRes:a}]):r},[]);if((m=d(m))&&({tempEnt:l,tempRes:c}=m),l){let t=!1;const s=c.leftmostChar,d=L(e,s);if(Object.keys(q).includes(a)&&n(e[s-1])&&!e[s-1].trim().length&&!0!==q[a].addAmpIfSemiPresent){z=null;continue}if(Object.prototype.hasOwnProperty.call(A,e[s])&&Object.prototype.hasOwnProperty.call(A[e[s]],e[d])&&A[e[s]][e[d]].includes(o.charTrimmed))p=o.charTrimmed,r-i-1===l.length?u.decode&&(t="encoded-html-entity"):t="bad-named-html-entity-malformed";else{t="bad-named-html-entity-malformed";const e=Object.keys(w).filter(e=>o.charTrimmed.toLowerCase().startsWith(e.toLowerCase()));if(1===e.length)p=e[0];else{const a=e.reduce((e,r)=>e.length&&r.length!==e[0].length?r.length>e[0].length?[r]:e:e.concat([r]),[]);if(1===a.length)p=a[0];else{const e=a.map(e=>{let r=0;for(let t=0,a=e.length;t<a;t++)e[t]!==o.charTrimmed[t]&&r++;return r});e.filter(r=>r===Math.min(...e)).length>1&&(k.push({ruleName:"bad-named-html-entity-unrecognised",entityName:null,rangeFrom:i,rangeTo:c.rightmostChar+1===r?r+1:c.rightmostChar+1,rangeValEncoded:null,rangeValDecoded:null}),t=!1),p=a[e.indexOf(Math.min(...e))]}}}let m=c.rightmostChar+1===r?r+1:c.rightmostChar+1;if(t){const r=I(`&${p};`);e[m]&&";"!==e[m]&&!e[m].trim().length&&";"===e[L(e,m)]&&(m=L(e,m)+1),k.push({ruleName:`${t}-${p}`,entityName:p,rangeFrom:i,rangeTo:m,rangeValEncoded:`&${p};`,rangeValDecoded:r})}u.entityCatcherCb&&u.entityCatcherCb(i,m)}}l||"&nbsp;"!==o.charTrimmed.toLowerCase()&&(k.push({ruleName:"bad-named-html-entity-unrecognised",entityName:null,rangeFrom:i,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null}),u.entityCatcherCb&&u.entityCatcherCb(i,r+1))}}}else if("&"===e[o]&&";"===e[r]&&r-o<P){const a=t(e,o+1,r);k.push({ruleName:`${a.probablyNumeric?"bad-malformed-numeric-character-entity":"bad-named-html-entity-unrecognised"}`,entityName:null,rangeFrom:o,rangeTo:r+1,rangeValEncoded:null,rangeValDecoded:null})}}else{const r=z,t=z?L(e,z):null;if(Object.prototype.hasOwnProperty.call(A,e[r])&&Object.prototype.hasOwnProperty.call(A[e[r]],e[t])){let a,n,o=A[e[r]][e[t]].reduce((r,t)=>{const a=D(e,z-1,...t.split(""));return a&&"nbsp"!==t?r.concat([{tempEnt:t,tempRes:a}]):r},[]);if((o=d(o))&&({tempEnt:a,tempRes:n}=o),a&&(!Object.keys(q).includes(a)||(!0===q[a].addSemiIfAmpPresent||q[a].addSemiIfAmpPresent&&(!e[n.rightmostChar+1]||!e[n.rightmostChar+1].trim().length))&&"&"===e[n.leftmostChar-1])){const e=I(`&${a};`);k.push({ruleName:`bad-named-html-entity-malformed-${a}`,entityName:a,rangeFrom:i,rangeTo:n.rightmostChar+1,rangeValEncoded:`&${a};`,rangeValDecoded:e})}}}}z=null}if(null===z&&o(e[r])&&e[r+1]&&(z=r),"a"===e[r]){const t=D(e,r,"m","p",";");if(t){let a=t.rightmostChar+1;const n=D(e,t.rightmostChar,"a","m","p",";");if(n){let r;a=n.rightmostChar+1;do{(r=D(e,a-1,"a","m","p",";"))&&(a=r.rightmostChar+1)}while(r)}const i=L(e,a-1),o=i?L(e,i):null;let s;if(o&&Object.prototype.hasOwnProperty.call(A,e[i])&&Object.prototype.hasOwnProperty.call(A[e[i]],e[o])&&A[e[i]][e[o]].some(r=>{if(D(e,a-1,...r.slice("")))return s=r,!0})){H=i+s.length+1;const t=T(e,r);if("&"===e[t])k.push({ruleName:"bad-named-html-entity-multiple-encoding",entityName:s,rangeFrom:t,rangeTo:H,rangeValEncoded:`&${s};`,rangeValDecoded:I(`&${s};`)});else if(t){const t=r,a="";e[r-1],u.cb&&k.push({ruleName:"bad-named-html-entity-multiple-encoding",entityName:s,rangeFrom:t,rangeTo:H,rangeValEncoded:`${a}&${s};`,rangeValDecoded:`${a}${I(`&${s};`)}`})}}}}if("&"===e[r]&&(h.nameStartsAt&&h.nameStartsAt<r&&(h.matchedN||h.matchedB||h.matchedS||h.matchedP)&&x(),null===h.nameStartsAt&&null===h.ampersandNecessary&&(h.nameStartsAt=r,h.ampersandNecessary=!1)),e[r]&&"n"===e[r].toLowerCase()){if(e[r-1]&&"i"===e[r-1].toLowerCase()&&e[r+1]&&"s"===e[r+1].toLowerCase()){x(),B++;continue e}null===h.matchedN&&(h.matchedN=r),null===h.nameStartsAt&&(h.nameStartsAt=r,null!==h.ampersandNecessary||m?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0)}if(e[r]&&"b"===e[r].toLowerCase())if(null!==h.nameStartsAt)null===h.matchedB&&(h.matchedB=r);else{if(!h.patience){x(),B++;continue e}h.patience--,h.nameStartsAt=r,h.matchedB=r,null!==h.ampersandNecessary||m?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0}if(e[r]&&"s"===e[r].toLowerCase())if(null!==h.nameStartsAt)null===h.matchedS&&(h.matchedS=r);else{if(!h.patience){x(),B++;continue e}h.patience--,h.nameStartsAt=r,h.matchedS=r,null!==h.ampersandNecessary||m?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0}if(e[r]&&"p"===e[r].toLowerCase())if(N(e,r,"t","h","i","n","s"))x();else if(null!==h.nameStartsAt)null===h.matchedP&&(h.matchedP=r);else{if(!h.patience){x(),B++;continue e}h.patience--,h.nameStartsAt=r,h.matchedP=r,null!==h.ampersandNecessary||m?!0!==h.ampersandNecessary&&(h.ampersandNecessary=!1):h.ampersandNecessary=!0}if(";"===e[r]&&null!==h.nameStartsAt&&(h.matchedSemicol=r,(!h.matchedN||h.matchedB||h.matchedS||h.matchedP)&&(h.matchedN||!h.matchedB||h.matchedS||h.matchedP)&&(h.matchedN||h.matchedB||!h.matchedS||h.matchedP)&&(h.matchedN||h.matchedB||h.matchedS||!h.matchedP)||x()),"#"!==e[r]||!L(e,r)||"x"!==e[L(e,r)].toLowerCase()||e[r-1]&&T(e,r)&&"&"===e[T(e,r)]||s(e[L(e,L(e,r))])&&($=r),m&&(m=!1,h.nameStartsAt&&(h.matchedN||h.matchedB||h.matchedS||h.matchedP)&&(h.ampersandNecessary=!1)),null!==h.nameStartsAt&&r>h.nameStartsAt&&e[r]&&"n"!==e[r].toLowerCase()&&"b"!==e[r].toLowerCase()&&"s"!==e[r].toLowerCase()&&"p"!==e[r].toLowerCase()&&"&"!==e[r]&&";"!==e[r]&&" "!==e[r]){if(!h.patience){x(),B++;continue e}h.patience=h.patience-1}B++}else{const t=j(e,h.nameStartsAt,"&?","a","m","p",";?"),a=t||h.nameStartsAt;u.entityCatcherCb&&u.entityCatcherCb(a,r),"&nbsp;"!==e.slice(a,r)?k.push({ruleName:"bad-named-html-entity-malformed-nbsp",entityName:"nbsp",rangeFrom:a,rangeTo:r,rangeValEncoded:"&nbsp;",rangeValDecoded:" "}):u.decode&&k.push({ruleName:"encoded-html-entity-nbsp",entityName:"nbsp",rangeFrom:a,rangeTo:r,rangeValEncoded:"&nbsp;",rangeValDecoded:" "}),x(),B++}}return k.length?k.filter((e,r)=>k.every((t,a)=>r===a||!(e.rangeFrom>=t.rangeFrom&&e.rangeTo<t.rangeTo))).filter((e,r,t)=>"bad-named-html-entity-unrecognised"!==e.ruleName||!t.some((t,a)=>r!==a&&t.rangeFrom<=e.rangeFrom&&t.rangeTo===e.rangeTo)).map(u.cb):[]}(e,{cb:function(e){return{name:e.ruleName,position:[null!=e.rangeValEncoded?[e.rangeFrom,e.rangeTo,e.rangeValEncoded]:[e.rangeFrom,e.rangeTo]]}}});return hr(re)&&re.length&&(M.issues=M.issues.filter(function(e){return"bad-character-unencoded-ampersand"!==e.name||re.every(function(r){return e.position[0][0]!==r.position[0][0]})}).concat(re||[]).filter(function(e){return!i.rules||!1!==i.rules[e.name]})),M.issues.some(function(e){return"bad-character-unencoded-ampersand"===e.name})||(M.applicableRules["bad-character-unencoded-ampersand"]=!1),hr(re)&&re.length&&re.forEach(function(e){M.applicableRules[e.name]||(M.applicableRules[e.name]=!0)}),M.fix=hr(M.issues)&&M.issues.length?function(e,r){function t(e){return"string"==typeof e}if(!Array.isArray(e))return e;const a={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let n;if(r){if(!f(r))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(r,null,4)} (type ${typeof r})`);if((n=Object.assign({},a,r)).progressFn&&f(n.progressFn)&&!Object.keys(n.progressFn).length)n.progressFn=null;else if(n.progressFn&&"function"!=typeof n.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof n.progressFn}", equal to ${JSON.stringify(n.progressFn,null,4)}`);if(n.mergeType&&1!==n.mergeType&&2!==n.mergeType)if(t(n.mergeType)&&"1"===n.mergeType.trim())n.mergeType=1;else{if(!t(n.mergeType)||"2"!==n.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof n.mergeType}", equal to ${JSON.stringify(n.progressFn,null,4)}`);n.mergeType=2}if("boolean"!=typeof n.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof n.joinRangesThatTouchEdges}", equal to ${JSON.stringify(n.joinRangesThatTouchEdges,null,4)}`)}else n=b(a);const i=b(e).filter(e=>void 0!==e[2]||e[0]!==e[1]);let o,s,l;const c=(o=n.progressFn?rr(i,{progressFn:e=>{(l=Math.floor(e/5))!==s&&(s=l,n.progressFn(l))}}):rr(i)).length-1;for(let e=c;e>0;e--)n.progressFn&&(l=Math.floor(78*(1-e/c))+21)!==s&&l>s&&(s=l,n.progressFn(l)),(o[e][0]<=o[e-1][0]||!n.joinRangesThatTouchEdges&&o[e][0]<o[e-1][1]||n.joinRangesThatTouchEdges&&o[e][0]<=o[e-1][1])&&(o[e-1][0]=Math.min(o[e][0],o[e-1][0]),o[e-1][1]=Math.max(o[e][1],o[e-1][1]),void 0!==o[e][2]&&(o[e-1][0]>=o[e][0]||o[e-1][1]<=o[e][1])&&null!==o[e-1][2]&&(null===o[e][2]&&null!==o[e-1][2]?o[e-1][2]=null:void 0!==o[e-1][2]?2===n.mergeType&&o[e-1][0]===o[e][0]?o[e-1][2]=o[e][2]:o[e-1][2]+=o[e][2]:o[e-1][2]=o[e][2]),o.splice(e,1),e=o.length);return o}(M.issues.filter(function(e){return!B[e.name]||!B[e.name].unfixable}).reduce(function(e,r){return e.concat(r.position)},[])):null,M},e.version="1.5.6",Object.defineProperty(e,"__esModule",{value:!0})});
