/**
 * emlint
 * Non-parsing, email template-oriented linter
 * Version: 1.2.7
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/emlint
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).emlint={})}(this,function(e){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var n=["async","autofocus","autoplay","checked","compact","contenteditable","controls","default","defer","disabled","formNoValidate","frameborder","hidden","ismap","itemscope","loop","multiple","muted","nohref","nomodule","noresize","noshade","novalidate","nowrap","open","readonly","required","reversed","scoped","scrolling","seamless","selected","typemustmatch"],a={1:{p:["sup1"]},2:{1:["blk12","frac12"],p:["sup2"]},3:{1:["emsp13","frac13"],2:["frac23"],p:["sup3"]},4:{1:["blk14","emsp14","frac14"],3:["blk34","frac34"],e:["there4"]},5:{1:["frac15"],2:["frac25"],3:["frac35"],4:["frac45"]},6:{1:["frac16"],5:["frac56"]},8:{1:["frac18"],3:["frac38"],5:["frac58"],7:["frac78"]},g:{i:["AElig","IJlig","OElig","aelig","ffilig","fflig","ffllig","filig","fjlig","fllig","ijlig","oelig","szlig"],n:["Aring","Lang","LeftCeiling","Rang","RightCeiling","Uring","ang","aring","backcong","bcong","cong","eng","lang","loang","nang","ncong","rang","ring","roang","sung","uring","varnothing"],G:["Gg","nGg"],l:["amalg","lg","ntlg"],a:["angmsdag","vzigzag"],e:["deg","eg","leg","reg"],g:["gg","ggg"],E:["lEg"],s:["lesg"],m:["lsimg","simg"]},P:{M:["AMP"]},e:{t:["Aacute","Cacute","CloseCurlyDoubleQuote","CloseCurlyQuote","DiacriticalAcute","DiacriticalDoubleAcute","Eacute","Iacute","Lacute","Nacute","Oacute","OpenCurlyDoubleQuote","OpenCurlyQuote","Racute","Sacute","Uacute","Yacute","Zacute","aacute","acute","cacute","eacute","gacute","iacute","lacute","late","nacute","oacute","racute","sacute","sdote","smte","uacute","yacute","zacute"],v:["Abreve","Agrave","Breve","DiacriticalGrave","DownBreve","Egrave","Gbreve","Igrave","Ograve","Ubreve","Ugrave","abreve","agrave","breve","egrave","gbreve","grave","igrave","ograve","ubreve","ugrave"],d:["Atilde","DiacriticalTilde","EqualTilde","GreaterTilde","Itilde","LessTilde","NotEqualTilde","NotGreaterTilde","NotLessTilde","NotSucceedsTilde","NotTilde","NotTildeTilde","Ntilde","Otilde","PrecedesTilde","SucceedsTilde","Tilde","TildeTilde","Utilde","VerticalTilde","atilde","divide","itilde","ntilde","otilde","tilde","trade","utilde"],s:["Because","because","maltese","pluse"],n:["Colone","HorizontalLine","NewLine","Poincareplane","VerticalLine","bne","colone","gne","imagline","lne","ne","oline","phone","profline","realine","simne","subne","supne","vsubne","vsupne"],e:["DoubleLeftTee","DoubleRightTee","DownTee","LeftTee","RightTee","UpTee","Vee","barvee","bigvee","curlyvee","cuvee","ee","lthree","rthree","vee","xvee"],r:["EmptySmallSquare","EmptyVerySmallSquare","FilledSmallSquare","FilledVerySmallSquare","Square","Therefore","blacksquare","cire","dotsquare","incare","npre","pre","square","therefore"],c:["HilbertSpace","MediumSpace","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NonBreakingSpace","OverBrace","ThickSpace","ThinSpace","UnderBrace","VeryThinSpace","ZeroWidthSpace","lbrace","nsce","race","rbrace","sce"],l:["LeftTriangle","NotLeftTriangle","NotRightTriangle","RightTriangle","SmallCircle","angle","blacktriangle","dwangle","exponentiale","female","langle","le","male","measuredangle","nle","nvle","rangle","smile","ssmile","triangle","uwangle"],m:["Prime","backprime","bprime","bsime","gsime","lsime","nsime","prime","qprime","sime","tprime","tritime","xotime"],R:["Re"],g:["Wedge","ange","barwedge","bigwedge","blacklozenge","curlywedge","doublebarwedge","ge","image","lozenge","nge","nvge","range","wedge","xwedge"],p:["andslope","ape","bumpe","csupe","nbumpe","nsqsupe","nsupe","orslope","sqsupe","supe"],a:["angmsdae"],i:["bowtie","die","infintie","ltrie","nltrie","nrtrie","nvltrie","nvrtrie","rtrie","trie"],b:["csube","nsqsube","nsube","sqsube","sube"],k:["lbrke","rbrke"],h:["lmoustache","rmoustache"],u:["nprcue","nsccue","prcue","sccue"]},c:{r:["Acirc","Ccirc","Ecirc","Gcirc","Hcirc","Icirc","Jcirc","Ocirc","Scirc","Ucirc","Wcirc","Ycirc","acirc","bigcirc","ccirc","circ","circledcirc","ecirc","eqcirc","gcirc","hcirc","icirc","jcirc","nrarrc","ocirc","rarrc","scirc","ucirc","wcirc","xcirc","ycirc"],a:["Odblac","Udblac","ac","angmsdac","dblac","odblac","udblac"],S:["Sc"],s:["cuesc","nsc","sc"],e:["curlyeqprec","nprec","prec","telrec"],c:["curlyeqsucc","gescc","gtcc","lescc","ltcc","nsucc","succ"],i:["ic","radic"],v:["notinvc","notnivc"]},y:{c:["Acy","Bcy","CHcy","DJcy","DScy","DZcy","Dcy","Ecy","Fcy","GJcy","Gcy","HARDcy","IEcy","IOcy","Icy","Iukcy","Jcy","Jsercy","Jukcy","KHcy","KJcy","Kcy","LJcy","Lcy","Mcy","NJcy","Ncy","Ocy","Pcy","Rcy","SHCHcy","SHcy","SOFTcy","Scy","TSHcy","TScy","Tcy","Ubrcy","Ucy","Vcy","YAcy","YIcy","YUcy","Ycy","ZHcy","Zcy","acy","bcy","chcy","dcy","djcy","dscy","dzcy","ecy","fcy","gcy","gjcy","hardcy","icy","iecy","iocy","iukcy","jcy","jsercy","jukcy","kcy","khcy","kjcy","lcy","ljcy","mcy","ncy","njcy","ocy","pcy","rcy","scy","shchcy","shcy","softcy","tcy","tscy","tshcy","ubrcy","ucy","vcy","yacy","ycy","yicy","yucy","zcy","zhcy"],p:["copy"],t:["cylcty","empty"],h:["shy"]},r:{f:["Afr","Bfr","Cfr","Dfr","Efr","Ffr","Gfr","Hfr","Ifr","Jfr","Kfr","Lfr","Mfr","Nfr","Ofr","Pfr","Qfr","Rfr","Sfr","Tfr","Ufr","Vfr","Wfr","Xfr","Yfr","Zfr","afr","bfr","cfr","dfr","efr","ffr","gfr","hfr","ifr","jfr","kfr","lfr","mfr","nfr","ofr","pfr","qfr","rfr","sfr","tfr","ufr","vfr","wfr","xfr","yfr","zfr"],c:["Amacr","Ascr","Bscr","Cscr","Dscr","Emacr","Escr","Fscr","Gscr","Hscr","Imacr","Iscr","Jscr","Kscr","Lscr","Mscr","Nscr","Omacr","Oscr","Pscr","Qscr","Rscr","Sscr","Tscr","Umacr","Uscr","Vscr","Wscr","Xscr","Yscr","Zscr","amacr","ascr","bscr","cscr","dscr","emacr","escr","fscr","gscr","hscr","imacr","iscr","jscr","kscr","lscr","macr","mscr","nscr","omacr","oscr","pscr","qscr","rscr","sscr","tscr","umacr","uscr","vscr","wscr","xscr","yscr","zscr"],e:["Dagger","GreaterGreater","LessEqualGreater","LessGreater","NestedGreaterGreater","NotGreater","NotGreaterGreater","NotLessGreater","NotNestedGreaterGreater","dagger","ddagger","easter","llcorner","lrcorner","marker","order","ulcorner","urcorner"],r:["Darr","Larr","RBarr","Rarr","Uarr","angzarr","crarr","cudarrr","cularr","curarr","dArr","darr","ddarr","dharr","duarr","dzigrarr","erarr","gtrarr","hArr","harr","hoarr","lAarr","lArr","lBarr","larr","lbarr","llarr","loarr","lrarr","ltlarr","neArr","nearr","nhArr","nharr","nlArr","nlarr","nrArr","nrarr","nvHarr","nvlArr","nvrArr","nwArr","nwarr","olarr","orarr","rAarr","rArr","rBarr","rarr","rbarr","rlarr","roarr","rrarr","seArr","searr","simrarr","slarr","srarr","subrarr","suplarr","swArr","swarr","uArr","uarr","udarr","uharr","uuarr","vArr","varr","xhArr","xharr","xlArr","xlarr","xrArr","xrarr","zigrarr"],a:["DoubleVerticalBar","DownArrowBar","DownLeftVectorBar","DownRightVectorBar","LeftArrowBar","LeftDownVectorBar","LeftTriangleBar","LeftUpVectorBar","LeftVectorBar","NotDoubleVerticalBar","NotLeftTriangleBar","NotRightTriangleBar","NotVerticalBar","OverBar","RightArrowBar","RightDownVectorBar","RightTriangleBar","RightUpVectorBar","RightVectorBar","Star","UnderBar","UpArrowBar","Vbar","Verbar","VerticalBar","bigstar","brvbar","dHar","dollar","duhar","epar","gtlPar","hbar","horbar","lHar","ldrdhar","ldrushar","lopar","lowbar","lpar","lrhar","ltrPar","lurdshar","luruhar","nesear","nhpar","npar","nspar","nwnear","ohbar","opar","ovbar","par","profalar","rHar","rdldhar","rlhar","ropar","rpar","ruluhar","seswar","solbar","spar","star","swnwar","timesbar","uHar","udhar","vBar","veebar","verbar","wedbar"],o:["DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownRightTeeVector","DownRightVector","LeftDownTeeVector","LeftDownVector","LeftFloor","LeftRightVector","LeftTeeVector","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftVector","RightDownTeeVector","RightDownVector","RightFloor","RightTeeVector","RightUpDownVector","RightUpTeeVector","RightUpVector","RightVector","VerticalSeparator","cupor","ldquor","lesdotor","lfloor","lsquor","or","oror","rdquor","rfloor","rsquor"],O:["Or"],P:["Pr"],i:["Uarrocir","apacir","cir","cirscir","ecir","gtcir","harrcir","ltcir","midcir","ocir","ofcir","olcir","plusacir","pluscir","topcir"],D:["boxDr"],U:["boxUr"],V:["boxVr"],d:["boxdr","mldr","nldr"],u:["boxur","natur"],v:["boxvr"],s:["copysr"],p:["cuepr","npr","pr"],t:["eqslantgtr","lesseqgtr","lesseqqgtr","lessgtr","ngtr"],w:["wr"]},a:{h:["Alpha","alpha"],t:["Beta","Delta","Eta","Iota","Theta","Zeta","beta","delta","eta","iiota","iota","theta","vartheta","zeta"],l:["Cedilla","gla","nabla"],m:["Gamma","InvisibleComma","Sigma","comma","digamma","gamma","mcomma","sigma","varsigma"],p:["Kappa","kappa","varkappa"],d:["Lambda","lambda"],g:["Omega","omega"],a:["angmsdaa"],c:["ldca","rdca"],v:["notinva","notniva"],r:["para"],e:["toea"],s:["tosa"]},d:{n:["And","Diamond","and","andand","capand","diamond","pound"],e:["Barwed","RuleDelayed","barwed","cuwed","imped"],h:["DDotrahd","boxhd"],a:["Gammad","angmsdad","gammad"],c:["acd"],d:["andd","dd"],s:["angmsd","minusd","nisd","timesd"],b:["angrtvbd"],i:["apid","cirmid","mid","napid","nmid","nshortmid","nsmid","omid","rnmid","shortmid","smid"],H:["boxHd"],o:["coprod","intprod","iprod","period","prod"],g:["langd","rangd"],l:["lbrksld","odsold","rbrksld"],r:["lhard","llhard","lrhard","ord","rhard"]},n:{o:["Aogon","ApplyFunction","Ccaron","Colon","Dcaron","Ecaron","Eogon","Epsilon","Intersection","Iogon","Lcaron","Ncaron","Omicron","Proportion","Rcaron","Scaron","SquareIntersection","SquareUnion","Tcaron","Union","Uogon","Upsilon","Zcaron","aogon","backepsilon","caron","ccaron","colon","dcaron","ecaron","ecolon","eogon","epsilon","eqcolon","expectation","hercon","iogon","lcaron","ncaron","ogon","omicron","rcaron","scaron","straightepsilon","tcaron","uogon","upsilon","varepsilon","zcaron"],g:["Assign"],e:["between","curren","hyphen","kgreen","yen"],w:["bigtriangledown","blacktriangledown","frown","leftharpoondown","mapstodown","rightharpoondown","sfrown","triangledown"],f:["compfn"],i:["disin","iinfin","in","infin","isin","notin","nvinfin"],r:["dlcorn","drcorn","thorn","ulcorn","urcorn"],a:["lagran"],m:["plusmn","setmn","ssetmn"]},f:{p:["Aopf","Bopf","Copf","Dopf","Eopf","Fopf","Gopf","Hopf","Iopf","Jopf","Kopf","Lopf","Mopf","Nopf","Oopf","Popf","Qopf","Ropf","Sopf","Topf","Uopf","Vopf","Wopf","Xopf","Yopf","Zopf","aopf","bopf","copf","dopf","eopf","fopf","gopf","hopf","iopf","jopf","kopf","lopf","mopf","nopf","oopf","popf","qopf","ropf","sopf","topf","uopf","vopf","wopf","xopf","yopf","zopf"],r:["Fouriertrf","Laplacetrf","Mellintrf","profsurf","squarf","sstarf","starf","zeetrf"],a:["af","angmsdaf","sigmaf"],i:["dtrif","ltrif","rtrif","utrif"],o:["fnof","imof","orderof","origof"],l:["half"],f:["iff"],z:["lozf"],d:["ordf"],u:["squf"]},l:{m:["Auml","Euml","Iuml","Ouml","Uuml","Yuml","auml","euml","gsiml","iuml","ouml","siml","uml","uuml","yuml"],i:["Ccedil","Gcedil","Kcedil","Lcedil","Ncedil","Rcedil","Scedil","Tcedil","ccedil","cedil","kcedil","lAtail","latail","lcedil","lceil","leftarrowtail","ncedil","permil","rAtail","ratail","rcedil","rceil","rightarrowtail","scedil","tcedil"],a:["ClockwiseContourIntegral","ContourIntegral","CounterClockwiseContourIntegral","DotEqual","DoubleContourIntegral","Equal","GreaterEqual","GreaterFullEqual","GreaterSlantEqual","HumpEqual","Integral","LeftTriangleEqual","LessFullEqual","LessSlantEqual","NotEqual","NotGreaterEqual","NotGreaterFullEqual","NotGreaterSlantEqual","NotHumpEqual","NotLeftTriangleEqual","NotLessEqual","NotLessSlantEqual","NotPrecedesEqual","NotPrecedesSlantEqual","NotRightTriangleEqual","NotSquareSubsetEqual","NotSquareSupersetEqual","NotSubsetEqual","NotSucceedsEqual","NotSucceedsSlantEqual","NotSupersetEqual","NotTildeEqual","NotTildeFullEqual","PrecedesEqual","PrecedesSlantEqual","Proportional","RightTriangleEqual","SquareSubsetEqual","SquareSupersetEqual","SubsetEqual","SucceedsEqual","SucceedsSlantEqual","SupersetEqual","TildeEqual","TildeFullEqual","intcal","intercal","natural","real"],e:["Del","el","gel","gimel","nparallel","nshortparallel","parallel","prurel","shortparallel"],l:["ForAll","bull","ell","forall","hybull","ll"],L:["Ll","nLl"],t:["Rarrtl","larrtl","rarrtl"],h:["Vdashl"],D:["boxDl"],U:["boxUl"],V:["boxVl"],d:["boxdl"],u:["boxul","lharul","rharul"],v:["boxvl"],o:["bsol","dsol","gesdotol","osol","sol","suphsol"],r:["cudarrl","dharl","uharl"],s:["eparsl","eqvparsl","frasl","gesl","nparsl","parsl","smeparsl"],c:["excl","iexcl"],E:["gEl"],g:["gl","ntgl"],p:["larrpl","rarrpl"]},h:{s:["Backslash","Lsh","Oslash","Rsh","VDash","Vdash","Vvdash","circleddash","dash","hslash","ldsh","lsh","mdash","nVDash","nVdash","ndash","nvDash","nvdash","odash","oslash","rdsh","rsh","vDash","vdash"],p:["aleph","angsph"],a:["angmsdah"],t:["beth","daleth","eth","imath","jmath","wreath"],V:["boxVh"],x:["boxh"],v:["boxvh"],k:["planckh"],i:["upsih"]},v:{r:["Barv","orv","vBarv"],h:["Dashv","dashv"],d:["andv"],y:["bemptyv","cemptyv","demptyv","emptyv","laemptyv","raemptyv"],i:["bnequiv","div","epsiv","equiv","nequiv","niv","odiv","phiv","piv"],x:["boxv"],k:["forkv","plankv"],s:["isinsv"],n:["isinv"],a:["kappav","sigmav","thetav"],t:["nGtv","nLtv"],o:["rhov"]},s:{i:["Bernoullis","OverParenthesis","UnderParenthesis","nis","xnis"],y:["Cayleys"],u:["CircleMinus","CirclePlus","MinusPlus","PlusMinus","UnionPlus","becaus","bigoplus","biguplus","boxminus","boxplus","dotminus","dotplus","eplus","loplus","minus","mnplus","ominus","oplus","plus","roplus","setminus","simplus","smallsetminus","subplus","supplus","triminus","triplus","uplus","xoplus","xuplus"],e:["CircleTimes","Implies","InvisibleTimes","NotPrecedes","Otimes","Precedes","RoundImplies","bigotimes","boxtimes","complexes","divideontimes","ges","gesles","lates","leftthreetimes","les","lesges","lotimes","ltimes","nges","nles","otimes","primes","rightthreetimes","rotimes","rtimes","smtes","spades","times"],s:["Cross","GreaterEqualLess","GreaterLess","LessLess","NestedLessLess","NotGreaterLess","NotLess","NotLessLess","NotNestedLessLess","cross","eqslantless","gtreqless","gtreqqless","gtrless","nless","olcross"],t:["Exists","NotExists","hearts","nexists"],d:["NotSucceeds","Succeeds"],o:["apos","mstpos","napos"],p:["caps","ccaps","ccups","cups","sqcaps","sqcups"],b:["clubs"],m:["diams"],w:["downdownarrows","leftleftarrows","leftrightarrows","rightleftarrows","rightrightarrows","upuparrows"],g:["egs"],r:["elinters","integers"],l:["els","equals","models","naturals","rationals","reals"],n:["fltns","isins","leftrightharpoons","quaternions","rightleftharpoons","strns"],f:["larrbfs","larrfs","rarrbfs","rarrfs"],a:["otimesas"]},q:{e:["Bumpeq","approxeq","asympeq","backsimeq","bumpeq","circeq","coloneq","ddotseq","doteq","fallingdotseq","geq","gneq","leq","lneq","ngeq","nleq","npreceq","nsimeq","nsubseteq","nsucceq","nsupseteq","ntrianglelefteq","ntrianglerighteq","preccurlyeq","preceq","questeq","risingdotseq","simeq","sqsubseteq","sqsupseteq","subseteq","subsetneq","succcurlyeq","succeq","supseteq","supsetneq","trianglelefteq","triangleq","trianglerighteq","varsubsetneq","varsupsetneq","veeeq","wedgeq"],q:["geqq","gneqq","gvertneqq","leqq","lneqq","lvertneqq","ngeqq","nleqq","nsubseteqq","nsupseteqq","precneqq","subseteqq","subsetneqq","succneqq","supseteqq","supsetneqq","varsubsetneqq","varsupsetneqq"]},Y:{P:["COPY"]},p:{a:["Cap","CupCap","Map","NotCupCap","ap","bigcap","cap","capcap","cupbrcap","cupcap","gap","gnap","lap","lnap","map","multimap","mumap","nap","ncap","nvap","prap","prnap","rarrap","scap","scnap","sqcap","thkap","xcap","xmap"],u:["Cup","Sup","bigcup","bigsqcup","bigtriangleup","capbrcup","capcup","csup","cup","cupcup","leftharpoonup","mapstoup","ncup","nsup","rightharpoonup","sqcup","sqsup","subsup","sup","supsup","vnsup","xcup","xsqcup"],m:["HumpDownHump","NotHumpDownHump","amp","asymp","bump","comp","mp","nbump"],r:["cularrp","operp","perp","sharp","weierp"],o:["dlcrop","drcrop","prop","top","ulcrop","urcrop","vprop"],s:["emsp","ensp","hairsp","nbsp","numsp","puncsp","thinsp"],i:["hellip","vellip"],l:["larrlp","rarrlp"],c:["mlcp"],h:["smashp"],w:["wp"]},D:{l:["CapitalDifferentialD","DifferentialD","PartialD"],D:["DD","equivDD"],H:["boxHD"],h:["boxhD"]},t:{n:["Cconint","Congruent","Conint","Element","Int","NotCongruent","NotElement","NotReverseElement","ReverseElement","awconint","awint","cent","cirfnint","complement","conint","cwconint","cwint","fpartint","geqslant","iiiint","iiint","int","leqslant","ngeqslant","nleqslant","npolint","oint","percnt","pointint","qint","quatint","rppolint","scpolint","tint"],o:["Cdot","CenterDot","CircleDot","DiacriticalDot","Dot","DotDot","DoubleDot","Edot","Gdot","Idot","Lmidot","Not","TripleDot","Zdot","bNot","bigodot","bnot","bot","capdot","cdot","centerdot","congdot","ctdot","cupdot","dot","doteqdot","dtdot","eDDot","eDot","edot","efDot","egsdot","elsdot","erDot","esdot","gdot","gesdot","gtdot","gtrdot","inodot","isindot","lesdot","lessdot","lmidot","ltdot","mDDot","middot","ncongdot","nedot","not","notindot","odot","quot","sdot","simdot","subdot","subedot","supdot","supedot","tdot","topbot","tridot","utdot","xodot","zdot"],c:["Coproduct","Product","rect","sect"],G:["Gt","nGt"],a:["Hat","SuchThat","commat","flat","lat","phmmat"],e:["LeftAngleBracket","LeftDoubleBracket","NotSquareSubset","NotSquareSuperset","NotSubset","NotSuperset","OverBracket","RightAngleBracket","RightDoubleBracket","SquareSubset","SquareSuperset","Subset","Superset","Supset","UnderBracket","bullet","caret","emptyset","nsubset","nsupset","sqsubset","sqsupset","subset","supset","target"],L:["Lt","nLt"],r:["Sqrt","Vert","angrt","imagpart","npart","part","realpart","vangrt","vert"],s:["angst","ast","circledast","equest","exist","gtquest","iquest","lmoust","lowast","ltquest","midast","nexist","oast","quest","rmoust"],f:["blacktriangleleft","circlearrowleft","curvearrowleft","downharpoonleft","looparrowleft","mapstoleft","ntriangleleft","triangleleft","upharpoonleft","vartriangleleft"],h:["blacktriangleright","circlearrowright","curvearrowright","dfisht","downharpoonright","homtht","lfisht","looparrowright","ntriangleright","rfisht","triangleright","ufisht","upharpoonright","vartriangleright"],i:["clubsuit","diamondsuit","heartsuit","it","spadesuit"],g:["gt","ngt","nvgt","ogt","rpargt"],l:["hamilt","lparlt","lt","malt","nlt","nvlt","olt","submult","supmult"],x:["sext","twixt"],m:["smt"]},i:{h:["Chi","Phi","chi","phi","straightphi","varphi"],P:["Pi"],s:["Psi","Upsi","bepsi","epsi","psi","upsi"],X:["Xi"],m:["bsemi","semi"],r:["dtri","lltri","lrtri","ltri","nltri","nrtri","rtri","rtriltri","ultri","urtri","utri","vltri","vrtri","xdtri","xutri"],i:["ii"],n:["ni","notni"],p:["pi","varpi"],x:["xi"]},w:{o:["DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleUpArrow","DoubleUpDownArrow","DownArrow","DownArrowUpArrow","DownTeeArrow","Downarrow","LeftArrow","LeftArrowRightArrow","LeftRightArrow","LeftTeeArrow","Leftarrow","Leftrightarrow","Lleftarrow","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","LowerLeftArrow","LowerRightArrow","RightArrow","RightArrowLeftArrow","RightTeeArrow","Rightarrow","Rrightarrow","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","UpArrow","UpArrowDownArrow","UpDownArrow","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","bkarow","dbkarow","downarrow","drbkarow","hksearow","hkswarow","hookleftarrow","hookrightarrow","leftarrow","leftrightarrow","leftrightsquigarrow","longleftarrow","longleftrightarrow","longrightarrow","nLeftarrow","nLeftrightarrow","nRightarrow","nearrow","nleftarrow","nleftrightarrow","nrightarrow","nwarrow","rightarrow","rightsquigarrow","searrow","swarrow","twoheadleftarrow","twoheadrightarrow","uparrow","updownarrow"],r:["harrw","nrarrw","rarrw"]},k:{o:["Dstrok","Hstrok","Lstrok","Tstrok","dstrok","hstrok","lstrok","tstrok"],e:["Hacek"],a:["NoBreak"],r:["bbrk","bbrktbrk","checkmark","fork","lbbrk","lobrk","pitchfork","rbbrk","robrk","tbrk","topfork"],n:["blank","pertenk"],c:["block","check","lbrack","planck","rbrack"],h:["intlarhk","larrhk","nearhk","nwarhk","rarrhk","searhk","swarhk"],l:["lhblk","uhblk"]},G:{N:["ENG"],E:["REG"]},H:{T:["ETH"],x:["boxH"],V:["boxVH"],v:["boxvH"]},m:{u:["Equilibrium","ReverseEquilibrium","ReverseUpEquilibrium","Sum","UpEquilibrium","num","sum","trpezium"],i:["Esim","backsim","bsim","eqsim","esim","gnsim","gsim","gtrsim","larrsim","lesssim","lnsim","lsim","nesim","ngsim","nlsim","nsim","nvsim","parsim","plussim","precnsim","precsim","prnsim","prsim","rarrsim","scnsim","scsim","sim","subsim","succnsim","succsim","supsim","thicksim","thksim"],I:["Im"],y:["alefsym","thetasym"],o:["bottom"],s:["ccupssm"],r:["curarrm","lrm"],a:["diam"],h:["ohm"],d:["ordm"],p:["pm"],l:["rlm"]},E:{l:["ExponentialE","glE","lE","nlE","simlE"],D:["TRADE"],c:["acE","scE"],p:["apE","bumpE","napE","nsupE","supE"],r:["cirE","prE"],g:["gE","lgE","ngE","simgE"],n:["gnE","gvnE","isinE","lnE","lvnE","notinE","prnE","scnE","subnE","supnE","vsubnE","vsupnE"],b:["nsubE","subE"]},T:{G:["GT"],L:["LT"],O:["QUOT"]},I:{y:["ImaginaryI"]},u:{M:["Mu"],N:["Nu"],a:["Tau","tau"],o:["bernou"],H:["boxHu"],h:["boxhu"],l:["lbrkslu","rbrkslu"],r:["lharu","rharu"],d:["minusdu","plusdu"],m:["mu"],n:["nu"],q:["squ"]},o:{h:["Rho","mho","rho","varrho"],u:["bdquo","laquo","ldquo","lsaquo","lsquo","raquo","rdquo","rsaquo","rsquo","sbquo"],r:["euro","micro","numero"],t:["gesdoto","lesdoto","longmapsto","mapsto","propto","varpropto"],d:["plusdo"],w:["plustwo"],i:["ratio"]},b:{u:["Sub","bsolhsub","csub","lcub","nsub","rcub","sqsub","sub","subsub","supdsub","suphsub","supsub","vnsub"],a:["Tab","angmsdab"],v:["angrtvb","notinvb","notnivb"],l:["bsolb","solb"],r:["larrb","rarrb"],q:["lsqb","rsqb"],s:["minusb","plusb","timesb","trisb"],t:["sdotb"]},N:{R:["THORN"]},x:{o:["approx","boxbox","gnapprox","gtrapprox","lessapprox","lnapprox","napprox","precapprox","precnapprox","succapprox","succnapprox","thickapprox"],n:["divonx"],r:["rx"]},L:{D:["boxDL"],U:["boxUL"],V:["boxVL"],d:["boxdL"],u:["boxuL"],v:["boxvL"]},R:{D:["boxDR"],U:["boxUR"],V:["boxVR"],d:["boxdR","circledR"],u:["boxuR"],v:["boxvR"]},U:{H:["boxHU"],h:["boxhU"]},V:{x:["boxV"]},S:{d:["circledS"],o:["oS"]},j:{l:["glj"],w:["zwj"],n:["zwnj"]},z:{o:["loz"]}},i="[object Object]";var o,s,c=Function.prototype,l=Object.prototype,u=c.toString,p=l.hasOwnProperty,d=u.call(Object),h=l.toString,f=(o=Object.getPrototypeOf,s=Object,function(e){return o(s(e))});var g=function(e){if(!function(e){return!!e&&"object"==typeof e}(e)||h.call(e)!=i||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e))return!1;var t=f(e);if(null===t)return!0;var r=p.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&u.call(r)==d},m=function(e,t){if(t){if("object"!=typeof t)throw new TypeError(String(t)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in t){if("boolean"!=typeof t.includeZero)throw new TypeError(String(t.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(t.includeZero&&0===e)return!0}}return Number.isSafeInteger(e)&&e>=1},b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function w(e,t){return e(t={exports:{}},t.exports),t.exports}var y=w(function(e,t){(t=e.exports=function(e){return e+t.suffix(+e)}).suffix=function(e){return e%=100,1===Math.floor(e/10)?"th":e%10==1?"st":e%10==2?"nd":e%10==3?"rd":"th"}}),v=(y.suffix,w(function(e,t){var r,n,a,i,o,s,c,l,u,p,d,h,f,g,m,w,y,v,q,x;e.exports=(r="function"==typeof Promise,n="object"==typeof self?self:b,a="undefined"!=typeof Symbol,i="undefined"!=typeof Map,o="undefined"!=typeof Set,s="undefined"!=typeof WeakMap,c="undefined"!=typeof WeakSet,l="undefined"!=typeof DataView,u=a&&void 0!==Symbol.iterator,p=a&&void 0!==Symbol.toStringTag,d=o&&"function"==typeof Set.prototype.entries,h=i&&"function"==typeof Map.prototype.entries,f=d&&Object.getPrototypeOf((new Set).entries()),g=h&&Object.getPrototypeOf((new Map).entries()),m=u&&"function"==typeof Array.prototype[Symbol.iterator],w=m&&Object.getPrototypeOf([][Symbol.iterator]()),y=u&&"function"==typeof String.prototype[Symbol.iterator],v=y&&Object.getPrototypeOf(""[Symbol.iterator]()),q=8,x=-1,function(e){var t=typeof e;if("object"!==t)return t;if(null===e)return"null";if(e===n)return"global";if(Array.isArray(e)&&(!1===p||!(Symbol.toStringTag in e)))return"Array";if("object"==typeof window&&null!==window){if("object"==typeof window.location&&e===window.location)return"Location";if("object"==typeof window.document&&e===window.document)return"Document";if("object"==typeof window.navigator){if("object"==typeof window.navigator.mimeTypes&&e===window.navigator.mimeTypes)return"MimeTypeArray";if("object"==typeof window.navigator.plugins&&e===window.navigator.plugins)return"PluginArray"}if(("function"==typeof window.HTMLElement||"object"==typeof window.HTMLElement)&&e instanceof window.HTMLElement){if("BLOCKQUOTE"===e.tagName)return"HTMLQuoteElement";if("TD"===e.tagName)return"HTMLTableDataCellElement";if("TH"===e.tagName)return"HTMLTableHeaderCellElement"}}var a=p&&e[Symbol.toStringTag];if("string"==typeof a)return a;var u=Object.getPrototypeOf(e);return u===RegExp.prototype?"RegExp":u===Date.prototype?"Date":r&&u===Promise.prototype?"Promise":o&&u===Set.prototype?"Set":i&&u===Map.prototype?"Map":c&&u===WeakSet.prototype?"WeakSet":s&&u===WeakMap.prototype?"WeakMap":l&&u===DataView.prototype?"DataView":i&&u===g?"Map Iterator":o&&u===f?"Set Iterator":m&&u===w?"Array Iterator":y&&u===v?"String Iterator":null===u?"Object":Object.prototype.toString.call(e).slice(q,x)})}));function q(e,t,r){if(t!=t)return function(e,t,r,n){for(var a=e.length,i=r+(n?1:-1);n?i--:++i<a;)if(t(e[i],i,e))return i;return-1}(e,A,r);for(var n=r-1,a=e.length;++n<a;)if(e[n]===t)return n;return-1}function x(e,t,r,n){for(var a=r-1,i=e.length;++a<i;)if(n(e[a],t))return a;return-1}function A(e){return e!=e}var S=Array.prototype.splice;function E(e,t,r,n){var a,i=n?x:q,o=-1,s=t.length,c=e;for(e===t&&(t=function(e,t){var r=-1,n=e.length;t||(t=Array(n));for(;++r<n;)t[r]=e[r];return t}(t)),r&&(c=function(e,t){for(var r=-1,n=e?e.length:0,a=Array(n);++r<n;)a[r]=t(e[r],r,e);return a}(e,(a=r,function(e){return a(e)})));++o<s;)for(var l=0,u=t[o],p=r?r(u):u;(l=i(c,p,l,n))>-1;)c!==e&&S.call(c,l,1),S.call(e,l,1);return e}var k=function(e,t){return e&&e.length&&t&&t.length?E(e,t):e},L=w(function(e,t){var r=200,n="__lodash_hash_undefined__",a=9007199254740991,i="[object Arguments]",o="[object Boolean]",s="[object Date]",c="[object Function]",l="[object GeneratorFunction]",u="[object Map]",p="[object Number]",d="[object Object]",h="[object RegExp]",f="[object Set]",g="[object String]",m="[object Symbol]",w="[object ArrayBuffer]",y="[object DataView]",v="[object Float32Array]",q="[object Float64Array]",x="[object Int8Array]",A="[object Int16Array]",S="[object Int32Array]",E="[object Uint8Array]",k="[object Uint8ClampedArray]",L="[object Uint16Array]",T="[object Uint32Array]",_=/\w*$/,N=/^\[object .+?Constructor\]$/,C=/^(?:0|[1-9]\d*)$/,R={};R[i]=R["[object Array]"]=R[w]=R[y]=R[o]=R[s]=R[v]=R[q]=R[x]=R[A]=R[S]=R[u]=R[p]=R[d]=R[h]=R[f]=R[g]=R[m]=R[E]=R[k]=R[L]=R[T]=!0,R["[object Error]"]=R[c]=R["[object WeakMap]"]=!1;var D="object"==typeof b&&b&&b.Object===Object&&b,O="object"==typeof self&&self&&self.Object===Object&&self,j=D||O||Function("return this")(),V=t&&!t.nodeType&&t,F=V&&e&&!e.nodeType&&e,I=F&&F.exports===V;function P(e,t){return e.set(t[0],t[1]),e}function U(e,t){return e.add(t),e}function B(e,t,r,n){var a=-1,i=e?e.length:0;for(n&&i&&(r=e[++a]);++a<i;)r=t(r,e[a],a,e);return r}function $(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}function H(e){var t=-1,r=Array(e.size);return e.forEach(function(e,n){r[++t]=[n,e]}),r}function G(e,t){return function(r){return e(t(r))}}function M(e){var t=-1,r=Array(e.size);return e.forEach(function(e){r[++t]=e}),r}var Q,z=Array.prototype,J=Function.prototype,W=Object.prototype,K=j["__core-js_shared__"],Z=(Q=/[^.]+$/.exec(K&&K.keys&&K.keys.IE_PROTO||""))?"Symbol(src)_1."+Q:"",Y=J.toString,X=W.hasOwnProperty,ee=W.toString,te=RegExp("^"+Y.call(X).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),re=I?j.Buffer:void 0,ne=j.Symbol,ae=j.Uint8Array,ie=G(Object.getPrototypeOf,Object),oe=Object.create,se=W.propertyIsEnumerable,ce=z.splice,le=Object.getOwnPropertySymbols,ue=re?re.isBuffer:void 0,pe=G(Object.keys,Object),de=Fe(j,"DataView"),he=Fe(j,"Map"),fe=Fe(j,"Promise"),ge=Fe(j,"Set"),me=Fe(j,"WeakMap"),be=Fe(Object,"create"),we=$e(de),ye=$e(he),ve=$e(fe),qe=$e(ge),xe=$e(me),Ae=ne?ne.prototype:void 0,Se=Ae?Ae.valueOf:void 0;function Ee(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function ke(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Le(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Te(e){this.__data__=new ke(e)}function _e(e,t){var r=Ge(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Me(e)}(e)&&X.call(e,"callee")&&(!se.call(e,"callee")||ee.call(e)==i)}(e)?function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(e.length,String):[],n=r.length,a=!!n;for(var o in e)!t&&!X.call(e,o)||a&&("length"==o||Ue(o,n))||r.push(o);return r}function Ne(e,t,r){var n=e[t];X.call(e,t)&&He(n,r)&&(void 0!==r||t in e)||(e[t]=r)}function Ce(e,t){for(var r=e.length;r--;)if(He(e[r][0],t))return r;return-1}function Re(e,t,r,n,a,b,N){var C;if(n&&(C=b?n(e,a,b,N):n(e)),void 0!==C)return C;if(!Je(e))return e;var D=Ge(e);if(D){if(C=function(e){var t=e.length,r=e.constructor(t);t&&"string"==typeof e[0]&&X.call(e,"index")&&(r.index=e.index,r.input=e.input);return r}(e),!t)return function(e,t){var r=-1,n=e.length;t||(t=Array(n));for(;++r<n;)t[r]=e[r];return t}(e,C)}else{var O=Pe(e),j=O==c||O==l;if(Qe(e))return function(e,t){if(t)return e.slice();var r=new e.constructor(e.length);return e.copy(r),r}(e,t);if(O==d||O==i||j&&!b){if($(e))return b?e:{};if(C=function(e){return"function"!=typeof e.constructor||Be(e)?{}:(t=ie(e),Je(t)?oe(t):{});var t}(j?{}:e),!t)return function(e,t){return je(e,Ie(e),t)}(e,function(e,t){return e&&je(t,We(t),e)}(C,e))}else{if(!R[O])return b?e:{};C=function(e,t,r,n){var a=e.constructor;switch(t){case w:return Oe(e);case o:case s:return new a(+e);case y:return function(e,t){var r=t?Oe(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.byteLength)}(e,n);case v:case q:case x:case A:case S:case E:case k:case L:case T:return function(e,t){var r=t?Oe(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.length)}(e,n);case u:return function(e,t,r){return B(t?r(H(e),!0):H(e),P,new e.constructor)}(e,n,r);case p:case g:return new a(e);case h:return(l=new(c=e).constructor(c.source,_.exec(c))).lastIndex=c.lastIndex,l;case f:return function(e,t,r){return B(t?r(M(e),!0):M(e),U,new e.constructor)}(e,n,r);case m:return i=e,Se?Object(Se.call(i)):{}}var i;var c,l}(e,O,Re,t)}}N||(N=new Te);var V=N.get(e);if(V)return V;if(N.set(e,C),!D)var F=r?function(e){return function(e,t,r){var n=t(e);return Ge(e)?n:function(e,t){for(var r=-1,n=t.length,a=e.length;++r<n;)e[a+r]=t[r];return e}(n,r(e))}(e,We,Ie)}(e):We(e);return function(e,t){for(var r=-1,n=e?e.length:0;++r<n&&!1!==t(e[r],r,e););}(F||e,function(a,i){F&&(a=e[i=a]),Ne(C,i,Re(a,t,r,n,i,e,N))}),C}function De(e){return!(!Je(e)||(t=e,Z&&Z in t))&&(ze(e)||$(e)?te:N).test($e(e));var t}function Oe(e){var t=new e.constructor(e.byteLength);return new ae(t).set(new ae(e)),t}function je(e,t,r,n){r||(r={});for(var a=-1,i=t.length;++a<i;){var o=t[a],s=n?n(r[o],e[o],o,r,e):void 0;Ne(r,o,void 0===s?e[o]:s)}return r}function Ve(e,t){var r,n,a=e.__data__;return("string"==(n=typeof(r=t))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?a["string"==typeof t?"string":"hash"]:a.map}function Fe(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return De(r)?r:void 0}Ee.prototype.clear=function(){this.__data__=be?be(null):{}},Ee.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Ee.prototype.get=function(e){var t=this.__data__;if(be){var r=t[e];return r===n?void 0:r}return X.call(t,e)?t[e]:void 0},Ee.prototype.has=function(e){var t=this.__data__;return be?void 0!==t[e]:X.call(t,e)},Ee.prototype.set=function(e,t){return this.__data__[e]=be&&void 0===t?n:t,this},ke.prototype.clear=function(){this.__data__=[]},ke.prototype.delete=function(e){var t=this.__data__,r=Ce(t,e);return!(r<0||(r==t.length-1?t.pop():ce.call(t,r,1),0))},ke.prototype.get=function(e){var t=this.__data__,r=Ce(t,e);return r<0?void 0:t[r][1]},ke.prototype.has=function(e){return Ce(this.__data__,e)>-1},ke.prototype.set=function(e,t){var r=this.__data__,n=Ce(r,e);return n<0?r.push([e,t]):r[n][1]=t,this},Le.prototype.clear=function(){this.__data__={hash:new Ee,map:new(he||ke),string:new Ee}},Le.prototype.delete=function(e){return Ve(this,e).delete(e)},Le.prototype.get=function(e){return Ve(this,e).get(e)},Le.prototype.has=function(e){return Ve(this,e).has(e)},Le.prototype.set=function(e,t){return Ve(this,e).set(e,t),this},Te.prototype.clear=function(){this.__data__=new ke},Te.prototype.delete=function(e){return this.__data__.delete(e)},Te.prototype.get=function(e){return this.__data__.get(e)},Te.prototype.has=function(e){return this.__data__.has(e)},Te.prototype.set=function(e,t){var n=this.__data__;if(n instanceof ke){var a=n.__data__;if(!he||a.length<r-1)return a.push([e,t]),this;n=this.__data__=new Le(a)}return n.set(e,t),this};var Ie=le?G(le,Object):function(){return[]},Pe=function(e){return ee.call(e)};function Ue(e,t){return!!(t=null==t?a:t)&&("number"==typeof e||C.test(e))&&e>-1&&e%1==0&&e<t}function Be(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||W)}function $e(e){if(null!=e){try{return Y.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function He(e,t){return e===t||e!=e&&t!=t}(de&&Pe(new de(new ArrayBuffer(1)))!=y||he&&Pe(new he)!=u||fe&&"[object Promise]"!=Pe(fe.resolve())||ge&&Pe(new ge)!=f||me&&"[object WeakMap]"!=Pe(new me))&&(Pe=function(e){var t=ee.call(e),r=t==d?e.constructor:void 0,n=r?$e(r):void 0;if(n)switch(n){case we:return y;case ye:return u;case ve:return"[object Promise]";case qe:return f;case xe:return"[object WeakMap]"}return t});var Ge=Array.isArray;function Me(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=a}(e.length)&&!ze(e)}var Qe=ue||function(){return!1};function ze(e){var t=Je(e)?ee.call(e):"";return t==c||t==l}function Je(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function We(e){return Me(e)?_e(e):function(e){if(!Be(e))return pe(e);var t=[];for(var r in Object(e))X.call(e,r)&&"constructor"!=r&&t.push(r);return t}(e)}e.exports=function(e){return Re(e,!0,!0)}});const T=Array.isArray;function _(e){return"string"==typeof e&&e.length>0&&"."===e[0]?e.slice(1):e}function N(e,t){return function e(t,r,n){const a=L(t);let i,o,s,c,l;if((n=Object.assign({depth:-1,path:""},n)).depth+=1,T(a))for(i=0,o=a.length;i<o;i++){const t=`${n.path}.${i}`;void 0!==a[i]?(n.parent=L(a),n.parentType="array",s=e(r(a[i],void 0,Object.assign({},n,{path:_(t)})),r,Object.assign({},n,{path:_(t)})),Number.isNaN(s)&&i<a.length?(a.splice(i,1),i-=1):a[i]=s):a.splice(i,1)}else if(g(a))for(i=0,o=(c=Object.keys(a)).length;i<o;i++){l=c[i];const t=`${n.path}.${l}`;0===n.depth&&null!=l&&(n.topmostKey=l),n.parent=L(a),n.parentType="object",s=e(r(l,a[l],Object.assign({},n,{path:_(t)})),r,Object.assign({},n,{path:_(t)})),Number.isNaN(s)?delete a[l]:a[l]=s}return a}(e,t,{})}var C="__lodash_hash_undefined__",R=9007199254740991,D="[object Function]",O="[object GeneratorFunction]",j=/^\[object .+?Constructor\]$/,V="object"==typeof b&&b&&b.Object===Object&&b,F="object"==typeof self&&self&&self.Object===Object&&self,I=V||F||Function("return this")();function P(e,t){return!!(e?e.length:0)&&function(e,t,r){if(t!=t)return function(e,t,r,n){var a=e.length,i=r+(n?1:-1);for(;n?i--:++i<a;)if(t(e[i],i,e))return i;return-1}(e,$,r);var n=r-1,a=e.length;for(;++n<a;)if(e[n]===t)return n;return-1}(e,t,0)>-1}function U(e,t,r){for(var n=-1,a=e?e.length:0;++n<a;)if(r(t,e[n]))return!0;return!1}function B(e,t){for(var r=-1,n=e?e.length:0,a=Array(n);++r<n;)a[r]=t(e[r],r,e);return a}function $(e){return e!=e}function H(e){return function(t){return e(t)}}function G(e,t){return e.has(t)}var M,Q=Array.prototype,z=Function.prototype,J=Object.prototype,W=I["__core-js_shared__"],K=(M=/[^.]+$/.exec(W&&W.keys&&W.keys.IE_PROTO||""))?"Symbol(src)_1."+M:"",Z=z.toString,Y=J.hasOwnProperty,X=J.toString,ee=RegExp("^"+Z.call(Y).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),te=Q.splice,re=Math.max,ne=Math.min,ae=fe(I,"Map"),ie=fe(Object,"create");function oe(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function se(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function ce(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function le(e){var t=-1,r=e?e.length:0;for(this.__data__=new ce;++t<r;)this.add(e[t])}function ue(e,t){for(var r,n,a=e.length;a--;)if((r=e[a][0])===(n=t)||r!=r&&n!=n)return a;return-1}function pe(e){return!(!me(e)||(t=e,K&&K in t))&&(ge(e)||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e)?ee:j).test(function(e){if(null!=e){try{return Z.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e));var t}function de(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=R}(e.length)&&!ge(e)}(e)}(e)?e:[]}function he(e,t){var r,n,a=e.__data__;return("string"==(n=typeof(r=t))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?a["string"==typeof t?"string":"hash"]:a.map}function fe(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return pe(r)?r:void 0}function ge(e){var t=me(e)?X.call(e):"";return t==D||t==O}function me(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}oe.prototype.clear=function(){this.__data__=ie?ie(null):{}},oe.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},oe.prototype.get=function(e){var t=this.__data__;if(ie){var r=t[e];return r===C?void 0:r}return Y.call(t,e)?t[e]:void 0},oe.prototype.has=function(e){var t=this.__data__;return ie?void 0!==t[e]:Y.call(t,e)},oe.prototype.set=function(e,t){return this.__data__[e]=ie&&void 0===t?C:t,this},se.prototype.clear=function(){this.__data__=[]},se.prototype.delete=function(e){var t=this.__data__,r=ue(t,e);return!(r<0||(r==t.length-1?t.pop():te.call(t,r,1),0))},se.prototype.get=function(e){var t=this.__data__,r=ue(t,e);return r<0?void 0:t[r][1]},se.prototype.has=function(e){return ue(this.__data__,e)>-1},se.prototype.set=function(e,t){var r=this.__data__,n=ue(r,e);return n<0?r.push([e,t]):r[n][1]=t,this},ce.prototype.clear=function(){this.__data__={hash:new oe,map:new(ae||se),string:new oe}},ce.prototype.delete=function(e){return he(this,e).delete(e)},ce.prototype.get=function(e){return he(this,e).get(e)},ce.prototype.has=function(e){return he(this,e).has(e)},ce.prototype.set=function(e,t){return he(this,e).set(e,t),this},le.prototype.add=le.prototype.push=function(e){return this.__data__.set(e,C),this},le.prototype.has=function(e){return this.__data__.has(e)};var be=function(e,t){return t=re(void 0===t?e.length-1:t,0),function(){for(var r=arguments,n=-1,a=re(r.length-t,0),i=Array(a);++n<a;)i[n]=r[t+n];n=-1;for(var o=Array(t+1);++n<t;)o[n]=r[n];return o[t]=i,function(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}(e,this,o)}}(function(e){var t=B(e,de);return t.length&&t[0]===e[0]?function(e,t,r){for(var n=r?U:P,a=e[0].length,i=e.length,o=i,s=Array(i),c=1/0,l=[];o--;){var u=e[o];o&&t&&(u=B(u,H(t))),c=ne(u.length,c),s[o]=!r&&(t||a>=120&&u.length>=120)?new le(o&&u):void 0}u=e[0];var p=-1,d=s[0];e:for(;++p<a&&l.length<c;){var h=u[p],f=t?t(h):h;if(h=r||0!==h?h:0,!(d?G(d,f):n(l,f,r))){for(o=i;--o;){var g=s[o];if(!(g?G(g,f):n(e[o],f,r)))continue e}d&&d.push(f),l.push(h)}}return l}(t):[]});function we(e){return"string"==typeof e?e.length>0?[e]:[]:e}var ye=w(function(e){e.exports=function(){var e=Object.prototype.toString;function t(e,t){return null!=e&&Object.prototype.hasOwnProperty.call(e,t)}function r(e){if(!e)return!0;if(a(e)&&0===e.length)return!0;if("string"!=typeof e){for(var r in e)if(t(e,r))return!1;return!0}return!1}function n(t){return e.call(t)}var a=Array.isArray||function(t){return"[object Array]"===e.call(t)};function i(e){var t=parseInt(e);return t.toString()===e?t:e}function o(e){e=e||{};var o=function(e){return Object.keys(o).reduce(function(t,r){return"create"===r?t:("function"==typeof o[r]&&(t[r]=o[r].bind(o,e)),t)},{})};function s(r,n){return e.includeInheritedProps||"number"==typeof n&&Array.isArray(r)||t(r,n)}function c(e,t){if(s(e,t))return e[t]}function l(e,t,r,n){if("number"==typeof t&&(t=[t]),!t||0===t.length)return e;if("string"==typeof t)return l(e,t.split(".").map(i),r,n);var a=t[0],o=c(e,a);return 1===t.length?(void 0!==o&&n||(e[a]=r),o):(void 0===o&&("number"==typeof t[1]?e[a]=[]:e[a]={}),l(e[a],t.slice(1),r,n))}return o.has=function(r,n){if("number"==typeof n?n=[n]:"string"==typeof n&&(n=n.split(".")),!n||0===n.length)return!!r;for(var o=0;o<n.length;o++){var s=i(n[o]);if(!("number"==typeof s&&a(r)&&s<r.length||(e.includeInheritedProps?s in Object(r):t(r,s))))return!1;r=r[s]}return!0},o.ensureExists=function(e,t,r){return l(e,t,r,!0)},o.set=function(e,t,r,n){return l(e,t,r,n)},o.insert=function(e,t,r,n){var i=o.get(e,t);n=~~n,a(i)||(i=[],o.set(e,t,i)),i.splice(n,0,r)},o.empty=function(e,t){var i,c;if(!r(t)&&null!=e&&(i=o.get(e,t))){if("string"==typeof i)return o.set(e,t,"");if(function(e){return"boolean"==typeof e||"[object Boolean]"===n(e)}(i))return o.set(e,t,!1);if("number"==typeof i)return o.set(e,t,0);if(a(i))i.length=0;else{if(!function(e){return"object"==typeof e&&"[object Object]"===n(e)}(i))return o.set(e,t,null);for(c in i)s(i,c)&&delete i[c]}}},o.push=function(e,t){var r=o.get(e,t);a(r)||(r=[],o.set(e,t,r)),r.push.apply(r,Array.prototype.slice.call(arguments,2))},o.coalesce=function(e,t,r){for(var n,a=0,i=t.length;a<i;a++)if(void 0!==(n=o.get(e,t[a])))return n;return r},o.get=function(e,t,r){if("number"==typeof t&&(t=[t]),!t||0===t.length)return e;if(null==e)return r;if("string"==typeof t)return o.get(e,t.split("."),r);var n=i(t[0]),a=c(e,n);return void 0===a?r:1===t.length?a:o.get(e[n],t.slice(1),r)},o.del=function(e,t){if("number"==typeof t&&(t=[t]),null==e)return e;if(r(t))return e;if("string"==typeof t)return o.del(e,t.split("."));var n=i(t[0]);return s(e,n)?1!==t.length?o.del(e[n],t.slice(1)):(a(e)?e.splice(n,1):delete e[n],e):e},o}var s=o();return s.create=o,s.withInheritedProps=o({includeInheritedProps:!0}),s}()}),ve=function(e){var t=e%100;if(t>=10&&t<=20)return"th";var r=e%10;return 1===r?"st":2===r?"nd":3===r?"rd":"th"};function qe(e){if("number"!=typeof e)throw new TypeError("Expected Number, got "+typeof e+" "+e);return e+ve(e)}qe.indicator=ve;var xe=qe,Ae=/[|\\{}()[\]^$+*?.]/g,Se=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(Ae,"\\$&")};const Ee=new Map;function ke(e,t){const r=Object.assign({caseSensitive:!1},t),n=e+JSON.stringify(r);if(Ee.has(n))return Ee.get(n);const a="!"===e[0];a&&(e=e.slice(1)),e=Se(e).replace(/\\\*/g,".*");const i=new RegExp(`^${e}$`,r.caseSensitive?"":"i");return i.negated=a,Ee.set(n,i),i}var Le=(e,t,r)=>{if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError(`Expected two arrays, got ${typeof e} ${typeof t}`);if(0===t.length)return e;const n="!"===t[0][0];t=t.map(e=>ke(e,r));const a=[];for(const r of e){let e=n;for(const n of t)n.test(r)&&(e=!n.negated);e&&a.push(r)}return a};function Te(e,t,r){return function e(t,r,n,a=!0){const i=Object.prototype.hasOwnProperty;function o(e){return null!=e}function s(e){return"Object"===v(e)}function c(e,t){return t=we(t),Array.from(e).filter(e=>!t.some(t=>Le.isMatch(e,t,{caseSensitive:!0})))}const l=["any","anything","every","everything","all","whatever","whatevs"],u=Array.isArray;if(!o(t))throw new Error("check-types-mini: [THROW_ID_01] First argument is missing!");const p={ignoreKeys:[],ignorePaths:[],acceptArrays:!1,acceptArraysIgnore:[],enforceStrictKeyset:!0,schema:{},msg:"check-types-mini",optsVarName:"opts"};let d;if(d=o(n)&&s(n)?Object.assign({},p,n):Object.assign({},p),o(d.ignoreKeys)&&d.ignoreKeys?d.ignoreKeys=we(d.ignoreKeys):d.ignoreKeys=[],o(d.ignorePaths)&&d.ignorePaths?d.ignorePaths=we(d.ignorePaths):d.ignorePaths=[],o(d.acceptArraysIgnore)&&d.acceptArraysIgnore?d.acceptArraysIgnore=we(d.acceptArraysIgnore):d.acceptArraysIgnore=[],d.msg="string"==typeof d.msg?d.msg.trim():d.msg,":"===d.msg[d.msg.length-1]&&(d.msg=d.msg.slice(0,d.msg.length-1).trim()),d.schema&&(Object.keys(d.schema).forEach(e=>{if(s(d.schema[e])){const t={};N(d.schema[e],(r,n,a)=>{const i=void 0!==n?n:r;return u(i)||s(i)||(t[`${e}.${a.path}`]=i),i}),delete d.schema[e],d.schema=Object.assign(d.schema,t)}}),Object.keys(d.schema).forEach(e=>{u(d.schema[e])||(d.schema[e]=[d.schema[e]]),d.schema[e]=d.schema[e].map(String).map(e=>e.toLowerCase()).map(e=>e.trim())})),o(r)||(r={}),a&&e(d,p,{enforceStrictKeyset:!1},!1),d.enforceStrictKeyset)if(o(d.schema)&&Object.keys(d.schema).length>0){if(0!==c(k(Object.keys(t),Object.keys(r).concat(Object.keys(d.schema))),d.ignoreKeys).length){const e=k(Object.keys(t),Object.keys(r).concat(Object.keys(d.schema)));throw new TypeError(`${d.msg}: ${d.optsVarName}.enforceStrictKeyset is on and the following key${e.length>1?"s":""} ${e.length>1?"are":"is"} not covered by schema and/or reference objects: ${e.join(", ")}`)}}else{if(!(o(r)&&Object.keys(r).length>0))throw new TypeError(`${d.msg}: Both ${d.optsVarName}.schema and reference objects are missing! We don't have anything to match the keys as you requested via opts.enforceStrictKeyset!`);if(0!==c(k(Object.keys(t),Object.keys(r)),d.ignoreKeys).length){const e=k(Object.keys(t),Object.keys(r));throw new TypeError(`${d.msg}: The input object has key${e.length>1?"s":""} which ${e.length>1?"are":"is"} not covered by the reference object: ${e.join(", ")}`)}if(0!==c(k(Object.keys(r),Object.keys(t)),d.ignoreKeys).length){const e=k(Object.keys(r),Object.keys(t));throw new TypeError(`${d.msg}: The reference object has key${e.length>1?"s":""} which ${e.length>1?"are":"is"} not present in the input object: ${e.join(", ")}`)}}const h=[];N(t,(e,n,a)=>{let o=n,c=e;if("array"===a.parentType&&(c=void 0,o=e),u(h)&&h.length&&h.some(e=>a.path.startsWith(e)))return o;if(c&&d.ignoreKeys.some(e=>Le.isMatch(c,e)))return o;if(d.ignorePaths.some(e=>Le.isMatch(a.path,e)))return o;const p=!(!s(o)&&!u(o)&&u(a.parent));let f=!1;s(d.schema)&&i.call(d.schema,ye.get(a.path))&&(f=!0);let g=!1;if(s(r)&&ye.has(r,ye.get(a.path))&&(g=!0),d.enforceStrictKeyset&&p&&!f&&!g)throw new TypeError(`${d.msg}: ${d.optsVarName}.${a.path} is neither covered by reference object (second input argument), nor ${d.optsVarName}.schema! To stop this error, turn off ${d.optsVarName}.enforceStrictKeyset or provide some type reference (2nd argument or ${d.optsVarName}.schema).\n\nDebug info:\n\nobj = ${JSON.stringify(t,null,4)}\n\nref = ${JSON.stringify(r,null,4)}\n\ninnerObj = ${JSON.stringify(a,null,4)}\n\nopts = ${JSON.stringify(d,null,4)}\n\ncurrent = ${JSON.stringify(o,null,4)}\n\n`);if(f){const e=we(d.schema[a.path]).map(String).map(e=>e.toLowerCase());if(ye.set(d.schema,a.path,e),be(e,l).length)h.push(a.path);else if(!0!==o&&!1!==o&&!e.includes(v(o).toLowerCase())||(!0===o||!1===o)&&!e.includes(String(o))&&!e.includes("boolean")){if(!u(o)||!d.acceptArrays)throw new TypeError(`${d.msg}: ${d.optsVarName}.${a.path} was customised to ${"string"!==v(o)?'"':""}${JSON.stringify(o,null,0)}${"string"!==v(o)?'"':""} (type: ${v(o).toLowerCase()}) which is not among the allowed types in schema (which is equal to ${JSON.stringify(e,null,0)})`);for(let t=0,r=o.length;t<r;t++)if(!e.includes(v(o[t]).toLowerCase()))throw new TypeError(`${d.msg}: ${d.optsVarName}.${a.path}.${t}, the ${xe(t+1)} element (equal to ${JSON.stringify(o[t],null,0)}) is of a type ${v(o[t]).toLowerCase()}, but only the following are allowed by the ${d.optsVarName}.schema: ${e.join(", ")}`)}}else if(g){const t=ye.get(r,a.path);if(d.acceptArrays&&u(o)&&!d.acceptArraysIgnore.includes(e)){if(!o.every(t=>v(t).toLowerCase()===v(r[e]).toLowerCase()))throw new TypeError(`${d.msg}: ${d.optsVarName}.${a.path} was customised to be array, but not all of its elements are ${v(r[e]).toLowerCase()}-type`)}else if(v(o)!==v(t))throw new TypeError(`${d.msg}: ${d.optsVarName}.${a.path} was customised to ${"string"===v(o).toLowerCase()?"":'"'}${JSON.stringify(o,null,0)}${"string"===v(o).toLowerCase()?"":'"'} which is not ${v(t).toLowerCase()} but ${v(o).toLowerCase()}`)}return o})}(e,t,r)}Le.isMatch=((e,t,r)=>{const n=ke(t,r),a=n.test(e);return n.negated?!a:a});const _e=Array.isArray;function Ne(e,t){if(!_e(e))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(0===e.length)return e;const r={strictlyTwoElementsInRangeArrays:!1,progressFn:null},n=Object.assign({},r,t);let a,i;if(Te(n,r,{msg:"ranges-sort: [THROW_ID_02*]",schema:{progressFn:["function","false","null"]}}),n.strictlyTwoElementsInRangeArrays&&!e.every((e,t)=>2===e.length||(a=t,i=e.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${y(a)} range (${JSON.stringify(e[a],null,4)}) has not two but ${i} elements!`);if(!e.every((e,t)=>!(!m(e[0],{includeZero:!0})||!m(e[1],{includeZero:!0}))||(a=t,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${y(a)} range (${JSON.stringify(e[a],null,4)}) does not consist of only natural numbers!`);const o=e.length*e.length;let s=0;return Array.from(e).sort((e,t)=>(n.progressFn&&(s++,n.progressFn(Math.floor(100*s/o))),e[0]===t[0]?e[1]<t[1]?-1:e[1]>t[1]?1:0:e[0]<t[0]?-1:1))}function Ce(e,t){function r(e){return"string"==typeof e}if(!Array.isArray(e))return e;const n={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let a;if(t){if(!g(t))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(t,null,4)} (type ${typeof t})`);if((a=Object.assign({},n,t)).progressFn&&"function"!=typeof a.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] the second input argument must be a function! It was given of a type: "${typeof a.progressFn}", equal to ${JSON.stringify(a.progressFn,null,4)}`);if(a.mergeType&&1!==a.mergeType&&2!==a.mergeType)if(r(a.mergeType)&&"1"===a.mergeType.trim())a.mergeType=1;else{if(!r(a.mergeType)||"2"!==a.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof a.mergeType}", equal to ${JSON.stringify(a.progressFn,null,4)}`);a.mergeType=2}if("boolean"!=typeof a.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof a.joinRangesThatTouchEdges}", equal to ${JSON.stringify(a.joinRangesThatTouchEdges,null,4)}`)}else a=L(n);const i=L(e).filter(e=>void 0!==e[2]||e[0]!==e[1]);let o,s,c;const l=(o=a.progressFn?Ne(i,{progressFn:e=>{(c=Math.floor(e/5))!==s&&(s=c,a.progressFn(c))}}):Ne(i)).length-1;for(let e=l;e>0;e--)a.progressFn&&(c=Math.floor(78*(1-e/l))+21)!==s&&c>s&&(s=c,a.progressFn(c)),(o[e][0]<=o[e-1][0]||!a.joinRangesThatTouchEdges&&o[e][0]<o[e-1][1]||a.joinRangesThatTouchEdges&&o[e][0]<=o[e-1][1])&&(o[e-1][0]=Math.min(o[e][0],o[e-1][0]),o[e-1][1]=Math.max(o[e][1],o[e-1][1]),void 0!==o[e][2]&&(o[e-1][0]>=o[e][0]||o[e-1][1]<=o[e][1])&&null!==o[e-1][2]&&(null===o[e][2]&&null!==o[e-1][2]?o[e-1][2]=null:void 0!==o[e-1][2]?2===a.mergeType&&o[e-1][0]===o[e][0]?o[e-1][2]=o[e][2]:o[e-1][2]+=o[e][2]:o[e-1][2]=o[e][2]),o.splice(e,1),e=o.length);return o}function Re(e){const t={value:e,hungry:!1,optional:!1};return(t.value.endsWith("?*")||t.value.endsWith("*?"))&&t.value.length>2?(t.value=t.value.slice(0,t.value.length-2),t.optional=!0,t.hungry=!0):t.value.endsWith("?")&&t.value.length>1?(t.value=t.value.slice(0,t.value.length-1),t.optional=!0):t.value.endsWith("*")&&t.value.length>1&&(t.value=t.value.slice(0,t.value.length-1),t.hungry=!0),t}function De(e){return"number"==typeof e}function Oe(e){return"string"==typeof e}function je(e,t){if("string"!=typeof e||!e.length)return null;if(t&&"number"==typeof t||(t=0),!e[t+1])return null;if(e[t+1]&&e[t+1].trim().length)return t+1;if(e[t+2]&&e[t+2].trim().length)return t+2;for(let r=t+1,n=e.length;r<n;r++)if(e[r].trim().length)return r;return null}function Ve(e,t){if("string"!=typeof e||!e.length)return null;if(t&&"number"==typeof t||(t=0),t<1)return null;if(e[t-1]&&e[t-1].trim().length)return t-1;if(e[t-2]&&e[t-2].trim().length)return t-2;for(let r=t;r--;)if(e[r]&&e[r].trim().length)return r;return null}function Fe(e,t,r,n,a){if("string"!=typeof t||!t.length)return null;if(r&&"number"==typeof r||(r=0),"right"===e&&!t[r+1]||"left"===e&&!t[r-1])return null;let i=r;const o=[];let s,c,l,u=0;for(;u<a.length;){if(!Oe(a[u])||!a[u].length){u++;continue}const{value:r,optional:p,hungry:d}=Re(a[u]),h="right"===e?je(t,i):Ve(t,i);if(!(n.i&&t[h].toLowerCase()===r.toLowerCase()||!n.i&&t[h]===r)){if(p){u++;continue}if(l){u++,l=void 0;continue}return null}{const a="right"===e?je(t,h):Ve(t,h);d&&(n.i&&t[a].toLowerCase()===r.toLowerCase()||!n.i&&t[a]===r)?l=!0:u++,"right"===e&&h>i+1?o.push([i+1,h]):"left"===e&&h<i-1&&o.unshift([h+1,i]),i=h,"right"===e?(void 0===s&&(s=h),c=h):(void 0===c&&(c=h),s=h)}}return void 0===s?null:{gaps:o,leftmostChar:s,rightmostChar:c}}function Ie(e,t,...r){if(!r.length)return Ve(e,t);const n={i:!1};let a;return Fe("left",e,t,a=g(r[0])?Object.assign({},n,r.shift()):n,Array.from(r).reverse())}function Pe(e,t,...r){if(!r.length)return je(e,t);const n={i:!1};let a;return Fe("right",e,t,a=g(r[0])?Object.assign({},n,r.shift()):n,r)}function Ue(e,t,r,n,a){if("string"!=typeof t||!t.length)return null;if(r&&"number"==typeof r||(r=0),"right"===e&&!t[r+1]||"left"===e&&(De(r)&&r<1||"0"===r))return null;let i=null,o=null;do{null!==(i="right"===e?Pe(t,De(o)?o:r,...a):Ie(t,De(o)?o:r,...a))&&(o="right"===e?i.rightmostChar:i.leftmostChar)}while(i);if(null!=o&&"right"===e&&o++,null===o)return null;if("right"===e){if(t[o]&&t[o].trim().length)return o;const e=je(t,o);if(0===n.mode){if(e===o+1)return o;if(!(t.slice(o,e||t.length).trim().length||t.slice(o,e||t.length).includes("\n")||t.slice(o,e||t.length).includes("\r")))return e?e-1:t.length;for(let e=o,r=t.length;e<r;e++)if("\n\r".includes(t[e]))return e}else{if(1===n.mode)return o;if(2===n.mode){const e=t.slice(o);if(e.trim().length||e.includes("\n")||e.includes("\r"))for(let e=o,r=t.length;e<r;e++)if(t[e].trim().length||"\n\r".includes(t[e]))return e;return t.length}}return e||t.length}if(t[o]&&t[o-1]&&t[o-1].trim().length)return o;const s=Ve(t,o);if(0===n.mode){if(s===o-2)return o;if(t.slice(0,o).trim().length||t.slice(0,o).includes("\n")||t.slice(0,o).includes("\r"))for(let e=o;e--;)if("\n\r".includes(t[e])||t[e].trim().length)return e+1+(t[e].trim().length?1:0);return 0}if(1===n.mode)return o;if(2===n.mode){const e=t.slice(0,o);if(e.trim().length||e.includes("\n")||e.includes("\r"))for(let e=o;e--;)if(t[e].trim().length||"\n\r".includes(t[e]))return e+1;return 0}return null!==s?s+1:0}function Be(e,t,...r){if(!r.length||1===r.length&&g(r[0]))return null;const n={mode:0};if(g(r[0])){const a=Object.assign({},n,L(r[0]));if(a.mode){if(Oe(a.mode)&&"0123".includes(a.mode))a.mode=Number.parseInt(a.mode,10);else if(!De(a.mode))throw new Error(`string-left-right/chompLeft(): [THROW_ID_01] the opts.mode is wrong! It should be 0, 1, 2 or 3. It was given as ${a.mode} (type ${typeof a.mode})`)}else a.mode=0;return Ue("left",e,t,a,L(r).slice(1))}return Oe(r[0])?Ue("left",e,t,n,L(r)):Ue("left",e,t,n,L(r).slice(1))}var $e=["AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Map","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","check","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copy","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","image","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","part","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","prop","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","target","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj"];var He={"bad-character-acknowledge":{description:"https://www.fileformat.info/info/unicode/char/0006/index.htm",excerpt:"bad character - acknowledge",scope:"all"},"bad-character-application-program-command":{description:"http://www.fileformat.info/info/unicode/char/009f/index.htm",excerpt:"bad character - application program command",scope:"all"},"bad-character-backspace":{description:"https://www.fileformat.info/info/unicode/char/0008/index.htm",excerpt:"bad character - backspace",scope:"all"},"bad-character-bell":{description:"https://www.fileformat.info/info/unicode/char/0007/index.htm",excerpt:"bad character - bell",scope:"all"},"bad-character-en-quad":{description:"https://www.fileformat.info/info/unicode/char/2000/index.htm",excerpt:"bad character - en quad",scope:"all"},"bad-character-em-quad":{description:"https://www.fileformat.info/info/unicode/char/2001/index.htm",excerpt:"bad character - em quad",scope:"all"},"bad-character-en-space":{description:"https://www.fileformat.info/info/unicode/char/2000/index.htm",excerpt:"bad character - en space",scope:"all"},"bad-character-em-space":{description:"https://www.fileformat.info/info/unicode/char/2001/index.htm",excerpt:"bad character - em space",scope:"all"},"bad-character-three-per-em-space":{description:"https://www.fileformat.info/info/unicode/char/2004/index.htm",excerpt:"bad character - three-per-em space",scope:"all"},"bad-character-four-per-em-space":{description:"https://www.fileformat.info/info/unicode/char/2005/index.htm",excerpt:"bad character - four-per-em space",scope:"all"},"bad-character-six-per-em-space":{description:"https://www.fileformat.info/info/unicode/char/2005/index.htm",excerpt:"bad character - six-per-em space",scope:"all"},"bad-character-figure-space":{description:"https://www.fileformat.info/info/unicode/char/2007/index.htm",excerpt:"bad character - figure space",scope:"all"},"bad-character-punctuation-space":{description:"https://www.fileformat.info/info/unicode/char/2008/index.htm",excerpt:"bad character - punctuation space",scope:"all"},"bad-character-thin-space":{description:"https://www.fileformat.info/info/unicode/char/2009/index.htm",excerpt:"bad character - thin space",scope:"all"},"bad-character-hair-space":{description:"https://www.fileformat.info/info/unicode/char/200a/index.htm",excerpt:"bad character - hair space",scope:"all"},"bad-character-narrow-no-break-space":{description:"https://www.fileformat.info/info/unicode/char/202f/index.htm",excerpt:"bad character - narrow no-break space",scope:"all"},"bad-character-line-separator":{description:"https://www.fileformat.info/info/unicode/char/2028/index.htm",excerpt:"bad character - line separator",scope:"all"},"bad-character-paragraph-separator":{description:"https://www.fileformat.info/info/unicode/char/2029/index.htm",excerpt:"bad character - paragraph separator",scope:"all"},"bad-character-medium-mathematical-space":{description:"https://www.fileformat.info/info/unicode/char/205f/index.htm",excerpt:"bad character - medium mathematical space",scope:"all"},"bad-character-ideographic-space":{description:"https://www.fileformat.info/info/unicode/char/3000/index.htm",excerpt:"bad character - ideographic space",scope:"all"},"bad-character-ogham-space-mark":{description:"https://www.fileformat.info/info/unicode/char/1680/index.htm",excerpt:"bad character - ogham space mark",scope:"all"},"bad-character-break-permitted-here":{description:"http://www.fileformat.info/info/unicode/char/0082/index.htm",excerpt:"bad character - break permitted here",scope:"all"},"bad-character-cancel":{description:"https://www.fileformat.info/info/unicode/char/0018/index.htm",excerpt:"bad character - cancel",scope:"all"},"bad-character-generic":{description:"This character is invalid",excerpt:"bad character",scope:"all"},"bad-character-cancel-character":{description:"http://www.fileformat.info/info/unicode/char/0094/index.htm",excerpt:"bad character - cancel character",scope:"all"},"bad-character-character-tabulation":{description:"https://www.fileformat.info/info/unicode/char/0009/index.htm",excerpt:"bad character - character tabulation",scope:"all"},"bad-character-character-tabulation-set":{description:"http://www.fileformat.info/info/unicode/char/0088/index.htm",excerpt:"bad character - character tabulation set",scope:"all"},"bad-character-character-tabulation-with-justification":{description:"http://www.fileformat.info/info/unicode/char/0089/index.htm",excerpt:"bad character - character tabulation with justification",scope:"all"},"bad-character-control-sequence-introducer":{description:"http://www.fileformat.info/info/unicode/char/009b/index.htm",excerpt:"bad character - control sequence introducer",scope:"all"},"bad-character-data-link-escape":{description:"https://www.fileformat.info/info/unicode/char/0010/index.htm",excerpt:"bad character - data link escape",scope:"all"},"bad-character-delete":{description:"http://www.fileformat.info/info/unicode/char/007f/index.htm",excerpt:"bad character - delete",scope:"all"},"bad-character-device-control-four":{description:"https://www.fileformat.info/info/unicode/char/0014/index.htm",excerpt:"bad character - device control four",scope:"all"},"bad-character-device-control-one":{description:"https://www.fileformat.info/info/unicode/char/0011/index.htm",excerpt:"bad character - device control one",scope:"all"},"bad-character-device-control-string":{description:"http://www.fileformat.info/info/unicode/char/0090/index.htm",excerpt:"bad character - device control string",scope:"all"},"bad-character-device-control-three":{description:"https://www.fileformat.info/info/unicode/char/0013/index.htm",excerpt:"bad character - device control three",scope:"all"},"bad-character-device-control-two":{description:"https://www.fileformat.info/info/unicode/char/0012/index.htm",excerpt:"bad character - device control two",scope:"all"},"bad-character-end-of-medium":{description:"https://www.fileformat.info/info/unicode/char/0019/index.htm",excerpt:"bad character - end of medium",scope:"all"},"bad-character-end-of-protected-area":{description:"http://www.fileformat.info/info/unicode/char/0097/index.htm",excerpt:"bad character - end of protected area",scope:"all"},"bad-character-end-of-selected-area":{description:"http://www.fileformat.info/info/unicode/char/0087/index.htm",excerpt:"bad character - end of selected area",scope:"all"},"bad-character-end-of-text":{description:"https://www.fileformat.info/info/unicode/char/0003/index.htm",excerpt:"bad character - end of text (ETX)",scope:"all"},"bad-character-end-of-transmission":{description:"https://www.fileformat.info/info/unicode/char/0004/index.htm",excerpt:"bad character - end of transmission",scope:"all"},"bad-character-end-of-transmission-block":{description:"https://www.fileformat.info/info/unicode/char/0017/index.htm",excerpt:"bad character - end of transmission block",scope:"all"},"bad-character-enquiry":{description:"https://www.fileformat.info/info/unicode/char/0005/index.htm",excerpt:"bad character - enquiry",scope:"all"},"bad-character-escape":{description:"https://www.fileformat.info/info/unicode/char/001b/index.htm",excerpt:"bad character - escape",scope:"all"},"bad-character-form-feed":{description:"https://www.fileformat.info/info/unicode/char/000c/index.htm",excerpt:"bad character - form feed",scope:"all"},"bad-character-grave-accent":{description:"https://www.fileformat.info/info/unicode/char/0060/index.htm",excerpt:"bad character - grave accent",scope:"html"},"bad-character-high-octet-preset":{description:"http://www.fileformat.info/info/unicode/char/0081/index.htm",excerpt:"bad character - high octet preset",scope:"all"},"bad-character-index":{description:"http://www.fileformat.info/info/unicode/char/0084/index.htm",excerpt:"bad character - index",scope:"all"},"bad-character-information-separator-four":{description:"https://www.fileformat.info/info/unicode/char/001c/index.htm",excerpt:"bad character - information separator four",scope:"all"},"bad-character-information-separator-one":{description:"https://www.fileformat.info/info/unicode/char/001f/index.htm",excerpt:"bad character - information separator one",scope:"all"},"bad-character-information-separator-three":{description:"https://www.fileformat.info/info/unicode/char/001d/index.htm",excerpt:"bad character - information separator three",scope:"all"},"bad-character-information-separator-two":{description:"https://www.fileformat.info/info/unicode/char/001e/index.htm",excerpt:"bad character - information separator two",scope:"all"},"bad-character-line-tabulation":{description:"https://www.fileformat.info/info/unicode/char/000b/index.htm",excerpt:"bad character - line tabulation",scope:"all"},"bad-character-line-tabulation-set":{description:"http://www.fileformat.info/info/unicode/char/008a/index.htm",excerpt:"bad character - line tabulation set",scope:"all"},"bad-character-message-waiting":{description:"http://www.fileformat.info/info/unicode/char/0095/index.htm",excerpt:"bad character - message waiting",scope:"all"},"bad-character-negative-acknowledge":{description:"https://www.fileformat.info/info/unicode/char/0015/index.htm",excerpt:"bad character - negative acknowledge",scope:"all"},"bad-character-next-line":{description:"http://www.fileformat.info/info/unicode/char/0085/index.htm",excerpt:"bad character - next line",scope:"all"},"bad-character-no-break-here":{description:"http://www.fileformat.info/info/unicode/char/0083/index.htm",excerpt:"bad character - no break here",scope:"all"},"bad-character-null":{description:"https://www.fileformat.info/info/unicode/char/0000/index.htm",excerpt:"bad character - null",scope:"all"},"bad-character-operating-system-command":{description:"http://www.fileformat.info/info/unicode/char/009d/index.htm",excerpt:"bad character - operating system command",scope:"all"},"bad-character-padding":{description:"http://www.fileformat.info/info/unicode/char/0080/index.htm",excerpt:"bad character - padding",scope:"all"},"bad-character-partial-line-backward":{description:"http://www.fileformat.info/info/unicode/char/008c/index.htm",excerpt:"bad character - partial line backward",scope:"all"},"bad-character-partial-line-forward":{description:"http://www.fileformat.info/info/unicode/char/008b/index.htm",excerpt:"bad character - partial line forward",scope:"all"},"bad-character-private-message":{description:"http://www.fileformat.info/info/unicode/char/009e/index.htm",excerpt:"bad character - private message",scope:"all"},"bad-character-private-use-1":{description:"http://www.fileformat.info/info/unicode/char/0091/index.htm",excerpt:"bad character - private use 1",scope:"all"},"bad-character-private-use-2":{description:"http://www.fileformat.info/info/unicode/char/0092/index.htm",excerpt:"bad character - private use 2",scope:"all"},"bad-character-reverse-line-feed":{description:"http://www.fileformat.info/info/unicode/char/008d/index.htm",excerpt:"bad character - reverse line feed",scope:"all"},"bad-character-set-transmit-state":{description:"http://www.fileformat.info/info/unicode/char/0093/index.htm",excerpt:"bad character - set transmit state",scope:"all"},"bad-character-shift-in":{description:"https://www.fileformat.info/info/unicode/char/000f/index.htm",excerpt:"bad character - shift in",scope:"all"},"bad-character-shift-out":{description:"https://www.fileformat.info/info/unicode/char/000e/index.htm",excerpt:"bad character - shift out",scope:"all"},"bad-character-single-character-intro-introducer":{description:"http://www.fileformat.info/info/unicode/char/009a/index.htm",excerpt:"bad character - single character intro introducer",scope:"all"},"bad-character-single-graphic-character-introducer":{description:"http://www.fileformat.info/info/unicode/char/0099/index.htm",excerpt:"bad character - single graphic character introducer",scope:"all"},"bad-character-single-shift-three":{description:"http://www.fileformat.info/info/unicode/char/008f/index.htm",excerpt:"bad character - single shift three",scope:"all"},"bad-character-single-shift-two":{description:"http://www.fileformat.info/info/unicode/char/008e/index.htm",excerpt:"bad character - single shift two",scope:"all"},"bad-character-start-of-heading":{description:"https://www.fileformat.info/info/unicode/char/0001/index.htm",excerpt:"bad character - start of heading",scope:"all"},"bad-character-start-of-protected-area":{description:"http://www.fileformat.info/info/unicode/char/0096/index.htm",excerpt:"bad character - start of protected area",scope:"all"},"bad-character-start-of-selected-area":{description:"http://www.fileformat.info/info/unicode/char/0086/index.htm",excerpt:"bad character - start of selected area",scope:"all"},"bad-character-start-of-string":{description:"http://www.fileformat.info/info/unicode/char/0098/index.htm",excerpt:"bad character - start of string",scope:"all"},"bad-character-start-of-text":{description:"https://www.fileformat.info/info/unicode/char/0002/index.htm",excerpt:"bad character - start of text",scope:"all"},"bad-character-string-terminator":{description:"http://www.fileformat.info/info/unicode/char/009c/index.htm",excerpt:"bad character - string terminator",scope:"all"},"bad-character-substitute":{description:"https://www.fileformat.info/info/unicode/char/001a/index.htm",excerpt:"bad character - substitute",scope:"all"},"bad-character-synchronous-idle":{description:"https://www.fileformat.info/info/unicode/char/0016/index.htm",excerpt:"bad character - synchronous idle",scope:"all"},"bad-character-unencoded-ampersand":{description:"There is unencoded ampersand",excerpt:"unencoded ampersand",scope:"html"},"bad-character-unencoded-closing-bracket":{description:"There is unencoded closing bracket",excerpt:"unencoded closing bracket",scope:"html"},"bad-character-unencoded-double-quotes":{description:"There is unencoded double quotes",excerpt:"unencoded double quotes",scope:"html"},"bad-character-unencoded-non-breaking-space":{description:"http://www.fileformat.info/info/unicode/char/00a0/index.htm",excerpt:"bad character - unencoded non-breaking space",scope:"all"},"bad-character-unencoded-opening-bracket":{description:"There is unencoded opening bracket",excerpt:"unencoded opening bracket",scope:"html"},"bad-character-zero-width-space":{description:"https://www.fileformat.info/info/unicode/char/200b/index.htm",excerpt:"bad character - zero width space",scope:"all"}},Ge=["abbr","address","area","article","aside","audio","base","bdi","bdo","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","doctype","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","rb","rp","rt","rtc","ruby","samp","script","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","ul","var","video","wbr","xml"],Me={"{%":{type:"opening",sibling:["%}","-%}"]},"%}":{type:"closing",sibling:["{%","{%-"]},"{%-":{type:"opening",sibling:["-%}","%}"]},"-%}":{type:"closing",sibling:["{%-","{%"]},"*|":{type:"opening",sibling:"|*"},"|*":{type:"closing",sibling:"*|"},$:{type:"closing",sibling:"$"}},Qe={"bad-named-html-entity-multiple-encoding":{description:"HTML named entity was encoded multiple times, causing repeated amp;",excerpt:"repeated amp; because of over-encoding",scope:"html"},"bad-named-html-entity-malformed-nbsp":{description:"HTML named entity &nbsp; (a non-breaking space) is malformed",excerpt:"malformed &nbsp;",scope:"html"},"bad-cdata-tag-malformed":{description:"CDATA opening tag is malformed",excerpt:"malformed CDATA tag",scope:"html"},"bad-named-html-entity-missing-semicolon":{description:"HTML named entity is missing a semicolon",excerpt:"missing semicolon on a named HTML entity",scope:"html"},"esp-more-closing-parentheses-than-opening":{description:"There are more closing parentheses than opening-ones",excerpt:"too many closing parentheses",scope:"all",unfixable:!0},"esp-more-opening-parentheses-than-closing":{description:"There are more opening parentheses than closing-ones",excerpt:"too many opening parentheses",scope:"all",unfixable:!0},"esp-line-break-within-templating-tag":{description:"There should be no line breaks within ESP template tags",excerpt:"line break should be removed",scope:"all",unfixable:!0},"html-comment-spaces":{description:"There should be no spaces between HTML comment characters",excerpt:"rogue spaces",scope:"html"},"html-comment-redundant-dash":{description:"There are too many dashes in HTML comment",excerpt:"redundant dash",scope:"html"},"html-comment-missing-dash":{description:"The dash in the comment is missing",excerpt:"missing dash",scope:"html"},"html-comment-missing-exclamation-mark":{description:"The exclamation mark in the HTML comment is missing",excerpt:"missing exclamation mark",scope:"html"},"file-empty":{description:"the contents are empty",excerpt:"the contents are empty",scope:"all"},"file-missing-ending":{description:"the ending part of the contents is missing",excerpt:"ending part is missing",scope:"all"},"file-mixed-line-endings-file-is-CR-mainly":{description:"mixed line endings detected, majority EOL's are CR",excerpt:"mixed line endings detected, majority EOL's are CR",scope:"all"},"file-mixed-line-endings-file-is-CRLF-mainly":{description:"mixed line endings detected, majority EOL's are CRLF",excerpt:"mixed line endings detected, majority EOL's are CRLF",scope:"all"},"file-mixed-line-endings-file-is-LF-mainly":{description:"mixed line endings detected, majority EOL's are LF",excerpt:"mixed line endings detected, majority EOL's are LF",scope:"all"},"file-wrong-type-line-ending-CR":{description:"Carriage Return (ASCII #13) line ending detected",excerpt:"Carriage Return line ending",scope:"all"},"file-wrong-type-line-ending-CRLF":{description:"CRLF (Carriage Return + Line Feed) line ending detected",excerpt:"CRLF line ending",scope:"all"},"file-wrong-type-line-ending-LF":{description:"Line Feed (ASCII #10) line ending detected",excerpt:"Line Feed line ending",scope:"all"},"tag-attribute-closing-quotation-mark-missing":{description:"The closing quotation mark is missing",excerpt:"the closing quotation mark is missing",scope:"html"},"tag-attribute-left-double-quotation-mark":{description:"There's a left double quotation mark, https://www.fileformat.info/info/unicode/char/201C/index.htm",excerpt:"a left double quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-left-single-quotation-mark":{description:"There's a left single quotation mark, https://www.fileformat.info/info/unicode/char/2018/index.htm",excerpt:"a left single quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-mismatching-quotes-is-double":{description:"attribute's opening quote is single, but closing-one is double",excerpt:"there should be a single quote here instead",scope:"html"},"tag-attribute-mismatching-quotes-is-single":{description:"attribute's opening quote is double, but closing-one is single",excerpt:"there should be a double quote here instead",scope:"html"},"tag-attribute-missing-equal":{description:"The equal is missing between attribute's name and quotes",excerpt:"missing equal character",scope:"html"},"tag-attribute-opening-quotation-mark-missing":{description:"The opening quotation mark is missing",excerpt:"the opening quotation mark is missing",scope:"html"},"tag-attribute-quote-and-onwards-missing":{description:"One of the attributes ends with an equal sign, there are no quotes on it",excerpt:"attributes ends with an equal sign, there are no quotes on it",scope:"html"},"tag-attribute-repeated-equal":{description:"The equal after attribute's name is repeated",excerpt:"repeated equal character",scope:"html"},"tag-attribute-right-double-quotation-mark":{description:"There's a right double quotation mark, https://www.fileformat.info/info/unicode/char/201d/index.htm",excerpt:"a right double quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-right-single-quotation-mark":{description:"There's a right single quotation mark, https://www.fileformat.info/info/unicode/char/2019/index.htm",excerpt:"a right single quotation mark instead of a normal quotation mark",scope:"html"},"tag-attribute-space-between-equals-and-opening-quotes":{description:"There's a space between attribute's equal sign and opening quotes",excerpt:"space between attribute's equal sign and opening quotes",scope:"html"},"tag-attribute-space-between-name-and-equals":{description:"There's a space between attribute's name and equal sign",excerpt:"space between attribute's name and equal sign",scope:"html"},"tag-excessive-whitespace-inside-tag":{description:"There's an excessive whitespace inside the tag",excerpt:"space between attribute's name and equal sign",scope:"html"},"tag-generic-error":{description:"Something is wrong here",excerpt:"something is wrong here",scope:"html"},"tag-missing-closing-bracket":{description:"Tag's closing bracket is missing",excerpt:"missing closing bracket",scope:"html"},"tag-missing-space-before-attribute":{description:"The space before attribute's name is missing",excerpt:"missing space",scope:"html"},"tag-name-lowercase":{description:"Normally all tags are in lowercase",excerpt:"tag name contains uppercase characters",scope:"html"},"tag-space-after-opening-bracket":{description:"Many browsers, including Chrome will not consider this a tag",excerpt:"space between opening bracket and tag name",scope:"html"},"tag-stray-character":{description:"This chunk seems to be astray and can be deleted",excerpt:"delete this",scope:"html"},"tag-stray-quotes":{description:"These quotes can be deleted",excerpt:"delete this",scope:"html"},"tag-whitespace-closing-slash-and-bracket":{description:"There's a whitespace between closing slash and closing bracket",excerpt:"whitespace between slash and closing bracket",scope:"html"}},ze=Array.isArray,Je=["null","start-of-heading","start-of-text","end-of-text","end-of-transmission","enquiry","acknowledge","bell","backspace","character-tabulation","line-feed","line-tabulation","form-feed","carriage-return","shift-out","shift-in","data-link-escape","device-control-one","device-control-two","device-control-three","device-control-four","negative-acknowledge","synchronous-idle","end-of-transmission-block","cancel","end-of-medium","substitute","escape","information-separator-four","information-separator-three","information-separator-two","information-separator-one","space","exclamation-mark"],We=["delete","padding","high-octet-preset","break-permitted-here","no-break-here","index","next-line","start-of-selected-area","end-of-selected-area","character-tabulation-set","character-tabulation-with-justification","line-tabulation-set","partial-line-forward","partial-line-backward","reverse-line-feed","single-shift-two","single-shift-three","device-control-string","private-use-1","private-use-2","set-transmit-state","cancel-character","message-waiting","start-of-protected-area","end-of-protected-area","start-of-string","single-graphic-character-introducer","single-character-intro-introducer","control-sequence-introducer","string-terminator","operating-system-command","private-message","application-program-command"];function Ke(e){return!"\"'><=".includes(e)}function Ze(e){return function(e){var r=arguments.length>2?arguments[2]:void 0,n=arguments.length>3?arguments[3]:void 0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;"function"==typeof r&&(r=[r]),"function"==typeof n&&(n=[n]),"function"==typeof a&&(a=[a]);for(var i=!1,o=function(t,o){if(n.some(function(r){return r(e[t],t)})){if(!a)return{v:t};i=t}return null!==a&&i&&a.some(function(r){return r(e[t],t)})?{v:i}:r.some(function(r){return r(e[t],t)})||n.some(function(r){return r(e[t],t)})?void 0:{v:!1}},s=0,c=e.length;s<c;s++){var l=o(s);if("object"===t(l))return l.v}}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,Ke,function(e){return"="===e})}function Ye(e){return"\"'`‘’“”".includes(e)}function Xe(e){if("string"!=typeof e||e.length>1)throw new Error("emlint/util/isTagChar(): input is not a single string character!");return!"><=".includes(e)}function et(e){return tt(e)&&e.charCodeAt(0)>96&&e.charCodeAt(0)<123}function tt(e){return"string"==typeof e}function rt(e){return"number"==typeof e}function nt(e){return tt(e)&&1===e.length&&(e.charCodeAt(0)>64&&e.charCodeAt(0)<91||e.charCodeAt(0)>96&&e.charCodeAt(0)<123)}function at(e){return et(e)||":"===e}function it(e,r,n){if("number"!=typeof r){if(null!=r)throw new Error("emlint/util.js/withinTagInnerspace(): second argument is of a type ".concat(t(r)));r=0}for(var a={at:null,last:!1,precedes:!1,within:!1},i=!0,o=!1,s=!1,c=!1,l=!1,u=!1,p=!1,d=!1,h=!1,f=!1,g=!1,m=!1,b=!1,w=!1,y=!1,v=!1,q=!1,x=!1,A=r,S=e.length;A<S;A++){e[A].charCodeAt(0);if(e[A].trim().length||a.last&&(a.precedes=!0),e[A],e[A],e[A],Ye(e[A])?(null===a.at?(a.within=!0,a.at=A):e[A]!==e[a.at]&&A!==n||(a.within=!1),a.last=!0):a.last?(a.precedes=!0,a.last=!1):a.precedes=!1,a.at&&!a.within&&a.precedes&&e[A]!==e[a.at]&&(a.at=null),!a.within&&i&&"/"===e[A]&&">".includes(e[je(e,A)]))return!0;if(a.within||!i||">"!==e[A]||u)if(u&&!p&&e[A].trim().length&&!Xe(e[A]))"<"===e[A]?p=!0:u=!1;else if(p&&!d&&e[A].trim().length)at(e[A])||"/"===e[A]?d=!0:(u=!1,p=!1);else if(d&&!h&&e[A].trim().length&&!at(e[A])){if("<>".includes(e[A])||"/"===e[A]&&"<>".includes(je(e,A)))return!0;"='\"".includes(e[A])&&(u=!1,p=!1,d=!1)}else if(!d||h||e[A].trim().length){if(h&&!f&&e[A].trim().length)Ke(e[A])?f=!0:(u=!1,p=!1,d=!1,h=!1);else if(f&&(!e[A].trim().length||"="===e[A]||Ye(e[A])))return!0}else h=!0;else{if(u=!0,!e[A+1]||!je(e,A)||!e.slice(A).includes("'")&&!e.slice(A).includes('"'))return!0;if("<"===e[je(e,A)])return!0}if(a.within||!i||!Ke(e[A])||o||"="===e[Ve(e,A)]&&!Ze(e,A)){if(!s&&o&&e[A].trim().length&&!Ke(e[A]))if("="===e[A])s=!0;else if(">"===e[A]||"/"===e[A]&&">"===e[je(e,A)]){var E=A;if("/"===e[A]&&(E=e[je(e,A)]),!je(e,E))return!0;u=!0,o=!1}else o=!1;else if(!c&&s&&e[A].trim().length)"'\"".includes(e[A])?c=!0:(o=!1,s=!1);else if(c&&Ye(e[A]))e[A]===e[a.at]?l=!0:null!=n&&n===A?tt(e[a.at])&&"\"'".includes(e[a.at])&&"\"'".includes(e[A])?l=!0:tt(e[a.at])&&"‘’".includes(e[a.at])&&"‘’".includes(e[A])?l=!0:tt(e[a.at])&&"“”".includes(e[a.at])&&"“”".includes(e[A])&&(l=!0):null==n&&it(e,null,A)&&(a.within&&(a.within=!1),l=!0);else if(l&&!a.within&&e[A].trim().length&&"/"!==e[A]){if(">"===e[A])return!0;if(Ke(e[A]))return!0}}else o=!0;if(a.within||!i||g||!Ke(e[A])||"="===e[Ve(e,A)]&&!Ze(e,A)){if(g&&e[A].trim().length&&(!Ke(e[A])||"/"===e[A])){if("/"===e[A]&&">"===e[je(e,A)])return!0;g=!1}}else g=!0;if(i&&!a.within&&!m&&e[A].trim().length&&Ke(e[A])?m=!0:m&&!b&&e[A].trim().length&&!Ke(e[A])?"="===e[A]?b=!0:m=!1:b&&!w&&e[A].trim().length?">"===e[A]?w=!0:(m=!1,b=!1):w&&e[A].trim().length&&!Xe(e[A])&&("<"===e[A]?p=!0:(m=!1,b=!1,w=!1)),a.within||y||!Ke(e[A])&&e[A].trim().length||Ke(e[A-1])||"="===e[A-1]||(y=!0),a.within||!y||v||!e[A].trim().length||Ke(e[A])){if(!q&&v&&e[A].trim().length)Ye(e[A])?q=!0:(y=!1,v=!1);else if(q&&Ye(e[A])){if(e[A]===e[a.at])return!0;if(e[A+1]&&"/>".includes(e[je(e,A)]))return!0}}else"="===e[A]?v=!0:y=!1;if(i&&e[A].trim().length&&Ke(e[A])&&!x&&(x=!0),x&&!e[A].trim().length&&e[A+1]&&Ke(e[A+1])&&(x=!1),!a.within&&e[A].trim().length&&!Ke(e[A])&&x){if("="===e[A])return!0;x=!1}i&&e[A].trim().length&&(i=!1)}return!1}function ot(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=t?e.slice(t):e,n=!1;return/^<\s*\w+\s*\/?\s*>/g.test(r)?n=!0:/^<\s*\w+\s+\w+\s*=\s*['"]/g.test(r)?n=!0:/^<\s*\/?\s*\w+\s*\/?\s*>/g.test(r)?n=!0:/^<\s*\w+(?:\s*\w+)*\s*\w+=['"]/g.test(r)&&(n=!0),tt(e)&&t<e.length&&n}var st=Array.isArray,ct=function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=t[r];if("'"!==a&&'"'!==a)throw new Error("1 emlint/util/attributeOnTheRight(): first character is not a single/double quote!\nstartingQuoteVal = ".concat(JSON.stringify(a,null,0),"\nstr = ").concat(JSON.stringify(t,null,4),"\nidx = ").concat(JSON.stringify(r,null,0)));for(var i=!1,o=null,s=null,c=null,l=null,u=r,p=t.length;u<p;u++){if(t[u].charCodeAt(0),(u===n&&u>r||null===n&&u>r&&t[u]===a)&&(n=u,i||(i=!0)),">"===t[u]&&(o=u),"<"===t[u]&&(s=u),"="===t[u]&&(l=u),"'"!==t[u]&&'"'!==t[u]||(c=u),"="===t[u]&&("'"===t[u+1]||'"'===t[u+1]))if(i){if(!o||o<n)return n}else{if(n)return!1;if(0!==c&&t[u+1]!==c&&e(t,r,c))return c;if(e(t,u+1))return!1}if(i&&o&&o>i)return n;if(i&&null===o&&null===s&&(null===c||c&&n>=c)&&null===l)return n;t[u+1]}if(c&&null===n&&e(t,r,c))return c;return!1},lt=it,ut=et,pt=function(e){return"string"==typeof e&&e.length&&1!==e.length?e[e.length-2]:""},dt=function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=null,n=null,a="\"'".includes(e[t])?e[t]:null,i=null,o=t,s=e.length;o<s;o++){var c=e[o].charCodeAt(0);if(34===c||39===c){if(e[o]===a&&o>t)return o;if(r=o,n=o,o>t&&("'"===e[o]||'"'===e[o])&&it(e,o+1))return o;if(ot(e,o+1))return o}else if(e[o].trim().length)if(">"===e[o]){if(i=o,null!==r&&it(e,o))return r===t?r+1:r}else if("="===e[o]){var l=je(e,o);if(l&&Ye(e[l])){if(n&&it(e,n+1))return n+1;if(!n){for(var u=void 0,p=e[o-1].trim().length?o-1:Ve(e,o);p--;)if(!e[p].trim().length){u=Ve(e,p)+1;break}return u}}else if(e[o+1].trim().length){for(var d=void 0,h=o;h--;)if(!e[h].trim().length){d=Ve(e,h);break}return Ye(d)?d:d+1}}else if("/"!==e[o]){if("<"===e[o]&&ot(e,o)&&null!==i)return i;null!==r&&(r=null)}}return null},ht=ot,ft=Ye,gt=function(e,t){return"<"===e[t]?{name:"bad-character-unencoded-opening-bracket",position:[[t,t+1,"&lt;"]]}:">"===e[t]?{name:"bad-character-unencoded-closing-bracket",position:[[t,t+1,"&gt;"]]}:'"'===e[t]?{name:"bad-character-unencoded-double-quotes",position:[[t,t+1,"&quot;"]]}:"`"===e[t]?{name:"bad-character-grave-accent",position:[[t,t+1,"&#x60;"]]}:"£"===e[t]?{name:"bad-character-unencoded-pound",position:[[t,t+1,"&pound;"]]}:"€"===e[t]?{name:"bad-character-unencoded-euro",position:[[t,t+1,"&euro;"]]}:"¢"===e[t]?{name:"bad-character-unencoded-cent",position:[[t,t+1,"&cent;"]]}:null},mt=function(e,t,r){if(rt(t.startAt)&&rt(t.endAt)){var n=e.slice(t.startAt,t.endAt).match(/\(/g),a=e.slice(t.startAt,t.endAt).match(/\)/g);(ze(n)&&ze(a)&&n.length!==a.length||ze(n)&&!ze(a)||!ze(n)&&ze(a))&&(ze(n)&&ze(a)&&n.length>a.length||ze(n)&&n.length&&!ze(a)?r({name:"esp-more-opening-parentheses-than-closing",position:[[t.startAt,t.endAt]]}):(ze(n)&&ze(a)&&n.length<a.length||ze(a)&&a.length&&!ze(n))&&r({name:"esp-more-closing-parentheses-than-opening",position:[[t.startAt,t.endAt]]}))}},bt=function(e){return"string"==typeof e&&e.length?e[e.length-1]:""},wt=tt,yt=function(e){if(tt(e)&&e.length)return e.replace(/\{/g,"}").replace(/\(/g,")")};e.lint=function(e,i){if(!wt(e))throw new Error("emlint: [THROW_ID_01] the first input argument must be a string. It was given as:\n".concat(JSON.stringify(e,null,4)," (type ").concat(t(e),")"));var o,s,c={rules:{},style:{line_endings_CR_LF_CRLF:null}};if(i){if(!g(i))throw new Error("emlint: [THROW_ID_02] the second input argument must be a plain object. It was given as:\n".concat(JSON.stringify(i,null,4)," (type ").concat(t(i),")"));if(Te(o=Object.assign({},c,i),c,{enforceStrictKeyset:!0,msg:"emlint: [THROW_ID_03*]",ignorePaths:"rules.*",schema:{rules:["string","object","false","null","undefined"],style:["object","null","undefined"],"style.line_endings_CR_LF_CRLF":["string","null","undefined"]}}),o.style&&wt(o.style.line_endings_CR_LF_CRLF))if("cr"===o.style.line_endings_CR_LF_CRLF.toLowerCase())"CR"!==o.style.line_endings_CR_LF_CRLF&&o.style.line_endings_CR_LF_CRLF;else if("lf"===o.style.line_endings_CR_LF_CRLF.toLowerCase())"LF"!==o.style.line_endings_CR_LF_CRLF&&o.style.line_endings_CR_LF_CRLF;else{if("crlf"!==o.style.line_endings_CR_LF_CRLF.toLowerCase())throw new Error('emlint: [THROW_ID_04] opts.style.line_endings_CR_LF_CRLF should be either falsey or string "CR" or "LF" or "CRLF". It was given as:\n'.concat(JSON.stringify(o.style.line_endings_CR_LF_CRLF,null,4)," (type is string)"));"CRLF"!==o.style.line_endings_CR_LF_CRLF&&o.style.line_endings_CR_LF_CRLF}}else o=L(c);o.style&&wt(o.style.line_endings_CR_LF_CRLF)&&(s="cr"===o.style.line_endings_CR_LF_CRLF.toLowerCase()?"\r":"crlf"===o.style.line_endings_CR_LF_CRLF.toLowerCase()?"\r\n":"\n");var l,u,p=null,d=null,h=null,f={tagStartAt:null,tagEndAt:null,tagNameStartAt:null,tagNameEndAt:null,tagName:null,recognised:null,closing:null,pureHTML:!0,attributes:[],esp:[]};function m(){l=L(f)}m();var b,w={attrStartAt:null,attrEndAt:null,attrNameStartAt:null,attrNameEndAt:null,attrName:null,attrValue:null,attrValueStartAt:null,attrValueEndAt:null,attrEqualAt:null,attrOpeningQuote:{pos:null,val:null},attrClosingQuote:{pos:null,val:null},recognised:null,pureHTML:!0};function y(){u=L(w)}y();var v={headStartAt:null,headEndAt:null,headVal:null,tailStartAt:null,tailEndAt:null,tailVal:null,startAt:null,endAt:null,recognised:null,type:null};function q(){b=L(v)}q();var x,A={startAt:null,includesLinebreaks:!1,lastLinebreakAt:null};function S(){x=L(A)}S();var E=[],k=[],T={issues:[],applicableRules:{}},_=["nbsp"];function N(e,t){"raw"!==t&&"tag"!==t&&(T.applicableRules[e.name]=!0),o.rules.hasOwnProperty(e.name)&&!o.rules[e.name]||("raw"===t?k.push(e):"tag"===t?E.push(e):T.issues.push(e))}function C(e,t){N({name:"bad-character-unencoded-opening-bracket",position:[[e,t,"&lt;"]]},"raw")}Object.keys(Qe).concat(Object.keys(He)).sort().forEach(function(e){T.applicableRules[e]=!1});var R={cr:[],lf:[],crlf:[]},D=null,O=null;0===e.length&&N({name:"file-empty",position:[[0,0]]});for(var j=function(t,i){null!==b.headVal&&t===b.headEndAt&&null===p&&(p=!0,d="esp");var c,f,w=e[t].charCodeAt(0);if(p&&!0!==p&&t>=p&&(p=null,d=null),e[t+4]&&"c"===e[t].toLowerCase()&&Pe(e,t,{i:!0},"d*","a*","t*","a*","[?*","]?","[?*")&&("<![".includes(e[Ve(e,t)])||e[t-1]&&!"<![".includes(e[t-1])&&"["===e[t-2]&&"!"===e[t-3]&&"<"===e[t-4]&&(!e[t-5]||e[t-5].trim().length&&!"<![".includes(e[t-5]))||e[t-1]&&!"<![".includes(e[t-1])&&"!"===e[t-2]&&"<"===e[t-3]&&(!e[t-4]||e[t-4].trim().length&&!"<![".includes(e[t-4])))&&null===Ie(e,t,"&","l","t",";","!","[")){var v=je(e,Pe(e,t,{i:!0},"d*","a*","t*","a*","[?*","]?","[?*").rightmostChar)-1,A=Be(e,t,"<?*","!?*","[?*","]?*");return("<![".includes(e[t-1])||"["!==e[t-2]||"!"!==e[t-3]||"<"!==e[t-4]||e[t-5]&&"<![".includes(e[t-5]))&&("["!==e[t-1]||"<![".includes(e[t-2])||"!"!==e[t-3]||"<"!==e[t-4]||e[t-5]&&"<![".includes(e[t-5]))&&("["!==e[t-1]||"!"!==e[t-2]||"<![".includes(e[t-3])||"<"!==e[t-4]||e[t-5]&&"<![".includes(e[t-5]))?("<![".includes(e[t-1])||"!"!==e[t-2]||"<"!==e[t-3]||e[t-4]&&"<![".includes(e[t-4]))&&("["!==e[t-1]||"<![".includes(e[t-2])||"<"!==e[t-3]||e[t-4]&&"<![".includes(e[t-4]))||(A=Math.min(A,t-3)):A=Math.min(A,t-4),"<![CDATA["!==e.slice(A,v+1)&&N({name:"bad-cdata-tag-malformed",position:[[A,v+1,"<![CDATA["]]}),p=!0,d="cdata",k.length&&(k.forEach(function(e){e.position[0][0]<A&&N(e)}),k=[]),V=t=v,"continue"}if(!0===p&&"cdata"===d&&"[]".includes(e[t])){var j=function(e,t,...r){if(!r.length||1===r.length&&g(r[0]))return null;const n={mode:0};if(g(r[0])){const a=Object.assign({},n,L(r[0]));if(a.mode){if(Oe(a.mode)&&"0123".includes(a.mode))a.mode=Number.parseInt(a.mode,10);else if(!De(a.mode))throw new Error(`string-left-right/chompRight(): [THROW_ID_02] the opts.mode is wrong! It should be 0, 1, 2 or 3. It was given as ${a.mode} (type ${typeof a.mode})`)}else a.mode=0;return Ue("right",e,t,a,L(r).slice(1))}return Oe(r[0])?Ue("right",e,t,n,L(r)):Ue("right",e,t,n,L(r).slice(1))}(e,t,"[?*","]?*","[?*","]?*",">");"]"===e[t]&&e[t+1]&&e[t+1].trim().length&&!">]".includes(e[t+1])&&"]"===e[t+2]&&">"===e[t+3]||"]"===e[t]&&"]"===e[t+1]&&e[t+2]&&e[t+2].trim().length&&!">]".includes(e[t+2])&&">"===e[t+3]?j=Math.max(j||t+4,t+4):"]"===e[t]&&e[t+1]&&e[t+1].trim().length&&!">]".includes(e[t+1])&&">"===e[t+2]&&(j=Math.max(j||t+3,t+3)),j&&("]]>"!==e.slice(t,j)&&N({name:"bad-cdata-tag-malformed",position:[[t,j,"]]>"]]}),p=t+3)}if((null===p||null!==p&&"script tag"!==d||"script tag"===d&&("\\"!==e[t-1]||"\\"===e[t-2]))&&(null===D&&"\"'`".includes(e[t])?D=t:null===D||e[D]!==e[t]||O&&O!==t||(D=null,O=null)),O&&O===t&&(D=null,O=null),null!==h&&(e[t].trim().length&&!ut(e[t])||!e[t+1])){var F,I=e.slice(h,e[t+1]?t:t+1),P=e[Ve(e,h)];"&"!==P&&";"!==e[t]||("&"!==P&&a.hasOwnProperty(bt(I))&&a[bt(I)].hasOwnProperty(pt(I))&&a[bt(I)][pt(I)].some(function(e){if(I.endsWith(e))return F=e,V=t,!0})?_.includes(F)||N({name:"bad-named-html-entity-malformed-".concat(I),position:[[t-F.length,t-F.length,"&"]]}):";"!==e[t]&&N({name:"bad-named-html-entity-malformed-".concat(I),position:[[e[t+1]?t:t+1,e[t+1]?t:t+1,";"]]})),h=null}if(null===h&&ut(e[t])&&(h=t),p&&"esp"===d&&b.tailStartAt&&null===b.tailEndAt&&!"{}%-$_()*|".includes(e[t+1])&&(p=t+1),p&&"esp"===d&&b.headVal&&null===b.tailStartAt)if(b.recognised&&we(Me[b.headVal].sibling).some(function(n){if(Pe.apply(void 0,[e,t].concat(r(n.split("")))))return c=n,V=t,!0})){var U=Pe.apply(void 0,[e,t].concat(r(c.split(""))));b.tailStartAt=U.leftmostChar,b.tailEndAt=U.rightmostChar+1,b.tailVal=e.slice(b.tailStartAt,b.tailEndAt),b.endAt=b.tailEndAt,p=b.endAt,mt(e,b,N),q()}else yt(b.headVal).includes(e[t])&&("{}%-$_()*|".includes(e[je(e,t)])||b.headVal.includes(e[t])||yt(b.headVal).includes(e[t]))&&(b.tailStartAt=t);if(!(null!==b.headStartAt&&null===b.headEndAt&&t>b.headStartAt&&e[t+1])||e[t+1].trim().length&&"{}%-$_()*|".includes(e[t+1])||b.recognised&&"opening"!==Me[b.headVal].type||"--"!==e.slice(b.headStartAt,t+1)&&(b.headEndAt=t+1,b.headVal=e.slice(b.headStartAt,t+1),b.recognised=Me.hasOwnProperty(b.headVal)),null!==b.startAt||null!==b.headStartAt||!"{}%-$_()*|".includes(e[t])||!e[t+1]||Ie(e,t,"<","!")||p&&!0!==p||("{}%-$_()*|".includes(e[t+1])?(b.headStartAt=t,b.startAt=t,b.type="tag-based"):"$".includes(e[t])&&ut(e[t+1])&&(b.headStartAt=t,b.startAt=t,b.headEndAt=t+1,b.headVal=e[t],b.type="function-based",b.recognised=Me.hasOwnProperty(e[t])),null!==b.headStartAt&&null!==x.startAt&&x.startAt<t-1&&!x.includesLinebreaks&&N({name:"tag-excessive-whitespace-inside-tag",position:[[x.startAt+1,t]]})),!p&&null!==l.tagNameEndAt){if(null===u.attrNameStartAt||null!==u.attrNameEndAt||null!==u.attrName||nt(e[t])||":"===e[t]&&nt(e[t+1])||(u.attrNameEndAt=t,u.attrName=e.slice(u.attrNameStartAt,u.attrNameEndAt),"="!==e[t]&&e[je(e,t)]),null!==u.attrNameEndAt&&null===u.attrEqualAt&&t>=u.attrNameEndAt&&e[t].trim().length){var B;if("'"!==e[t]&&'"'!==e[t]||(B=ct(e,t)),"="===e[t]){if(u.attrEqualAt=t,e[t+1]){var $=je(e,t);if("="===e[$]){var H=t+1,G=$+1;for(p=G,d="repeated equals";H&&G;){N({name:"tag-attribute-repeated-equal",position:[[H,G]]});var M=je(e,G-1);"="===e[M]?(H=G,p=G=M+1,d="already processed equals"):H=null}}}}else B?(N({name:"tag-attribute-missing-equal",position:[[t,t,"="]]}),u.attrEqualAt=t,u.attrValueStartAt=t+1,u.attrValueEndAt=B,u.attrOpeningQuote.pos=t,u.attrOpeningQuote.val=e[t],u.attrClosingQuote.pos=B,u.attrClosingQuote.val=e[B],u.attrValue=e.slice(t+1,B)):(l.attributes.push(L(u)),y());null!==x.startAt&&("="===e[t]?(N({name:"tag-attribute-space-between-name-and-equals",position:[[x.startAt,t]]}),S()):nt(e[t])&&(l.attributes.push(L(u)),y(),null!==x.startAt&&(" "===e[x.startAt]?x.startAt+1<t&&N({name:"tag-excessive-whitespace-inside-tag",position:[[x.startAt+1,t]]}):N({name:"tag-excessive-whitespace-inside-tag",position:[[x.startAt,t," "]]}))))}if(null===u.attrStartAt&&nt(e[t])&&(u.attrStartAt=t,u.attrNameStartAt=t,null!==x.startAt&&x.startAt<t-1&&(" "===e[x.startAt]?N({name:"tag-excessive-whitespace-inside-tag",position:[[x.startAt+1,t]]}):N({name:"tag-excessive-whitespace-inside-tag",position:[[x.startAt,t," "]]})),e[t-1]&&ft(e[t-1])))for(var Q=t-1;Q--;)if(!ft(e[Q])){e[Q].trim().length||N({name:"tag-stray-character",position:[[Q+1,t]]});break}if(null!==u.attrEqualAt&&null===u.attrOpeningQuote.pos)if(u.attrEqualAt<t&&e[t].trim().length){if(34===w||39===w){x.startAt&&x.startAt<t&&N({name:"tag-attribute-space-between-equals-and-opening-quotes",position:[[x.startAt,t]]}),S(),u.attrOpeningQuote.pos=t,u.attrOpeningQuote.val=e[t];var z=dt(e,t);if(z){if(e[z]!==e[t])if("'"===e[z]||'"'===e[z]){var J='"'===e[z];N({name:"tag-attribute-mismatching-quotes-is-".concat(J?"double":"single"),position:[[z,z+1,"".concat(J?"'":'"')]]})}else{var W=e[z-1].trim().length?z:Ve(e,z)+1,K=z;"/"===e[Ve(e,z)]&&((K=Ve(e,z))+1<z&&N({name:"tag-whitespace-closing-slash-and-bracket",position:[[K+1,z]]}),W=Ve(e,K)+1),N({name:"tag-attribute-closing-quotation-mark-missing",position:[[W,K,"".concat(e[t]).concat("")]]})}u.attrClosingQuote.pos=z,u.attrClosingQuote.val=e[t],u.attrValue=e.slice(t+1,z),u.attrValueStartAt=t+1,u.attrValueEndAt=z,u.attrEndAt=z;for(var Z=t+1;Z<z;Z++){var Y=gt(e,Z);Y&&E.push(Y)}return k.length,!u.attrNameStartAt||!e[u.attrNameStartAt-1].trim().length||o.rules&&!1===o.rules["tag-stray-character"]||T.issues.some(function(e){return V=t,("tag-stray-quotes"===e.name||"tag-stray-character"===e.name)&&e.position[0][1]===u.attrNameStartAt})||N({name:"tag-missing-space-before-attribute",position:[[u.attrNameStartAt,u.attrNameStartAt," "]]}),l.attributes.push(L(u)),p=e[z].trim().length?z-(ft(e[z])?0:1)+1:Ve(e,z)+1,d="closing quote looked up",null!==D&&(O=u.attrClosingQuote.pos),y(),t===i-1&&null!==l.tagStartAt&&(null!==u.attrEqualAt&&null!==u.attrOpeningQuote.pos||l.attributes.some(function(e){return null!==e.attrEqualAt&&null!==e.attrOpeningQuote.pos}))&&N({name:"tag-missing-closing-bracket",position:[[t+1,t+1,">"]]}),V=t,"continue"}}else if(8220===w||8221===w)u.attrOpeningQuote.pos=t,u.attrOpeningQuote.val='"',N({name:8220===w?"tag-attribute-left-double-quotation-mark":"tag-attribute-right-double-quotation-mark",position:[[t,t+1,'"']]}),u.attrValueStartAt=t+1,D=t;else{if(8216!==w&&8217!==w){if(lt(e,t)){var X=u.attrStartAt,ee=je(e,t);if("/"===e[t]&&ee&&">"===e[ee]||">"===e[t])for(var te=u.attrStartAt;te--;)if(e[te].trim().length){X=te+1;break}return N({name:"tag-attribute-quote-and-onwards-missing",position:[[X,t]]}),S(),y(),V=--t,"continue"}var re=dt(e,t),ne=ft(e[re])?e[re]:'"';N({name:"tag-attribute-opening-quotation-mark-missing",position:[[Ve(e,t)+1,t,ne]]}),u.attrOpeningQuote={pos:t,val:ne},u.attrValueStartAt=t,D=t;for(var ae,ie=null,oe=t;oe<i;oe++){if(">"===e[oe]&&("/"!==e[Ve(e,oe)]&&lt(e,oe)||"/"===e[Ve(e,oe)])){var se=Ve(e,oe);ie=oe,"/"===e[se]&&(ie=se)}if(null!==ie&&"=<".includes(e[oe]))break}var ce,le=ie;if((ae=t<ie?e.slice(t,ie):"").includes("=")){var ue=ae.split("=")[0];if(ue.split("").some(function(e){return!e.trim().length})){for(var pe=t+ue.length;pe--;){if(!e[pe].trim().length){ce=pe+1;break}if(pe===t)break}var de=Ve(e,ce);ft(de)||(le=de+1)}}for(var he=null,fe=null,ge=null,me=!1,be=le;be--&&"="!==e[be];be>t)if(null===he&&e[be].trim().length&&(he=be+1,me&&(ge=he,me=!1)),!e[be].trim().length&&he){if(fe=be+1,"="===e[je(e,he)]){var ye=Ve(e,fe);ft(e[ye])||(ce=je(e,ye+1));break}if(!n.includes(e.slice(fe,he)))break;me=!0,he=null,fe=null}if(!ge&&ce&&(ge=Ve(e,ce)+1),he&&u.attrOpeningQuote&&!ge&&e[Ve(e,he)]!==u.attrOpeningQuote.val&&(ge=he),ge?(N({name:"tag-attribute-closing-quotation-mark-missing",position:[[ge,ge,u.attrOpeningQuote.val]]}),u.attrClosingQuote.pos=ge,u.attrValueEndAt=ge,u.attrEndAt=ge+1):(u.attrClosingQuote.pos=Ve(e,he),u.attrValueEndAt=u.attrClosingQuote.pos,u.attrEndAt=he),u.attrClosingQuote.val=u.attrOpeningQuote.val,u.attrValue=e.slice(u.attrOpeningQuote.pos,u.attrClosingQuote.pos),u.attrValueStartAt<u.attrValueEndAt)for(var ve=u.attrValueStartAt;ve<u.attrValueEndAt;ve++){var qe=gt(e,ve);qe&&N(qe)}return p||(p=u.attrClosingQuote.pos,d="missing opening quotes",x.startAt=null),l.attributes.push(L(u)),y(),V=t,"continue"}u.attrOpeningQuote.pos=t,u.attrOpeningQuote.val="'",N({name:8216===w?"tag-attribute-left-single-quotation-mark":"tag-attribute-right-single-quotation-mark",position:[[t,t+1,"'"]]}),u.attrValueStartAt=t+1,D=t}null!==x.startAt&&("'"===e[t]||'"'===e[t]?N({name:"tag-attribute-space-between-equals-and-opening-quotes",position:[[x.startAt,t]]}):lt(e,t+1)&&(N({name:"tag-attribute-quote-and-onwards-missing",position:[[u.attrStartAt,t]]}),y()))}else if(!e[t+1]||!je(e,t))return N({name:"file-missing-ending",position:[[t+1,t+1]]}),V=t,"continue";if(null!==u.attrEqualAt&&null!==u.attrOpeningQuote.pos&&(null===u.attrClosingQuote.pos||t===u.attrClosingQuote.pos)&&t>u.attrOpeningQuote.pos&&ft(e[t]))if(34===w||39===w){var xe="tag-attribute-mismatching-quotes-is-".concat(34===w?"double":"single");e[t]===u.attrOpeningQuote.val||T.issues.length&&T.issues.some(function(e){return V=t,e.name===xe&&1===e.position.length&&e.position[0][0]===t&&e.position[0][1]===t+1})||N({name:xe,position:[[t,t+1,"".concat(34===w?"'":'"')]]}),u.attrClosingQuote.pos=t,u.attrClosingQuote.val=e[t],null===u.attrValue&&(u.attrOpeningQuote.pos&&u.attrClosingQuote.pos&&u.attrOpeningQuote.pos+1<u.attrClosingQuote.pos?u.attrValue=e.slice(u.attrValueStartAt,t):u.attrValue=""),u.attrEndAt=t,u.attrValueEndAt=t,D&&(D=null),l.attributes.push(L(u)),y()}else!wt(u.attrOpeningQuote.val)||8220!==w&&8221!==w?!wt(u.attrOpeningQuote.val)||8216!==w&&8217!==w||(null===je(e,t)||">"!==e[je(e,t)]&&"/"!==e[je(e,t)])&&!lt(e,t+1)||(N({name:8216===w?"tag-attribute-left-single-quotation-mark":"tag-attribute-right-single-quotation-mark",position:[[t,t+1,"'"]]}),u.attrEndAt=t,u.attrClosingQuote.pos=t,u.attrClosingQuote.val="'",D=null,O=null,l.attributes.push(L(u)),y()):(N({name:8220===w?"tag-attribute-left-double-quotation-mark":"tag-attribute-right-double-quotation-mark",position:[[t,t+1,'"']]}),u.attrEndAt=t,u.attrClosingQuote.pos=t,u.attrClosingQuote.val='"',l.attributes.push(L(u)),y());u.attrOpeningQuote.val&&u.attrOpeningQuote.pos<t&&null===u.attrClosingQuote.pos&&("/"===e[t]&&je(e,t)&&">"===e[je(e,t)]||">"===e[t])&&(N({name:"tag-attribute-closing-quotation-mark-missing",position:[[t,t,u.attrOpeningQuote.val]]}),u.attrClosingQuote.pos=t,u.attrClosingQuote.val=u.attrOpeningQuote.val,l.attributes.push(L(u)),y())}if(w<32){var Ae="bad-character-".concat(Je[w]);if(9===w)p||N({name:Ae,position:[[t,t+1,"  "]]});else if(13===w)wt(e[t+1])&&10===e[t+1].charCodeAt(0)?(p||(o.style&&o.style.line_endings_CR_LF_CRLF&&"CRLF"!==o.style.line_endings_CR_LF_CRLF?N({name:"file-wrong-type-line-ending-CRLF",position:[[t,t+2,s]]}):R.crlf.push([t,t+2])),null!==b.headStartAt&&N({name:"esp-line-break-within-templating-tag",position:[[t,t+2]]})):(p||(o.style&&o.style.line_endings_CR_LF_CRLF&&"CR"!==o.style.line_endings_CR_LF_CRLF?N({name:"file-wrong-type-line-ending-CR",position:[[t,t+1,s]]}):R.cr.push([t,t+1])),null!==b.headStartAt&&N({name:"esp-line-break-within-templating-tag",position:[[t,t+1]]}));else if(10===w)wt(e[t-1])&&13===e[t-1].charCodeAt(0)||(p||(o.style&&o.style.line_endings_CR_LF_CRLF&&"LF"!==o.style.line_endings_CR_LF_CRLF?N({name:"file-wrong-type-line-ending-LF",position:[[t,t+1,s]]}):R.lf.push([t,t+1])),null!==b.headStartAt&&N({name:"esp-line-break-within-templating-tag",position:[[t,t+1]]}));else if(!p){var Se,Ee=Ve(e,t),ke=je(e,t);if(Ee<t-1&&(ke>t+1||null===ke&&e[t+1]&&"\n"!==e[t+1]&&"\r"!==e[t+1]&&!e[t+1].trim().length)){var Le=e.slice(Ee+1,ke);Se=Le.includes("\n")||Le.includes("\r")?o.style&&o.style.line_endings_CR_LF_CRLF?o.style.line_endings_CR_LF_CRLF:"\n":" "}N(Se?{name:Ae,position:[[Ee+1,ke,Se]]}:{name:Ae,position:[[t,t+1]]})}}else if(!p&&w>126&&w<160)N({name:"bad-character-".concat(We[w-127]),position:[[t,t+1]]});else if(p||38!==w)if(p||60!==w)if(p||62!==w)p||160!==w?p||5760!==w?p||8192!==w?p||8193!==w?p||8194!==w?p||8195!==w?p||8196!==w?p||8197!==w?p||8198!==w?p||8199!==w?p||8200!==w?p||8201!==w?p||8202!==w?p||8203!==w?p||8232!==w?p||8233!==w?p||8239!==w?p||8287!==w?p||12288!==w?!p&&gt(e,t)?N(gt(e,t),"raw"):!p&&w>=888&&w<=8591&&(888===w||889===w||w>=896&&w<=899||907===w||909===w||930===w||1328===w||1367===w||1368===w||1419===w||1419===w||1420===w||1424===w||w>=1480&&w<=1487||w>=1515&&w<=1519||w>=1525&&w<=1535||1565===w||1806===w||1867===w||1868===w||w>=1970&&w<=1983||w>=2043&&w<=2047||2094===w||2095===w||2111===w||2140===w||2141===w||2143===w||w>=2155&&w<=2207||2229===w||w>=2238&&w<=2258||2436===w||2445===w||2446===w||2449===w||2450===w||2473===w||2481===w||2483===w||2484===w||2485===w||2490===w||2491===w||2501===w||2502===w||2505===w||2506===w||w>=2511&&w<=2518||w>=2520&&w<=2523||2526===w||w>=8384&&w<=8399||w>=8433&&w<=8447||8588===w||8589===w||8590===w||8591===w)&&N({name:"bad-character-generic",position:[[t,t+1]]}):N({name:"bad-character-ideographic-space",position:[[t,t+1," "]]}):N({name:"bad-character-medium-mathematical-space",position:[[t,t+1," "]]}):N({name:"bad-character-narrow-no-break-space",position:[[t,t+1," "]]}):N({name:"bad-character-paragraph-separator",position:[[t,t+1,"\n"]]}):N({name:"bad-character-line-separator",position:[[t,t+1,"\n"]]}):N({name:"bad-character-zero-width-space",position:[[t,t+1]]}):N({name:"bad-character-hair-space",position:[[t,t+1," "]]}):N({name:"bad-character-thin-space",position:[[t,t+1," "]]}):N({name:"bad-character-punctuation-space",position:[[t,t+1," "]]}):N({name:"bad-character-figure-space",position:[[t,t+1," "]]}):N({name:"bad-character-six-per-em-space",position:[[t,t+1," "]]}):N({name:"bad-character-four-per-em-space",position:[[t,t+1," "]]}):N({name:"bad-character-three-per-em-space",position:[[t,t+1," "]]}):N({name:"bad-character-em-space",position:[[t,t+1," "]]}):N({name:"bad-character-en-space",position:[[t,t+1," "]]}):N({name:"bad-character-em-quad",position:[[t,t+1," "]]}):N({name:"bad-character-en-quad",position:[[t,t+1," "]]}):N({name:"bad-character-ogham-space-mark",position:[[t,t+1," "]]}):N({name:"bad-character-unencoded-non-breaking-space",position:[[t,t+1,"&nbsp;"]]});else{var Te=Ve(e,t);if("-"===e[Te]){var _e=Ve(e,Te);e[_e]}else N({name:"bad-character-unencoded-closing-bracket",position:[[t,t+1,"&gt;"]]},"raw")}else{var Ne=je(e,t);if(Ne){var Ce=je(e,Ne);if("!"===e[Ne]){Ne>t+1&&"["!==e[je(e,Ne)]&&N({name:"html-comment-spaces",position:[[t+1,Ne]]});var Re=je(e,Ce);if("-"===e[Ce]){Ce>Ne+1&&N({name:"html-comment-spaces",position:[[Ne+1,Ce]]});var Fe=je(e,Re);if("-"===e[Re]&&Re>Ce+1&&N({name:"html-comment-spaces",position:[[Ce+1,Re]]}),"-"===e[Fe]){var $e,He=Fe;do{$e=je(e,He),"-"===e[$e]&&(He=$e)}while("-"===e[$e]);var Qe=je(e,He);N({name:"html-comment-redundant-dash",position:[[Re+1,Qe]]}),p=Qe,d="repeated HTML comment dashes"}}}else"-"===e[Ne]||C(t,t+1)}else C(t,t+1)}else ut(e[je(e,t)])||N({name:"bad-character-unencoded-ampersand",position:[[t,t+1,"&amp;"]]});if(!p&&null!==x.startAt&&e[t].trim().length&&null!==l.tagNameStartAt&&null===u.attrStartAt&&(!u.attrClosingQuote.pos||u.attrClosingQuote.pos<=t)&&(">"===e[t]||"/"===e[t]&&"<>".includes(e[je(e,t)]))){var ze="tag-excessive-whitespace-inside-tag";"/"===e[x.startAt-1]&&(ze="tag-whitespace-closing-slash-and-bracket"),N({name:ze,position:[[x.startAt,t]]})}if(p||e[t].trim().length||null!==x.startAt||(x.startAt=t),(!p&&"\n"===e[t]||"\r"===e[t])&&(null===x.startAt||x.includesLinebreaks||(x.includesLinebreaks=!0),x.lastLinebreakAt=t),!p&&null!==l.tagNameStartAt&&null===l.tagNameEndAt&&!nt(e[t])&&"<"!==e[t]&&"/"!==e[t]&&(l.tagNameEndAt=t,l.tagName=e.slice(l.tagNameStartAt,t),l.recognised=Ge.includes(l.tagName.toLowerCase()),ft(e[t])||"="===e[t])){var Ke,Ze=t+1;if(e[t+1].trim().length)if(ft(e[t+1])||"="===e[t+1]){for(var Ye=t+1;Ye<i;Ye++)if(!ft(e[Ye])&&"="!==e[Ye]){e[Ye].trim().length&&(Ke=!0,Ze=Ye);break}}else Ke=!0;N(Ke?{name:"tag-stray-character",position:[[t,Ze," "]]}:{name:"tag-stray-character",position:[[t,Ze]]})}if(!p&&null!==l.tagStartAt&&null===l.tagNameStartAt&&nt(e[t])&&l.tagStartAt<t&&(l.tagNameStartAt=t,null===l.closing&&(l.closing=!1),l.tagStartAt<t-1&&null!==x.startAt&&E.push({name:"tag-space-after-opening-bracket",position:[[l.tagStartAt+1,t]]})),!p&&null!==l.tagNameStartAt&&null===l.tagNameEndAt&&tt(f=e[t])&&1===f.length&&f.charCodeAt(0)>64&&f.charCodeAt(0)<91&&!e.slice(l.tagNameStartAt).toLowerCase().startsWith("doctype")&&N({name:"tag-name-lowercase",position:[[t,t+1,e[t].toLowerCase()]]}),p||"/"!==e[t]||null===l.tagStartAt||null!==l.tagNameStartAt||null===l.closing&&(l.closing=!0),!p&&"<"===e[t])if(null===l.tagStartAt)l.tagStartAt=t;else if(ht(e,t))if(null!==l.tagStartAt&&l.attributes.length&&l.attributes.some(function(e){return null!==e.attrEqualAt&&null!==e.attrOpeningQuote.pos})){var Xe=Ve(e,t);">"===e[Xe]?l.tagEndAt=Xe+1:N({name:"tag-missing-closing-bracket",position:[[Xe+1,t,">"]]}),k.length&&k.forEach(function(e){e.position[0][0]<l.tagStartAt&&N(e)}),L(l),m(),y(),k=[],l.tagStartAt=t}else k.length&&(k.forEach(function(e){e.position[0][0]<t&&N(e)}),k=[]),E.length&&(E=[]);if(p||62!==w||null===l.tagStartAt||u.attrClosingQuote&&!(u.attrClosingQuote.pos<t)||(E.length&&(E.forEach(function(e){N(e)}),E=[]),k.length&&(k.forEach(function(e){(e.position[0][0]<l.tagStartAt||l.attributes.some(function(r){return V=t,r.attrValueStartAt<e.position[0][0]&&r.attrValueEndAt>e.position[0][0]})&&!T.issues.some(function(r){return V=t,r.position[0][0]===e.position[0][0]&&r.position[0][1]===e.position[0][1]}))&&N(e)}),k=[]),"script"===l.tagName&&(p=!0,d="script tag"),m(),y()),p&&"script tag"===d&&"t"===e[t]&&"p"===e[t-1]&&"i"===e[t-2]&&"r"===e[t-3]&&"c"===e[t-4]&&"s"===e[t-5]&&null===D){var et=je(e,t),rt=Ve(e,t-5);"/"===e[rt]?Ve(e,rt):e[rt],p=et+1}!p&&null!==x.startAt&&e[t].trim().length&&S(),e[t+1]||k.length&&(null!==l.tagStartAt&&l.attributes.some(function(e){return null!==e.attrEqualAt&&null!==e.attrOpeningQuote})?(k.forEach(function(e){e.position[0][0]<l.tagStartAt&&N(e)}),k=[],N({name:"tag-missing-closing-bracket",position:[[x.startAt?x.startAt:t+1,t+1,">"]]})):T.issues.some(function(e){return"file-missing-ending"===e.name})||(k.forEach(function(e){N(e)}),k=[]));var at=L(T);Object.keys(at.applicableRules).forEach(function(e){at.applicableRules[e]||delete at.applicableRules[e]}),V=t},V=0,F=e.length;V<F;V++)j(V,F);o.style&&o.style.line_endings_CR_LF_CRLF||!(R.cr.length&&R.lf.length||R.lf.length&&R.crlf.length||R.cr.length&&R.crlf.length)||(R.cr.length>R.crlf.length&&R.cr.length>R.lf.length?(R.crlf.length&&R.crlf.forEach(function(e){N({name:"file-mixed-line-endings-file-is-CR-mainly",position:[[e[0],e[1],"\r"]]})}),R.lf.length&&R.lf.forEach(function(e){N({name:"file-mixed-line-endings-file-is-CR-mainly",position:[[e[0],e[1],"\r"]]})})):R.lf.length>R.crlf.length&&R.lf.length>R.cr.length?(R.crlf.length&&R.crlf.forEach(function(e){N({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})}),R.cr.length&&R.cr.forEach(function(e){N({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})})):R.crlf.length>R.lf.length&&R.crlf.length>R.cr.length?(R.cr.length&&R.cr.forEach(function(e){N({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})}),R.lf.length&&R.lf.forEach(function(e){N({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})})):R.crlf.length===R.lf.length&&R.lf.length===R.cr.length?(R.crlf.forEach(function(e){N({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})}),R.cr.forEach(function(e){N({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})})):R.cr.length===R.crlf.length&&R.cr.length>R.lf.length?(R.cr.length&&R.cr.forEach(function(e){N({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})}),R.lf.length&&R.lf.forEach(function(e){N({name:"file-mixed-line-endings-file-is-CRLF-mainly",position:[[e[0],e[1],"\r\n"]]})})):(R.lf.length===R.crlf.length&&R.lf.length>R.cr.length||R.cr.length===R.lf.length&&R.cr.length>R.crlf.length)&&(R.cr.length&&R.cr.forEach(function(e){N({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})}),R.crlf.length&&R.crlf.forEach(function(e){N({name:"file-mixed-line-endings-file-is-LF-mainly",position:[[e[0],e[1],"\n"]]})})));var I=function(e,t){function r(e){return!("string"==typeof e&&1===e.length&&e.toUpperCase()!==e.toLowerCase())}if("string"!=typeof e)throw new Error(`string-fix-broken-named-entities: [THROW_ID_01] the first input argument must be string! It was given as:\n${JSON.stringify(e,null,4)} (${typeof e}-type)`);const n={decode:!1,cb:null,progressFn:null};let a;if(null!=t){if(!g(t))throw new Error(`string-fix-broken-named-entities: [THROW_ID_02] the second input argument must be a plain object! I was given as:\n${JSON.stringify(t,null,4)} (${typeof t}-type)`);a=Object.assign({},n,t)}else a=n;if(a.cb&&"function"!=typeof a.cb)throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_03] opts.cb must be a function (or falsey)! Currently it's: ${typeof a.cb}, equal to: ${JSON.stringify(a.cb,null,4)}`);if(a.progressFn&&"function"!=typeof a.progressFn)throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_04] opts.progressFn must be a function (or falsey)! Currently it's: ${typeof a.progressFn}, equal to: ${JSON.stringify(a.progressFn,null,4)}`);let i=!1;const o={nameStartsAt:null,ampersandNecessary:null,patience:2,matchedN:null,matchedB:null,matchedS:null,matchedP:null,matchedSemicol:null};let s=L(o);const c=()=>{s=L(o)},l=[],u=[];let p,d,h,f,m,b;const w=e.length+1;let y=0,v=null;e:for(let t=0;t<w;t++){if(a.progressFn&&(m=Math.floor(y/w*100))!==b&&(b=m,a.progressFn(m)),v){if(!(!0!==v&&t>=v))continue;v=null}if(h=(null!==s.matchedN?1:0)+(null!==s.matchedB?1:0)+(null!==s.matchedS?1:0)+(null!==s.matchedP?1:0),f=[s.matchedN,s.matchedB,s.matchedS,s.matchedP].filter(e=>null!==e),p=Math.min(...f),d=Math.max(...f),null!==s.nameStartsAt&&h>2&&(null!==s.matchedSemicol||!s.ampersandNecessary||r(e[s.nameStartsAt-1])&&r(e[t])||(r(e[s.nameStartsAt-1])||r(e[t]))&&d-p<=4||null!==s.matchedN&&null!==s.matchedB&&null!==s.matchedS&&null!==s.matchedP&&s.matchedN+1===s.matchedB&&s.matchedB+1===s.matchedS&&s.matchedS+1===s.matchedP)&&(!e[t]||null!==s.matchedN&&null!==s.matchedB&&null!==s.matchedS&&null!==s.matchedP&&e[t]!==e[t-1]||"n"!==e[t].toLowerCase()&&"b"!==e[t].toLowerCase()&&"s"!==e[t].toLowerCase()&&"p"!==e[t].toLowerCase()||";"===e[Ve(e,t)])&&";"!==e[t]&&(void 0===e[t+1]||";"!==e[je(e,t)])){if(!1!==s.ampersandNecessary&&"&nbsp;"!==e.slice(s.nameStartsAt,t)||!1===s.ampersandNecessary&&"nbsp;"!==e.slice(Math.min(s.matchedN,s.matchedB,s.matchedS,s.matchedP),t))if(null==s.nameStartsAt||t-s.nameStartsAt!=5||"&nbsp"!==e.slice(s.nameStartsAt,t)||a.decode){const r=Be(e,s.nameStartsAt,"&?","a","m","p",";?"),n=r||s.nameStartsAt;a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-malformed-nbsp",entityName:"nbsp",rangeFrom:n,rangeTo:t,rangeValEncoded:"&nbsp;",rangeValDecoded:" "})),l.push([n,t,a.decode?" ":"&nbsp;"])}else a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"nbsp",rangeFrom:t,rangeTo:t,rangeValEncoded:";",rangeValDecoded:";"})),l.push([t,t,";"]);c()}else if(e[t]&&";"===e[t-1]&&!Ie(e,t-1,"a","m","p")&&";"!==e[t]&&h>0)c();else{if("a"===e[t]){const r=Pe(e,t,"m","p",";");if(r){let n=r.rightmostChar+1;const i=Pe(e,r.rightmostChar,"a","m","p",";");if(i){let t;n=i.rightmostChar+1;do{(t=Pe(e,n-1,"a","m","p",";"))&&(n=t.rightmostChar+1)}while(t)}const o=je(e,n-1);let s;if(e[o]&&$e.some(t=>{if(e.startsWith(`${t};`,o))return s=t,!0})){v=o+s.length+1;const r=Ve(e,t);if("&"===e[r])a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-multiple-encoding",entityName:"amp",rangeFrom:r+1,rangeTo:o,rangeValEncoded:null,rangeValDecoded:null})),l.push([r+1,o]);else if(r){let n=r+1,i="";e[n].trim().length||(" "===e[n]?n++:"\n\r".includes(e[n])?n=t:i=" "),a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-multiple-encoding",entityName:"amp",rangeFrom:n,rangeTo:o,rangeValEncoded:`${i}&`,rangeValDecoded:`${i}&`})),l.push([n,o,`${i}&`])}}}}if("&"===e[t]){if(s.nameStartsAt&&s.nameStartsAt<t&&(s.matchedN||s.matchedB||s.matchedS||s.matchedP)&&c(),null===s.nameStartsAt)null===s.ampersandNecessary&&(s.nameStartsAt=t,s.ampersandNecessary=!1);else if(!s.ampersandNecessary){let r=t+1;const n=je(e,t);if("&"===e[n])for(let t=n;t<w;t++)if(e[t].trim().length&&"&"!==e[t]){r=t,v=t;break}a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-duplicate-ampersand",entityName:"nbsp",rangeFrom:t,rangeTo:r,rangeValEncoded:null,rangeValDecoded:null})),l.push([t,r])}if("a"===e[t+1]&&"n"===e[t+2]&&"g"===e[t+3]){if("s"!==e[t+4]&&";"!==e[t+4]){a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"ang",rangeFrom:t+4,rangeTo:t+4,rangeValEncoded:"&ang;",rangeValDecoded:"∠"})),l.push([t,t+4,a.decode?"∠":"&ang;"]),t+=3;continue e}if("s"===e[t+4]&&"t"===e[t+5]&&";"!==e[t+6]){a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"angst",rangeFrom:t+6,rangeTo:t+6,rangeValEncoded:"&angst;",rangeValDecoded:"Å"})),l.push([t,t+6,a.decode?"Å":"&angst;"]),t+=5;continue e}}else if("p"===e[t+1]&&"i"===e[t+2]){if("v"!==e[t+3]&&";"!==e[t+3]){a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"pi",rangeFrom:t+3,rangeTo:t+3,rangeValEncoded:"&pi;",rangeValDecoded:"π"})),l.push([t,t+3,a.decode?"π":"&pi;"]),t+=3;continue e}if("v"===e[t+3]&&";"!==e[t+4]){a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"piv",rangeFrom:t+4,rangeTo:t+4,rangeValEncoded:"&piv;",rangeValDecoded:"ϖ"})),l.push([t,t+4,a.decode?"ϖ":"&piv;"]),t+=3;continue e}}else{if("P"===e[t+1]&&"i"===e[t+2]&&";"!==e[t+3]){a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"Pi",rangeFrom:t+3,rangeTo:t+3,rangeValEncoded:"&Pi;",rangeValDecoded:"Π"})),l.push([t,t+3,a.decode?"Π":"&Pi;"]),t+=2;continue e}if("s"===e[t+1]){if("i"===e[t+2]&&"g"===e[t+3]&&"m"===e[t+4]&&"a"===e[t+5]&&";"!==e[t+6]&&"f"!==e[t+6]){a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"sigma",rangeFrom:t+6,rangeTo:t+6,rangeValEncoded:"&sigma;",rangeValDecoded:"σ"})),l.push([t,t+6,a.decode?"σ":"&sigma;"]),t+=5;continue e}if("u"===e[t+2]&&"b"===e[t+3]&&";"!==e[t+4]&&"e"!==e[t+4]){a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"sub",rangeFrom:t+4,rangeTo:t+4,rangeValEncoded:"&sub;",rangeValDecoded:"⊂"})),l.push([t,t+4,a.decode?"⊂":"&sub;"]),t+=3;continue e}if("u"===e[t+2]&&"p"===e[t+3]&&"f"!==e[t+4]&&"e"!==e[t+4]&&"1"!==e[t+4]&&"2"!==e[t+4]&&"3"!==e[t+4]&&";"!==e[t+4]){a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"sup",rangeFrom:t+4,rangeTo:t+4,rangeValEncoded:"&sup;",rangeValDecoded:"⊃"})),l.push([t,t+4,a.decode?"⊃":"&sup;"]),t+=3;continue e}}else if("t"===e[t+1]){if("h"===e[t+2]&&"e"===e[t+3]&&"t"===e[t+4]&&"a"===e[t+5]&&"s"!==e[t+6]&&";"!==e[t+6]){a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"theta",rangeFrom:t+6,rangeTo:t+6,rangeValEncoded:"&theta;",rangeValDecoded:"θ"})),l.push([t,t+6,a.decode?"θ":"&theta;"]),t+=5;continue e}if("h"===e[t+2]&&"i"===e[t+3]&&"n"===e[t+4]&&"s"===e[t+5]&&"p"===e[t+6]&&";"!==e[t+7]){a.cb&&u.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"thinsp",rangeFrom:t+7,rangeTo:t+7,rangeValEncoded:"&thinsp;",rangeValDecoded:" "})),l.push([t,t+7,a.decode?" ":"&thinsp;"]),t+=6;continue e}}}}if(e[t]&&"n"===e[t].toLowerCase()){if("i"===e[t-1]&&"s"===e[t+1]){c();continue e}null===s.matchedN&&(s.matchedN=t),null===s.nameStartsAt&&(s.nameStartsAt=t,null!==s.ampersandNecessary||i?!0!==s.ampersandNecessary&&(s.ampersandNecessary=!1):s.ampersandNecessary=!0)}if(e[t]&&"b"===e[t].toLowerCase())if(null!==s.nameStartsAt)null===s.matchedB&&(s.matchedB=t);else{if(!s.patience){c();continue e}s.patience--,s.nameStartsAt=t,s.matchedB=t,null!==s.ampersandNecessary||i?!0!==s.ampersandNecessary&&(s.ampersandNecessary=!1):s.ampersandNecessary=!0}if(e[t]&&"s"===e[t].toLowerCase())if(null!==s.nameStartsAt)null===s.matchedS&&(s.matchedS=t);else{if(!s.patience){c();continue e}s.patience--,s.nameStartsAt=t,s.matchedS=t,null!==s.ampersandNecessary||i?!0!==s.ampersandNecessary&&(s.ampersandNecessary=!1):s.ampersandNecessary=!0}if(e[t]&&"p"===e[t].toLowerCase())if(null!==s.nameStartsAt)null===s.matchedP&&(s.matchedP=t);else{if(!s.patience){c();continue e}s.patience--,s.nameStartsAt=t,s.matchedP=t,null!==s.ampersandNecessary||i?!0!==s.ampersandNecessary&&(s.ampersandNecessary=!1):s.ampersandNecessary=!0}if(";"===e[t]&&null!==s.nameStartsAt&&(s.matchedSemicol=t,(!s.matchedN||s.matchedB||s.matchedS||s.matchedP)&&(s.matchedN||!s.matchedB||s.matchedS||s.matchedP)&&(s.matchedN||s.matchedB||!s.matchedS||s.matchedP)&&(s.matchedN||s.matchedB||s.matchedS||!s.matchedP)||c()),i&&(i=!1,s.nameStartsAt&&(s.matchedN||s.matchedB||s.matchedS||s.matchedP)&&(s.ampersandNecessary=!1)),null!==s.nameStartsAt&&t>s.nameStartsAt&&e[t]&&"n"!==e[t].toLowerCase()&&"b"!==e[t].toLowerCase()&&"s"!==e[t].toLowerCase()&&"p"!==e[t].toLowerCase()&&"&"!==e[t]&&";"!==e[t]&&" "!==e[t]){if(!s.patience){c();continue e}s.patience=s.patience-1}y++}}return l.length?a.cb?u.filter((e,t)=>!l.some((e,r)=>t!==r&&l[t][0]>=e[0]&&l[t][1]<=e[1])):Ce(l,{joinRangesThatTouchEdges:!1}):null}(e,{cb:function(e){return{name:e.ruleName,position:[null!=e.rangeValEncoded?[e.rangeFrom,e.rangeTo,e.rangeValEncoded]:[e.rangeFrom,e.rangeTo]]}}});return st(I)&&I.length&&(T.issues=T.issues.filter(function(e){return"bad-character-unencoded-ampersand"!==e.name||I.every(function(t){return e.position[0][0]!==t.position[0][0]})}).concat(I||[]).filter(function(e){return!o.rules||!1!==o.rules[e.name]})),T.issues.some(function(e){return"bad-character-unencoded-ampersand"===e.name})||(T.applicableRules["bad-character-unencoded-ampersand"]=!1),st(I)&&I.length&&I.forEach(function(e){T.applicableRules[e.name]||(T.applicableRules[e.name]=!0)}),T.fix=st(T.issues)&&T.issues.length?Ce(T.issues.filter(function(e){return!Qe[e.name]||!Qe[e.name].unfixable}).reduce(function(e,t){return e.concat(t.position)},[])):null,T},e.version="1.2.7",Object.defineProperty(e,"__esModule",{value:!0})});
