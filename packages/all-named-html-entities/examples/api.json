{"_quickTake.js":{"title":"Quick Take","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B;\n  allNamedEntities,\n  allNamedEntitiesSetOnly,\n  allNamedEntitiesSetOnlyCaseInsensitive,\n  entStartsWith,\n  entEndsWith,\n  entStartsWithCaseInsensitive,\n  entEndsWithCaseInsensitive,\n  brokenNamedEntities,\n  decode,\n  minLength,\n  maxLength,\n  uncertain,\n&#x7D; from \"all-named-html-entities\";\n\nassert.equal(Object.keys(allNamedEntities).length, 2125);\nassert.equal(entStartsWith.A.E[0], \"AElig\");"},"allNamedEntities.js":{"title":"`allNamedEntities`","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; allNamedEntities &#x7D; from \"all-named-html-entities\";\n\n// total named entities count:\nassert.equal(Object.keys(allNamedEntities).length, 2125);\n\n// show the first-one:\nassert.equal(Object.keys(allNamedEntities).sort()[0], \"AElig\");\n\n// &AElig; decoded:\nassert.equal(allNamedEntities.AElig, \"Ã†\");"},"entEndsWith.js":{"title":"`entEndsWith`","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; entEndsWith &#x7D; from \"all-named-html-entities\";\n\n// here's list of named HTML entities which end with character \"2\":\nassert.deepEqual(entEndsWith[\"2\"], &#x7B;\n  1: [\"blk12\", \"frac12\"],\n  p: [\"sup2\"],\n&#x7D;);\n\n// query directly\nassert.equal(entEndsWith[\"2\"].p[0], \"sup2\");"},"entStartsWith.js":{"title":"`entStartsWith`","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; entStartsWith &#x7D; from \"all-named-html-entities\";\n\n// for perf reasons, they're pre-grouped by first two letters\nassert.deepEqual(entStartsWith.A, &#x7B;\n  a: [\"Aacute\"],\n  b: [\"Abreve\"],\n  c: [\"Acirc\", \"Acy\"],\n  E: [\"AElig\"],\n  f: [\"Afr\"],\n  g: [\"Agrave\"],\n  l: [\"Alpha\"],\n  m: [\"Amacr\"],\n  M: [\"AMP\"],\n  n: [\"And\"],\n  o: [\"Aogon\", \"Aopf\"],\n  p: [\"ApplyFunction\"],\n  r: [\"Aring\"],\n  s: [\"Ascr\", \"Assign\"],\n  t: [\"Atilde\"],\n  u: [\"Auml\"],\n&#x7D;);\n\n// query directly\nassert.equal(entStartsWith.A.E[0], \"AElig\");"},"entStartsWithCaseInsensitive.js":{"title":"`entStartsWithCaseInsensitive`","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; entStartsWithCaseInsensitive &#x7D; from \"all-named-html-entities\";\n\n// case-insensitive \"entStartsWithCaseInsensitive\" is useful\n// when looking for possibly mis-typed entities; emlint uses it\n\n// which entities, lowercased, start with \"j\"?\nassert.deepEqual(entStartsWithCaseInsensitive.j, &#x7B;\n  c: [\"jcirc\", \"jcy\"],\n  f: [\"jfr\"],\n  m: [\"jmath\"],\n  o: [\"jopf\"],\n  s: [\"jscr\", \"jsercy\"],\n  u: [\"jukcy\"],\n&#x7D;);"}}