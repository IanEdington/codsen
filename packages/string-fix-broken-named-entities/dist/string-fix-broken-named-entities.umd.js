/**
 * string-fix-broken-named-entities
 * Finds and fixes common and not so common broken named HTML entities, returns ranges array of fixes
 * Version: 2.0.3
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/string-fix-broken-named-entities
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).stringFixBrokenNamedEntities=t()}(this,function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function t(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var r="[object Object]";var n,o,a=Function.prototype,c=Object.prototype,s=a.toString,i=c.hasOwnProperty,l=s.call(Object),u=c.toString,p=(n=Object.getPrototypeOf,o=Object,function(e){return n(o(e))});var g=function(e){if(!function(e){return!!e&&"object"==typeof e}(e)||u.call(e)!=r||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e))return!1;var t=p(e);if(null===t)return!0;var n=i.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&s.call(n)==l},f=function(e,t){if(t){if("object"!=typeof t)throw new TypeError(String(t)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in t){if("boolean"!=typeof t.includeZero)throw new TypeError(String(t.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(t.includeZero&&0===e)return!0}}return Number.isSafeInteger(e)&&e>=1},m="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function h(e,t){return e(t={exports:{}},t.exports),t.exports}var d=h(function(e,t){(t=e.exports=function(e){return e+t.suffix(+e)}).suffix=function(e){return e%=100,1===Math.floor(e/10)?"th":e%10==1?"st":e%10==2?"nd":e%10==3?"rd":"th"}}),y=(d.suffix,h(function(e,t){var r,n,o,a,c,s,i,l,u,p,g,f,h,d,y,b,w,v,S,N;e.exports=(r="function"==typeof Promise,n="object"==typeof self?self:m,o="undefined"!=typeof Symbol,a="undefined"!=typeof Map,c="undefined"!=typeof Set,s="undefined"!=typeof WeakMap,i="undefined"!=typeof WeakSet,l="undefined"!=typeof DataView,u=o&&void 0!==Symbol.iterator,p=o&&void 0!==Symbol.toStringTag,g=c&&"function"==typeof Set.prototype.entries,f=a&&"function"==typeof Map.prototype.entries,h=g&&Object.getPrototypeOf((new Set).entries()),d=f&&Object.getPrototypeOf((new Map).entries()),y=u&&"function"==typeof Array.prototype[Symbol.iterator],b=y&&Object.getPrototypeOf([][Symbol.iterator]()),w=u&&"function"==typeof String.prototype[Symbol.iterator],v=w&&Object.getPrototypeOf(""[Symbol.iterator]()),S=8,N=-1,function(e){var t=typeof e;if("object"!==t)return t;if(null===e)return"null";if(e===n)return"global";if(Array.isArray(e)&&(!1===p||!(Symbol.toStringTag in e)))return"Array";if("object"==typeof window&&null!==window){if("object"==typeof window.location&&e===window.location)return"Location";if("object"==typeof window.document&&e===window.document)return"Document";if("object"==typeof window.navigator){if("object"==typeof window.navigator.mimeTypes&&e===window.navigator.mimeTypes)return"MimeTypeArray";if("object"==typeof window.navigator.plugins&&e===window.navigator.plugins)return"PluginArray"}if(("function"==typeof window.HTMLElement||"object"==typeof window.HTMLElement)&&e instanceof window.HTMLElement){if("BLOCKQUOTE"===e.tagName)return"HTMLQuoteElement";if("TD"===e.tagName)return"HTMLTableDataCellElement";if("TH"===e.tagName)return"HTMLTableHeaderCellElement"}}var o=p&&e[Symbol.toStringTag];if("string"==typeof o)return o;var u=Object.getPrototypeOf(e);return u===RegExp.prototype?"RegExp":u===Date.prototype?"Date":r&&u===Promise.prototype?"Promise":c&&u===Set.prototype?"Set":a&&u===Map.prototype?"Map":i&&u===WeakSet.prototype?"WeakSet":s&&u===WeakMap.prototype?"WeakMap":l&&u===DataView.prototype?"DataView":a&&u===d?"Map Iterator":c&&u===h?"Set Iterator":y&&u===b?"Array Iterator":w&&u===v?"String Iterator":null===u?"Object":Object.prototype.toString.call(e).slice(S,N)})}));function b(e,t,r){if(t!=t)return function(e,t,r,n){for(var o=e.length,a=r+(n?1:-1);n?a--:++a<o;)if(t(e[a],a,e))return a;return-1}(e,v,r);for(var n=r-1,o=e.length;++n<o;)if(e[n]===t)return n;return-1}function w(e,t,r,n){for(var o=r-1,a=e.length;++o<a;)if(n(e[o],t))return o;return-1}function v(e){return e!=e}var S=Array.prototype.splice;function N(e,t,r,n){var o,a=n?w:b,c=-1,s=t.length,i=e;for(e===t&&(t=function(e,t){var r=-1,n=e.length;t||(t=Array(n));for(;++r<n;)t[r]=e[r];return t}(t)),r&&(i=function(e,t){for(var r=-1,n=e?e.length:0,o=Array(n);++r<n;)o[r]=t(e[r],r,e);return o}(e,(o=r,function(e){return o(e)})));++c<s;)for(var l=0,u=t[c],p=r?r(u):u;(l=a(i,p,l,n))>-1;)i!==e&&S.call(i,l,1),S.call(e,l,1);return e}var E=function(e,t){return e&&e.length&&t&&t.length?N(e,t):e},T=h(function(e,t){var r=200,n="__lodash_hash_undefined__",o=9007199254740991,a="[object Arguments]",c="[object Boolean]",s="[object Date]",i="[object Function]",l="[object GeneratorFunction]",u="[object Map]",p="[object Number]",g="[object Object]",f="[object RegExp]",h="[object Set]",d="[object String]",y="[object Symbol]",b="[object ArrayBuffer]",w="[object DataView]",v="[object Float32Array]",S="[object Float64Array]",N="[object Int8Array]",E="[object Int16Array]",T="[object Int32Array]",q="[object Uint8Array]",A="[object Uint8ClampedArray]",_="[object Uint16Array]",O="[object Uint32Array]",j=/\w*$/,D=/^\[object .+?Constructor\]$/,L=/^(?:0|[1-9]\d*)$/,k={};k[a]=k["[object Array]"]=k[b]=k[w]=k[c]=k[s]=k[v]=k[S]=k[N]=k[E]=k[T]=k[u]=k[p]=k[g]=k[f]=k[h]=k[d]=k[y]=k[q]=k[A]=k[_]=k[O]=!0,k["[object Error]"]=k[i]=k["[object WeakMap]"]=!1;var x="object"==typeof m&&m&&m.Object===Object&&m,V="object"==typeof self&&self&&self.Object===Object&&self,R=x||V||Function("return this")(),P=t&&!t.nodeType&&t,C=P&&e&&!e.nodeType&&e,I=C&&C.exports===P;function $(e,t){return e.set(t[0],t[1]),e}function U(e,t){return e.add(t),e}function B(e,t,r,n){var o=-1,a=e?e.length:0;for(n&&a&&(r=e[++o]);++o<a;)r=t(r,e[o],o,e);return r}function F(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}function H(e){var t=-1,r=Array(e.size);return e.forEach(function(e,n){r[++t]=[n,e]}),r}function M(e,t){return function(r){return e(t(r))}}function J(e){var t=-1,r=Array(e.size);return e.forEach(function(e){r[++t]=e}),r}var G,W=Array.prototype,z=Function.prototype,K=Object.prototype,Z=R["__core-js_shared__"],Y=(G=/[^.]+$/.exec(Z&&Z.keys&&Z.keys.IE_PROTO||""))?"Symbol(src)_1."+G:"",Q=z.toString,X=K.hasOwnProperty,ee=K.toString,te=RegExp("^"+Q.call(X).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),re=I?R.Buffer:void 0,ne=R.Symbol,oe=R.Uint8Array,ae=M(Object.getPrototypeOf,Object),ce=Object.create,se=K.propertyIsEnumerable,ie=W.splice,le=Object.getOwnPropertySymbols,ue=re?re.isBuffer:void 0,pe=M(Object.keys,Object),ge=Ce(R,"DataView"),fe=Ce(R,"Map"),me=Ce(R,"Promise"),he=Ce(R,"Set"),de=Ce(R,"WeakMap"),ye=Ce(Object,"create"),be=Fe(ge),we=Fe(fe),ve=Fe(me),Se=Fe(he),Ne=Fe(de),Ee=ne?ne.prototype:void 0,Te=Ee?Ee.valueOf:void 0;function qe(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Ae(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function _e(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Oe(e){this.__data__=new Ae(e)}function je(e,t){var r=Me(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Je(e)}(e)&&X.call(e,"callee")&&(!se.call(e,"callee")||ee.call(e)==a)}(e)?function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(e.length,String):[],n=r.length,o=!!n;for(var c in e)!t&&!X.call(e,c)||o&&("length"==c||Ue(c,n))||r.push(c);return r}function De(e,t,r){var n=e[t];X.call(e,t)&&He(n,r)&&(void 0!==r||t in e)||(e[t]=r)}function Le(e,t){for(var r=e.length;r--;)if(He(e[r][0],t))return r;return-1}function ke(e,t,r,n,o,m,D){var L;if(n&&(L=m?n(e,o,m,D):n(e)),void 0!==L)return L;if(!ze(e))return e;var x=Me(e);if(x){if(L=function(e){var t=e.length,r=e.constructor(t);t&&"string"==typeof e[0]&&X.call(e,"index")&&(r.index=e.index,r.input=e.input);return r}(e),!t)return function(e,t){var r=-1,n=e.length;t||(t=Array(n));for(;++r<n;)t[r]=e[r];return t}(e,L)}else{var V=$e(e),R=V==i||V==l;if(Ge(e))return function(e,t){if(t)return e.slice();var r=new e.constructor(e.length);return e.copy(r),r}(e,t);if(V==g||V==a||R&&!m){if(F(e))return m?e:{};if(L=function(e){return"function"!=typeof e.constructor||Be(e)?{}:(t=ae(e),ze(t)?ce(t):{});var t}(R?{}:e),!t)return function(e,t){return Re(e,Ie(e),t)}(e,function(e,t){return e&&Re(t,Ke(t),e)}(L,e))}else{if(!k[V])return m?e:{};L=function(e,t,r,n){var o=e.constructor;switch(t){case b:return Ve(e);case c:case s:return new o(+e);case w:return function(e,t){var r=t?Ve(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.byteLength)}(e,n);case v:case S:case N:case E:case T:case q:case A:case _:case O:return function(e,t){var r=t?Ve(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.length)}(e,n);case u:return function(e,t,r){return B(t?r(H(e),!0):H(e),$,new e.constructor)}(e,n,r);case p:case d:return new o(e);case f:return(l=new(i=e).constructor(i.source,j.exec(i))).lastIndex=i.lastIndex,l;case h:return function(e,t,r){return B(t?r(J(e),!0):J(e),U,new e.constructor)}(e,n,r);case y:return a=e,Te?Object(Te.call(a)):{}}var a;var i,l}(e,V,ke,t)}}D||(D=new Oe);var P=D.get(e);if(P)return P;if(D.set(e,L),!x)var C=r?function(e){return function(e,t,r){var n=t(e);return Me(e)?n:function(e,t){for(var r=-1,n=t.length,o=e.length;++r<n;)e[o+r]=t[r];return e}(n,r(e))}(e,Ke,Ie)}(e):Ke(e);return function(e,t){for(var r=-1,n=e?e.length:0;++r<n&&!1!==t(e[r],r,e););}(C||e,function(o,a){C&&(o=e[a=o]),De(L,a,ke(o,t,r,n,a,e,D))}),L}function xe(e){return!(!ze(e)||(t=e,Y&&Y in t))&&(We(e)||F(e)?te:D).test(Fe(e));var t}function Ve(e){var t=new e.constructor(e.byteLength);return new oe(t).set(new oe(e)),t}function Re(e,t,r,n){r||(r={});for(var o=-1,a=t.length;++o<a;){var c=t[o],s=n?n(r[c],e[c],c,r,e):void 0;De(r,c,void 0===s?e[c]:s)}return r}function Pe(e,t){var r,n,o=e.__data__;return("string"==(n=typeof(r=t))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?o["string"==typeof t?"string":"hash"]:o.map}function Ce(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return xe(r)?r:void 0}qe.prototype.clear=function(){this.__data__=ye?ye(null):{}},qe.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},qe.prototype.get=function(e){var t=this.__data__;if(ye){var r=t[e];return r===n?void 0:r}return X.call(t,e)?t[e]:void 0},qe.prototype.has=function(e){var t=this.__data__;return ye?void 0!==t[e]:X.call(t,e)},qe.prototype.set=function(e,t){return this.__data__[e]=ye&&void 0===t?n:t,this},Ae.prototype.clear=function(){this.__data__=[]},Ae.prototype.delete=function(e){var t=this.__data__,r=Le(t,e);return!(r<0||(r==t.length-1?t.pop():ie.call(t,r,1),0))},Ae.prototype.get=function(e){var t=this.__data__,r=Le(t,e);return r<0?void 0:t[r][1]},Ae.prototype.has=function(e){return Le(this.__data__,e)>-1},Ae.prototype.set=function(e,t){var r=this.__data__,n=Le(r,e);return n<0?r.push([e,t]):r[n][1]=t,this},_e.prototype.clear=function(){this.__data__={hash:new qe,map:new(fe||Ae),string:new qe}},_e.prototype.delete=function(e){return Pe(this,e).delete(e)},_e.prototype.get=function(e){return Pe(this,e).get(e)},_e.prototype.has=function(e){return Pe(this,e).has(e)},_e.prototype.set=function(e,t){return Pe(this,e).set(e,t),this},Oe.prototype.clear=function(){this.__data__=new Ae},Oe.prototype.delete=function(e){return this.__data__.delete(e)},Oe.prototype.get=function(e){return this.__data__.get(e)},Oe.prototype.has=function(e){return this.__data__.has(e)},Oe.prototype.set=function(e,t){var n=this.__data__;if(n instanceof Ae){var o=n.__data__;if(!fe||o.length<r-1)return o.push([e,t]),this;n=this.__data__=new _e(o)}return n.set(e,t),this};var Ie=le?M(le,Object):function(){return[]},$e=function(e){return ee.call(e)};function Ue(e,t){return!!(t=null==t?o:t)&&("number"==typeof e||L.test(e))&&e>-1&&e%1==0&&e<t}function Be(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||K)}function Fe(e){if(null!=e){try{return Q.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function He(e,t){return e===t||e!=e&&t!=t}(ge&&$e(new ge(new ArrayBuffer(1)))!=w||fe&&$e(new fe)!=u||me&&"[object Promise]"!=$e(me.resolve())||he&&$e(new he)!=h||de&&"[object WeakMap]"!=$e(new de))&&($e=function(e){var t=ee.call(e),r=t==g?e.constructor:void 0,n=r?Fe(r):void 0;if(n)switch(n){case be:return w;case we:return u;case ve:return"[object Promise]";case Se:return h;case Ne:return"[object WeakMap]"}return t});var Me=Array.isArray;function Je(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=o}(e.length)&&!We(e)}var Ge=ue||function(){return!1};function We(e){var t=ze(e)?ee.call(e):"";return t==i||t==l}function ze(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function Ke(e){return Je(e)?je(e):function(e){if(!Be(e))return pe(e);var t=[];for(var r in Object(e))X.call(e,r)&&"constructor"!=r&&t.push(r);return t}(e)}e.exports=function(e){return ke(e,!0,!0)}});const q=Array.isArray;function A(e){return"string"==typeof e&&e.length>0&&"."===e[0]?e.slice(1):e}function _(e,t){return function e(t,r,n){const o=T(t);let a,c,s,i,l;if((n=Object.assign({depth:-1,path:""},n)).depth+=1,q(o))for(a=0,c=o.length;a<c;a++){const t=`${n.path}.${a}`;void 0!==o[a]?(n.parent=T(o),n.parentType="array",s=e(r(o[a],void 0,Object.assign({},n,{path:A(t)})),r,Object.assign({},n,{path:A(t)})),Number.isNaN(s)&&a<o.length?(o.splice(a,1),a-=1):o[a]=s):o.splice(a,1)}else if(g(o))for(a=0,c=(i=Object.keys(o)).length;a<c;a++){l=i[a];const t=`${n.path}.${l}`;0===n.depth&&null!=l&&(n.topmostKey=l),n.parent=T(o),n.parentType="object",s=e(r(l,o[l],Object.assign({},n,{path:A(t)})),r,Object.assign({},n,{path:A(t)})),Number.isNaN(s)?delete o[l]:o[l]=s}return o}(e,t,{})}var O="__lodash_hash_undefined__",j=9007199254740991,D="[object Function]",L="[object GeneratorFunction]",k=/^\[object .+?Constructor\]$/,x="object"==typeof m&&m&&m.Object===Object&&m,V="object"==typeof self&&self&&self.Object===Object&&self,R=x||V||Function("return this")();function P(e,t){return!!(e?e.length:0)&&function(e,t,r){if(t!=t)return function(e,t,r,n){var o=e.length,a=r+(n?1:-1);for(;n?a--:++a<o;)if(t(e[a],a,e))return a;return-1}(e,$,r);var n=r-1,o=e.length;for(;++n<o;)if(e[n]===t)return n;return-1}(e,t,0)>-1}function C(e,t,r){for(var n=-1,o=e?e.length:0;++n<o;)if(r(t,e[n]))return!0;return!1}function I(e,t){for(var r=-1,n=e?e.length:0,o=Array(n);++r<n;)o[r]=t(e[r],r,e);return o}function $(e){return e!=e}function U(e){return function(t){return e(t)}}function B(e,t){return e.has(t)}var F,H=Array.prototype,M=Function.prototype,J=Object.prototype,G=R["__core-js_shared__"],W=(F=/[^.]+$/.exec(G&&G.keys&&G.keys.IE_PROTO||""))?"Symbol(src)_1."+F:"",z=M.toString,K=J.hasOwnProperty,Z=J.toString,Y=RegExp("^"+z.call(K).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Q=H.splice,X=Math.max,ee=Math.min,te=pe(R,"Map"),re=pe(Object,"create");function ne(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function oe(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function ae(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function ce(e){var t=-1,r=e?e.length:0;for(this.__data__=new ae;++t<r;)this.add(e[t])}function se(e,t){for(var r,n,o=e.length;o--;)if((r=e[o][0])===(n=t)||r!=r&&n!=n)return o;return-1}function ie(e){return!(!fe(e)||(t=e,W&&W in t))&&(ge(e)||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e)?Y:k).test(function(e){if(null!=e){try{return z.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e));var t}function le(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=j}(e.length)&&!ge(e)}(e)}(e)?e:[]}function ue(e,t){var r,n,o=e.__data__;return("string"==(n=typeof(r=t))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?o["string"==typeof t?"string":"hash"]:o.map}function pe(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return ie(r)?r:void 0}function ge(e){var t=fe(e)?Z.call(e):"";return t==D||t==L}function fe(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}ne.prototype.clear=function(){this.__data__=re?re(null):{}},ne.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},ne.prototype.get=function(e){var t=this.__data__;if(re){var r=t[e];return r===O?void 0:r}return K.call(t,e)?t[e]:void 0},ne.prototype.has=function(e){var t=this.__data__;return re?void 0!==t[e]:K.call(t,e)},ne.prototype.set=function(e,t){return this.__data__[e]=re&&void 0===t?O:t,this},oe.prototype.clear=function(){this.__data__=[]},oe.prototype.delete=function(e){var t=this.__data__,r=se(t,e);return!(r<0||(r==t.length-1?t.pop():Q.call(t,r,1),0))},oe.prototype.get=function(e){var t=this.__data__,r=se(t,e);return r<0?void 0:t[r][1]},oe.prototype.has=function(e){return se(this.__data__,e)>-1},oe.prototype.set=function(e,t){var r=this.__data__,n=se(r,e);return n<0?r.push([e,t]):r[n][1]=t,this},ae.prototype.clear=function(){this.__data__={hash:new ne,map:new(te||oe),string:new ne}},ae.prototype.delete=function(e){return ue(this,e).delete(e)},ae.prototype.get=function(e){return ue(this,e).get(e)},ae.prototype.has=function(e){return ue(this,e).has(e)},ae.prototype.set=function(e,t){return ue(this,e).set(e,t),this},ce.prototype.add=ce.prototype.push=function(e){return this.__data__.set(e,O),this},ce.prototype.has=function(e){return this.__data__.has(e)};var me=function(e,t){return t=X(void 0===t?e.length-1:t,0),function(){for(var r=arguments,n=-1,o=X(r.length-t,0),a=Array(o);++n<o;)a[n]=r[t+n];n=-1;for(var c=Array(t+1);++n<t;)c[n]=r[n];return c[t]=a,function(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}(e,this,c)}}(function(e){var t=I(e,le);return t.length&&t[0]===e[0]?function(e,t,r){for(var n=r?C:P,o=e[0].length,a=e.length,c=a,s=Array(a),i=1/0,l=[];c--;){var u=e[c];c&&t&&(u=I(u,U(t))),i=ee(u.length,i),s[c]=!r&&(t||o>=120&&u.length>=120)?new ce(c&&u):void 0}u=e[0];var p=-1,g=s[0];e:for(;++p<o&&l.length<i;){var f=u[p],m=t?t(f):f;if(f=r||0!==f?f:0,!(g?B(g,m):n(l,m,r))){for(c=a;--c;){var h=s[c];if(!(h?B(h,m):n(e[c],m,r)))continue e}g&&g.push(m),l.push(f)}}return l}(t):[]});function he(e){return"string"==typeof e?e.length>0?[e]:[]:e}var de=h(function(e){e.exports=function(){var e=Object.prototype.toString;function t(e,t){return null!=e&&Object.prototype.hasOwnProperty.call(e,t)}function r(e){if(!e)return!0;if(o(e)&&0===e.length)return!0;if("string"!=typeof e){for(var r in e)if(t(e,r))return!1;return!0}return!1}function n(t){return e.call(t)}var o=Array.isArray||function(t){return"[object Array]"===e.call(t)};function a(e){var t=parseInt(e);return t.toString()===e?t:e}function c(e){e=e||{};var c=function(e){return Object.keys(c).reduce(function(t,r){return"create"===r?t:("function"==typeof c[r]&&(t[r]=c[r].bind(c,e)),t)},{})};function s(r,n){return e.includeInheritedProps||"number"==typeof n&&Array.isArray(r)||t(r,n)}function i(e,t){if(s(e,t))return e[t]}function l(e,t,r,n){if("number"==typeof t&&(t=[t]),!t||0===t.length)return e;if("string"==typeof t)return l(e,t.split(".").map(a),r,n);var o=t[0],c=i(e,o);return 1===t.length?(void 0!==c&&n||(e[o]=r),c):(void 0===c&&("number"==typeof t[1]?e[o]=[]:e[o]={}),l(e[o],t.slice(1),r,n))}return c.has=function(r,n){if("number"==typeof n?n=[n]:"string"==typeof n&&(n=n.split(".")),!n||0===n.length)return!!r;for(var c=0;c<n.length;c++){var s=a(n[c]);if(!("number"==typeof s&&o(r)&&s<r.length||(e.includeInheritedProps?s in Object(r):t(r,s))))return!1;r=r[s]}return!0},c.ensureExists=function(e,t,r){return l(e,t,r,!0)},c.set=function(e,t,r,n){return l(e,t,r,n)},c.insert=function(e,t,r,n){var a=c.get(e,t);n=~~n,o(a)||(a=[],c.set(e,t,a)),a.splice(n,0,r)},c.empty=function(e,t){var a,i;if(!r(t)&&null!=e&&(a=c.get(e,t))){if("string"==typeof a)return c.set(e,t,"");if(function(e){return"boolean"==typeof e||"[object Boolean]"===n(e)}(a))return c.set(e,t,!1);if("number"==typeof a)return c.set(e,t,0);if(o(a))a.length=0;else{if(!function(e){return"object"==typeof e&&"[object Object]"===n(e)}(a))return c.set(e,t,null);for(i in a)s(a,i)&&delete a[i]}}},c.push=function(e,t){var r=c.get(e,t);o(r)||(r=[],c.set(e,t,r)),r.push.apply(r,Array.prototype.slice.call(arguments,2))},c.coalesce=function(e,t,r){for(var n,o=0,a=t.length;o<a;o++)if(void 0!==(n=c.get(e,t[o])))return n;return r},c.get=function(e,t,r){if("number"==typeof t&&(t=[t]),!t||0===t.length)return e;if(null==e)return r;if("string"==typeof t)return c.get(e,t.split("."),r);var n=a(t[0]),o=i(e,n);return void 0===o?r:1===t.length?o:c.get(e[n],t.slice(1),r)},c.del=function(e,t){if("number"==typeof t&&(t=[t]),null==e)return e;if(r(t))return e;if("string"==typeof t)return c.del(e,t.split("."));var n=a(t[0]);return s(e,n)?1!==t.length?c.del(e[n],t.slice(1)):(o(e)?e.splice(n,1):delete e[n],e):e},c}var s=c();return s.create=c,s.withInheritedProps=c({includeInheritedProps:!0}),s}()}),ye=function(e){var t=e%100;if(t>=10&&t<=20)return"th";var r=e%10;return 1===r?"st":2===r?"nd":3===r?"rd":"th"};function be(e){if("number"!=typeof e)throw new TypeError("Expected Number, got "+typeof e+" "+e);return e+ye(e)}be.indicator=ye;var we=be,ve=/[|\\{}()[\]^$+*?.]/g,Se=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(ve,"\\$&")};const Ne=new Map;function Ee(e,t){const r=Object.assign({caseSensitive:!1},t),n=e+JSON.stringify(r);if(Ne.has(n))return Ne.get(n);const o="!"===e[0];o&&(e=e.slice(1)),e=Se(e).replace(/\\\*/g,".*");const a=new RegExp(`^${e}$`,r.caseSensitive?"":"i");return a.negated=o,Ne.set(n,a),a}var Te=(e,t,r)=>{if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError(`Expected two arrays, got ${typeof e} ${typeof t}`);if(0===t.length)return e;const n="!"===t[0][0];t=t.map(e=>Ee(e,r));const o=[];for(const r of e){let e=n;for(const n of t)n.test(r)&&(e=!n.negated);e&&o.push(r)}return o};function qe(e,t,r){return function e(t,r,n,o=!0){const a=Object.prototype.hasOwnProperty;function c(e){return null!=e}function s(e){return"Object"===y(e)}function i(e,t){return t=he(t),Array.from(e).filter(e=>!t.some(t=>Te.isMatch(e,t,{caseSensitive:!0})))}const l=["any","anything","every","everything","all","whatever","whatevs"],u=Array.isArray;if(!c(t))throw new Error("check-types-mini: [THROW_ID_01] First argument is missing!");const p={ignoreKeys:[],ignorePaths:[],acceptArrays:!1,acceptArraysIgnore:[],enforceStrictKeyset:!0,schema:{},msg:"check-types-mini",optsVarName:"opts"};let g;if(g=c(n)&&s(n)?Object.assign({},p,n):Object.assign({},p),c(g.ignoreKeys)&&g.ignoreKeys?g.ignoreKeys=he(g.ignoreKeys):g.ignoreKeys=[],c(g.ignorePaths)&&g.ignorePaths?g.ignorePaths=he(g.ignorePaths):g.ignorePaths=[],c(g.acceptArraysIgnore)&&g.acceptArraysIgnore?g.acceptArraysIgnore=he(g.acceptArraysIgnore):g.acceptArraysIgnore=[],g.msg="string"==typeof g.msg?g.msg.trim():g.msg,":"===g.msg[g.msg.length-1]&&(g.msg=g.msg.slice(0,g.msg.length-1).trim()),g.schema&&(Object.keys(g.schema).forEach(e=>{if(s(g.schema[e])){const t={};_(g.schema[e],(r,n,o)=>{const a=void 0!==n?n:r;return u(a)||s(a)||(t[`${e}.${o.path}`]=a),a}),delete g.schema[e],g.schema=Object.assign(g.schema,t)}}),Object.keys(g.schema).forEach(e=>{u(g.schema[e])||(g.schema[e]=[g.schema[e]]),g.schema[e]=g.schema[e].map(String).map(e=>e.toLowerCase()).map(e=>e.trim())})),c(r)||(r={}),o&&e(g,p,{enforceStrictKeyset:!1},!1),g.enforceStrictKeyset)if(c(g.schema)&&Object.keys(g.schema).length>0){if(0!==i(E(Object.keys(t),Object.keys(r).concat(Object.keys(g.schema))),g.ignoreKeys).length){const e=E(Object.keys(t),Object.keys(r).concat(Object.keys(g.schema)));throw new TypeError(`${g.msg}: ${g.optsVarName}.enforceStrictKeyset is on and the following key${e.length>1?"s":""} ${e.length>1?"are":"is"} not covered by schema and/or reference objects: ${e.join(", ")}`)}}else{if(!(c(r)&&Object.keys(r).length>0))throw new TypeError(`${g.msg}: Both ${g.optsVarName}.schema and reference objects are missing! We don't have anything to match the keys as you requested via opts.enforceStrictKeyset!`);if(0!==i(E(Object.keys(t),Object.keys(r)),g.ignoreKeys).length){const e=E(Object.keys(t),Object.keys(r));throw new TypeError(`${g.msg}: The input object has key${e.length>1?"s":""} which ${e.length>1?"are":"is"} not covered by the reference object: ${e.join(", ")}`)}if(0!==i(E(Object.keys(r),Object.keys(t)),g.ignoreKeys).length){const e=E(Object.keys(r),Object.keys(t));throw new TypeError(`${g.msg}: The reference object has key${e.length>1?"s":""} which ${e.length>1?"are":"is"} not present in the input object: ${e.join(", ")}`)}}const f=[];_(t,(e,n,o)=>{let c=n,i=e;if("array"===o.parentType&&(i=void 0,c=e),u(f)&&f.length&&f.some(e=>o.path.startsWith(e)))return c;if(i&&g.ignoreKeys.some(e=>Te.isMatch(i,e)))return c;if(g.ignorePaths.some(e=>Te.isMatch(o.path,e)))return c;const p=!(!s(c)&&!u(c)&&u(o.parent));let m=!1;s(g.schema)&&a.call(g.schema,de.get(o.path))&&(m=!0);let h=!1;if(s(r)&&de.has(r,de.get(o.path))&&(h=!0),g.enforceStrictKeyset&&p&&!m&&!h)throw new TypeError(`${g.msg}: ${g.optsVarName}.${o.path} is neither covered by reference object (second input argument), nor ${g.optsVarName}.schema! To stop this error, turn off ${g.optsVarName}.enforceStrictKeyset or provide some type reference (2nd argument or ${g.optsVarName}.schema).\n\nDebug info:\n\nobj = ${JSON.stringify(t,null,4)}\n\nref = ${JSON.stringify(r,null,4)}\n\ninnerObj = ${JSON.stringify(o,null,4)}\n\nopts = ${JSON.stringify(g,null,4)}\n\ncurrent = ${JSON.stringify(c,null,4)}\n\n`);if(m){const e=he(g.schema[o.path]).map(String).map(e=>e.toLowerCase());if(de.set(g.schema,o.path,e),me(e,l).length)f.push(o.path);else if(!0!==c&&!1!==c&&!e.includes(y(c).toLowerCase())||(!0===c||!1===c)&&!e.includes(String(c))&&!e.includes("boolean")){if(!u(c)||!g.acceptArrays)throw new TypeError(`${g.msg}: ${g.optsVarName}.${o.path} was customised to ${"string"!==y(c)?'"':""}${JSON.stringify(c,null,0)}${"string"!==y(c)?'"':""} (type: ${y(c).toLowerCase()}) which is not among the allowed types in schema (which is equal to ${JSON.stringify(e,null,0)})`);for(let t=0,r=c.length;t<r;t++)if(!e.includes(y(c[t]).toLowerCase()))throw new TypeError(`${g.msg}: ${g.optsVarName}.${o.path}.${t}, the ${we(t+1)} element (equal to ${JSON.stringify(c[t],null,0)}) is of a type ${y(c[t]).toLowerCase()}, but only the following are allowed by the ${g.optsVarName}.schema: ${e.join(", ")}`)}}else if(h){const t=de.get(r,o.path);if(g.acceptArrays&&u(c)&&!g.acceptArraysIgnore.includes(e)){if(!c.every(t=>y(t).toLowerCase()===y(r[e]).toLowerCase()))throw new TypeError(`${g.msg}: ${g.optsVarName}.${o.path} was customised to be array, but not all of its elements are ${y(r[e]).toLowerCase()}-type`)}else if(y(c)!==y(t))throw new TypeError(`${g.msg}: ${g.optsVarName}.${o.path} was customised to ${"string"===y(c).toLowerCase()?"":'"'}${JSON.stringify(c,null,0)}${"string"===y(c).toLowerCase()?"":'"'} which is not ${y(t).toLowerCase()} but ${y(c).toLowerCase()}`)}return c})}(e,t,r)}Te.isMatch=((e,t,r)=>{const n=Ee(t,r),o=n.test(e);return n.negated?!o:o});const Ae=Array.isArray;function _e(e,t){if(!Ae(e))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(0===e.length)return e;const r={strictlyTwoElementsInRangeArrays:!1,progressFn:null},n=Object.assign({},r,t);let o,a;if(qe(n,r,{msg:"ranges-sort: [THROW_ID_02*]",schema:{progressFn:["function","false","null"]}}),n.strictlyTwoElementsInRangeArrays&&!e.every((e,t)=>2===e.length||(o=t,a=e.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${d(o)} range (${JSON.stringify(e[o],null,4)}) has not two but ${a} elements!`);if(!e.every((e,t)=>!(!f(e[0],{includeZero:!0})||!f(e[1],{includeZero:!0}))||(o=t,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${d(o)} range (${JSON.stringify(e[o],null,4)}) does not consist of only natural numbers!`);const c=e.length*e.length;let s=0;return Array.from(e).sort((e,t)=>(n.progressFn&&(s++,n.progressFn(Math.floor(100*s/c))),e[0]===t[0]?e[1]<t[1]?-1:e[1]>t[1]?1:0:e[0]<t[0]?-1:1))}function Oe(e,t){function r(e){return"string"==typeof e}if(!Array.isArray(e))return e;const n={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let o;if(t){if(!g(t))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(t,null,4)} (type ${typeof t})`);if((o=Object.assign({},n,t)).progressFn&&"function"!=typeof o.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] the second input argument must be a function! It was given of a type: "${typeof o.progressFn}", equal to ${JSON.stringify(o.progressFn,null,4)}`);if(o.mergeType&&1!==o.mergeType&&2!==o.mergeType)if(r(o.mergeType)&&"1"===o.mergeType.trim())o.mergeType=1;else{if(!r(o.mergeType)||"2"!==o.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof o.mergeType}", equal to ${JSON.stringify(o.progressFn,null,4)}`);o.mergeType=2}if("boolean"!=typeof o.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof o.joinRangesThatTouchEdges}", equal to ${JSON.stringify(o.joinRangesThatTouchEdges,null,4)}`)}else o=T(n);const a=T(e).filter(e=>void 0!==e[2]||e[0]!==e[1]);let c,s,i;const l=(c=o.progressFn?_e(a,{progressFn:e=>{(i=Math.floor(e/5))!==s&&(s=i,o.progressFn(i))}}):_e(a)).length-1;for(let e=l;e>0;e--)o.progressFn&&(i=Math.floor(78*(1-e/l))+21)!==s&&i>s&&(s=i,o.progressFn(i)),(c[e][0]<=c[e-1][0]||!o.joinRangesThatTouchEdges&&c[e][0]<c[e-1][1]||o.joinRangesThatTouchEdges&&c[e][0]<=c[e-1][1])&&(c[e-1][0]=Math.min(c[e][0],c[e-1][0]),c[e-1][1]=Math.max(c[e][1],c[e-1][1]),void 0!==c[e][2]&&(c[e-1][0]>=c[e][0]||c[e-1][1]<=c[e][1])&&null!==c[e-1][2]&&(null===c[e][2]&&null!==c[e-1][2]?c[e-1][2]=null:void 0!==c[e-1][2]?2===o.mergeType&&c[e-1][0]===c[e][0]?c[e-1][2]=c[e][2]:c[e-1][2]+=c[e][2]:c[e-1][2]=c[e][2]),c.splice(e,1),e=c.length);return c}var je=["AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Map","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","check","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copy","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","image","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","part","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","prop","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","target","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj"];function De(e,t){if("string"!=typeof e||!e.length)return null;if(t&&"number"==typeof t||(t=0),!e[t+1])return null;if(e[t+1]&&e[t+1].trim().length)return t+1;if(e[t+2]&&e[t+2].trim().length)return t+2;for(let r=t+1,n=e.length;r<n;r++)if(e[r].trim().length)return r;return null}function Le(e,t){if("string"!=typeof e||!e.length)return null;if(t&&"number"==typeof t||(t=0),t<1)return null;if(e[t-1]&&e[t-1].trim().length)return t-1;if(e[t-2]&&e[t-2].trim().length)return t-2;for(let r=t;r--;)if(e[r]&&e[r].trim().length)return r;return null}function ke(e,t,r,n){if("string"!=typeof t||!t.length)return null;if(r&&"number"==typeof r||(r=0),"right"===e&&!t[r+1]||"left"===e&&!t[r-1])return null;let o=r;const a=[];let c,s;for(let r=0,i=n.length;r<i;r++){if(!n[r].length)continue;const i="right"===e?De(t,o):Le(t,o);if("right"===e&&i>o+1?a.push([o+1,i]):"left"===e&&i<o-1&&a.unshift([i+1,o]),t[i]!==n[r])return null;o=i,"right"===e?(void 0===c&&(c=i),s=i):(void 0===s&&(s=i),c=i)}return void 0===c?null:{gaps:a,leftmostChar:c,rightmostChar:s}}function xe(e,t,...r){return r.length?ke("left",e,t,Array.from(r).reverse()):Le(e,t)}function Ve(e,t,...r){return r.length?ke("right",e,t,r):De(e,t)}return function(r,n){function o(e){return!("string"==typeof e&&1===e.length&&e.toUpperCase()!==e.toLowerCase())}if(console.log("015 ".concat("[".concat(33,"m","originalOpts","[",39,"m")," = ",JSON.stringify(n,null,4))),"string"!=typeof r)throw new Error("string-fix-broken-named-entities: [THROW_ID_01] the first input argument must be string! It was given as:\n".concat(JSON.stringify(r,null,4)," (").concat(e(r),"-type)"));var a,c={decode:!1,cb:null,progressFn:null};if(null!=n){if(!g(n))throw new Error("string-fix-broken-named-entities: [THROW_ID_02] the second input argument must be a plain object! I was given as:\n".concat(JSON.stringify(n,null,4)," (").concat(e(n),"-type)"));a=Object.assign({},c,n),console.log("059 new ".concat("[".concat(33,"m","opts","[",39,"m")," = ",JSON.stringify(a,null,4)))}else a=c;if(a.cb&&"function"!=typeof a.cb)throw new TypeError("string-fix-broken-named-entities: [THROW_ID_03] opts.cb must be a function (or falsey)! Currently it's: ".concat(e(a.cb),", equal to: ").concat(JSON.stringify(a.cb,null,4)));if(a.progressFn&&"function"!=typeof a.progressFn)throw new TypeError("string-fix-broken-named-entities: [THROW_ID_04] opts.progressFn must be a function (or falsey)! Currently it's: ".concat(e(a.progressFn),", equal to: ").concat(JSON.stringify(a.progressFn,null,4)));var s,i,l,u,p,f,m=!1,h={nameStartsAt:null,ampersandNecessary:null,patience:2,matchedN:null,matchedB:null,matchedS:null,matchedP:null,matchedSemicol:null},d=T(h),y=function(){d=T(h)},b=[],w=[],v=r.length+1,S=0,N=null;e:for(var E=0;E<v;E++){if(a.progressFn&&(p=Math.floor(S/v*100))!==f&&(f=p,a.progressFn(p)),console.log("[".concat(36,"m","===============================","[",39,"m [",35,"m","str[ ".concat(E," ] = ","[".concat(31,"m",r[E]?""===r[E].trim()?null===r[E]?"null":"\n"===r[E]?"line break":"\t"===r[E]?"tab":" "===r[E]?"space":"???":r[E]:"undefined","[",39,"m")),"[",39,"m [",36,"m","===============================","[",39,"m ",N&&(!0===N||N>E)?"".concat("[".concat(31,"m","██ doNothingUntil until ".concat(N),"[",39,"m")):"")),N){if(!(!0!==N&&E>=N)){console.log("222 continue");continue}N=null,console.log("219 RESET ".concat("[".concat(33,"m","doNothingUntil","[",39,"m")," = null"))}if(l=(null!==d.matchedN?1:0)+(null!==d.matchedB?1:0)+(null!==d.matchedS?1:0)+(null!==d.matchedP?1:0),u=[d.matchedN,d.matchedB,d.matchedS,d.matchedP].filter(function(e){return null!==e}),s=Math.min.apply(Math,t(u)),i=Math.max.apply(Math,t(u)),console.log("246 ".concat("[".concat(33,"m","smallestCharFromTheSetAt","[",39,"m")," = ",JSON.stringify(s,null,4))),console.log("253 ".concat("[".concat(33,"m","largestCharFromTheSetAt","[",39,"m")," = ",JSON.stringify(i,null,4))),null!==d.nameStartsAt&&l>2&&(null!==d.matchedSemicol||!d.ampersandNecessary||o(r[d.nameStartsAt-1])&&o(r[E])||(o(r[d.nameStartsAt-1])||o(r[E]))&&i-s<=4||null!==d.matchedN&&null!==d.matchedB&&null!==d.matchedS&&null!==d.matchedP&&d.matchedN+1===d.matchedB&&d.matchedB+1===d.matchedS&&d.matchedS+1===d.matchedP)&&(!r[E]||null!==d.matchedN&&null!==d.matchedB&&null!==d.matchedS&&null!==d.matchedP&&r[E]!==r[E-1]||"n"!==r[E].toLowerCase()&&"b"!==r[E].toLowerCase()&&"s"!==r[E].toLowerCase()&&"p"!==r[E].toLowerCase()||";"===r[Le(r,E)])&&";"!==r[E]&&(void 0===r[E+1]||";"!==r[De(r,E)]))console.log("296 ".concat("[".concat(90,"m","within nbsp clauses","[",39,"m"))),(!1!==d.ampersandNecessary&&"&nbsp;"!==r.slice(d.nameStartsAt,E)||!1===d.ampersandNecessary&&"nbsp;"!==r.slice(Math.min(d.matchedN,d.matchedB,d.matchedS,d.matchedP),E))&&(console.log("313 ".concat("[".concat(90,"m","catching what's missing in nbsp","[",39,"m"))),null==d.nameStartsAt||E-d.nameStartsAt!=5||"&nbsp"!==r.slice(d.nameStartsAt,E)||a.decode?(console.log("354 it's not just semicolon missing"),console.log("356 ".concat("[".concat(33,"m","nbsp.nameStartsAt","[",39,"m")," = ",JSON.stringify(d.nameStartsAt,null,4))),a.cb&&(console.log("367 push ".concat(JSON.stringify(a.cb({ruleName:"bad-named-html-entity-malformed-nbsp",entityName:"nbsp",rangeFrom:d.nameStartsAt,rangeTo:E,rangeValEncoded:"&nbsp;",rangeValDecoded:" "}),null,4))),w.push(a.cb({ruleName:"bad-named-html-entity-malformed-nbsp",entityName:"nbsp",rangeFrom:d.nameStartsAt,rangeTo:E,rangeValEncoded:"&nbsp;",rangeValDecoded:" "}))),b.push([d.nameStartsAt,E,a.decode?" ":"&nbsp;"]),console.log("399 pushed ".concat(JSON.stringify([d.nameStartsAt,E,a.decode?" ":"&nbsp;"],null,4)))):(console.log("323 ██ only semicol missing!"),a.cb&&(console.log("326 push ".concat(JSON.stringify(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"nbsp",rangeFrom:E,rangeTo:E,rangeValEncoded:";",rangeValDecoded:";"}),null,4))),w.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"nbsp",rangeFrom:E,rangeTo:E,rangeValEncoded:";",rangeValDecoded:";"}))),b.push([E,E,";"]),console.log("352 pushed [".concat(E,", ").concat(E,', ";"]')))),y(),console.log("408 WIPE ".concat("[".concat(33,"m","nbsp","[",39,"m")));else if(console.log("412 \n[".concat(32,"m","███████████████████████████████████████","[",39,"m")),console.log("a1. nbsp.nameStartsAt !== null: ".concat(null!==d.nameStartsAt)),console.log("a2. matchedLettersCount > 2: ".concat(l>2)),console.log("a3. (nbsp.matchedSemicol !== null ||...: ".concat(null!==d.matchedSemicol||!d.ampersandNecessary||o(r[d.nameStartsAt-1])&&o(r[E]))),console.log("a4 (!str[i] ||... :".concat(!r[E]||null!==d.matchedN&&null!==d.matchedB&&null!==d.matchedS&&null!==d.matchedP&&r[E]!==r[E-1]||"n"!==r[E].toLowerCase()&&"b"!==r[E].toLowerCase()&&"s"!==r[E].toLowerCase()&&"p"!==r[E].toLowerCase())),console.log('a5 str[i] !== ";": '.concat(";"!==r[E])),console.log('a6 (str[i + 1] === undefined || str[i + 1] !== ";"): '.concat(void 0===r[E+1]||";"!==r[E+1])),console.log("[".concat(32,"m","███████████████████████████████████████","[",39,"m\n")),r[E]&&";"===r[E-1]&&!xe(r,E-1,"a","m","p")&&";"!==r[E]&&l>0)y(),console.log("455 WIPE ".concat("[".concat(33,"m","nbsp","[",39,"m")));else{if("a"===r[E]){console.log("473 ".concat("[".concat(90,"m","within a clauses","[",39,"m")));var q=Ve(r,E,"m","p",";");q&&function(){console.log("483 ".concat("[".concat(90,"m","confirmed amp; from index ".concat(E," onwards"),"[",39,"m")));var e=q.rightmostChar+1;console.log("490 SET ".concat("[".concat(33,"m","toDeleteAllAmpEndHere","[",39,"m")," = ",e));var t=Ve(r,q.rightmostChar,"a","m","p",";");if(t){var n;console.log("504 ".concat("[".concat(90,"m","confirmed another amp; on the right of index ".concat(q.rightmostChar),"[",39,"m"))),e=t.rightmostChar+1,console.log("511 SET ".concat("[".concat(33,"m","toDeleteAllAmpEndHere","[",39,"m")," = ",e));do{console.log("517 ".concat("[".concat(36,"m","======== loop ========","[",39,"m"))),n=Ve(r,e-1,"a","m","p",";"),console.log("521 ".concat("[".concat(36,"m","temp = ".concat(JSON.stringify(n,null,4)),"[",39,"m"))),n&&(e=n.rightmostChar+1,console.log("531 ".concat("[".concat(36,"m","another amp; confirmed! Now","[",39,"m")," ","[".concat(33,"m","toDeleteAllAmpEndHere","[",39,"m")," = ",JSON.stringify(e,null,4),";")))}while(n);console.log("541 FINAL ".concat("[".concat(32,"m","toDeleteAllAmpEndHere","[",39,"m")," = ",JSON.stringify(e,null,4)))}var o=De(r,e-1);console.log("557 SET initial ".concat("[".concat(33,"m","firstCharThatFollows","[",39,"m")," = ",o));var c=void 0;if(r[o]&&je.some(function(e){if(r.startsWith("".concat(e,";"),o))return c=e,!0})){N=o+c.length+1,console.log("576 ".concat("[".concat(31,"m","██ ACTIVATE doNothingUntil = ".concat(N),"[",39,"m"))),console.log("580 ENTITY ".concat("[".concat(32,"m",c,"[",39,"m")," FOLLOWS"));var s=Le(r,E);if("&"===r[s])console.log("586 ampersand on the left"),a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-multiple-encoding",entityName:"amp",rangeFrom:s+1,rangeTo:o,rangeValEncoded:null,rangeValDecoded:null})),b.push([s+1,o]),console.log("602 PUSH [".concat(33,"m","[".concat(s+1,", ").concat(o,"]"),"[",39,"m"));else if(s){var i=s+1,l="";r[i].trim().length||(" "===r[i]?i++:"\n\r".includes(r[i])?i=E:l=" "),console.log("625 rangeFrom = ".concat(i,"; firstCharThatFollows = ").concat(o)),a.cb&&(console.log("629 push ".concat(JSON.stringify(a.cb({ruleName:"bad-named-html-entity-multiple-encoding",entityName:"amp",rangeFrom:i,rangeTo:o,rangeValEncoded:"".concat(l,"&"),rangeValDecoded:"".concat(l,"&")}),null,4))),w.push(a.cb({ruleName:"bad-named-html-entity-multiple-encoding",entityName:"amp",rangeFrom:i,rangeTo:o,rangeValEncoded:"".concat(l,"&"),rangeValDecoded:"".concat(l,"&")}))),b.push([i,o,"".concat(l,"&")])}}}()}if("&"===r[E]){if(console.log("665 ".concat("[".concat(90,"m","& caught","[",39,"m"))),null===d.nameStartsAt)null===d.ampersandNecessary&&(d.nameStartsAt=E,console.log("676 SET ".concat("[".concat(33,"m","nbsp.nameStartsAt","[",39,"m")," = ",d.nameStartsAt)),d.ampersandNecessary=!1,console.log("682 SET ".concat("[".concat(33,"m","nbsp.ampersandNecessary","[",39,"m")," = ",d.ampersandNecessary)));else if(!d.ampersandNecessary){var A=E+1,_=De(r,E);if("&"===r[_])for(var O=_;O<v;O++)if(r[O].trim().length&&"&"!==r[O]){A=O,N=O;break}a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-duplicate-ampersand",entityName:"nbsp",rangeFrom:E,rangeTo:A,rangeValEncoded:null,rangeValDecoded:null})),b.push([E,A]),console.log("717 PUSH [".concat(33,"m","[".concat(E,", ").concat(A,"]"),"[",39,"m"))}if("a"===r[E+1]&&"n"===r[E+2]&&"g"===r[E+3]){if("s"!==r[E+4]&&";"!==r[E+4]){a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"ang",rangeFrom:E+4,rangeTo:E+4,rangeValEncoded:"&ang;",rangeValDecoded:"∠"})),b.push([E,E+4,a.decode?"∠":"&ang;"]),console.log("740 PUSH [".concat(33,"m","[".concat(E,", ").concat(E+4,', "&ang;"]'),"[",39,"m")),E+=3;continue e}if("s"===r[E+4]&&"t"===r[E+5]&&";"!==r[E+6]){a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"angst",rangeFrom:E+6,rangeTo:E+6,rangeValEncoded:"&angst;",rangeValDecoded:"Å"})),b.push([E,E+6,a.decode?"Å":"&angst;"]),console.log("765 PUSH [".concat(33,"m","[".concat(E,", ").concat(E+6,', "&angst;"]'),"[",39,"m")),E+=5;continue e}}else if("p"===r[E+1]&&"i"===r[E+2]){if("v"!==r[E+3]&&";"!==r[E+3]){a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"pi",rangeFrom:E+3,rangeTo:E+3,rangeValEncoded:"&pi;",rangeValDecoded:"π"})),b.push([E,E+3,a.decode?"π":"&pi;"]),console.log("789 PUSH [".concat(33,"m","[".concat(E,", ").concat(E+3,', "&pi;"]'),"[",39,"m")),E+=3;continue e}if("v"===r[E+3]&&";"!==r[E+4]){a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"piv",rangeFrom:E+4,rangeTo:E+4,rangeValEncoded:"&piv;",rangeValDecoded:"ϖ"})),b.push([E,E+4,a.decode?"ϖ":"&piv;"]),console.log("810 PUSH [".concat(33,"m","[".concat(E,", ").concat(E+4,', "&piv;"]'),"[",39,"m")),E+=3;continue e}}else{if("P"===r[E+1]&&"i"===r[E+2]&&";"!==r[E+3]){a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"Pi",rangeFrom:E+3,rangeTo:E+3,rangeValEncoded:"&Pi;",rangeValDecoded:"Π"})),b.push([E,E+3,a.decode?"Π":"&Pi;"]),console.log("836 PUSH [".concat(33,"m","[".concat(E,", ").concat(E+3,', "&Pi;"]'),"[",39,"m")),E+=2;continue e}if("s"===r[E+1]){if("i"===r[E+2]&&"g"===r[E+3]&&"m"===r[E+4]&&"a"===r[E+5]&&";"!==r[E+6]&&"f"!==r[E+6]){a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"sigma",rangeFrom:E+6,rangeTo:E+6,rangeValEncoded:"&sigma;",rangeValDecoded:"σ"})),b.push([E,E+6,a.decode?"σ":"&sigma;"]),console.log("865 PUSH [".concat(33,"m","[".concat(E,", ").concat(E+6,', "&sigma;"]'),"[",39,"m")),E+=5;continue e}if("u"===r[E+2]&&"b"===r[E+3]&&";"!==r[E+4]&&"e"!==r[E+4]){a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"sub",rangeFrom:E+4,rangeTo:E+4,rangeValEncoded:"&sub;",rangeValDecoded:"⊂"})),b.push([E,E+4,a.decode?"⊂":"&sub;"]),console.log("892 PUSH [".concat(33,"m","[".concat(E,", ").concat(E+4,', "&sub;"]'),"[",39,"m")),E+=3;continue e}if("u"===r[E+2]&&"p"===r[E+3]&&"f"!==r[E+4]&&"e"!==r[E+4]&&"1"!==r[E+4]&&"2"!==r[E+4]&&"3"!==r[E+4]&&";"!==r[E+4]){a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"sup",rangeFrom:E+4,rangeTo:E+4,rangeValEncoded:"&sup;",rangeValDecoded:"⊃"})),b.push([E,E+4,a.decode?"⊃":"&sup;"]),console.log("922 PUSH [".concat(33,"m","[".concat(E,", ").concat(E+4,', "&sup;"]'),"[",39,"m")),E+=3;continue e}}else if("t"===r[E+1]){if("h"===r[E+2]&&"e"===r[E+3]&&"t"===r[E+4]&&"a"===r[E+5]&&"s"!==r[E+6]&&";"!==r[E+6]){a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"theta",rangeFrom:E+6,rangeTo:E+6,rangeValEncoded:"&theta;",rangeValDecoded:"θ"})),b.push([E,E+6,a.decode?"θ":"&theta;"]),console.log("952 PUSH [".concat(33,"m","[".concat(E,", ").concat(E+6,', "&theta;"]'),"[",39,"m")),E+=5;continue e}if("h"===r[E+2]&&"i"===r[E+3]&&"n"===r[E+4]&&"s"===r[E+5]&&"p"===r[E+6]&&";"!==r[E+7]){a.cb&&w.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"thinsp",rangeFrom:E+7,rangeTo:E+7,rangeValEncoded:"&thinsp;",rangeValDecoded:" "})),b.push([E,E+7,a.decode?" ":"&thinsp;"]),console.log("981 PUSH [".concat(33,"m","[".concat(E,", ").concat(E+7,', "&thinsp;"]'),"[",39,"m")),E+=6;continue e}}}}if(r[E]&&"n"===r[E].toLowerCase()){if("i"===r[E-1]&&"s"===r[E+1]){console.log("995 pattern ...ins... detected - bail"),y();continue e}console.log("1001 n caught"),null===d.matchedN&&(d.matchedN=E,console.log("1005 SET ".concat("[".concat(33,"m","nbsp.matchedN","[",39,"m")," = ",d.matchedN))),null===d.nameStartsAt&&(d.nameStartsAt=E,console.log("1014 SET ".concat("[".concat(33,"m","nbsp.nameStartsAt","[",39,"m")," = ",d.nameStartsAt)),null!==d.ampersandNecessary||m?!0!==d.ampersandNecessary&&(d.ampersandNecessary=!1):d.ampersandNecessary=!0,console.log("1027 SET ".concat("[".concat(33,"m","nbsp.ampersandNecessary","[",39,"m")," = ",d.ampersandNecessary)))}if(r[E]&&"b"===r[E].toLowerCase())if(console.log("1036 b caught"),null!==d.nameStartsAt)null===d.matchedB&&(d.matchedB=E,console.log("1042 SET ".concat("[".concat(33,"m","nbsp.matchedB","[",39,"m")," = ",d.matchedB)));else{if(!d.patience){y(),console.log("1088 WIPE ".concat("[".concat(33,"m","nbsp","[",39,"m")));continue e}d.patience--,console.log("1054 MINUSMINUS ".concat("[".concat(33,"m","nbsp.patience","[",39,"m"),", then it's ",d.patience)),d.nameStartsAt=E,console.log("1062 SET ".concat("[".concat(33,"m","nbsp.nameStartsAt","[",39,"m")," = ",d.nameStartsAt)),d.matchedB=E,console.log("1068 SET ".concat("[".concat(33,"m","nbsp.matchedB","[",39,"m")," = true")),null!==d.ampersandNecessary||m?!0!==d.ampersandNecessary&&(d.ampersandNecessary=!1,console.log("1082 SET ".concat("[".concat(33,"m","nbsp.ampersandNecessary","[",39,"m")," = false"))):(d.ampersandNecessary=!0,console.log("1076 SET ".concat("[".concat(33,"m","nbsp.ampersandNecessary","[",39,"m")," = true")))}if(r[E]&&"s"===r[E].toLowerCase())if(console.log("1095 s caught"),null!==d.nameStartsAt)null===d.matchedS&&(d.matchedS=E,console.log("1101 SET ".concat("[".concat(33,"m","nbsp.matchedS","[",39,"m")," = ",d.matchedS)));else{if(!d.patience){y(),console.log("1147 WIPE ".concat("[".concat(33,"m","nbsp","[",39,"m")));continue e}d.patience--,console.log("1113 MINUSMINUS ".concat("[".concat(33,"m","nbsp.patience","[",39,"m"),", then it's ",d.patience)),d.nameStartsAt=E,console.log("1121 SET ".concat("[".concat(33,"m","nbsp.nameStartsAt","[",39,"m")," = ",d.nameStartsAt)),d.matchedS=E,console.log("1127 SET ".concat("[".concat(33,"m","nbsp.matchedS","[",39,"m")," = true")),null!==d.ampersandNecessary||m?!0!==d.ampersandNecessary&&(d.ampersandNecessary=!1,console.log("1141 SET ".concat("[".concat(33,"m","nbsp.ampersandNecessary","[",39,"m")," = false"))):(d.ampersandNecessary=!0,console.log("1135 SET ".concat("[".concat(33,"m","nbsp.ampersandNecessary","[",39,"m")," = true")))}if(r[E]&&"p"===r[E].toLowerCase())if(console.log("1154 p caught"),null!==d.nameStartsAt)null===d.matchedP&&(d.matchedP=E,console.log("1160 SET ".concat("[".concat(33,"m","nbsp.matchedP","[",39,"m")," = ",d.matchedP)));else{if(!d.patience){y(),console.log("1206 WIPE ".concat("[".concat(33,"m","nbsp","[",39,"m")));continue e}d.patience--,console.log("1172 MINUSMINUS ".concat("[".concat(33,"m","nbsp.patience","[",39,"m"),", then it's ",d.patience)),d.nameStartsAt=E,console.log("1180 SET ".concat("[".concat(33,"m","nbsp.nameStartsAt","[",39,"m")," = ",d.nameStartsAt)),d.matchedP=E,console.log("1186 SET ".concat("[".concat(33,"m","nbsp.matchedP","[",39,"m")," = true")),null!==d.ampersandNecessary||m?!0!==d.ampersandNecessary&&(d.ampersandNecessary=!1,console.log("1200 SET ".concat("[".concat(33,"m","nbsp.ampersandNecessary","[",39,"m")," = false"))):(d.ampersandNecessary=!0,console.log("1194 SET ".concat("[".concat(33,"m","nbsp.ampersandNecessary","[",39,"m")," = true")))}if(";"===r[E]&&null!==d.nameStartsAt&&(d.matchedSemicol=E,console.log("1216 SET ".concat("[".concat(33,"m","nbsp.matchedSemicol","[",39,"m")," = ",d.matchedSemicol)),(!d.matchedN||d.matchedB||d.matchedS||d.matchedP)&&(d.matchedN||!d.matchedB||d.matchedS||d.matchedP)&&(d.matchedN||d.matchedB||!d.matchedS||d.matchedP)&&(d.matchedN||d.matchedB||d.matchedS||!d.matchedP)||(y(),console.log("1239 WIPE ".concat("[".concat(33,"m","nbsp","[",39,"m"))))),m&&(m=!1,console.log("1267 SET ".concat("[".concat(33,"m","state_AmpersandNotNeeded","[",39,"m")," = ",JSON.stringify(m,null,4))),d.nameStartsAt&&(d.matchedN||d.matchedB||d.matchedS||d.matchedP)&&(d.ampersandNecessary=!1)),null!==d.nameStartsAt&&E>d.nameStartsAt&&r[E]&&"n"!==r[E].toLowerCase()&&"b"!==r[E].toLowerCase()&&"s"!==r[E].toLowerCase()&&"p"!==r[E].toLowerCase()&&"&"!==r[E]&&";"!==r[E]&&" "!==r[E]){if(!d.patience){y(),console.log("1307 WIPE ".concat("[".concat(33,"m","nbsp","[",39,"m")));continue e}d.patience=d.patience-1,console.log("1304 nbsp.patience--, now equal to: ".concat(d.patience))}console.log("---------------"),console.log("state_AmpersandNotNeeded = ".concat(m)),console.log("".concat("[".concat(33,"m","nbsp","[",39,"m")," = ",JSON.stringify(d,null,4)).concat(b.length?"\n".concat("[".concat(32,"m","rangesArr","[",39,"m")," = ",JSON.stringify(b,null,4)):"")),S++}}return console.log("1360 IN THE END, before merge rangesArr = ".concat(JSON.stringify(b,null,4),";\nrangesArr2 = ").concat(JSON.stringify(w,null,4))),b.length?a.cb?w.filter(function(e,t){return!b.some(function(e,r){return t!==r&&b[t][0]>=e[0]&&b[t][1]<=e[1]&&(console.log("1406 removing ".concat(JSON.stringify(e,null,4))),!0)})}):(console.log("1419 return ".concat(JSON.stringify(Oe(b,{joinRangesThatTouchEdges:!1}),null,4))),Oe(b,{joinRangesThatTouchEdges:!1})):(console.log("1368 ".concat("[".concat(32,"m","RETURN","[",39,"m")," null")),null)}});
