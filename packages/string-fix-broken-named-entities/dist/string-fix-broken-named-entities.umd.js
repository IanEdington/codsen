/**
 * string-fix-broken-named-entities
 * Finds and fixes common and not so common broken named HTML entities, returns ranges array of fixes
 * Version: 2.0.3
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/string-fix-broken-named-entities
 */

!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e=e||self).stringFixBrokenNamedEntities=r()}(this,function(){"use strict";function e(r){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(r)}function r(e){return function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var t="[object Object]";var n,o,a=Function.prototype,i=Object.prototype,s=a.toString,c=i.hasOwnProperty,l=s.call(Object),u=i.toString,p=(n=Object.getPrototypeOf,o=Object,function(e){return n(o(e))});var f=function(e){if(!function(e){return!!e&&"object"==typeof e}(e)||u.call(e)!=t||function(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}(e))return!1;var r=p(e);if(null===r)return!0;var n=c.call(r,"constructor")&&r.constructor;return"function"==typeof n&&n instanceof n&&s.call(n)==l},g=function(e,r){if(r){if("object"!=typeof r)throw new TypeError(String(r)+" is not an object. Expected an object that has boolean `includeZero` property.");if("includeZero"in r){if("boolean"!=typeof r.includeZero)throw new TypeError(String(r.includeZero)+" is neither true nor false. `includeZero` option must be a Boolean value.");if(r.includeZero&&0===e)return!0}}return Number.isSafeInteger(e)&&e>=1},h="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function d(e,r){return e(r={exports:{}},r.exports),r.exports}var m=d(function(e,r){(r=e.exports=function(e){return e+r.suffix(+e)}).suffix=function(e){return e%=100,1===Math.floor(e/10)?"th":e%10==1?"st":e%10==2?"nd":e%10==3?"rd":"th"}}),y=(m.suffix,d(function(e,r){var t,n,o,a,i,s,c,l,u,p,f,g,d,m,y,b,w,v,q,S;e.exports=(t="function"==typeof Promise,n="object"==typeof self?self:h,o="undefined"!=typeof Symbol,a="undefined"!=typeof Map,i="undefined"!=typeof Set,s="undefined"!=typeof WeakMap,c="undefined"!=typeof WeakSet,l="undefined"!=typeof DataView,u=o&&void 0!==Symbol.iterator,p=o&&void 0!==Symbol.toStringTag,f=i&&"function"==typeof Set.prototype.entries,g=a&&"function"==typeof Map.prototype.entries,d=f&&Object.getPrototypeOf((new Set).entries()),m=g&&Object.getPrototypeOf((new Map).entries()),y=u&&"function"==typeof Array.prototype[Symbol.iterator],b=y&&Object.getPrototypeOf([][Symbol.iterator]()),w=u&&"function"==typeof String.prototype[Symbol.iterator],v=w&&Object.getPrototypeOf(""[Symbol.iterator]()),q=8,S=-1,function(e){var r=typeof e;if("object"!==r)return r;if(null===e)return"null";if(e===n)return"global";if(Array.isArray(e)&&(!1===p||!(Symbol.toStringTag in e)))return"Array";if("object"==typeof window&&null!==window){if("object"==typeof window.location&&e===window.location)return"Location";if("object"==typeof window.document&&e===window.document)return"Document";if("object"==typeof window.navigator){if("object"==typeof window.navigator.mimeTypes&&e===window.navigator.mimeTypes)return"MimeTypeArray";if("object"==typeof window.navigator.plugins&&e===window.navigator.plugins)return"PluginArray"}if(("function"==typeof window.HTMLElement||"object"==typeof window.HTMLElement)&&e instanceof window.HTMLElement){if("BLOCKQUOTE"===e.tagName)return"HTMLQuoteElement";if("TD"===e.tagName)return"HTMLTableDataCellElement";if("TH"===e.tagName)return"HTMLTableHeaderCellElement"}}var o=p&&e[Symbol.toStringTag];if("string"==typeof o)return o;var u=Object.getPrototypeOf(e);return u===RegExp.prototype?"RegExp":u===Date.prototype?"Date":t&&u===Promise.prototype?"Promise":i&&u===Set.prototype?"Set":a&&u===Map.prototype?"Map":c&&u===WeakSet.prototype?"WeakSet":s&&u===WeakMap.prototype?"WeakMap":l&&u===DataView.prototype?"DataView":a&&u===m?"Map Iterator":i&&u===d?"Set Iterator":y&&u===b?"Array Iterator":w&&u===v?"String Iterator":null===u?"Object":Object.prototype.toString.call(e).slice(q,S)})}));function b(e,r,t){if(r!=r)return function(e,r,t,n){for(var o=e.length,a=t+(n?1:-1);n?a--:++a<o;)if(r(e[a],a,e))return a;return-1}(e,v,t);for(var n=t-1,o=e.length;++n<o;)if(e[n]===r)return n;return-1}function w(e,r,t,n){for(var o=t-1,a=e.length;++o<a;)if(n(e[o],r))return o;return-1}function v(e){return e!=e}var q=Array.prototype.splice;function S(e,r,t,n){var o,a=n?w:b,i=-1,s=r.length,c=e;for(e===r&&(r=function(e,r){var t=-1,n=e.length;r||(r=Array(n));for(;++t<n;)r[t]=e[t];return r}(r)),t&&(c=function(e,r){for(var t=-1,n=e?e.length:0,o=Array(n);++t<n;)o[t]=r(e[t],t,e);return o}(e,(o=t,function(e){return o(e)})));++i<s;)for(var l=0,u=r[i],p=t?t(u):u;(l=a(c,p,l,n))>-1;)c!==e&&q.call(c,l,1),q.call(e,l,1);return e}var _=function(e,r){return e&&e.length&&r&&r.length?S(e,r):e},A=d(function(e,r){var t=200,n="__lodash_hash_undefined__",o=9007199254740991,a="[object Arguments]",i="[object Boolean]",s="[object Date]",c="[object Function]",l="[object GeneratorFunction]",u="[object Map]",p="[object Number]",f="[object Object]",g="[object RegExp]",d="[object Set]",m="[object String]",y="[object Symbol]",b="[object ArrayBuffer]",w="[object DataView]",v="[object Float32Array]",q="[object Float64Array]",S="[object Int8Array]",_="[object Int16Array]",A="[object Int32Array]",E="[object Uint8Array]",N="[object Uint8ClampedArray]",j="[object Uint16Array]",T="[object Uint32Array]",O=/\w*$/,k=/^\[object .+?Constructor\]$/,D=/^(?:0|[1-9]\d*)$/,L={};L[a]=L["[object Array]"]=L[b]=L[w]=L[i]=L[s]=L[v]=L[q]=L[S]=L[_]=L[A]=L[u]=L[p]=L[f]=L[g]=L[d]=L[m]=L[y]=L[E]=L[N]=L[j]=L[T]=!0,L["[object Error]"]=L[c]=L["[object WeakMap]"]=!1;var x="object"==typeof h&&h&&h.Object===Object&&h,V="object"==typeof self&&self&&self.Object===Object&&self,R=x||V||Function("return this")(),$=r&&!r.nodeType&&r,C=$&&e&&!e.nodeType&&e,I=C&&C.exports===$;function P(e,r){return e.set(r[0],r[1]),e}function B(e,r){return e.add(r),e}function F(e,r,t,n){var o=-1,a=e?e.length:0;for(n&&a&&(t=e[++o]);++o<a;)t=r(t,e[o],o,e);return t}function U(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}function H(e){var r=-1,t=Array(e.size);return e.forEach(function(e,n){t[++r]=[n,e]}),t}function M(e,r){return function(t){return e(r(t))}}function G(e){var r=-1,t=Array(e.size);return e.forEach(function(e){t[++r]=e}),t}var J,W=Array.prototype,z=Function.prototype,K=Object.prototype,Z=R["__core-js_shared__"],Y=(J=/[^.]+$/.exec(Z&&Z.keys&&Z.keys.IE_PROTO||""))?"Symbol(src)_1."+J:"",Q=z.toString,X=K.hasOwnProperty,ee=K.toString,re=RegExp("^"+Q.call(X).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),te=I?R.Buffer:void 0,ne=R.Symbol,oe=R.Uint8Array,ae=M(Object.getPrototypeOf,Object),ie=Object.create,se=K.propertyIsEnumerable,ce=W.splice,le=Object.getOwnPropertySymbols,ue=te?te.isBuffer:void 0,pe=M(Object.keys,Object),fe=Ce(R,"DataView"),ge=Ce(R,"Map"),he=Ce(R,"Promise"),de=Ce(R,"Set"),me=Ce(R,"WeakMap"),ye=Ce(Object,"create"),be=Ue(fe),we=Ue(ge),ve=Ue(he),qe=Ue(de),Se=Ue(me),_e=ne?ne.prototype:void 0,Ae=_e?_e.valueOf:void 0;function Ee(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var n=e[r];this.set(n[0],n[1])}}function Ne(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var n=e[r];this.set(n[0],n[1])}}function je(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var n=e[r];this.set(n[0],n[1])}}function Te(e){this.__data__=new Ne(e)}function Oe(e,r){var t=Me(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Ge(e)}(e)&&X.call(e,"callee")&&(!se.call(e,"callee")||ee.call(e)==a)}(e)?function(e,r){for(var t=-1,n=Array(e);++t<e;)n[t]=r(t);return n}(e.length,String):[],n=t.length,o=!!n;for(var i in e)!r&&!X.call(e,i)||o&&("length"==i||Be(i,n))||t.push(i);return t}function ke(e,r,t){var n=e[r];X.call(e,r)&&He(n,t)&&(void 0!==t||r in e)||(e[r]=t)}function De(e,r){for(var t=e.length;t--;)if(He(e[t][0],r))return t;return-1}function Le(e,r,t,n,o,h,k){var D;if(n&&(D=h?n(e,o,h,k):n(e)),void 0!==D)return D;if(!ze(e))return e;var x=Me(e);if(x){if(D=function(e){var r=e.length,t=e.constructor(r);r&&"string"==typeof e[0]&&X.call(e,"index")&&(t.index=e.index,t.input=e.input);return t}(e),!r)return function(e,r){var t=-1,n=e.length;r||(r=Array(n));for(;++t<n;)r[t]=e[t];return r}(e,D)}else{var V=Pe(e),R=V==c||V==l;if(Je(e))return function(e,r){if(r)return e.slice();var t=new e.constructor(e.length);return e.copy(t),t}(e,r);if(V==f||V==a||R&&!h){if(U(e))return h?e:{};if(D=function(e){return"function"!=typeof e.constructor||Fe(e)?{}:(r=ae(e),ze(r)?ie(r):{});var r}(R?{}:e),!r)return function(e,r){return Re(e,Ie(e),r)}(e,function(e,r){return e&&Re(r,Ke(r),e)}(D,e))}else{if(!L[V])return h?e:{};D=function(e,r,t,n){var o=e.constructor;switch(r){case b:return Ve(e);case i:case s:return new o(+e);case w:return function(e,r){var t=r?Ve(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.byteLength)}(e,n);case v:case q:case S:case _:case A:case E:case N:case j:case T:return function(e,r){var t=r?Ve(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.length)}(e,n);case u:return function(e,r,t){return F(r?t(H(e),!0):H(e),P,new e.constructor)}(e,n,t);case p:case m:return new o(e);case g:return(l=new(c=e).constructor(c.source,O.exec(c))).lastIndex=c.lastIndex,l;case d:return function(e,r,t){return F(r?t(G(e),!0):G(e),B,new e.constructor)}(e,n,t);case y:return a=e,Ae?Object(Ae.call(a)):{}}var a;var c,l}(e,V,Le,r)}}k||(k=new Te);var $=k.get(e);if($)return $;if(k.set(e,D),!x)var C=t?function(e){return function(e,r,t){var n=r(e);return Me(e)?n:function(e,r){for(var t=-1,n=r.length,o=e.length;++t<n;)e[o+t]=r[t];return e}(n,t(e))}(e,Ke,Ie)}(e):Ke(e);return function(e,r){for(var t=-1,n=e?e.length:0;++t<n&&!1!==r(e[t],t,e););}(C||e,function(o,a){C&&(o=e[a=o]),ke(D,a,Le(o,r,t,n,a,e,k))}),D}function xe(e){return!(!ze(e)||(r=e,Y&&Y in r))&&(We(e)||U(e)?re:k).test(Ue(e));var r}function Ve(e){var r=new e.constructor(e.byteLength);return new oe(r).set(new oe(e)),r}function Re(e,r,t,n){t||(t={});for(var o=-1,a=r.length;++o<a;){var i=r[o],s=n?n(t[i],e[i],i,t,e):void 0;ke(t,i,void 0===s?e[i]:s)}return t}function $e(e,r){var t,n,o=e.__data__;return("string"==(n=typeof(t=r))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==t:null===t)?o["string"==typeof r?"string":"hash"]:o.map}function Ce(e,r){var t=function(e,r){return null==e?void 0:e[r]}(e,r);return xe(t)?t:void 0}Ee.prototype.clear=function(){this.__data__=ye?ye(null):{}},Ee.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Ee.prototype.get=function(e){var r=this.__data__;if(ye){var t=r[e];return t===n?void 0:t}return X.call(r,e)?r[e]:void 0},Ee.prototype.has=function(e){var r=this.__data__;return ye?void 0!==r[e]:X.call(r,e)},Ee.prototype.set=function(e,r){return this.__data__[e]=ye&&void 0===r?n:r,this},Ne.prototype.clear=function(){this.__data__=[]},Ne.prototype.delete=function(e){var r=this.__data__,t=De(r,e);return!(t<0||(t==r.length-1?r.pop():ce.call(r,t,1),0))},Ne.prototype.get=function(e){var r=this.__data__,t=De(r,e);return t<0?void 0:r[t][1]},Ne.prototype.has=function(e){return De(this.__data__,e)>-1},Ne.prototype.set=function(e,r){var t=this.__data__,n=De(t,e);return n<0?t.push([e,r]):t[n][1]=r,this},je.prototype.clear=function(){this.__data__={hash:new Ee,map:new(ge||Ne),string:new Ee}},je.prototype.delete=function(e){return $e(this,e).delete(e)},je.prototype.get=function(e){return $e(this,e).get(e)},je.prototype.has=function(e){return $e(this,e).has(e)},je.prototype.set=function(e,r){return $e(this,e).set(e,r),this},Te.prototype.clear=function(){this.__data__=new Ne},Te.prototype.delete=function(e){return this.__data__.delete(e)},Te.prototype.get=function(e){return this.__data__.get(e)},Te.prototype.has=function(e){return this.__data__.has(e)},Te.prototype.set=function(e,r){var n=this.__data__;if(n instanceof Ne){var o=n.__data__;if(!ge||o.length<t-1)return o.push([e,r]),this;n=this.__data__=new je(o)}return n.set(e,r),this};var Ie=le?M(le,Object):function(){return[]},Pe=function(e){return ee.call(e)};function Be(e,r){return!!(r=null==r?o:r)&&("number"==typeof e||D.test(e))&&e>-1&&e%1==0&&e<r}function Fe(e){var r=e&&e.constructor;return e===("function"==typeof r&&r.prototype||K)}function Ue(e){if(null!=e){try{return Q.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function He(e,r){return e===r||e!=e&&r!=r}(fe&&Pe(new fe(new ArrayBuffer(1)))!=w||ge&&Pe(new ge)!=u||he&&"[object Promise]"!=Pe(he.resolve())||de&&Pe(new de)!=d||me&&"[object WeakMap]"!=Pe(new me))&&(Pe=function(e){var r=ee.call(e),t=r==f?e.constructor:void 0,n=t?Ue(t):void 0;if(n)switch(n){case be:return w;case we:return u;case ve:return"[object Promise]";case qe:return d;case Se:return"[object WeakMap]"}return r});var Me=Array.isArray;function Ge(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=o}(e.length)&&!We(e)}var Je=ue||function(){return!1};function We(e){var r=ze(e)?ee.call(e):"";return r==c||r==l}function ze(e){var r=typeof e;return!!e&&("object"==r||"function"==r)}function Ke(e){return Ge(e)?Oe(e):function(e){if(!Fe(e))return pe(e);var r=[];for(var t in Object(e))X.call(e,t)&&"constructor"!=t&&r.push(t);return r}(e)}e.exports=function(e){return Le(e,!0,!0)}});const E=Array.isArray;function N(e){return"string"==typeof e&&e.length>0&&"."===e[0]?e.slice(1):e}function j(e,r){return function e(r,t,n){const o=A(r);let a,i,s,c,l;if((n=Object.assign({depth:-1,path:""},n)).depth+=1,E(o))for(a=0,i=o.length;a<i;a++){const r=`${n.path}.${a}`;void 0!==o[a]?(n.parent=A(o),n.parentType="array",s=e(t(o[a],void 0,Object.assign({},n,{path:N(r)})),t,Object.assign({},n,{path:N(r)})),Number.isNaN(s)&&a<o.length?(o.splice(a,1),a-=1):o[a]=s):o.splice(a,1)}else if(f(o))for(a=0,i=(c=Object.keys(o)).length;a<i;a++){l=c[a];const r=`${n.path}.${l}`;0===n.depth&&null!=l&&(n.topmostKey=l),n.parent=A(o),n.parentType="object",s=e(t(l,o[l],Object.assign({},n,{path:N(r)})),t,Object.assign({},n,{path:N(r)})),Number.isNaN(s)?delete o[l]:o[l]=s}return o}(e,r,{})}var T="__lodash_hash_undefined__",O=9007199254740991,k="[object Function]",D="[object GeneratorFunction]",L=/^\[object .+?Constructor\]$/,x="object"==typeof h&&h&&h.Object===Object&&h,V="object"==typeof self&&self&&self.Object===Object&&self,R=x||V||Function("return this")();function $(e,r){return!!(e?e.length:0)&&function(e,r,t){if(r!=r)return function(e,r,t,n){var o=e.length,a=t+(n?1:-1);for(;n?a--:++a<o;)if(r(e[a],a,e))return a;return-1}(e,P,t);var n=t-1,o=e.length;for(;++n<o;)if(e[n]===r)return n;return-1}(e,r,0)>-1}function C(e,r,t){for(var n=-1,o=e?e.length:0;++n<o;)if(t(r,e[n]))return!0;return!1}function I(e,r){for(var t=-1,n=e?e.length:0,o=Array(n);++t<n;)o[t]=r(e[t],t,e);return o}function P(e){return e!=e}function B(e){return function(r){return e(r)}}function F(e,r){return e.has(r)}var U,H=Array.prototype,M=Function.prototype,G=Object.prototype,J=R["__core-js_shared__"],W=(U=/[^.]+$/.exec(J&&J.keys&&J.keys.IE_PROTO||""))?"Symbol(src)_1."+U:"",z=M.toString,K=G.hasOwnProperty,Z=G.toString,Y=RegExp("^"+z.call(K).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Q=H.splice,X=Math.max,ee=Math.min,re=pe(R,"Map"),te=pe(Object,"create");function ne(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var n=e[r];this.set(n[0],n[1])}}function oe(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var n=e[r];this.set(n[0],n[1])}}function ae(e){var r=-1,t=e?e.length:0;for(this.clear();++r<t;){var n=e[r];this.set(n[0],n[1])}}function ie(e){var r=-1,t=e?e.length:0;for(this.__data__=new ae;++r<t;)this.add(e[r])}function se(e,r){for(var t,n,o=e.length;o--;)if((t=e[o][0])===(n=r)||t!=t&&n!=n)return o;return-1}function ce(e){return!(!ge(e)||(r=e,W&&W in r))&&(fe(e)||function(e){var r=!1;if(null!=e&&"function"!=typeof e.toString)try{r=!!(e+"")}catch(e){}return r}(e)?Y:L).test(function(e){if(null!=e){try{return z.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e));var r}function le(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=O}(e.length)&&!fe(e)}(e)}(e)?e:[]}function ue(e,r){var t,n,o=e.__data__;return("string"==(n=typeof(t=r))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==t:null===t)?o["string"==typeof r?"string":"hash"]:o.map}function pe(e,r){var t=function(e,r){return null==e?void 0:e[r]}(e,r);return ce(t)?t:void 0}function fe(e){var r=ge(e)?Z.call(e):"";return r==k||r==D}function ge(e){var r=typeof e;return!!e&&("object"==r||"function"==r)}ne.prototype.clear=function(){this.__data__=te?te(null):{}},ne.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},ne.prototype.get=function(e){var r=this.__data__;if(te){var t=r[e];return t===T?void 0:t}return K.call(r,e)?r[e]:void 0},ne.prototype.has=function(e){var r=this.__data__;return te?void 0!==r[e]:K.call(r,e)},ne.prototype.set=function(e,r){return this.__data__[e]=te&&void 0===r?T:r,this},oe.prototype.clear=function(){this.__data__=[]},oe.prototype.delete=function(e){var r=this.__data__,t=se(r,e);return!(t<0||(t==r.length-1?r.pop():Q.call(r,t,1),0))},oe.prototype.get=function(e){var r=this.__data__,t=se(r,e);return t<0?void 0:r[t][1]},oe.prototype.has=function(e){return se(this.__data__,e)>-1},oe.prototype.set=function(e,r){var t=this.__data__,n=se(t,e);return n<0?t.push([e,r]):t[n][1]=r,this},ae.prototype.clear=function(){this.__data__={hash:new ne,map:new(re||oe),string:new ne}},ae.prototype.delete=function(e){return ue(this,e).delete(e)},ae.prototype.get=function(e){return ue(this,e).get(e)},ae.prototype.has=function(e){return ue(this,e).has(e)},ae.prototype.set=function(e,r){return ue(this,e).set(e,r),this},ie.prototype.add=ie.prototype.push=function(e){return this.__data__.set(e,T),this},ie.prototype.has=function(e){return this.__data__.has(e)};var he=function(e,r){return r=X(void 0===r?e.length-1:r,0),function(){for(var t=arguments,n=-1,o=X(t.length-r,0),a=Array(o);++n<o;)a[n]=t[r+n];n=-1;for(var i=Array(r+1);++n<r;)i[n]=t[n];return i[r]=a,function(e,r,t){switch(t.length){case 0:return e.call(r);case 1:return e.call(r,t[0]);case 2:return e.call(r,t[0],t[1]);case 3:return e.call(r,t[0],t[1],t[2])}return e.apply(r,t)}(e,this,i)}}(function(e){var r=I(e,le);return r.length&&r[0]===e[0]?function(e,r,t){for(var n=t?C:$,o=e[0].length,a=e.length,i=a,s=Array(a),c=1/0,l=[];i--;){var u=e[i];i&&r&&(u=I(u,B(r))),c=ee(u.length,c),s[i]=!t&&(r||o>=120&&u.length>=120)?new ie(i&&u):void 0}u=e[0];var p=-1,f=s[0];e:for(;++p<o&&l.length<c;){var g=u[p],h=r?r(g):g;if(g=t||0!==g?g:0,!(f?F(f,h):n(l,h,t))){for(i=a;--i;){var d=s[i];if(!(d?F(d,h):n(e[i],h,t)))continue e}f&&f.push(h),l.push(g)}}return l}(r):[]});function de(e){return"string"==typeof e?e.length>0?[e]:[]:e}var me=d(function(e){e.exports=function(){var e=Object.prototype.toString;function r(e,r){return null!=e&&Object.prototype.hasOwnProperty.call(e,r)}function t(e){if(!e)return!0;if(o(e)&&0===e.length)return!0;if("string"!=typeof e){for(var t in e)if(r(e,t))return!1;return!0}return!1}function n(r){return e.call(r)}var o=Array.isArray||function(r){return"[object Array]"===e.call(r)};function a(e){var r=parseInt(e);return r.toString()===e?r:e}function i(e){e=e||{};var i=function(e){return Object.keys(i).reduce(function(r,t){return"create"===t?r:("function"==typeof i[t]&&(r[t]=i[t].bind(i,e)),r)},{})};function s(t,n){return e.includeInheritedProps||"number"==typeof n&&Array.isArray(t)||r(t,n)}function c(e,r){if(s(e,r))return e[r]}function l(e,r,t,n){if("number"==typeof r&&(r=[r]),!r||0===r.length)return e;if("string"==typeof r)return l(e,r.split(".").map(a),t,n);var o=r[0],i=c(e,o);return 1===r.length?(void 0!==i&&n||(e[o]=t),i):(void 0===i&&("number"==typeof r[1]?e[o]=[]:e[o]={}),l(e[o],r.slice(1),t,n))}return i.has=function(t,n){if("number"==typeof n?n=[n]:"string"==typeof n&&(n=n.split(".")),!n||0===n.length)return!!t;for(var i=0;i<n.length;i++){var s=a(n[i]);if(!("number"==typeof s&&o(t)&&s<t.length||(e.includeInheritedProps?s in Object(t):r(t,s))))return!1;t=t[s]}return!0},i.ensureExists=function(e,r,t){return l(e,r,t,!0)},i.set=function(e,r,t,n){return l(e,r,t,n)},i.insert=function(e,r,t,n){var a=i.get(e,r);n=~~n,o(a)||(a=[],i.set(e,r,a)),a.splice(n,0,t)},i.empty=function(e,r){var a,c;if(!t(r)&&null!=e&&(a=i.get(e,r))){if("string"==typeof a)return i.set(e,r,"");if(function(e){return"boolean"==typeof e||"[object Boolean]"===n(e)}(a))return i.set(e,r,!1);if("number"==typeof a)return i.set(e,r,0);if(o(a))a.length=0;else{if(!function(e){return"object"==typeof e&&"[object Object]"===n(e)}(a))return i.set(e,r,null);for(c in a)s(a,c)&&delete a[c]}}},i.push=function(e,r){var t=i.get(e,r);o(t)||(t=[],i.set(e,r,t)),t.push.apply(t,Array.prototype.slice.call(arguments,2))},i.coalesce=function(e,r,t){for(var n,o=0,a=r.length;o<a;o++)if(void 0!==(n=i.get(e,r[o])))return n;return t},i.get=function(e,r,t){if("number"==typeof r&&(r=[r]),!r||0===r.length)return e;if(null==e)return t;if("string"==typeof r)return i.get(e,r.split("."),t);var n=a(r[0]),o=c(e,n);return void 0===o?t:1===r.length?o:i.get(e[n],r.slice(1),t)},i.del=function(e,r){if("number"==typeof r&&(r=[r]),null==e)return e;if(t(r))return e;if("string"==typeof r)return i.del(e,r.split("."));var n=a(r[0]);return s(e,n)?1!==r.length?i.del(e[n],r.slice(1)):(o(e)?e.splice(n,1):delete e[n],e):e},i}var s=i();return s.create=i,s.withInheritedProps=i({includeInheritedProps:!0}),s}()}),ye=function(e){var r=e%100;if(r>=10&&r<=20)return"th";var t=e%10;return 1===t?"st":2===t?"nd":3===t?"rd":"th"};function be(e){if("number"!=typeof e)throw new TypeError("Expected Number, got "+typeof e+" "+e);return e+ye(e)}be.indicator=ye;var we=be,ve=/[|\\{}()[\]^$+*?.]/g,qe=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(ve,"\\$&")};const Se=new Map;function _e(e,r){const t=Object.assign({caseSensitive:!1},r),n=e+JSON.stringify(t);if(Se.has(n))return Se.get(n);const o="!"===e[0];o&&(e=e.slice(1)),e=qe(e).replace(/\\\*/g,".*");const a=new RegExp(`^${e}$`,t.caseSensitive?"":"i");return a.negated=o,Se.set(n,a),a}var Ae=(e,r,t)=>{if(!Array.isArray(e)||!Array.isArray(r))throw new TypeError(`Expected two arrays, got ${typeof e} ${typeof r}`);if(0===r.length)return e;const n="!"===r[0][0];r=r.map(e=>_e(e,t));const o=[];for(const t of e){let e=n;for(const n of r)n.test(t)&&(e=!n.negated);e&&o.push(t)}return o};function Ee(e,r,t){return function e(r,t,n,o=!0){const a=Object.prototype.hasOwnProperty;function i(e){return null!=e}function s(e){return"Object"===y(e)}function c(e,r){return r=de(r),Array.from(e).filter(e=>!r.some(r=>Ae.isMatch(e,r,{caseSensitive:!0})))}const l=["any","anything","every","everything","all","whatever","whatevs"],u=Array.isArray;if(!i(r))throw new Error("check-types-mini: [THROW_ID_01] First argument is missing!");const p={ignoreKeys:[],ignorePaths:[],acceptArrays:!1,acceptArraysIgnore:[],enforceStrictKeyset:!0,schema:{},msg:"check-types-mini",optsVarName:"opts"};let f;if(f=i(n)&&s(n)?Object.assign({},p,n):Object.assign({},p),i(f.ignoreKeys)&&f.ignoreKeys?f.ignoreKeys=de(f.ignoreKeys):f.ignoreKeys=[],i(f.ignorePaths)&&f.ignorePaths?f.ignorePaths=de(f.ignorePaths):f.ignorePaths=[],i(f.acceptArraysIgnore)&&f.acceptArraysIgnore?f.acceptArraysIgnore=de(f.acceptArraysIgnore):f.acceptArraysIgnore=[],f.msg="string"==typeof f.msg?f.msg.trim():f.msg,":"===f.msg[f.msg.length-1]&&(f.msg=f.msg.slice(0,f.msg.length-1).trim()),f.schema&&(Object.keys(f.schema).forEach(e=>{if(s(f.schema[e])){const r={};j(f.schema[e],(t,n,o)=>{const a=void 0!==n?n:t;return u(a)||s(a)||(r[`${e}.${o.path}`]=a),a}),delete f.schema[e],f.schema=Object.assign(f.schema,r)}}),Object.keys(f.schema).forEach(e=>{u(f.schema[e])||(f.schema[e]=[f.schema[e]]),f.schema[e]=f.schema[e].map(String).map(e=>e.toLowerCase()).map(e=>e.trim())})),i(t)||(t={}),o&&e(f,p,{enforceStrictKeyset:!1},!1),f.enforceStrictKeyset)if(i(f.schema)&&Object.keys(f.schema).length>0){if(0!==c(_(Object.keys(r),Object.keys(t).concat(Object.keys(f.schema))),f.ignoreKeys).length){const e=_(Object.keys(r),Object.keys(t).concat(Object.keys(f.schema)));throw new TypeError(`${f.msg}: ${f.optsVarName}.enforceStrictKeyset is on and the following key${e.length>1?"s":""} ${e.length>1?"are":"is"} not covered by schema and/or reference objects: ${e.join(", ")}`)}}else{if(!(i(t)&&Object.keys(t).length>0))throw new TypeError(`${f.msg}: Both ${f.optsVarName}.schema and reference objects are missing! We don't have anything to match the keys as you requested via opts.enforceStrictKeyset!`);if(0!==c(_(Object.keys(r),Object.keys(t)),f.ignoreKeys).length){const e=_(Object.keys(r),Object.keys(t));throw new TypeError(`${f.msg}: The input object has key${e.length>1?"s":""} which ${e.length>1?"are":"is"} not covered by the reference object: ${e.join(", ")}`)}if(0!==c(_(Object.keys(t),Object.keys(r)),f.ignoreKeys).length){const e=_(Object.keys(t),Object.keys(r));throw new TypeError(`${f.msg}: The reference object has key${e.length>1?"s":""} which ${e.length>1?"are":"is"} not present in the input object: ${e.join(", ")}`)}}const g=[];j(r,(e,n,o)=>{let i=n,c=e;if("array"===o.parentType&&(c=void 0,i=e),u(g)&&g.length&&g.some(e=>o.path.startsWith(e)))return i;if(c&&f.ignoreKeys.some(e=>Ae.isMatch(c,e)))return i;if(f.ignorePaths.some(e=>Ae.isMatch(o.path,e)))return i;const p=!(!s(i)&&!u(i)&&u(o.parent));let h=!1;s(f.schema)&&a.call(f.schema,me.get(o.path))&&(h=!0);let d=!1;if(s(t)&&me.has(t,me.get(o.path))&&(d=!0),f.enforceStrictKeyset&&p&&!h&&!d)throw new TypeError(`${f.msg}: ${f.optsVarName}.${o.path} is neither covered by reference object (second input argument), nor ${f.optsVarName}.schema! To stop this error, turn off ${f.optsVarName}.enforceStrictKeyset or provide some type reference (2nd argument or ${f.optsVarName}.schema).\n\nDebug info:\n\nobj = ${JSON.stringify(r,null,4)}\n\nref = ${JSON.stringify(t,null,4)}\n\ninnerObj = ${JSON.stringify(o,null,4)}\n\nopts = ${JSON.stringify(f,null,4)}\n\ncurrent = ${JSON.stringify(i,null,4)}\n\n`);if(h){const e=de(f.schema[o.path]).map(String).map(e=>e.toLowerCase());if(me.set(f.schema,o.path,e),he(e,l).length)g.push(o.path);else if(!0!==i&&!1!==i&&!e.includes(y(i).toLowerCase())||(!0===i||!1===i)&&!e.includes(String(i))&&!e.includes("boolean")){if(!u(i)||!f.acceptArrays)throw new TypeError(`${f.msg}: ${f.optsVarName}.${o.path} was customised to ${"string"!==y(i)?'"':""}${JSON.stringify(i,null,0)}${"string"!==y(i)?'"':""} (type: ${y(i).toLowerCase()}) which is not among the allowed types in schema (which is equal to ${JSON.stringify(e,null,0)})`);for(let r=0,t=i.length;r<t;r++)if(!e.includes(y(i[r]).toLowerCase()))throw new TypeError(`${f.msg}: ${f.optsVarName}.${o.path}.${r}, the ${we(r+1)} element (equal to ${JSON.stringify(i[r],null,0)}) is of a type ${y(i[r]).toLowerCase()}, but only the following are allowed by the ${f.optsVarName}.schema: ${e.join(", ")}`)}}else if(d){const r=me.get(t,o.path);if(f.acceptArrays&&u(i)&&!f.acceptArraysIgnore.includes(e)){if(!i.every(r=>y(r).toLowerCase()===y(t[e]).toLowerCase()))throw new TypeError(`${f.msg}: ${f.optsVarName}.${o.path} was customised to be array, but not all of its elements are ${y(t[e]).toLowerCase()}-type`)}else if(y(i)!==y(r))throw new TypeError(`${f.msg}: ${f.optsVarName}.${o.path} was customised to ${"string"===y(i).toLowerCase()?"":'"'}${JSON.stringify(i,null,0)}${"string"===y(i).toLowerCase()?"":'"'} which is not ${y(r).toLowerCase()} but ${y(i).toLowerCase()}`)}return i})}(e,r,t)}Ae.isMatch=((e,r,t)=>{const n=_e(r,t),o=n.test(e);return n.negated?!o:o});const Ne=Array.isArray;function je(e,r){if(!Ne(e))throw new TypeError(`ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(0===e.length)return e;const t={strictlyTwoElementsInRangeArrays:!1,progressFn:null},n=Object.assign({},t,r);let o,a;if(Ee(n,t,{msg:"ranges-sort: [THROW_ID_02*]",schema:{progressFn:["function","false","null"]}}),n.strictlyTwoElementsInRangeArrays&&!e.every((e,r)=>2===e.length||(o=r,a=e.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${m(o)} range (${JSON.stringify(e[o],null,4)}) has not two but ${a} elements!`);if(!e.every((e,r)=>!(!g(e[0],{includeZero:!0})||!g(e[1],{includeZero:!0}))||(o=r,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${m(o)} range (${JSON.stringify(e[o],null,4)}) does not consist of only natural numbers!`);const i=e.length*e.length;let s=0;return Array.from(e).sort((e,r)=>(n.progressFn&&(s++,n.progressFn(Math.floor(100*s/i))),e[0]===r[0]?e[1]<r[1]?-1:e[1]>r[1]?1:0:e[0]<r[0]?-1:1))}var Te=["AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Map","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","check","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copy","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","image","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","part","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","prop","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","target","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj"];return function(t,n){function o(e){return!("string"==typeof e&&1===e.length&&e.toUpperCase()!==e.toLowerCase())}if("string"!=typeof t)throw new Error("string-fix-broken-named-entities: [THROW_ID_01] the first input argument must be string! It was given as:\n".concat(JSON.stringify(t,null,4)," (").concat(e(t),"-type)"));var a,i={decode:!1,cb:null,progressFn:null};if(null!=n){if(!f(n))throw new Error("string-fix-broken-named-entities: [THROW_ID_02] the second input argument must be a plain object! I was given as:\n".concat(JSON.stringify(n,null,4)," (").concat(e(n),"-type)"));a=Object.assign({},i,n)}else a=i;if(a.cb&&"function"!=typeof a.cb)throw new TypeError("string-fix-broken-named-entities: [THROW_ID_03] opts.cb must be a function (or falsey)! Currently it's: ".concat(e(a.cb),", equal to: ").concat(JSON.stringify(a.cb,null,4)));if(a.progressFn&&"function"!=typeof a.progressFn)throw new TypeError("string-fix-broken-named-entities: [THROW_ID_04] opts.progressFn must be a function (or falsey)! Currently it's: ".concat(e(a.progressFn),", equal to: ").concat(JSON.stringify(a.progressFn,null,4)));for(var s,c,l,u,p,g,h=!1,d={nameStartsAt:null,ampersandNecessary:null,patience:2,matchedN:null,matchedB:null,matchedS:null,matchedP:null,matchedSemicol:null},m=A(d),y=function(){m=A(d)},b=[],w=t.length+1,v=0,q=function(e){if(a.progressFn&&(p=Math.floor(v/w*100))!==g&&(g=p,a.progressFn(p)),l=(null!==m.matchedN?1:0)+(null!==m.matchedB?1:0)+(null!==m.matchedS?1:0)+(null!==m.matchedP?1:0),u=[m.matchedN,m.matchedB,m.matchedS,m.matchedP].filter(function(e){return null!==e}),s=Math.min.apply(Math,r(u)),c=Math.max.apply(Math,r(u)),null!==m.nameStartsAt&&l>2&&(null!==m.matchedSemicol||!m.ampersandNecessary||o(t[m.nameStartsAt-1])&&o(t[e])||(o(t[m.nameStartsAt-1])||o(t[e]))&&c-s<=4||null!==m.matchedN&&null!==m.matchedB&&null!==m.matchedS&&null!==m.matchedP&&m.matchedN+1===m.matchedB&&m.matchedB+1===m.matchedS&&m.matchedS+1===m.matchedP)&&(!t[e]||null!==m.matchedN&&null!==m.matchedB&&null!==m.matchedS&&null!==m.matchedP&&t[e]!==t[e-1]||"n"!==t[e].toLowerCase()&&"b"!==t[e].toLowerCase()&&"s"!==t[e].toLowerCase()&&"p"!==t[e].toLowerCase()||";"===t[e-1])&&";"!==t[e]&&(void 0===t[e+1]||";"!==t[e+1]))return"&nbsp;"!==t.slice(m.nameStartsAt,e)&&(null==m.nameStartsAt||e-m.nameStartsAt!=5||"&nbsp"!==t.slice(m.nameStartsAt,e)||a.decode?a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-malformed-nbsp",entityName:"nbsp",rangeFrom:m.nameStartsAt,rangeTo:e,rangeValEncoded:"&nbsp;",rangeValDecoded:" "})):b.push([m.nameStartsAt,e,a.decode?" ":"&nbsp;"]):a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"nbsp",rangeFrom:e,rangeTo:e,rangeValEncoded:";",rangeValDecoded:";"})):b.push([e,e,";"])),y(),S=e,"continue|outerloop";if(t[e]&&";"===t[e-1]&&";"!==t[e]&&l>0)return y(),S=e,"continue|outerloop";if("&"===t[e]){if("a"===t[e+1]&&"m"===t[e+2]&&"p"===t[e+3]&&";"===t[e+4]&&t[e+5]&&t[e+5].trim().length&&"&"!==t[e+5]&&Te.some(function(r){return t.slice(e+5).startsWith("".concat(r,";"))})){null===m.nameStartsAt&&(m.nameStartsAt=e),h=!0;for(var n=e+5;"a"===t[n]&&"m"===t[n+1]&&"p"===t[n+2]&&";"===t[n+3];)n+=4;return a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-amp-repetitions",entityName:"amp",rangeFrom:e+1,rangeTo:n,rangeValEncoded:null,rangeValDecoded:null})):b.push([e+1,n]),S=e=n-1,"continue|outerloop"}if(null===m.nameStartsAt&&null===m.ampersandNecessary&&(m.nameStartsAt=e,m.ampersandNecessary=!1),"a"===t[e+1]&&"n"===t[e+2]&&"g"===t[e+3]){if("s"!==t[e+4]&&";"!==t[e+4])return a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"ang",rangeFrom:e+4,rangeTo:e+4,rangeValEncoded:"&ang;",rangeValDecoded:"∠"})):b.push([e,e+4,a.decode?"∠":"&ang;"]),S=e+=3,"continue|outerloop";if("s"===t[e+4]&&"t"===t[e+5]&&";"!==t[e+6])return a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"angst",rangeFrom:e+6,rangeTo:e+6,rangeValEncoded:"&angst;",rangeValDecoded:"Å"})):b.push([e,e+6,a.decode?"Å":"&angst;"]),S=e+=5,"continue|outerloop"}else if("p"===t[e+1]&&"i"===t[e+2]){if("v"!==t[e+3]&&";"!==t[e+3])return a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"pi",rangeFrom:e+3,rangeTo:e+3,rangeValEncoded:"&pi;",rangeValDecoded:"π"})):b.push([e,e+3,a.decode?"π":"&pi;"]),S=e+=3,"continue|outerloop";if("v"===t[e+3]&&";"!==t[e+4])return a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"piv",rangeFrom:e+4,rangeTo:e+4,rangeValEncoded:"&piv;",rangeValDecoded:"ϖ"})):b.push([e,e+4,a.decode?"ϖ":"&piv;"]),S=e+=3,"continue|outerloop"}else{if("P"===t[e+1]&&"i"===t[e+2]&&";"!==t[e+3])return a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"Pi",rangeFrom:e+3,rangeTo:e+3,rangeValEncoded:"&Pi;",rangeValDecoded:"Π"})):b.push([e,e+3,a.decode?"Π":"&Pi;"]),S=e+=2,"continue|outerloop";if("s"===t[e+1]){if("i"===t[e+2]&&"g"===t[e+3]&&"m"===t[e+4]&&"a"===t[e+5]&&";"!==t[e+6]&&"f"!==t[e+6])return a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"sigma",rangeFrom:e+6,rangeTo:e+6,rangeValEncoded:"&sigma;",rangeValDecoded:"σ"})):b.push([e,e+6,a.decode?"σ":"&sigma;"]),S=e+=5,"continue|outerloop";if("u"===t[e+2]&&"b"===t[e+3]&&";"!==t[e+4]&&"e"!==t[e+4])return a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"sub",rangeFrom:e+4,rangeTo:e+4,rangeValEncoded:"&sub;",rangeValDecoded:"⊂"})):b.push([e,e+4,a.decode?"⊂":"&sub;"]),S=e+=3,"continue|outerloop";if("u"===t[e+2]&&"p"===t[e+3]&&"f"!==t[e+4]&&"e"!==t[e+4]&&"1"!==t[e+4]&&"2"!==t[e+4]&&"3"!==t[e+4]&&";"!==t[e+4])return a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"sup",rangeFrom:e+4,rangeTo:e+4,rangeValEncoded:"&sup;",rangeValDecoded:"⊃"})):b.push([e,e+4,a.decode?"⊃":"&sup;"]),S=e+=3,"continue|outerloop"}else if("t"===t[e+1]){if("h"===t[e+2]&&"e"===t[e+3]&&"t"===t[e+4]&&"a"===t[e+5]&&"s"!==t[e+6]&&";"!==t[e+6])return a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"theta",rangeFrom:e+6,rangeTo:e+6,rangeValEncoded:"&theta;",rangeValDecoded:"θ"})):b.push([e,e+6,a.decode?"θ":"&theta;"]),S=e+=5,"continue|outerloop";if("h"===t[e+2]&&"i"===t[e+3]&&"n"===t[e+4]&&"s"===t[e+5]&&"p"===t[e+6]&&";"!==t[e+7])return a.cb?b.push(a.cb({ruleName:"bad-named-html-entity-missing-semicolon",entityName:"thinsp",rangeFrom:e+7,rangeTo:e+7,rangeValEncoded:"&thinsp;",rangeValDecoded:" "})):b.push([e,e+7,a.decode?" ":"&thinsp;"]),S=e+=6,"continue|outerloop"}}}if(t[e]&&"n"===t[e].toLowerCase()){if("i"===t[e-1]&&"s"===t[e+1])return y(),S=e,"continue|outerloop";m.matchedN=e,null===m.nameStartsAt&&(m.nameStartsAt=e,null!==m.ampersandNecessary||h?!0!==m.ampersandNecessary&&(m.ampersandNecessary=!1):m.ampersandNecessary=!0)}if(t[e]&&"b"===t[e].toLowerCase())if(null!==m.nameStartsAt)m.matchedB=e;else{if(!m.patience)return y(),S=e,"continue|outerloop";m.patience--,m.nameStartsAt=e,m.matchedB=e,null!==m.ampersandNecessary||h?!0!==m.ampersandNecessary&&(m.ampersandNecessary=!1):m.ampersandNecessary=!0}if(t[e]&&"s"===t[e].toLowerCase())if(null!==m.nameStartsAt)m.matchedS=e;else{if(!m.patience)return y(),S=e,"continue|outerloop";m.patience--,m.nameStartsAt=e,m.matchedS=e,null!==m.ampersandNecessary||h?!0!==m.ampersandNecessary&&(m.ampersandNecessary=!1):m.ampersandNecessary=!0}if(t[e]&&"p"===t[e].toLowerCase())if(null!==m.nameStartsAt)m.matchedP=e;else{if(!m.patience)return y(),S=e,"continue|outerloop";m.patience--,m.nameStartsAt=e,m.matchedP=e,null!==m.ampersandNecessary||h?!0!==m.ampersandNecessary&&(m.ampersandNecessary=!1):m.ampersandNecessary=!0}if(";"===t[e]&&null!==m.nameStartsAt&&(m.matchedSemicol=e),t[e]&&0===t[e].trim().length&&null!==m.nameStartsAt&&y(),h&&(h=!1),null!==m.nameStartsAt&&e>m.nameStartsAt&&t[e]&&"n"!==t[e].toLowerCase()&&"b"!==t[e].toLowerCase()&&"s"!==t[e].toLowerCase()&&"p"!==t[e].toLowerCase()&&"&"!==t[e]&&";"!==t[e]){if(!m.patience)return y(),S=e,"continue|outerloop";m.patience=m.patience-1}v++,S=e},S=0;S<w;S++)q(S);return b.length?a.cb?b:function(e,r){function t(e){return"string"==typeof e}if(!Array.isArray(e))return e;const n={mergeType:1,progressFn:null};let o;if(r){if(!f(r))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(r,null,4)} (type ${typeof r})`);if((o=Object.assign({},n,r)).progressFn&&"function"!=typeof o.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] the second input argument must be a function! It was given of a type: "${typeof o.progressFn}", equal to ${JSON.stringify(o.progressFn,null,4)}`);if(o.mergeType&&1!==o.mergeType&&2!==o.mergeType)if(t(o.mergeType)&&"1"===o.mergeType.trim())o.mergeType=1;else{if(!t(o.mergeType)||"2"!==o.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof o.mergeType}", equal to ${JSON.stringify(o.progressFn,null,4)}`);o.mergeType=2}}else o=A(n);const a=A(e).filter(e=>void 0!==e[2]||e[0]!==e[1]);let i,s,c;const l=(i=o.progressFn?je(a,{progressFn:e=>{(c=Math.floor(e/5))!==s&&(s=c,o.progressFn(c))}}):je(a)).length-1;for(let e=l;e>0;e--)o.progressFn&&(c=Math.floor(78*(1-e/l))+21)!==s&&c>s&&(s=c,o.progressFn(c)),(i[e][0]<=i[e-1][0]||i[e][0]<=i[e-1][1])&&(i[e-1][0]=Math.min(i[e][0],i[e-1][0]),i[e-1][1]=Math.max(i[e][1],i[e-1][1]),void 0!==i[e][2]&&(i[e-1][0]>=i[e][0]||i[e-1][1]<=i[e][1])&&null!==i[e-1][2]&&(null===i[e][2]&&null!==i[e-1][2]?i[e-1][2]=null:void 0!==i[e-1][2]?2===o.mergeType&&i[e-1][0]===i[e][0]?i[e-1][2]=i[e][2]:i[e-1][2]+=i[e][2]:i[e-1][2]=i[e][2]),i.splice(e,1),e=i.length);return i}(b):null}});
