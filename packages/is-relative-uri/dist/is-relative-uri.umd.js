/**
 * is-relative-uri
 * Is given string a relative URI?
 * Version: 0.1.0
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/is-relative-uri
 */

!function(e,s){"object"==typeof exports&&"undefined"!=typeof module?module.exports=s():"function"==typeof define&&define.amd?define(s):(e=e||self).isRelativeUri=s()}(this,(function(){"use strict";function e(s){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(s)}var s="\\";return function(t,r){if("string"!=typeof t)throw new Error('is-relative-uri: [THROW_ID_01] input string must be string, it was given as "'.concat(t,'" (type ').concat(e(t),")"));if(r&&"object"!==e(r))throw new Error("is-relative-uri: [THROW_ID_02] opts be plain object, it was given as ".concat(r," (type ").concat(e(r),")"));var c,n={offset:0};if((c=r?Object.assign({},n,r):Object.assign({},n)).offset&&!Number.isInteger(c.offset))throw new Error("is-relative-uri: [THROW_ID_02] opts.offset must be an integer, it was given as ".concat(c.offset," (type ").concat(e(c.offset),")"));return c.offset||(c.offset=0),t.split("").some((function(e){return!e.trim().length}))?{res:!1,message:"Remove whitespace."}:t.match(/\/\s*\/\s*\//g)?{res:!1,message:"Three consecutive slashes found."}:t.match(/.\/\s*\//g)?{res:!1,message:"Two consecutive slashes surrounded by other characters."}:t.match(/\.\.\./g)?{res:!1,message:"Three consecutive dots."}:t.includes("%")&&!t.match(/%[0-9a-f]/gi)?{res:!1,message:'Unescaped "%" character.'}:t.includes("<")?{res:!1,message:'Unescaped "<" character.'}:t.includes(">")?{res:!1,message:'Unescaped ">" character.'}:t.includes("[")?{res:!1,message:'Unescaped "[" character.'}:t.includes("]")?{res:!1,message:'Unescaped "]" character.'}:t.includes("{")?{res:!1,message:'Unescaped "{" character.'}:t.includes("}")?{res:!1,message:'Unescaped "}" character.'}:t.includes("|")?{res:!1,message:'Unescaped "|" character.'}:t.includes(s)?{res:!1,message:"Unescaped backslash (".concat(s,") character.")}:t.includes("^")?{res:!1,message:"Unescaped caret (^) character."}:t.endsWith(".")?{res:!1,message:"Ends with dot, is file extension missing?"}:t.includes("??")?{res:!1,message:"Two consecutive question marks."}:{res:!0,message:null}}}));
