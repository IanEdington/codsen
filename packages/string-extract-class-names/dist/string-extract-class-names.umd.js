!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t=t||self).stringExtractClassNames=n()}(this,function(){"use strict";function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(n)}return function(n,o){if(void 0===n)throw new Error("string-extract-class-names: [THROW_ID_01] input must not be undefined!");if("string"!=typeof n)throw new TypeError("string-extract-class-names: [THROW_ID_02] first input should be string, not ".concat(t(n),", currently equal to ").concat(JSON.stringify(n,null,4)));if(null!=o&&o){if("boolean"!=typeof o)throw new TypeError("string-extract-class-names: [THROW_ID_03] second input argument should be a Boolean, not ".concat(t(n),", currently equal to ").concat(JSON.stringify(n,null,4)))}else o=!1;for(var e=null,r=[],l=0,s=n.length;l<s;l++)null===e||!".# ~\\!@$%^&*()+=,/';:\"?><[]{}|`".includes(n[l])&&0!==n[l].trim().length||(l>e+1&&(o?r.push([e,l]):r.push(n.slice(e,l))),e=null),null!==e||"."!==n[l]&&"#"!==n[l]||(e=l),l+1===s&&null!==e&&l>e&&(o?r.push([e,s]):r.push(n.slice(e,s)));return r}});
