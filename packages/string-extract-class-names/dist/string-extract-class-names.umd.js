!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):t.stringExtractClassNames=n()}(this,function(){"use strict";function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(n)}return function(n,e){if(void 0===n)throw new Error("string-extract-class-names: [THROW_ID_01] input must not be undefined!");if("string"!=typeof n)throw new TypeError("string-extract-class-names: [THROW_ID_02] first input should be string, not ".concat(t(n),", currently equal to ").concat(JSON.stringify(n,null,4)));if(null!=e&&e){if("boolean"!=typeof e)throw new TypeError("string-extract-class-names: [THROW_ID_03] second input argument should be a Boolean, not ".concat(t(n),", currently equal to ").concat(JSON.stringify(n,null,4)))}else e=!1;for(var o=null,r=[],u=0,l=n.length;u<l;u++)null===o||!".# ~\\!@$%^&*()+=,/';:\"?><[]{}|`".includes(n[u])&&0!==n[u].trim().length||(u>o+1&&(e?r.push([o,u]):r.push(n.slice(o,u))),o=null),null!==o||"."!==n[u]&&"#"!==n[u]||(o=u),u+1===l&&null!==o&&u>o&&(e?r.push([o,l]):r.push(n.slice(o,l)));return r}});
