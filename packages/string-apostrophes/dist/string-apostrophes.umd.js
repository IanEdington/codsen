/**
 * string-apostrophes
 * Comprehensive, HTML-entities-aware tool to typographically-correct the apostrophes and single/double quotes
 * Version: 1.2.24
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/string-apostrophes
 */

!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).stringApostrophes={})}(this,(function(e){"use strict";function r(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function t(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function o(e,r){if(!Array.isArray(e)||!e.length)return e;const t={strictlyTwoElementsInRangeArrays:!1,progressFn:null,...r};let o,s;if(t.strictlyTwoElementsInRangeArrays&&!e.every((e,r)=>2===e.length||(o=r,s=e.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${o}th range (${JSON.stringify(e[o],null,4)}) has not two but ${s} elements!`);if(!e.every((e,r)=>!(!Number.isInteger(e[0])||e[0]<0||!Number.isInteger(e[1])||e[1]<0)||(o=r,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${o}th range (${JSON.stringify(e[o],null,4)}) does not consist of only natural numbers!`);const n=e.length*e.length;let i=0;return Array.from(e).sort((e,r)=>(t.progressFn&&(i+=1,t.progressFn(Math.floor(100*i/n))),e[0]===r[0]?e[1]<r[1]?-1:e[1]>r[1]?1:0:e[0]<r[0]?-1:1))}function s(e,r){function t(e){return"string"==typeof e}function s(e){return e&&"object"==typeof e&&!Array.isArray(e)}if(!Array.isArray(e)||!e.length)return e;const n={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};let i;if(r){if(!s(r))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(r,null,4)} (type ${typeof r})`);if(i={...n,...r},i.progressFn&&s(i.progressFn)&&!Object.keys(i.progressFn).length)i.progressFn=null;else if(i.progressFn&&"function"!=typeof i.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof i.progressFn}", equal to ${JSON.stringify(i.progressFn,null,4)}`);if(i.mergeType&&1!==i.mergeType&&2!==i.mergeType)if(t(i.mergeType)&&"1"===i.mergeType.trim())i.mergeType=1;else{if(!t(i.mergeType)||"2"!==i.mergeType.trim())throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof i.mergeType}", equal to ${JSON.stringify(i.mergeType,null,4)}`);i.mergeType=2}if("boolean"!=typeof i.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof i.joinRangesThatTouchEdges}", equal to ${JSON.stringify(i.joinRangesThatTouchEdges,null,4)}`)}else i={...n};const u=e.map(e=>[...e]).filter(e=>void 0!==e[2]||e[0]!==e[1]);let a,l,c;a=i.progressFn?o(u,{progressFn:e=>{c=Math.floor(e/5),c!==l&&(l=c,i.progressFn(c))}}):o(u);const p=a.length-1;for(let e=p;e>0;e--)i.progressFn&&(c=Math.floor(78*(1-e/p))+21,c!==l&&c>l&&(l=c,i.progressFn(c))),(a[e][0]<=a[e-1][0]||!i.joinRangesThatTouchEdges&&a[e][0]<a[e-1][1]||i.joinRangesThatTouchEdges&&a[e][0]<=a[e-1][1])&&(a[e-1][0]=Math.min(a[e][0],a[e-1][0]),a[e-1][1]=Math.max(a[e][1],a[e-1][1]),void 0!==a[e][2]&&(a[e-1][0]>=a[e][0]||a[e-1][1]<=a[e][1])&&null!==a[e-1][2]&&(null===a[e][2]&&null!==a[e-1][2]?a[e-1][2]=null:void 0!==a[e-1][2]?2===i.mergeType&&a[e-1][0]===a[e][0]?a[e-1][2]=a[e][2]:a[e-1][2]+=a[e][2]:a[e-1][2]=a[e][2]),a.splice(e,1),e=a.length);return a}function n(e){return null!=e}function i(e){return"string"==typeof e}function u(e,r,t){let o,u=0,a=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(!i(e))throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(null===r)return e;if(!Array.isArray(r))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);if(t&&"function"!=typeof t)throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);o=Array.isArray(r)&&(Number.isInteger(r[0])&&r[0]>=0||/^\d*$/.test(r[0]))&&(Number.isInteger(r[1])&&r[1]>=0||/^\d*$/.test(r[1]))?[Array.from(r)]:Array.from(r);const l=o.length;let c=0;o.forEach((e,r)=>{if(t&&(u=Math.floor(c/l*10),u!==a&&(a=u,t(u))),!Array.isArray(e))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${r}th element not an array: ${JSON.stringify(e,null,4)}, which is ${typeof e}`);if(!Number.isInteger(e[0])||e[0]<0){if(!/^\d*$/.test(e[0]))throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${r}th element, array [${e[0]},${e[1]}]. That array has first element not an integer, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0],null,4)}. Computer doesn't like this.`);o[r][0]=Number.parseInt(o[r][0],10)}if(!Number.isInteger(e[1])){if(!/^\d*$/.test(e[1]))throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${r}th element, array [${e[0]},${e[1]}]. That array has second element not an integer, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1],null,4)}. Computer doesn't like this.`);o[r][1]=Number.parseInt(o[r][1],10)}c+=1});const p=s(o,{progressFn:e=>{t&&(u=10+Math.floor(e/10),u!==a&&(a=u,t(u)))}}),g=p.length;if(g>0){const r=e.slice(p[g-1][1]);e=p.reduce((r,o,s,i)=>{t&&(u=20+Math.floor(s/g*80),u!==a&&(a=u,t(u)));const l=0===s?0:i[s-1][1],c=i[s][0];return r+e.slice(l,c)+(n(i[s][2])?i[s][2]:"")},""),e+=r}return e}function a(e,r){var t=r.from,o=r.to,s=r.value,n=r.convertEntities,i=void 0===n||n,u=r.convertApostrophes,a=void 0===u||u,l=r.offsetBy;if(!Number.isInteger(o)){if(!Number.isInteger(t))throw new Error('string-apostrophes: [THROW_ID_01] options objects keys\' "to" and "from" values are not integers!');o=t+1}var c=[],p="‘",g="’",f="“",h="”",y="′",m="″",d=[".",",",";","!","?"];function w(e){return"string"==typeof e&&e.charCodeAt(0)>=48&&e.charCodeAt(0)<=57}function q(e){return"string"==typeof e&&e.length&&e.toUpperCase()!==e.toLowerCase()}return["'",p,g,y].includes(s)||o===t+1&&["'",p,g,y].includes(e[t])?e[t-1]&&e[o]&&w(e[t-1])&&!q(e[o])?a&&e.slice(t,o)!==(i?"&prime;":y)&&s!==(i?"&prime;":y)?c.push([t,o,i?"&prime;":y]):a||"'"===e.slice(t,o)||"'"===s||c.push([t,o,"'"]):e[o]&&e[o+1]&&"n"===e[o]&&e.slice(t,o)===e.slice(o+1,o+1+(o-t))?a&&e.slice(t,o+2)!==(i?"&rsquo;n&rsquo;":"".concat(g,"n").concat(g))&&s!==(i?"&rsquo;n&rsquo;":"".concat(g,"n").concat(g))?(c.push([t,o+2,i?"&rsquo;n&rsquo;":"".concat(g,"n").concat(g)]),"function"==typeof l&&l(2)):a||"'n'"===e.slice(t,o+2)||"'n'"===s||(c.push([t,o+2,"'n'"]),"function"==typeof l&&l(2)):e[o]&&"t"===e[o].toLowerCase()&&(!e[o+1]||!e[o+1].trim()||"i"===e[o+1].toLowerCase())||e[o]&&e[o+2]&&"t"===e[o].toLowerCase()&&"w"===e[o+1].toLowerCase()&&("a"===e[o+2].toLowerCase()||"e"===e[o+2].toLowerCase()||"i"===e[o+2].toLowerCase()||"o"===e[o+2].toLowerCase())||e[o]&&e[o+1]&&"e"===e[o].toLowerCase()&&"m"===e[o+1].toLowerCase()||e[o]&&e[o+4]&&"c"===e[o].toLowerCase()&&"a"===e[o+1].toLowerCase()&&"u"===e[o+2].toLowerCase()&&"s"===e[o+3].toLowerCase()&&"e"===e[o+4].toLowerCase()||e[o]&&w(e[o])?a&&e.slice(t,o)!==(i?"&rsquo;":g)&&s!==(i?"&rsquo;":g)?c.push([t,o,i?"&rsquo;":g]):a||"'"===e.slice(t,o)||"'"===s||c.push([t,o,"'"]):e[t-1]&&e[o]&&d.includes(e[t-1])?e[o].trim()?'"'===e[o]&&e[o+1]&&!e[o+1].trim()&&(a&&e.slice(t,o+1)!==(i?"&rsquo;&rdquo;":"".concat(g).concat(h))&&s!==(i?"&rsquo;&rdquo;":"".concat(g).concat(h))?(c.push([t,o+1,"".concat(i?"&rsquo;&rdquo;":"".concat(g).concat(h))]),"function"==typeof l&&l(1)):a||"'\""===e.slice(t,o+1)||"'\""===s||(c.push([t,o+1,"'\""]),"function"==typeof l&&l(1))):a&&e.slice(t,o)!==(i?"&rsquo;":g)&&s!==(i?"&rsquo;":g)?c.push([t,o,i?"&rsquo;":g]):a||"'"===e.slice(t,o)||"'"===s||c.push([t,o,"'"]):0===t&&e.slice(o).trim()?a&&e.slice(t,o)!==(i?"&lsquo;":p)&&s!==(i?"&lsquo;":p)?c.push([t,o,i?"&lsquo;":p]):a||"'"===e.slice(t,o)||"'"===s||c.push([t,o,"'"]):!e[o]&&e.slice(0,t).trim()?a&&e.slice(t,o)!==(i?"&rsquo;":g)&&s!==(i?"&rsquo;":g)?c.push([t,o,i?"&rsquo;":g]):a||"'"===e.slice(t,o)||"'"===s||c.push([t,o,"'"]):e[t-1]&&e[o]&&(q(e[t-1])||w(e[t-1]))&&(q(e[o])||w(e[o]))?a?(e[o]&&e[t-5]&&"h"===e[t-5].toLowerCase()&&"a"===e[t-4].toLowerCase()&&"w"===e[t-3].toLowerCase()&&"a"===e[t-2].toLowerCase()&&"i"===e[t-1].toLowerCase()&&"i"===e[o].toLowerCase()||e[t-1]&&"o"===e[t-1].toLowerCase()&&e[o+2]&&"a"===e[o].toLowerCase()&&"h"===e[o+1].toLowerCase()&&"u"===e[o+2].toLowerCase())&&e.slice(t,o)!==(i?"&lsquo;":p)&&s!==(i?"&lsquo;":p)?c.push([t,o,i?"&lsquo;":p]):e.slice(t,o)!==(i?"&rsquo;":g)&&s!==(i?"&rsquo;":g)&&c.push([t,o,i?"&rsquo;":g]):"'"!==e.slice(t,o)&&"'"!==s&&c.push([t,o,"'"]):e[o]&&(q(e[o])||w(e[o]))?a&&e.slice(t,o)!==(i?"&lsquo;":p)&&s!==(i?"&lsquo;":p)?c.push([t,o,i?"&lsquo;":p]):a||"'"===e.slice(t,o)||"'"===s||c.push([t,o,"'"]):q(e[t-1])||w(e[t-1])?a&&e.slice(t,o)!==(i?"&rsquo;":g)&&s!==(i?"&rsquo;":g)?c.push([t,o,i?"&rsquo;":g]):a||"'"===e.slice(t,o)||"'"===s||c.push([t,o,"'"]):e[t-1]&&!e[t-1].trim()?a&&e.slice(t,o)!==(i?"&lsquo;":p)&&s!==(i?"&lsquo;":p)?c.push([t,o,i?"&lsquo;":p]):a||"'"===e.slice(t,o)||"'"===s||c.push([t,o,"'"]):e[o]&&!e[o].trim()&&(a&&e.slice(t,o)!==(i?"&rsquo;":g)&&s!==(i?"&rsquo;":g)?c.push([t,o,i?"&rsquo;":g]):a||"'"===e.slice(t,o)||"'"===s||c.push([t,o,"'"])):(['"',f,h,m].includes(s)||o===t+1&&['"',f,h,m].includes(e[t]))&&(e[t-1]&&w(e[t-1])&&e[o]&&"'"!==e[o]&&'"'!==e[o]&&e[o]!==g&&e[o]!==h&&e[o]!==p&&e[o]!==f?a&&e.slice(t,o)!==(i?"&Prime;":m)&&s!==(i?"&Prime;":m)?c.push([t,o,i?"&Prime;":m]):a||'"'===e.slice(t,o)||'"'===s||c.push([t,o,'"']):e[t-1]&&e[o]&&d.includes(e[t-1])?e[o].trim()?"'"===e[o]&&e[o+1]&&!e[o+1].trim()&&(a&&e.slice(t,o+1)!==(i?"&rdquo;&rsquo;":"".concat(h).concat(g))&&s!==(i?"&rdquo;&rsquo;":"".concat(h).concat(g))?(c.push([t,o+1,i?"&rdquo;&rsquo;":"".concat(h).concat(g)]),"function"==typeof l&&l(1)):a||"\"'"===e.slice(t,o+1)||"\"'"===s||(c.push([t,o+1,"\"'"]),"function"==typeof l&&l(1))):a&&e.slice(t,o)!==(i?"&rdquo;":h)&&s!==(i?"&rdquo;":h)?c.push([t,o,i?"&rdquo;":h]):a||'"'===e.slice(t,o)||'"'===s||c.push([t,o,'"']):0===t&&e[o]&&e.slice(o).trim()?a&&e.slice(t,o)!==(i?"&ldquo;":f)&&s!==(i?"&ldquo;":f)?c.push([t,o,i?"&ldquo;":f]):a||'"'===e.slice(t,o)||'"'===s||c.push([t,o,'"']):!e[o]&&e.slice(0,t).trim()?a&&e.slice(t,o)!==(i?"&rdquo;":h)&&s!==(i?"&rdquo;":h)?c.push([t,o,i?"&rdquo;":h]):a||'"'===e.slice(t,o)||'"'===s||c.push([t,o,'"']):e[o]&&(q(e[o])||w(e[o]))?a&&e.slice(t,o)!==(i?"&ldquo;":f)&&s!==(i?"&ldquo;":f)?c.push([t,o,i?"&ldquo;":f]):a||'"'===e.slice(t,o)||'"'===s||c.push([t,o,'"']):e[t-1]&&(q(e[t-1])||w(e[t-1]))?a&&e.slice(t,o)!==(i?"&rdquo;":h)&&s!==(i?"&rdquo;":h)?c.push([t,o,i?"&rdquo;":h]):a||'"'===e.slice(t,o)||'"'===s||c.push([t,o,'"']):e[t-1]&&!e[t-1].trim()?a&&e.slice(t,o)!==(i?"&ldquo;":f)&&s!==(i?"&ldquo;":f)?c.push([t,o,i?"&ldquo;":f]):a||'"'===e.slice(t,o)||'"'===s||c.push([t,o,'"']):e[o]&&!e[o].trim()&&(a&&e.slice(t,o)!==(i?"&rdquo;":h)&&s!==(i?"&rdquo;":h)?c.push([t,o,i?"&rdquo;":h]):a||'"'===e.slice(t,o)||'"'===s||c.push([t,o,'"']))),c}e.convertAll=function(e,o){for(var s=[],n=function(e){for(var o=1;o<arguments.length;o++){var s=null!=arguments[o]?arguments[o]:{};o%2?t(Object(s),!0).forEach((function(t){r(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):t(Object(s)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(s,r))}))}return e}({convertApostrophes:!0,convertEntities:!1},o),i=0,l=e.length;i<l;i++){n.from=i,n.offsetBy=function(e){i+=e};var c=a(e,n);Array.isArray(c)&&c.length&&(s=s.concat(c))}return{result:u(e,s),ranges:s}},e.convertOne=a,Object.defineProperty(e,"__esModule",{value:!0})}));
