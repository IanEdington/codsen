/**
 * string-apostrophes
 * Comprehensive, HTML-entities-aware tool to typographically-correct the apostrophes and single/double quotes
 * Version: 1.3.2
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://codsen.com/os/string-apostrophes/
 */

!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((r="undefined"!=typeof globalThis?globalThis:r||self).stringApostrophes={})}(this,(function(r){"use strict";function e(r){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}function t(r,e,t){return e in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}function n(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(r);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),t.push.apply(t,n)}return t}function o(r){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?n(Object(o),!0).forEach((function(e){t(r,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(o,e))}))}return r}function s(r){return function(r){if(Array.isArray(r))return u(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,e){if(!r)return;if("string"==typeof r)return u(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);"Object"===t&&r.constructor&&(t=r.constructor.name);if("Map"===t||"Set"===t)return Array.from(r);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return u(r,e)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=r[t];return n}function i(r,e){if(!Array.isArray(r)||!r.length)return r;var t,n,s=o(o({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null}),e);if(s.strictlyTwoElementsInRangeArrays&&!r.filter((function(r){return r})).every((function(r,e){return 2===r.length||(t=e,n=r.length,!1)})))throw new TypeError("ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ".concat(t,"th range (").concat(JSON.stringify(r[t],null,4),") has not two but ").concat(n," elements!"));if(!r.filter((function(r){return r})).every((function(r,e){return!(!Number.isInteger(r[0])||r[0]<0||!Number.isInteger(r[1])||r[1]<0)||(t=e,!1)})))throw new TypeError("ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ".concat(t,"th range (").concat(JSON.stringify(r[t],null,4),") does not consist of only natural numbers!"));var u=Math.pow(r.filter((function(r){return r})).length,2),i=0;return Array.from(r).filter((function(r){return r})).sort((function(r,e){return s.progressFn&&(i+=1,s.progressFn(Math.floor(100*i/u))),r[0]===e[0]?r[1]<e[1]?-1:r[1]>e[1]?1:0:r[0]<e[0]?-1:1}))}function a(r,t){function n(r){return r&&"object"===e(r)&&!Array.isArray(r)}if(!Array.isArray(r)||!r.length)return null;var u,a={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};if(t){if(!n(t))throw new Error("emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n".concat(JSON.stringify(t,null,4)," (type ").concat(e(t),")"));if((u=o(o({},a),t)).progressFn&&n(u.progressFn)&&!Object.keys(u.progressFn).length)u.progressFn=null;else if(u.progressFn&&"function"!=typeof u.progressFn)throw new Error('ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "'.concat(e(u.progressFn),'", equal to ').concat(JSON.stringify(u.progressFn,null,4)));if(u.mergeType&&1!=+u.mergeType&&2!=+u.mergeType)throw new Error('ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "'.concat(e(u.mergeType),'", equal to ').concat(JSON.stringify(u.mergeType,null,4)));if("boolean"!=typeof u.joinRangesThatTouchEdges)throw new Error('ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "'.concat(e(u.joinRangesThatTouchEdges),'", equal to ').concat(JSON.stringify(u.joinRangesThatTouchEdges,null,4)))}else u=o({},a);for(var c,l,p,f=r.filter((function(r){return r})).map((function(r){return s(r)})).filter((function(r){return void 0!==r[2]||r[0]!==r[1]})),g=(c=u.progressFn?i(f,{progressFn:function(r){(p=Math.floor(r/5))!==l&&(l=p,u.progressFn(p))}}):i(f)).length-1,h=g;h>0;h--)u.progressFn&&(p=Math.floor(78*(1-h/g))+21)!==l&&p>l&&(l=p,u.progressFn(p)),(c[h][0]<=c[h-1][0]||!u.joinRangesThatTouchEdges&&c[h][0]<c[h-1][1]||u.joinRangesThatTouchEdges&&c[h][0]<=c[h-1][1])&&(c[h-1][0]=Math.min(c[h][0],c[h-1][0]),c[h-1][1]=Math.max(c[h][1],c[h-1][1]),void 0!==c[h][2]&&(c[h-1][0]>=c[h][0]||c[h-1][1]<=c[h][1])&&null!==c[h-1][2]&&(null===c[h][2]&&null!==c[h-1][2]?c[h-1][2]=null:void 0!==c[h-1][2]?2==+u.mergeType&&c[h-1][0]===c[h][0]?c[h-1][2]=c[h][2]:c[h-1][2]+=c[h][2]:c[h-1][2]=c[h][2]),c.splice(h,1),h=c.length);return c.length?c:null}function c(r){return null!=r}function l(r){return"string"==typeof r}function p(r,t,n){var o,s=0,u=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(!l(r))throw new TypeError("ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ".concat(e(r),", equal to: ").concat(JSON.stringify(r,null,4)));if(t&&!Array.isArray(t))throw new TypeError("ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ".concat(e(t),", equal to: ").concat(JSON.stringify(t,null,4)));if(n&&"function"!=typeof n)throw new TypeError("ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ".concat(e(n),", equal to: ").concat(JSON.stringify(n,null,4)));if(!t||!t.filter((function(r){return r})).length)return r;var i=(o=Array.isArray(t)&&(Number.isInteger(t[0])&&t[0]>=0||/^\d*$/.test(t[0]))&&(Number.isInteger(t[1])&&t[1]>=0||/^\d*$/.test(t[1]))?[Array.from(t)]:Array.from(t)).length,p=0;o.filter((function(r){return r})).forEach((function(r,t){if(n&&(s=Math.floor(p/i*10))!==u&&(u=s,n(s)),!Array.isArray(r))throw new TypeError("ranges-apply: [THROW_ID_05] ranges array, second input arg., has ".concat(t,"th element not an array: ").concat(JSON.stringify(r,null,4),", which is ").concat(e(r)));if(!Number.isInteger(r[0])||r[0]<0){if(!/^\d*$/.test(r[0]))throw new TypeError("ranges-apply: [THROW_ID_06] ranges array, second input arg. has ".concat(t,"th element, array [").concat(r[0],",").concat(r[1],"]. That array has first element not an integer, but ").concat(e(r[0]),", equal to: ").concat(JSON.stringify(r[0],null,4),". Computer doesn't like this."));o[t][0]=Number.parseInt(o[t][0],10)}if(!Number.isInteger(r[1])){if(!/^\d*$/.test(r[1]))throw new TypeError("ranges-apply: [THROW_ID_07] ranges array, second input arg. has ".concat(t,"th element, array [").concat(r[0],",").concat(r[1],"]. That array has second element not an integer, but ").concat(e(r[1]),", equal to: ").concat(JSON.stringify(r[1],null,4),". Computer doesn't like this."));o[t][1]=Number.parseInt(o[t][1],10)}p+=1}));var f=a(o,{progressFn:function(r){n&&(s=10+Math.floor(r/10))!==u&&(u=s,n(s))}});if(!f)return r;var g=f.length;if(g>0){var h=r.slice(f[g-1][1]);r=f.reduce((function(e,t,o,i){n&&(s=20+Math.floor(o/g*80))!==u&&(u=s,n(s));var a=0===o?0:i[o-1][1],l=i[o][0];return e+r.slice(a,l)+(c(i[o][2])?i[o][2]:"")}),""),r+=h}return r}function f(r,e){var t=e.from,n=e.to,o=e.value,s=e.convertEntities,u=void 0===s||s,i=e.convertApostrophes,a=void 0===i||i,c=e.offsetBy;if(!Number.isInteger(n)){if(!Number.isInteger(t))throw new Error('string-apostrophes: [THROW_ID_01] options objects keys\' "to" and "from" values are not integers!');n=t+1}var l=[],p="‘",f="’",g="“",h="”",y="′",m="″",d=[".",",",";","!","?"];function w(r){return"string"==typeof r&&r.charCodeAt(0)>=48&&r.charCodeAt(0)<=57}function q(r){return"string"==typeof r&&r.length&&r.toUpperCase()!==r.toLowerCase()}return["'",p,f,y].includes(o)||n===t+1&&["'",p,f,y].includes(r[t])?r[t-1]&&r[n]&&w(r[t-1])&&!q(r[n])?a&&r.slice(t,n)!==(u?"&prime;":y)&&o!==(u?"&prime;":y)?l.push([t,n,u?"&prime;":y]):a||"'"===r.slice(t,n)||"'"===o||l.push([t,n,"'"]):r[n]&&r[n+1]&&"n"===r[n]&&r.slice(t,n)===r.slice(n+1,n+1+(n-t))?a&&r.slice(t,n+2)!==(u?"&rsquo;n&rsquo;":"".concat(f,"n").concat(f))&&o!==(u?"&rsquo;n&rsquo;":"".concat(f,"n").concat(f))?(l.push([t,n+2,u?"&rsquo;n&rsquo;":"".concat(f,"n").concat(f)]),"function"==typeof c&&c(2)):a||"'n'"===r.slice(t,n+2)||"'n'"===o||(l.push([t,n+2,"'n'"]),"function"==typeof c&&c(2)):r[n]&&"t"===r[n].toLowerCase()&&(!r[n+1]||!r[n+1].trim()||"i"===r[n+1].toLowerCase())||r[n]&&r[n+2]&&"t"===r[n].toLowerCase()&&"w"===r[n+1].toLowerCase()&&("a"===r[n+2].toLowerCase()||"e"===r[n+2].toLowerCase()||"i"===r[n+2].toLowerCase()||"o"===r[n+2].toLowerCase())||r[n]&&r[n+1]&&"e"===r[n].toLowerCase()&&"m"===r[n+1].toLowerCase()||r[n]&&r[n+4]&&"c"===r[n].toLowerCase()&&"a"===r[n+1].toLowerCase()&&"u"===r[n+2].toLowerCase()&&"s"===r[n+3].toLowerCase()&&"e"===r[n+4].toLowerCase()||r[n]&&w(r[n])?a&&r.slice(t,n)!==(u?"&rsquo;":f)&&o!==(u?"&rsquo;":f)?l.push([t,n,u?"&rsquo;":f]):a||"'"===r.slice(t,n)||"'"===o||l.push([t,n,"'"]):r[t-1]&&r[n]&&d.includes(r[t-1])?r[n].trim()?'"'===r[n]&&r[n+1]&&!r[n+1].trim()&&(a&&r.slice(t,n+1)!==(u?"&rsquo;&rdquo;":"".concat(f).concat(h))&&o!==(u?"&rsquo;&rdquo;":"".concat(f).concat(h))?(l.push([t,n+1,"".concat(u?"&rsquo;&rdquo;":"".concat(f).concat(h))]),"function"==typeof c&&c(1)):a||"'\""===r.slice(t,n+1)||"'\""===o||(l.push([t,n+1,"'\""]),"function"==typeof c&&c(1))):a&&r.slice(t,n)!==(u?"&rsquo;":f)&&o!==(u?"&rsquo;":f)?l.push([t,n,u?"&rsquo;":f]):a||"'"===r.slice(t,n)||"'"===o||l.push([t,n,"'"]):0===t&&r.slice(n).trim()?a&&r.slice(t,n)!==(u?"&lsquo;":p)&&o!==(u?"&lsquo;":p)?l.push([t,n,u?"&lsquo;":p]):a||"'"===r.slice(t,n)||"'"===o||l.push([t,n,"'"]):!r[n]&&r.slice(0,t).trim()?a&&r.slice(t,n)!==(u?"&rsquo;":f)&&o!==(u?"&rsquo;":f)?l.push([t,n,u?"&rsquo;":f]):a||"'"===r.slice(t,n)||"'"===o||l.push([t,n,"'"]):r[t-1]&&r[n]&&(q(r[t-1])||w(r[t-1]))&&(q(r[n])||w(r[n]))?a?(r[n]&&r[t-5]&&"h"===r[t-5].toLowerCase()&&"a"===r[t-4].toLowerCase()&&"w"===r[t-3].toLowerCase()&&"a"===r[t-2].toLowerCase()&&"i"===r[t-1].toLowerCase()&&"i"===r[n].toLowerCase()||r[t-1]&&"o"===r[t-1].toLowerCase()&&r[n+2]&&"a"===r[n].toLowerCase()&&"h"===r[n+1].toLowerCase()&&"u"===r[n+2].toLowerCase())&&r.slice(t,n)!==(u?"&lsquo;":p)&&o!==(u?"&lsquo;":p)?l.push([t,n,u?"&lsquo;":p]):r.slice(t,n)!==(u?"&rsquo;":f)&&o!==(u?"&rsquo;":f)&&l.push([t,n,u?"&rsquo;":f]):"'"!==r.slice(t,n)&&"'"!==o&&l.push([t,n,"'"]):r[n]&&(q(r[n])||w(r[n]))?a&&r.slice(t,n)!==(u?"&lsquo;":p)&&o!==(u?"&lsquo;":p)?l.push([t,n,u?"&lsquo;":p]):a||"'"===r.slice(t,n)||"'"===o||l.push([t,n,"'"]):q(r[t-1])||w(r[t-1])?a&&r.slice(t,n)!==(u?"&rsquo;":f)&&o!==(u?"&rsquo;":f)?l.push([t,n,u?"&rsquo;":f]):a||"'"===r.slice(t,n)||"'"===o||l.push([t,n,"'"]):r[t-1]&&!r[t-1].trim()?a&&r.slice(t,n)!==(u?"&lsquo;":p)&&o!==(u?"&lsquo;":p)?l.push([t,n,u?"&lsquo;":p]):a||"'"===r.slice(t,n)||"'"===o||l.push([t,n,"'"]):r[n]&&!r[n].trim()&&(a&&r.slice(t,n)!==(u?"&rsquo;":f)&&o!==(u?"&rsquo;":f)?l.push([t,n,u?"&rsquo;":f]):a||"'"===r.slice(t,n)||"'"===o||l.push([t,n,"'"])):(['"',g,h,m].includes(o)||n===t+1&&['"',g,h,m].includes(r[t]))&&(r[t-1]&&w(r[t-1])&&r[n]&&"'"!==r[n]&&'"'!==r[n]&&r[n]!==f&&r[n]!==h&&r[n]!==p&&r[n]!==g?a&&r.slice(t,n)!==(u?"&Prime;":m)&&o!==(u?"&Prime;":m)?l.push([t,n,u?"&Prime;":m]):a||'"'===r.slice(t,n)||'"'===o||l.push([t,n,'"']):r[t-1]&&r[n]&&d.includes(r[t-1])?r[n].trim()?"'"===r[n]&&r[n+1]&&!r[n+1].trim()&&(a&&r.slice(t,n+1)!==(u?"&rdquo;&rsquo;":"".concat(h).concat(f))&&o!==(u?"&rdquo;&rsquo;":"".concat(h).concat(f))?(l.push([t,n+1,u?"&rdquo;&rsquo;":"".concat(h).concat(f)]),"function"==typeof c&&c(1)):a||"\"'"===r.slice(t,n+1)||"\"'"===o||(l.push([t,n+1,"\"'"]),"function"==typeof c&&c(1))):a&&r.slice(t,n)!==(u?"&rdquo;":h)&&o!==(u?"&rdquo;":h)?l.push([t,n,u?"&rdquo;":h]):a||'"'===r.slice(t,n)||'"'===o||l.push([t,n,'"']):0===t&&r[n]&&r.slice(n).trim()?a&&r.slice(t,n)!==(u?"&ldquo;":g)&&o!==(u?"&ldquo;":g)?l.push([t,n,u?"&ldquo;":g]):a||'"'===r.slice(t,n)||'"'===o||l.push([t,n,'"']):!r[n]&&r.slice(0,t).trim()?a&&r.slice(t,n)!==(u?"&rdquo;":h)&&o!==(u?"&rdquo;":h)?l.push([t,n,u?"&rdquo;":h]):a||'"'===r.slice(t,n)||'"'===o||l.push([t,n,'"']):r[n]&&(q(r[n])||w(r[n]))?a&&r.slice(t,n)!==(u?"&ldquo;":g)&&o!==(u?"&ldquo;":g)?l.push([t,n,u?"&ldquo;":g]):a||'"'===r.slice(t,n)||'"'===o||l.push([t,n,'"']):r[t-1]&&(q(r[t-1])||w(r[t-1]))?a&&r.slice(t,n)!==(u?"&rdquo;":h)&&o!==(u?"&rdquo;":h)?l.push([t,n,u?"&rdquo;":h]):a||'"'===r.slice(t,n)||'"'===o||l.push([t,n,'"']):r[t-1]&&!r[t-1].trim()?a&&r.slice(t,n)!==(u?"&ldquo;":g)&&o!==(u?"&ldquo;":g)?l.push([t,n,u?"&ldquo;":g]):a||'"'===r.slice(t,n)||'"'===o||l.push([t,n,'"']):r[n]&&!r[n].trim()&&(a&&r.slice(t,n)!==(u?"&rdquo;":h)&&o!==(u?"&rdquo;":h)?l.push([t,n,u?"&rdquo;":h]):a||'"'===r.slice(t,n)||'"'===o||l.push([t,n,'"']))),l}r.convertAll=function(r,e){for(var t=[],n=o({convertApostrophes:!0,convertEntities:!1},e),s=0,u=r.length;s<u;s++){n.from=s,n.offsetBy=function(r){s+=r};var i=f(r,n);Array.isArray(i)&&i.length&&(t=t.concat(i))}return{result:p(r,t),ranges:t}},r.convertOne=f,Object.defineProperty(r,"__esModule",{value:!0})}));
