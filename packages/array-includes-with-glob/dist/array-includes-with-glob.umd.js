/**
 * array-includes-with-glob
 * like _.includes but with wildcards
 * Version: 2.12.33
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/array-includes-with-glob
 */

!function(r,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(r=r||self).arrayIncludesWithGlob=t()}(this,(function(){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(t)}const t=/[|\\{}()[\]^$+*?.-]/g;const e=new Map;function n(r,n){n={caseSensitive:!1,...n};const o=r+JSON.stringify(n);if(e.has(o))return e.get(o);const a="!"===r[0];a&&(r=r.slice(1)),r=(r=>{if("string"!=typeof r)throw new TypeError("Expected a string");return r.replace(t,"\\$&")})(r).replace(/\\\*/g,".*");const s=new RegExp(`^${r}$`,n.caseSensitive?"":"i");return s.negated=a,e.set(o,s),s}var o=(r,t,e)=>{if(!Array.isArray(r)||!Array.isArray(t))throw new TypeError(`Expected two arrays, got ${typeof r} ${typeof t}`);if(0===t.length)return r;const o="!"===t[0][0];t=t.map(r=>n(r,e));const a=[];for(const e of r){let r=o;for(const n of t)n.test(e)&&(r=!n.negated);r&&a.push(e)}return a};o.isMatch=(r,t,e)=>{const o=Array.isArray(r)?r:[r],a=Array.isArray(t)?t:[t];return o.some(r=>a.every(t=>{const o=n(t,e),a=o.test(r);return o.negated?!a:a}))};var a=Array.isArray;return function(t,e,n){function s(r){return null!=r}function i(r){return"string"==typeof r}var u={arrayVsArrayAllMustBeFound:"any"},c=Object.assign({},u,n);if(0===arguments.length)throw new Error("array-includes-with-glob/arrayIncludesWithGlob(): [THROW_ID_01] all inputs missing!");if(1===arguments.length)throw new Error("array-includes-with-glob/arrayIncludesWithGlob(): [THROW_ID_02] second argument missing!");if(!a(t)){if(!i(t))throw new Error("array-includes-with-glob/arrayIncludesWithGlob(): [THROW_ID_03] first argument must be an array! It was given as ".concat(r(t)));t=[t]}if(!i(e)&&!a(e))throw new Error("array-includes-with-glob/arrayIncludesWithGlob(): [THROW_ID_04] second argument must be a string or array of strings! It was given as ".concat(r(e)));if("any"!==c.arrayVsArrayAllMustBeFound&&"all"!==c.arrayVsArrayAllMustBeFound)throw new Error("array-includes-with-glob/arrayIncludesWithGlob(): [THROW_ID_05] opts.arrayVsArrayAllMustBeFound was customised to an unrecognised value, ".concat(c.arrayVsArrayAllMustBeFound,'. It must be equal to either "any" or "all".'));if(0===t.length)return!1;var y=t.filter((function(r){return s(r)}));return 0!==y.length&&(i(e)?y.some((function(r){return o.isMatch(r,e,{caseSensitive:!0})})):"any"===c.arrayVsArrayAllMustBeFound?e.some((function(r){return y.some((function(t){return o.isMatch(t,r,{caseSensitive:!0})}))})):e.every((function(r){return y.some((function(t){return o.isMatch(t,r,{caseSensitive:!0})}))})))}}));
