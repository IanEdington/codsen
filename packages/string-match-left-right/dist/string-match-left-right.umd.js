/**
 * string-match-left-right
 * Match substrings on the left or right of a given index, ignoring whitespace
 * Version: 6.0.3
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://codsen.com/os/string-match-left-right/
 */

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).stringMatchLeftRight={})}(this,(function(t){"use strict";function e(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function r(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,i)}return r}function i(t){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?r(Object(n),!0).forEach((function(r){e(t,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function n(t){return t&&"object"==typeof t&&!Array.isArray(t)}function a(t){return"string"==typeof t}var o={cb:void 0,i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],maxMismatches:0,firstMustMatch:!1,lastMustMatch:!1},h=function(t){return t+1};function s(t,e,r,n,a,s){void 0===a&&(a=!1),void 0===s&&(s=h);var c="function"==typeof r?r():r;if(+e<0&&a&&"EOL"===c)return c;var f=i(i({},o),n);if(e>=t.length&&!a)return!1;for(var u=a?1:r.length,g=!1,l=!1,m=f.maxMismatches,p=e,y=!1,b=!1,M=!1;t[p];){var d=s(p);if(f.trimBeforeMatching&&""===t[p].trim()){if(!t[d]&&a&&"EOL"===r)return!0;p=s(p)}else if(f&&!f.i&&f.trimCharsBeforeMatching&&f.trimCharsBeforeMatching.includes(t[p])||f&&f.i&&f.trimCharsBeforeMatching&&f.trimCharsBeforeMatching.map((function(t){return t.toLowerCase()})).includes(t[p].toLowerCase())){if(a&&"EOL"===r&&!t[d])return!0;p=s(p)}else{var v=d>p?r[r.length-u]:r[u-1];if(!f.i&&t[p]===v||f.i&&t[p].toLowerCase()===v.toLowerCase()){if(y||(y=!0),l||(l=!0),u===r.length?b=!0:1===u&&(M=!0),(u-=1)<1)return p}else{if(!(f.maxMismatches&&m&&p))return!(0!==p||1!==u||f.lastMustMatch||!l)&&0;m-=1;for(var O=0;O<=m;O++){var w=d>p?r[r.length-u+1+O]:r[u-2-O],B=t[s(p)];if(w&&(!f.i&&t[p]===w||f.i&&t[p].toLowerCase()===w.toLowerCase())&&(!f.firstMustMatch||u!==r.length)){u-=2,y=!0;break}if(B&&w&&(!f.i&&B===w||f.i&&B.toLowerCase()===w.toLowerCase())&&(!f.firstMustMatch||u!==r.length)){u-=1,y=!0;break}if(void 0===w&&m>=0&&y&&(!f.firstMustMatch||b)&&(!f.lastMustMatch||M))return p}y||(g=p)}if(!1!==g&&g!==p&&(g=!1),u<1)return p;p=s(p)}}return u>0?!(!a||"EOL"!==c)||!!(f&&f.maxMismatches>=u&&l)&&(g||0):void 0}function c(t,e,r,h,c){if(n(c)&&Object.prototype.hasOwnProperty.call(c,"trimBeforeMatching")&&"boolean"!=typeof c.trimBeforeMatching)throw new Error("string-match-left-right/"+t+"(): [THROW_ID_09] opts.trimBeforeMatching should be boolean!"+(Array.isArray(c.trimBeforeMatching)?" Did you mean to use opts.trimCharsBeforeMatching?":""));var f,u,g,l=i(i({},o),c);if("string"==typeof l.trimCharsBeforeMatching&&(l.trimCharsBeforeMatching="string"==typeof(f=l.trimCharsBeforeMatching)?f.length?[f]:[]:f),l.trimCharsBeforeMatching=l.trimCharsBeforeMatching.map((function(t){return a(t)?t:String(t)})),!a(e))return!1;if(!e.length)return!1;if(!Number.isInteger(r)||r<0)throw new Error("string-match-left-right/"+t+"(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: "+typeof r+", equal to:\n"+JSON.stringify(r,null,4));if(a(h))u=[h];else if(Array.isArray(h))u=h;else if(h){if("function"!=typeof h)throw new Error("string-match-left-right/"+t+"(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's "+typeof h+", equal to:\n"+JSON.stringify(h,null,4));(u=[]).push(h)}else u=h;if(c&&!n(c))throw new Error("string-match-left-right/"+t+"(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type \""+typeof c+'", and equal to:\n'+JSON.stringify(c,null,4));var m=0,p="";if(l&&l.trimCharsBeforeMatching&&l.trimCharsBeforeMatching.some((function(t,e){return t.length>1&&(m=e,p=t,!0)})))throw new Error("string-match-left-right/"+t+"(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index "+m+" is longer than 1 character, "+p.length+" (equals to "+p+"). Please split it into separate characters and put into array as separate elements.");if(!u||!Array.isArray(u)||Array.isArray(u)&&!u.length||Array.isArray(u)&&1===u.length&&a(u[0])&&!u[0].trim()){if("function"==typeof l.cb){var y,b=r;if("matchLeftIncl"!==t&&"matchRight"!==t||(b+=1),"L"===t[5])for(var M=b;M--;){var d=e[M];if((!l.trimBeforeMatching||l.trimBeforeMatching&&void 0!==d&&d.trim())&&(!l.trimCharsBeforeMatching||!l.trimCharsBeforeMatching.length||void 0!==d&&!l.trimCharsBeforeMatching.includes(d))){y=M;break}}else if(t.startsWith("matchRight"))for(var v=b;v<e.length;v++){var O=e[v];if((!l.trimBeforeMatching||l.trimBeforeMatching&&O.trim())&&(!l.trimCharsBeforeMatching||!l.trimCharsBeforeMatching.length||!l.trimCharsBeforeMatching.includes(O))){y=v;break}}if(void 0===y)return!1;var w=e[y],B=y+1,C="";return B&&B>0&&(C=e.slice(0,B)),"L"===t[5]?l.cb(w,C,y):(y&&y>0&&(C=e.slice(y)),l.cb(w,C,y))}var L="";throw c||(L=" More so, the whole options object, the fourth input argument, is missing!"),new Error("string-match-left-right/"+t+'(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!'+L)}for(var j=0,I=u.length;j<I;j++){var R=u[j],_=void 0,E=void 0,A="",P=r;"matchRight"===t?P+=1:"matchLeft"===t&&(P-=1);var T=s(e,P,R,l,g="function"==typeof u[j],(function(e){return"L"===t[5]?e-1:e+1}));if(T&&g&&"function"==typeof R&&"EOL"===R())return!(!R()||l.cb&&!l.cb(_,A,E))&&R();if(Number.isInteger(T)&&(E=t.startsWith("matchLeft")?T-1:T+1,A="L"===t[5]?e.slice(0,T):e.slice(E)),E<0&&(E=void 0),e[E]&&(_=e[E]),Number.isInteger(T)&&(!l.cb||l.cb(_,A,E)))return R}return!1}t.matchLeft=function(t,e,r,i){return c("matchLeft",t,e,r,i)},t.matchLeftIncl=function(t,e,r,i){return c("matchLeftIncl",t,e,r,i)},t.matchRight=function(t,e,r,i){return c("matchRight",t,e,r,i)},t.matchRightIncl=function(t,e,r,i){return c("matchRightIncl",t,e,r,i)},Object.defineProperty(t,"__esModule",{value:!0})}));
