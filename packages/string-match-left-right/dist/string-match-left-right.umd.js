/**
 * string-match-left-right
 * Match substrings on the left or right of a given index, ignoring whitespace
 * Version: 5.0.0
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://codsen.com/os/string-match-left-right/
 */

!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((t="undefined"!=typeof globalThis?globalThis:t||self).stringMatchLeftRight={})}(this,(function(t){"use strict";function r(t,r,e){return r in t?Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[r]=e,t}function e(t,r){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable}))),e.push.apply(e,i)}return e}function i(t){for(var i=1;arguments.length>i;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?e(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):e(Object(n)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))}))}return t}function n(t){return t&&"object"==typeof t&&!Array.isArray(t)}function a(t){return"string"==typeof t}var o={cb:void 0,i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],maxMismatches:0,firstMustMatch:!1,lastMustMatch:!1};function h(t,r,e,i,n,a){var o="function"==typeof e?e():e;if(0>r&&n&&"EOL"===o)return o;if(r>=t.length&&!n)return!1;for(var h=n?1:e.length,s=!1,c=!1,f=i.maxMismatches,u=r,g=!1,l=!1,m=!1;t[u];){var p=a(u);if(i.trimBeforeMatching&&""===t[u].trim()){if(!t[p]&&n&&"EOL"===e)return!0;u=a(u)}else if(i&&!i.i&&i.trimCharsBeforeMatching&&i.trimCharsBeforeMatching.includes(t[u])||i&&i.i&&i.trimCharsBeforeMatching&&i.trimCharsBeforeMatching.map((function(t){return t.toLowerCase()})).includes(t[u].toLowerCase())){if(n&&"EOL"===e&&!t[p])return!0;u=a(u)}else{var y=p>u?e[e.length-h]:e[h-1];if(!i.i&&t[u]===y||i.i&&t[u].toLowerCase()===y.toLowerCase()){if(g||(g=!0),c||(c=!0),h===e.length?l=!0:1===h&&(m=!0),1>(h-=1))return u}else{if(!(i.maxMismatches&&f&&u))return!(0!==u||1!==h||i.lastMustMatch||!c)&&0;f-=1;for(var b=0;f>=b;b++){var M=p>u?e[e.length-h+1+b]:e[h-2-b],d=t[a(u)];if(M&&(!i.i&&t[u]===M||i.i&&t[u].toLowerCase()===M.toLowerCase())&&(!i.firstMustMatch||h!==e.length)){h-=2,g=!0;break}if(d&&M&&(!i.i&&d===M||i.i&&d.toLowerCase()===M.toLowerCase())&&(!i.firstMustMatch||h!==e.length)){h-=1,g=!0;break}if(void 0===M&&f>=0&&g&&(!i.firstMustMatch||l)&&(!i.lastMustMatch||m))return u}g||(s=u)}if(!1!==s&&s!==u&&(s=!1),1>h)return u;u=a(u)}}return h>0?!(!n||"EOL"!==o)||!(!i||h>i.maxMismatches||!c)&&(s||0):void 0}function s(t,r,e,s,c){if(n(c)&&Object.prototype.hasOwnProperty.call(c,"trimBeforeMatching")&&"boolean"!=typeof c.trimBeforeMatching)throw Error("string-match-left-right/"+t+"(): [THROW_ID_09] opts.trimBeforeMatching should be boolean!"+(Array.isArray(c.trimBeforeMatching)?" Did you mean to use opts.trimCharsBeforeMatching?":""));var f,u,g,l=i(i({},o),c);if(l.trimCharsBeforeMatching=("string"==typeof(f=l.trimCharsBeforeMatching)?f.length?[f]:[]:f)||[],l.trimCharsBeforeMatching=l.trimCharsBeforeMatching.map((function(t){return a(t)?t:t+""})),!a(r))return!1;if(!r.length)return!1;if(!Number.isInteger(e)||0>e)throw Error("string-match-left-right/"+t+"(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: "+typeof e+", equal to:\n"+JSON.stringify(e,null,4));if(a(s))u=[s];else if(Array.isArray(s))u=s;else if(s){if("function"!=typeof s)throw Error("string-match-left-right/"+t+"(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's "+typeof s+", equal to:\n"+JSON.stringify(s,null,4));(u=[]).push(s)}else u=s;if(c&&!n(c))throw Error("string-match-left-right/"+t+"(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type \""+typeof c+'", and equal to:\n'+JSON.stringify(c,null,4));var m=0,p="";if(l&&l.trimCharsBeforeMatching&&l.trimCharsBeforeMatching.some((function(t,r){return t.length>1&&(m=r,p=t,!0)})))throw Error("string-match-left-right/"+t+"(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index "+m+" is longer than 1 character, "+p.length+" (equals to "+p+"). Please split it into separate characters and put into array as separate elements.");if(!u||!Array.isArray(u)||Array.isArray(u)&&!u.length||Array.isArray(u)&&1===u.length&&a(u[0])&&!u[0].trim()){if("function"==typeof l.cb){var y,b=e;if("matchLeftIncl"!==t&&"matchRight"!==t||(b+=1),"L"===t[5])for(var M=b;M--;){var d=r[M];if((!l.trimBeforeMatching||l.trimBeforeMatching&&void 0!==d&&d.trim())&&(!l.trimCharsBeforeMatching||!l.trimCharsBeforeMatching.length||void 0!==d&&!l.trimCharsBeforeMatching.includes(d))){y=M;break}}else if(t.startsWith("matchRight"))for(var v=b;r.length>v;v++){var O=r[v];if((!l.trimBeforeMatching||l.trimBeforeMatching&&O.trim())&&(!l.trimCharsBeforeMatching||!l.trimCharsBeforeMatching.length||!l.trimCharsBeforeMatching.includes(O))){y=v;break}}if(void 0===y)return!1;var B=r[y],C=y+1,w="";return C&&C>0&&(w=r.slice(0,C)),"L"===t[5]?l.cb(B,w,y):(y&&y>0&&(w=r.slice(y)),l.cb(B,w,y))}var L="";throw c||(L=" More so, the whole options object, the fourth input argument, is missing!"),Error("string-match-left-right/"+t+'(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!'+L)}for(var j=0,I=u.length;I>j;j++){var R=u[j],_=void 0,E=void 0,A="",P=e;"matchRight"===t?P+=1:"matchLeft"===t&&(P-=1);var T=h(r,P,R,l,g="function"==typeof u[j],(function(r){return"L"===t[5]?r-1:r+1}));if(T&&g&&"function"==typeof R&&"EOL"===R())return!(!R()||l.cb&&!l.cb(_,A,E))&&R();if(Number.isInteger(T)&&(E=t.startsWith("matchLeft")?T-1:T+1,A="L"===t[5]?r.slice(0,T):r.slice(E)),0>E&&(E=void 0),r[E]&&(_=r[E]),Number.isInteger(T)&&(!l.cb||l.cb(_,A,E)))return R}return!1}t.matchLeft=function(t,r,e,i){return s("matchLeft",t,r,e,i)},t.matchLeftIncl=function(t,r,e,i){return s("matchLeftIncl",t,r,e,i)},t.matchRight=function(t,r,e,i){return s("matchRight",t,r,e,i)},t.matchRightIncl=function(t,r,e,i){return s("matchRightIncl",t,r,e,i)},Object.defineProperty(t,"__esModule",{value:!0})}));
