/**
 * util-array-object-or-both
 * Validate and normalise user choice: array, object or both?
 * Version: 2.7.55
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/util-array-object-or-both
 */

!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(t=t||self).utilArrayObjectOrBoth=r()}(this,(function(){"use strict";function t(r){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(r)}var r=/^\s+|\s+$/g,n=/^[-+]0x[0-9a-f]+$/i,e=/^0b[01]+$/i,o=/^0o[0-7]+$/i,u=/^(?:0|[1-9]\d*)$/,c=parseInt;function a(t){return t!=t}function i(t,r){return function(t,r){for(var n=-1,e=t?t.length:0,o=Array(e);++n<e;)o[n]=r(t[n],n,t);return o}(r,(function(r){return t[r]}))}var f,l,s=Object.prototype,y=s.hasOwnProperty,b=s.toString,p=s.propertyIsEnumerable,v=(f=Object.keys,l=Object,function(t){return f(l(t))}),g=Math.max;function m(t,r){var n=O(t)||function(t){return function(t){return S(t)&&d(t)}(t)&&y.call(t,"callee")&&(!p.call(t,"callee")||"[object Arguments]"==b.call(t))}(t)?function(t,r){for(var n=-1,e=Array(t);++n<t;)e[n]=r(n);return e}(t.length,String):[],e=n.length,o=!!e;for(var u in t)!r&&!y.call(t,u)||o&&("length"==u||j(u,e))||n.push(u);return n}function h(t){if(n=(r=t)&&r.constructor,e="function"==typeof n&&n.prototype||s,r!==e)return v(t);var r,n,e,o=[];for(var u in Object(t))y.call(t,u)&&"constructor"!=u&&o.push(u);return o}function j(t,r){return!!(r=null==r?9007199254740991:r)&&("number"==typeof t||u.test(t))&&t>-1&&t%1==0&&t<r}var O=Array.isArray;function d(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}(t.length)&&!function(t){var r=w(t)?b.call(t):"";return"[object Function]"==r||"[object GeneratorFunction]"==r}(t)}function w(t){var r=typeof t;return!!t&&("object"==r||"function"==r)}function S(t){return!!t&&"object"==typeof t}var N=function(t,u,f,l){var s;t=d(t)?t:(s=t)?i(s,function(t){return d(t)?m(t):h(t)}(s)):[],f=f&&!l?function(t){var u=function(t){if(!t)return 0===t?t:0;if((t=function(t){if("number"==typeof t)return t;if(function(t){return"symbol"==typeof t||S(t)&&"[object Symbol]"==b.call(t)}(t))return NaN;if(w(t)){var u="function"==typeof t.valueOf?t.valueOf():t;t=w(u)?u+"":u}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(r,"");var a=e.test(t);return a||o.test(t)?c(t.slice(2),a?2:8):n.test(t)?NaN:+t}(t))===1/0||t===-1/0){return 17976931348623157e292*(t<0?-1:1)}return t==t?t:0}(t),a=u%1;return u==u?a?u-a:u:0}(f):0;var y=t.length;return f<0&&(f=g(y+f,0)),function(t){return"string"==typeof t||!O(t)&&S(t)&&"[object String]"==b.call(t)}(t)?f<=y&&t.indexOf(u,f)>-1:!!y&&function(t,r,n){if(r!=r)return function(t,r,n,e){for(var o=t.length,u=n+(e?1:-1);e?u--:++u<o;)if(r(t[u],u,t))return u;return-1}(t,a,n);for(var e=n-1,o=t.length;++e<o;)if(t[e]===r)return e;return-1}(t,u,f)>-1};var A=Function.prototype,I=Object.prototype,C=A.toString,P=I.hasOwnProperty,_=C.call(Object),x=I.toString,E=function(t,r){return function(n){return t(r(n))}}(Object.getPrototypeOf,Object);var T=function(t){if(!function(t){return!!t&&"object"==typeof t}(t)||"[object Object]"!=x.call(t)||function(t){var r=!1;if(null!=t&&"function"!=typeof t.toString)try{r=!!(t+"")}catch(t){}return r}(t))return!1;var r=E(t);if(null===r)return!0;var n=P.call(r,"constructor")&&r.constructor;return"function"==typeof n&&n instanceof n&&C.call(n)==_};return function(r,n){function e(t){return null!=t}if(!e(r))throw new Error("util-array-object-or-both/validate(): [THROW_ID_01] Please provide a string to work on. Currently it's equal to ".concat(JSON.stringify(r,null,4)));if("string"!=typeof r)throw new Error("util-array-object-or-both/validate(): [THROW_ID_02] Input must be string! Currently it's ".concat(t(r),", equal to: ").concat(JSON.stringify(r,null,4)));if(e(n)&&!T(n))throw new Error("util-array-object-or-both/validate(): [THROW_ID_03] Second argument, options object, must be, well, object! Currenlty it's: ".concat(t(n),", equal to: ").concat(JSON.stringify(n,null,4)));var o=Object.assign({},{msg:"",optsVarName:"given variable"},n);if(e(o.msg)&&o.msg.length>0&&(o.msg="".concat(o.msg.trim()," ")),"given variable"!==o.optsVarName&&(o.optsVarName='variable "'.concat(o.optsVarName,'"')),N(["object","objects","obj","ob","o"],r.toLowerCase().trim()))return"object";if(N(["array","arrays","arr","aray","arr","a"],r.toLowerCase().trim()))return"array";if(N(["any","all","everything","both","either","each","whatever","whatevs","e"],r.toLowerCase().trim()))return"any";throw new TypeError("".concat(o.msg,"The ").concat(o.optsVarName," was customised to an unrecognised value: ").concat(r,". Please check it against the API documentation."))}}));
