/**
 * util-array-object-or-both
 * Validate and normalise user choice: array, object or both?
 * Version: 2.7.49
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/util-array-object-or-both
 */

!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(t=t||self).utilArrayObjectOrBoth=r()}(this,(function(){"use strict";function t(r){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(r)}var r=1/0,n=9007199254740991,e=17976931348623157e292,o=NaN,u="[object Arguments]",c="[object Function]",a="[object GeneratorFunction]",i="[object String]",f="[object Symbol]",l=/^\s+|\s+$/g,s=/^[-+]0x[0-9a-f]+$/i,y=/^0b[01]+$/i,b=/^0o[0-7]+$/i,p=/^(?:0|[1-9]\d*)$/,v=parseInt;function g(t){return t!=t}function m(t,r){return function(t,r){for(var n=-1,e=t?t.length:0,o=Array(e);++n<e;)o[n]=r(t[n],n,t);return o}(r,(function(r){return t[r]}))}var h,j,O=Object.prototype,d=O.hasOwnProperty,w=O.toString,S=O.propertyIsEnumerable,N=(h=Object.keys,j=Object,function(t){return h(j(t))}),A=Math.max;function I(t,r){var n=_(t)||function(t){return function(t){return T(t)&&x(t)}(t)&&d.call(t,"callee")&&(!S.call(t,"callee")||w.call(t)==u)}(t)?function(t,r){for(var n=-1,e=Array(t);++n<t;)e[n]=r(n);return e}(t.length,String):[],e=n.length,o=!!e;for(var c in t)!r&&!d.call(t,c)||o&&("length"==c||P(c,e))||n.push(c);return n}function C(t){if(n=(r=t)&&r.constructor,e="function"==typeof n&&n.prototype||O,r!==e)return N(t);var r,n,e,o=[];for(var u in Object(t))d.call(t,u)&&"constructor"!=u&&o.push(u);return o}function P(t,r){return!!(r=null==r?n:r)&&("number"==typeof t||p.test(t))&&t>-1&&t%1==0&&t<r}var _=Array.isArray;function x(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=n}(t.length)&&!function(t){var r=E(t)?w.call(t):"";return r==c||r==a}(t)}function E(t){var r=typeof t;return!!t&&("object"==r||"function"==r)}function T(t){return!!t&&"object"==typeof t}var V=function(t,n,u,c){var a;t=x(t)?t:(a=t)?m(a,function(t){return x(t)?I(t):C(t)}(a)):[],u=u&&!c?function(t){var n=function(t){if(!t)return 0===t?t:0;if((t=function(t){if("number"==typeof t)return t;if(function(t){return"symbol"==typeof t||T(t)&&w.call(t)==f}(t))return o;if(E(t)){var r="function"==typeof t.valueOf?t.valueOf():t;t=E(r)?r+"":r}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(l,"");var n=y.test(t);return n||b.test(t)?v(t.slice(2),n?2:8):s.test(t)?o:+t}(t))===r||t===-r){return(t<0?-1:1)*e}return t==t?t:0}(t),u=n%1;return n==n?u?n-u:n:0}(u):0;var p=t.length;return u<0&&(u=A(p+u,0)),function(t){return"string"==typeof t||!_(t)&&T(t)&&w.call(t)==i}(t)?u<=p&&t.indexOf(n,u)>-1:!!p&&function(t,r,n){if(r!=r)return function(t,r,n,e){for(var o=t.length,u=n+(e?1:-1);e?u--:++u<o;)if(r(t[u],u,t))return u;return-1}(t,g,n);for(var e=n-1,o=t.length;++e<o;)if(t[e]===r)return e;return-1}(t,n,u)>-1},$="[object Object]";var k=Function.prototype,q=Object.prototype,D=k.toString,F=q.hasOwnProperty,H=D.call(Object),J=q.toString,L=function(t,r){return function(n){return t(r(n))}}(Object.getPrototypeOf,Object);var R=function(t){if(!function(t){return!!t&&"object"==typeof t}(t)||J.call(t)!=$||function(t){var r=!1;if(null!=t&&"function"!=typeof t.toString)try{r=!!(t+"")}catch(t){}return r}(t))return!1;var r=L(t);if(null===r)return!0;var n=F.call(r,"constructor")&&r.constructor;return"function"==typeof n&&n instanceof n&&D.call(n)==H};return function(r,n){function e(t){return null!=t}if(!e(r))throw new Error("util-array-object-or-both/validate(): [THROW_ID_01] Please provide a string to work on. Currently it's equal to ".concat(JSON.stringify(r,null,4)));if("string"!=typeof r)throw new Error("util-array-object-or-both/validate(): [THROW_ID_02] Input must be string! Currently it's ".concat(t(r),", equal to: ").concat(JSON.stringify(r,null,4)));if(e(n)&&!R(n))throw new Error("util-array-object-or-both/validate(): [THROW_ID_03] Second argument, options object, must be, well, object! Currenlty it's: ".concat(t(n),", equal to: ").concat(JSON.stringify(n,null,4)));var o=Object.assign({},{msg:"",optsVarName:"given variable"},n);if(e(o.msg)&&o.msg.length>0&&(o.msg="".concat(o.msg.trim()," ")),"given variable"!==o.optsVarName&&(o.optsVarName='variable "'.concat(o.optsVarName,'"')),V(["object","objects","obj","ob","o"],r.toLowerCase().trim()))return"object";if(V(["array","arrays","arr","aray","arr","a"],r.toLowerCase().trim()))return"array";if(V(["any","all","everything","both","either","each","whatever","whatevs","e"],r.toLowerCase().trim()))return"any";throw new TypeError("".concat(o.msg,"The ").concat(o.optsVarName," was customised to an unrecognised value: ").concat(r,". Please check it against the API documentation."))}}));
