/**
 * util-array-object-or-both
 * Validate and normalise user choice: array, object or both?
 * Version: 2.7.61
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/util-array-object-or-both
 */

!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(t="undefined"!=typeof globalThis?globalThis:t||self).utilArrayObjectOrBoth=r()}(this,(function(){"use strict";function t(r){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(r)}function r(t,r,e){return r in t?Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[r]=e,t}function e(t,r){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable}))),e.push.apply(e,n)}return e}function n(t){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?e(Object(o),!0).forEach((function(e){r(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):e(Object(o)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(o,r))}))}return t}var o=/^\s+|\s+$/g,c=/^[-+]0x[0-9a-f]+$/i,u=/^0b[01]+$/i,i=/^0o[0-7]+$/i,a=/^(?:0|[1-9]\d*)$/,f=parseInt;function l(t){return t!=t}function s(t,r){return function(t,r){for(var e=-1,n=t?t.length:0,o=Array(n);++e<n;)o[e]=r(t[e],e,t);return o}(r,(function(r){return t[r]}))}var b,y,p=Object.prototype,g=p.hasOwnProperty,v=p.toString,m=p.propertyIsEnumerable,j=(b=Object.keys,y=Object,function(t){return b(y(t))}),O=Math.max;function h(t,r){var e=S(t)||function(t){return function(t){return A(t)&&P(t)}(t)&&g.call(t,"callee")&&(!m.call(t,"callee")||"[object Arguments]"==v.call(t))}(t)?function(t,r){for(var e=-1,n=Array(t);++e<t;)n[e]=r(e);return n}(t.length,String):[],n=e.length,o=!!n;for(var c in t)!r&&!g.call(t,c)||o&&("length"==c||d(c,n))||e.push(c);return e}function w(t){if(e=(r=t)&&r.constructor,n="function"==typeof e&&e.prototype||p,r!==n)return j(t);var r,e,n,o=[];for(var c in Object(t))g.call(t,c)&&"constructor"!=c&&o.push(c);return o}function d(t,r){return!!(r=null==r?9007199254740991:r)&&("number"==typeof t||a.test(t))&&t>-1&&t%1==0&&t<r}var S=Array.isArray;function P(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}(t.length)&&!function(t){var r=N(t)?v.call(t):"";return"[object Function]"==r||"[object GeneratorFunction]"==r}(t)}function N(r){var e=t(r);return!!r&&("object"==e||"function"==e)}function A(r){return!!r&&"object"==t(r)}var D=function(r,e,n,a){var b;r=P(r)?r:(b=r)?s(b,function(t){return P(t)?h(t):w(t)}(b)):[],n=n&&!a?function(r){var e=function(r){if(!r)return 0===r?r:0;if((r=function(r){if("number"==typeof r)return r;if(function(r){return"symbol"==t(r)||A(r)&&"[object Symbol]"==v.call(r)}(r))return NaN;if(N(r)){var e="function"==typeof r.valueOf?r.valueOf():r;r=N(e)?e+"":e}if("string"!=typeof r)return 0===r?r:+r;r=r.replace(o,"");var n=u.test(r);return n||i.test(r)?f(r.slice(2),n?2:8):c.test(r)?NaN:+r}(r))===1/0||r===-1/0){return 17976931348623157e292*(r<0?-1:1)}return r==r?r:0}(r),n=e%1;return e==e?n?e-n:e:0}(n):0;var y=r.length;return n<0&&(n=O(y+n,0)),function(t){return"string"==typeof t||!S(t)&&A(t)&&"[object String]"==v.call(t)}(r)?n<=y&&r.indexOf(e,n)>-1:!!y&&function(t,r,e){if(r!=r)return function(t,r,e,n){for(var o=t.length,c=e+(n?1:-1);n?c--:++c<o;)if(r(t[c],c,t))return c;return-1}(t,l,e);for(var n=e-1,o=t.length;++n<o;)if(t[n]===r)return n;return-1}(r,e,n)>-1};var E=Function.prototype,I=Object.prototype,T=E.toString,C=I.hasOwnProperty,_=T.call(Object),x=I.toString,V=function(t,r){return function(e){return t(r(e))}}(Object.getPrototypeOf,Object);var $=function(r){if(!function(r){return!!r&&"object"==t(r)}(r)||"[object Object]"!=x.call(r)||function(t){var r=!1;if(null!=t&&"function"!=typeof t.toString)try{r=!!(t+"")}catch(t){}return r}(r))return!1;var e=V(r);if(null===e)return!0;var n=C.call(e,"constructor")&&e.constructor;return"function"==typeof n&&n instanceof n&&T.call(n)==_};return function(r,e){function o(t){return null!=t}if(!o(r))throw new Error("util-array-object-or-both/validate(): [THROW_ID_01] Please provide a string to work on. Currently it's equal to ".concat(JSON.stringify(r,null,4)));if("string"!=typeof r)throw new Error("util-array-object-or-both/validate(): [THROW_ID_02] Input must be string! Currently it's ".concat(t(r),", equal to: ").concat(JSON.stringify(r,null,4)));if(o(e)&&!$(e))throw new Error("util-array-object-or-both/validate(): [THROW_ID_03] Second argument, options object, must be, well, object! Currenlty it's: ".concat(t(e),", equal to: ").concat(JSON.stringify(e,null,4)));var c=n(n({},{msg:"",optsVarName:"given variable"}),e);if(o(c.msg)&&c.msg.length>0&&(c.msg="".concat(c.msg.trim()," ")),"given variable"!==c.optsVarName&&(c.optsVarName='variable "'.concat(c.optsVarName,'"')),D(["object","objects","obj","ob","o"],r.toLowerCase().trim()))return"object";if(D(["array","arrays","arr","aray","arr","a"],r.toLowerCase().trim()))return"array";if(D(["any","all","everything","both","either","each","whatever","whatevs","e"],r.toLowerCase().trim()))return"any";throw new TypeError("".concat(c.msg,"The ").concat(c.optsVarName," was customised to an unrecognised value: ").concat(r,". Please check it against the API documentation."))}}));
