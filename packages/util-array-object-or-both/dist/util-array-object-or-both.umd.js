/**
 * util-array-object-or-both
 * Validate and normalise user choice: array, object or both?
 * Version: 2.7.61
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/util-array-object-or-both
 */

!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(t="undefined"!=typeof globalThis?globalThis:t||self).utilArrayObjectOrBoth=r()}(this,(function(){"use strict";function t(r){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(r)}function r(t,r,n){return r in t?Object.defineProperty(t,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[r]=n,t}function n(t,r){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);r&&(e=e.filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable}))),n.push.apply(n,e)}return n}function e(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?n(Object(o),!0).forEach((function(n){r(t,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(o,r))}))}return t}var o=17976931348623157e292,c="[object GeneratorFunction]",u=/^\s+|\s+$/g,i=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,f=/^0o[0-7]+$/i,l=/^(?:0|[1-9]\d*)$/,s=parseInt;function y(t){return t!=t}function b(t,r){return function(t,r){for(var n=-1,e=t?t.length:0,o=Array(e);++n<e;)o[n]=r(t[n],n,t);return o}(r,(function(r){return t[r]}))}var p,g,v=Object.prototype,m=v.hasOwnProperty,j=v.toString,O=v.propertyIsEnumerable,h=(p=Object.keys,g=Object,function(t){return p(g(t))}),w=Math.max;function d(t,r){var n=N(t)||function(t){return function(t){return D(t)&&I(t)}(t)&&m.call(t,"callee")&&(!O.call(t,"callee")||"[object Arguments]"==j.call(t))}(t)?function(t,r){for(var n=-1,e=Array(t);++n<t;)e[n]=r(n);return e}(t.length,String):[],e=n.length,o=!!e;for(var c in t)!r&&!m.call(t,c)||o&&("length"==c||P(c,e))||n.push(c);return n}function S(t){if(n=(r=t)&&r.constructor,e="function"==typeof n&&n.prototype||v,r!==e)return h(t);var r,n,e,o=[];for(var c in Object(t))m.call(t,c)&&"constructor"!=c&&o.push(c);return o}function P(t,r){return!!(r=null==r?9007199254740991:r)&&("number"==typeof t||l.test(t))&&t>-1&&t%1==0&&t<r}var N=Array.isArray;function I(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}(t.length)&&!function(t){var r=A(t)?j.call(t):"";return"[object Function]"==r||r==c}(t)}function A(r){var n=t(r);return!!r&&("object"==n||"function"==n)}function D(r){return!!r&&"object"==t(r)}var E=function(r,n,e,c){var l;r=I(r)?r:(l=r)?b(l,function(t){return I(t)?d(t):S(t)}(l)):[],e=e&&!c?function(r){var n=function(r){if(!r)return 0===r?r:0;if(Infinity===(r=function(r){if("number"==typeof r)return r;if(function(r){return"symbol"==t(r)||D(r)&&"[object Symbol]"==j.call(r)}(r))return NaN;if(A(r)){var n="function"==typeof r.valueOf?r.valueOf():r;r=A(n)?n+"":n}if("string"!=typeof r)return 0===r?r:+r;r=r.replace(u,"");var e=a.test(r);return e||f.test(r)?s(r.slice(2),e?2:8):i.test(r)?NaN:+r}(r))||-Infinity===r){return(r<0?-1:1)*o}return r==r?r:0}(r),e=n%1;return n==n?e?n-e:n:0}(e):0;var p=r.length;return e<0&&(e=w(p+e,0)),function(t){return"string"==typeof t||!N(t)&&D(t)&&"[object String]"==j.call(t)}(r)?e<=p&&r.indexOf(n,e)>-1:!!p&&function(t,r,n){if(r!=r)return function(t,r,n,e){for(var o=t.length,c=n+(e?1:-1);e?c--:++c<o;)if(r(t[c],c,t))return c;return-1}(t,y,n);for(var e=n-1,o=t.length;++e<o;)if(t[e]===r)return e;return-1}(r,n,e)>-1};var T=Function.prototype,C=Object.prototype,_=T.toString,x=C.hasOwnProperty,V=_.call(Object),$=C.toString,k=function(t,r){return function(n){return t(r(n))}}(Object.getPrototypeOf,Object);var q=function(r){if(!function(r){return!!r&&"object"==t(r)}(r)||"[object Object]"!=$.call(r)||function(t){var r=!1;if(null!=t&&"function"!=typeof t.toString)try{r=!!(t+"")}catch(t){}return r}(r))return!1;var n=k(r);if(null===n)return!0;var e=x.call(n,"constructor")&&n.constructor;return"function"==typeof e&&e instanceof e&&_.call(e)==V};return function(r,n){function o(t){return null!=t}if(!o(r))throw new Error("util-array-object-or-both/validate(): [THROW_ID_01] Please provide a string to work on. Currently it's equal to ".concat(JSON.stringify(r,null,4)));if("string"!=typeof r)throw new Error("util-array-object-or-both/validate(): [THROW_ID_02] Input must be string! Currently it's ".concat(t(r),", equal to: ").concat(JSON.stringify(r,null,4)));if(o(n)&&!q(n))throw new Error("util-array-object-or-both/validate(): [THROW_ID_03] Second argument, options object, must be, well, object! Currenlty it's: ".concat(t(n),", equal to: ").concat(JSON.stringify(n,null,4)));var c=e(e({},{msg:"",optsVarName:"given variable"}),n);if(o(c.msg)&&c.msg.length>0&&(c.msg="".concat(c.msg.trim()," ")),"given variable"!==c.optsVarName&&(c.optsVarName='variable "'.concat(c.optsVarName,'"')),E(["object","objects","obj","ob","o"],r.toLowerCase().trim()))return"object";if(E(["array","arrays","arr","aray","arr","a"],r.toLowerCase().trim()))return"array";if(E(["any","all","everything","both","either","each","whatever","whatevs","e"],r.toLowerCase().trim()))return"any";throw new TypeError("".concat(c.msg,"The ").concat(c.optsVarName," was customised to an unrecognised value: ").concat(r,". Please check it against the API documentation."))}}));
